mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
new file <nl> ppp NatsConsumerWithRedeliveryTest . java <nl> + package org . apache . camel . component . nats ; <nl> + import java . io . IOException ; <nl> + import org . apache . camel . EndpointInject ; <nl> + import org . apache . camel . Exchange ; <nl> + import org . apache . camel . LoggingLevel ; <nl> 
new file <nl> ppp UfsOperationsTest . java <nl> + package alluxio . cli ; <nl> + import static org . junit . Assert . fail ; <nl> + import org . junit . Rule ; <nl> + import org . junit . Test ; <nl> + import org . junit . rules . TemporaryFolder ; <nl> + import java . io . File ; <nl> + public class UfsOperationsTest { <nl> 
new file <nl> ppp TestHdfsProtoUtil . java <nl> + package org . apache . hadoop . hdfs . protocol ; <nl> + import org . apache . hadoop . hdfs . protocol . proto . HdfsProtos ; <nl> + import org . apache . hadoop . util . DataChecksum ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> 
mmm BaseObject . java <nl> ppp BaseObject . java <nl> - package org . apache . tomcat . dbcp . pool2 ; <nl> - public abstract class BaseObject { <nl> - @ Override <nl> - public String toString () { <nl> - StringBuilder builder = new StringBuilder (); <nl> - builder . append ( getClass () . getSimpleName ()); <nl> 
mmm StudentController . java <nl> ppp StudentController . java <nl> - if ( studentService . getStudentByUserName ( student . getUserName ()) != null ) { <nl> + if ( studentService . getStudentByUserName ( student . getUserName ())) { <nl> - boolean found = studentService . getStudentByLogin ( studentLogin . getUserName (), studentLogin . getPassword ()) != null ; <nl> 
new file <nl> ppp CountingSortIntegers . java <nl> + class CountingSortIntegers { <nl> + public static void CSI ( int array [], int last ) { <nl> + int [] frequency = new int [ 100000001 ]; <nl> + int [] sortedArray = new int [ array . length ]; <nl> + int index = 0 ; <nl> +  <nl> + for ( int i = 0 ; i < last ; i + + ){ <nl> 
mmm DemoApplication . java <nl> ppp DemoApplication . java <nl> - return true ; <nl> + return BuildConfig . FLAVOR . equals (" withExtensions "); <nl> 
mmm HBaseAuthHelper . java <nl> ppp HBaseAuthHelper . java <nl> - log . error (" Not obtaining HBase Auth Token for MapReduce job " + job ); <nl> + log . error (" Not obtaining HBase Auth Token for MapReduce job " + job . getJobName ()); <nl> 
mmm XMLErrorLogger . java <nl> ppp XMLErrorLogger . java <nl> - public void warning ( SAXParseException e ) { <nl> - log . warn (" XML parse warning in \"" + e . getSystemId () + "\", line " + e . getLineNumber () + ", column " + e . getColumnNumber () + ": " + e . getMessage ()); <nl> - } <nl> - public void error ( SAXParseException e ) throws SAXException { <nl> 
mmm ScriptRecordReader . java <nl> ppp ScriptRecordReader . java <nl> + @ Override <nl> + @ Override <nl> + @ Override <nl> + @ Override <nl> 
mmm AllTests . java <nl> ppp AllTests . java <nl> + import com . dianping . cat . service . DefaultReportManagerTest ; <nl> - DefaultMessageAnalyzerManagerTest . class <nl> + DefaultMessageAnalyzerManagerTest . class , <nl> + DefaultReportManagerTest . class <nl> 
mmm SchemaMigration . java <nl> ppp SchemaMigration . java <nl> - public static final int LAST _ VERSION = 239 ; <nl> - public static final int VERSION _ 2 _ 13 = 230 ; <nl> + public static final int LAST _ VERSION = 240 ; <nl> + public static final int VERSION _ 2 _ 13 = 240 ; <nl> 
deleted file <nl> mmm CatalinaFactory . java <nl> - package org . apache . catalina ; <nl> - import org . apache . catalina . core . StandardPipeline ; <nl> - public class CatalinaFactory { <nl> - private static final CatalinaFactory factory = new CatalinaFactory (); <nl> - public static CatalinaFactory getFactory () { <nl> 
mmm BasicDRPCTopology . java <nl> ppp BasicDRPCTopology . java <nl> - LinearDRPCTopologyBuilder builder = new LinearDRPCTopologyBuilder (" exclamation "); <nl> - builder . addBolt ( new ExclaimBolt (), 3 ); <nl> - if ( args != null & & args . length > 0 ) { <nl> - topoName = args [ 0 ]; <nl> + String function = " exclamation "; <nl> 
new file <nl> ppp ExpressionReader . java <nl> + package net . opentsdb . query . expression ; <nl> + import com . google . common . base . Preconditions ; <nl> + public class ExpressionReader { <nl> + protected final char [] chars ; <nl> + private int mark = 0 ; <nl> + public ExpressionReader ( char [] chars ) { <nl> 
mmm LanguageModelSanityTest . java <nl> ppp LanguageModelSanityTest . java <nl> + assertMatches ( lm , "£"); <nl> + assertMatches ( lm , "£ 5 "); <nl> + assertMatches ( lm , " is £ 5 "); <nl> + assertMatches ( lm , " it is £ 5 "); <nl> 
mmm AbstractPrefField . java <nl> ppp AbstractPrefField . java <nl> + public String key () { <nl> + return this . key ; <nl> + } <nl> 
mmm FacetField . java <nl> ppp FacetField . java <nl> - static final FieldType TYPE = new FieldType (); <nl> + public static final FieldType TYPE = new FieldType (); <nl> 

mmm DbScriptUtil . java <nl> ppp DbScriptUtil . java <nl> - Connection connection = DriverManager . getConnection ( properties . getProperty (" datasource . url "), <nl> - properties . getProperty (" datasource . username "), properties . getProperty (" datasource . password ")); <nl> + Connection connection = DriverManager . getConnection ( properties . getProperty (" spring . datasource . url "), <nl> 
mmm CamelServlet . java <nl> ppp CamelServlet . java <nl> - import io . quarkus . camel . runtime . CamelRuntime ; <nl> + import io . quarkus . camel . core . runtime . CamelRuntime ; <nl> 
new file <nl> ppp ThingTest . java <nl> + package test ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> + import org . robolectric . RobolectricTestRunner ; <nl> + import static org . junit . Assert . fail ; <nl> + @ org . junit . runner . RunWith ( RobolectricTestRunner . class ) <nl> 
mmm RenderAsDocument . java <nl> ppp RenderAsDocument . java <nl> - import java . io . IOException ; <nl> - import org . apache . tika . exception . TikaException ; <nl> - import org . xml . sax . SAXException ; <nl> - private void showDocumentResponse ( SampleResult sampleResult ) <nl> - throws IOException , SAXException , TikaException { <nl> 
mmm JedisURIHelper . java <nl> ppp JedisURIHelper . java <nl> + private static final int DEFAULT _ DB = 0 ; <nl> - return 0 ; <nl> + return DEFAULT _ DB ; <nl> - return 0 ; <nl> + return DEFAULT _ DB ; <nl> 
mmm LogbackLoggingSystem . java <nl> ppp LogbackLoggingSystem . java <nl> 
new file <nl> ppp ConfigurationTest . java <nl> + package com . activeandroid . test ; <nl> + import com . activeandroid . Configuration ; <nl> + import com . activeandroid . Model ; <nl> + import com . activeandroid . annotation . Table ; <nl> + import android . test . AndroidTestCase ; <nl> + import java . io . IOException ; <nl> 
mmm PackageChangeReceiver . java <nl> ppp PackageChangeReceiver . java <nl> + if ( intent . getAction () . equals ( Intent . ACTION _ PACKAGE _ CHANGED )) { <nl> + String [] components = intent . getStringArrayExtra ( Intent . EXTRA _ CHANGED _ COMPONENT _ NAME _ LIST ); <nl> + if ( components != null ) { <nl> 
mmm VertxBinderProcessor . java <nl> ppp VertxBinderProcessor . java <nl> + static final String VERTX _ CONTAINER _ FILTER _ CLASS _ NAME = " io . quarkus . micrometer . runtime . binder . vertx . VertxMeterBinderContainerFilter "; <nl> - return new ResteasyJaxrsProviderBuildItem ( VertxMeterBinderContainerFilter . class . getName ()); <nl> 
mmm Person . java <nl> ppp Person . java <nl> - @ Index ( name = " email _ index ") <nl> + @ Index ( value = " email _ index ") <nl> 
mmm EachProperty . java <nl> ppp EachProperty . java <nl> - * ExampleConfiguration ({@ literal @} Argument String name ) { <nl> + * ExampleConfiguration ({@ literal @} Parameter String name ) { <nl> 
mmm PasswordAuthenticator . java <nl> ppp PasswordAuthenticator . java <nl> - import org . graylog2 . users . UserImpl ; <nl> - if ( user instanceof UserImpl . LocalAdminUser || user == null ) { <nl> + if ( user == null || user . isLocalAdmin ()) { <nl> 
mmm TesterValidator . java <nl> ppp TesterValidator . java <nl> - import org . apache . tomcat . util . security . Escape ; <nl> + import org . apache . tomcat . util . security . Escape ; <nl> 
mmm EventCodecTest . java <nl> ppp EventCodecTest . java <nl> - private static final String MESSAGE = " End of the world !"; <nl> + public static final String MESSAGE = " End of the world !"; <nl> - public static final int lineNumber = 10 ; <nl> + public static final int LINE _ NUMBER = 10 ; <nl> - assertThat ( written , containsString (": 26 ")); <nl> 
mmm SelectionSort . java <nl> ppp SelectionSort . java <nl> - package bobo . algo ; <nl> 
mmm Scene . java <nl> ppp Scene . java <nl> + void removeGameObject ( GameObject gameObject ); <nl> 
mmm BeanArchiveProcessor . java <nl> ppp BeanArchiveProcessor . java <nl> - import java . util . Collection ; <nl> - import java . util . Collections ; <nl> - import java . util . Set ; <nl> - import org . jboss . jandex . AnnotationInstance ; <nl> - import org . jboss . jandex . AnnotationTarget . Kind ; <nl> 
mmm BossTimersPlugin . java <nl> ppp BossTimersPlugin . java <nl> + @ Override <nl> + protected void shutDown () throws Exception <nl> + { <nl> + infoBoxManager . removeIf ( t - > t instanceof RespawnTimer ); <nl> + } <nl> 
mmm ParseTreeVisitor . java <nl> ppp ParseTreeVisitor . java <nl> 
new file <nl> ppp ReplaceStaleEntry . java <nl> + import java . lang . reflect . Field ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + import static org . testng . Assert . assertEquals ; <nl> + import org . testng . annotations . BeforeClass ; <nl> + import org . testng . annotations . Test ; <nl> 
mmm GoSdkService . java <nl> ppp GoSdkService . java <nl> - boolean gcloudInstallation = sdkHomePath . endsWith ( GoConstants . GCLOUD _ APP _ ENGINE _ DIRECTORY _ PATH ); <nl> + boolean gcloudInstallation = goExecutablePath . endsWith ( GoConstants . GCLOUD _ APP _ ENGINE _ DIRECTORY _ PATH ); <nl> 

new file <nl> ppp MagicDictionary . java <nl> + package problems . medium ; <nl> + import java . util . HashSet ; <nl> + import java . util . Set ; <nl> + public class MagicDictionary { <nl> + Set < String > set ; <nl> + public MagicDictionary () { <nl> + set = new HashSet <>(); <nl> + } <nl> + public void buildDict ( String [] dict ) { <nl> 
mmm MathUtil . java <nl> ppp MathUtil . java <nl> - assert base > 1 ; <nl> + if ( base <= 1 ) { <nl> + throw new IllegalArgumentException (" base must be > 1 "); <nl> + } <nl> 
mmm GermanSentenceTokenizer . java <nl> ppp GermanSentenceTokenizer . java <nl> - " cts ", " ct ", " ca ", " chem ", " chin ", " Chr ", " cresc ", " dat ", " Dat ", <nl> + " cts ", " ct ", " Ca ", " ca ", " chem ", " chin ", " Chr ", " cresc ", " dat ", " Dat ", <nl> 
mmm AntiDragConfig . java <nl> ppp AntiDragConfig . java <nl> - @ ConfigItem ( <nl> - keyName = " dragDelay ", <nl> - name = "", <nl> - description = "" <nl> - ) <nl> - void dragDelay ( int delay ); <nl> 
mmm GeoTuple . java <nl> ppp GeoTuple . java <nl> +  <nl> 
new file <nl> ppp Issue743 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import com . alibaba . fastjson . serializer . SerializerFeature ; <nl> + import junit . framework . TestCase ; <nl> 
mmm Util . java <nl> ppp Util . java <nl> - public static final long REQUIRED _ JNI _ VERSION = 20 ; <nl> + public static final long REQUIRED _ JNI _ VERSION = 21 ; <nl> 
mmm VendorFields . java <nl> ppp VendorFields . java <nl> + public static final String VENDOR _ ALERT _ SEVERITY _ LEVEL = " vendor _ alert _ severity _ level "; <nl> + public static final String VENDOR _ AUTHENTICATION _ PROVIDER = " vendor _ authentication _ provider "; <nl> + public static final String VENDOR _ CREDENTIAL _ TYPE = " vendor _ credential _ type "; <nl> 
mmm ExasolTableIndexColumn . java <nl> ppp ExasolTableIndexColumn . java <nl> - ExasolTableIndex index ; <nl> - int ordinalPosition ; <nl> - ExasolTableColumn tableColumn ; <nl> + private ExasolTableIndex index ; <nl> + private int ordinalPosition ; <nl> + private ExasolTableColumn tableColumn ; <nl> 
mmm PerClassMustacheResolver . java <nl> ppp PerClassMustacheResolver . java <nl> 
mmm Modifier . java <nl> ppp Modifier . java <nl> + import java . util . Set ; <nl> 
mmm AuthlibInjectorServersPage . java <nl> ppp AuthlibInjectorServersPage . java <nl> - private final StringProperty title = new SimpleStringProperty ( this , " title ", i18n (" account . injector . server ")); <nl> + private final StringProperty title = new SimpleStringProperty ( this , " title ", i18n (" account . injector . manage . title ")); <nl> 
mmm DataSourceStateChangedListener . java <nl> ppp DataSourceStateChangedListener . java <nl> - if (! Strings . isNullOrEmpty ( event . getValue ()) & & ChangedType . UPDATED == event . getChangedType ()) { <nl> - return new DisabledStateChangedEvent ( shardingSchema , true ); <nl> - } <nl> - return new DisabledStateChangedEvent ( shardingSchema , false ); <nl> 
mmm EnableZipkinServer . java <nl> ppp EnableZipkinServer . java <nl> - @ Import ({ ZipkinServerConfiguration . class , ZipkinQueryApiV1 . class }) <nl> + @ Import ({ ZipkinServerConfiguration . class }) <nl> 
mmm OpenCloseType . java <nl> ppp OpenCloseType . java <nl> - OPEN , CLOSE , AJAR ; <nl> + OPEN , CLOSE ; <nl> 
mmm DownloadTaskEvent . java <nl> ppp DownloadTaskEvent . java <nl> 
new file <nl> ppp Sample . java <nl> + package net . bytebuddy . test . c ; <nl> + import net . bytebuddy . agent . ByteBuddyAgent ; <nl> + import org . objectweb . asm . *; <nl> + import java . lang . instrument . ClassFileTransformer ; <nl> + import java . lang . instrument . Instrumentation ; <nl> + import java . security . ProtectionDomain ; <nl> 
mmm NpmMojo . java <nl> ppp NpmMojo . java <nl> + @ Parameter ( property = " skip . npm ", defaultValue = " false ", required = false ) <nl> + private Boolean skipNpm ; <nl> - File packageJson = new File ( workingDirectory , " package . json "); <nl> - if ( buildContext == null || buildContext . hasDelta ( packageJson ) || ! buildContext . isIncremental ()) { <nl> 
new file <nl> ppp TransactionalSQLExecutionHookTest . java <nl> + package org . apache . shardingsphere . transaction . base . seata . at ; <nl> + import io . seata . core . context . RootContext ; <nl> + import org . apache . shardingsphere . core . route . RouteUnit ; <nl> + import org . apache . shardingsphere . spi . database . DataSourceMetaData ; <nl> 
deleted file <nl> mmm ListSegements . java <nl> - package com . example . pinpoint ; <nl> - import software . amazon . awssdk . regions . Region ; <nl> - import software . amazon . awssdk . services . pinpoint . PinpointClient ; <nl> - import software . amazon . awssdk . services . pinpoint . model . GetSegmentsRequest ; <nl> 
mmm EchoClient . java <nl> ppp EchoClient . java <nl> - import io . netty . channel . EventLoop ; <nl> - EventLoop loop = new SelectorEventLoop (); <nl> + ChannelBootstrap b = new ChannelBootstrap (); <nl> - ChannelBootstrap b = new ChannelBootstrap (); <nl> - b . eventLoop ( loop ) <nl> + b . eventLoop ( new SelectorEventLoop ()) <nl> 
mmm GeneratedJava14LexerTest . java <nl> ppp GeneratedJava14LexerTest . java <nl> + verify ( checkConfig , getPath (" grammars / InputGrammar . java "), expected ); <nl> 
mmm DataSourceListenerManager . java <nl> ppp DataSourceListenerManager . java <nl> - OrchestrationProxyConfiguration availableYamlProxyConfiguration = dataSourceService . getAvailableYamlProxyConfiguration (); <nl> - if ( availableYamlProxyConfiguration . getShardingRule () . getTables () . isEmpty () & & availableYamlProxyConfiguration . getMasterSlaveRule () . getSlaveDataSourceNames () . isEmpty ()) { <nl> 
mmm ThrowingSupplier . java <nl> ppp ThrowingSupplier . java <nl> + @ FunctionalInterface <nl> 
new file <nl> ppp SolrDocumentList . java <nl> + package org . apache . solr . common ; <nl> + import java . util . ArrayList ; <nl> + public class SolrDocumentList extends ArrayList < SolrDocument > <nl> + { <nl> + private int numFound = 0 ; <nl> + private int start = 0 ; <nl> + private Float maxScore = null ; <nl> 
new file <nl> ppp Bug _ for _ liqing . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . parser . ParserConfig ; <nl> + import junit . framework . TestCase ; <nl> + public class Bug _ for _ liqing extends TestCase { <nl> 
mmm CircuitBreakerUtils . java <nl> ppp CircuitBreakerUtils . java <nl> - static void isCallPermitted ( CircuitBreaker circuitBreaker ) { <nl> + public static void isCallPermitted ( CircuitBreaker circuitBreaker ) { <nl> 
mmm Sender . java <nl> ppp Sender . java <nl> - Response rep = new Response ( reHeaders ); <nl> - if ( rep . isOK ()) { <nl> - InputStream ins = new BufferedInputStream ( conn . getInputStream ()); <nl> - rep . setStream ( ins ); <nl> - } else { <nl> - rep . setStream ( Lang . ins ("")); <nl> + Response rep = null ; <nl> 
mmm ImmediateExecutorTest . java <nl> ppp ImmediateExecutorTest . java <nl> - long startTime = System . currentTimeMillis (); <nl> + long startTime = System . nanoTime (); <nl> - } <nl> + } <nl> - assertTrue ( System . currentTimeMillis () - startTime > 900 ); <nl> + assertTrue ( System . nanoTime () - startTime > 900000000L ); <nl> 
mmm ConfigPropertyBuildItemCandidateUtil . java <nl> ppp ConfigPropertyBuildItemCandidateUtil . java <nl> - if ( name . equals ("< init >") & & descriptor . equals ("() V ")) { <nl> - if ( access != Modifier . PUBLIC ) { <nl> - LOGGER . warn (" Class '" + configClass <nl> - + "' which is meant to hold configuration properties does not have a public constructor and therefore may not function correctly "); <nl> 
new file <nl> ppp InfinispanTestContainersContainsKeyProducerTest . java <nl> + package org . apache . camel . component . infinispan . testcontainers ; <nl> + import org . apache . camel . Exchange ; <nl> + import org . apache . camel . Processor ; <nl> + import org . apache . camel . builder . RouteBuilder ; <nl> 
mmm SettingsActivity . java <nl> ppp SettingsActivity . java <nl> - getFragmentManager () . beginTransaction () <nl> - . replace ( R . id . fragment _ holder , new SettingsFragment ()) <nl> - . commit (); <nl> + if ( savedInstanceBundle == null ) { <nl> + getFragmentManager () . beginTransaction () <nl> + . replace ( R . id . fragment _ holder , new SettingsFragment ()) <nl> 
new file <nl> ppp NumberUtilsTest . java <nl> + package us . codecraft . webmagic . utils ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + public class NumberUtilsTest { <nl> + @ Test <nl> + public void testCompareLong () { <nl> + Assert . assertEquals ( 0 , NumberUtils . compareLong ( 0L , 0L )); <nl> 
mmm PieData . java <nl> ppp PieData . java <nl> - import java . nio . channels . FileLock ; <nl> + import com . github . mikephil . charting . interfaces . datainterfaces . datasets . IPieDataSet ; <nl> - * <nl> + * <nl> - public class PieData extends ChartData < PieDataSet > { <nl> + public class PieData extends ChartData < IPieDataSet > { <nl> 
new file <nl> ppp Djb2Test . java <nl> + package net . runelite . cache . util ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . *; <nl> + public class Djb2Test <nl> + { <nl> + @ Test <nl> + public void testHash () <nl> + { <nl> + int hash = Djb2 . hash (" l49 _ 52 "); <nl> + assertEquals ( - 1153204821 , hash ); <nl> 
mmm SegmentsMessage . java <nl> ppp SegmentsMessage . java <nl> - import com . a . eye . skywalking . trace . TraceId . PropagatedTraceId ; <nl> 
mmm GetViewDefinitionGeneratorMSSQL . java <nl> ppp GetViewDefinitionGeneratorMSSQL . java <nl> + import liquibase . structure . core . View ; <nl> - String sql = " SELECT OBJECT _ DEFINITION ( OBJECT _ ID ('" + schema . getSchemaName () + " . " + statement . getViewName () + "')) AS ObjectDefinition "; <nl> 
mmm Toaster . java <nl> ppp Toaster . java <nl> - toast = Toast . makeText ( context , msg , Toast . LENGTH _ SHORT ); <nl> - new CountDownTimer ( Math . max ( TOAST _ DURATION _ MILLS - SHORT _ TOAST _ DURATION , 1000 ), 1000 ) { <nl> + new Handler ( context . getMainLooper ()) . post ( new Runnable () { <nl> 
mmm HotkeyListener . java <nl> ppp HotkeyListener . java <nl> - if ( Keybind . getModifierForKeyCode ( e . getKeyCode ()) == null ) <nl> - { <nl> - e . consume (); <nl> - } <nl> 
new file <nl> ppp LanguageBuilderTest . java <nl> + package de . danielnaber . languagetool . language ; <nl> + import de . danielnaber . languagetool . Language ; <nl> + import junit . framework . TestCase ; <nl> + import java . io . File ; <nl> + public class LanguageBuilderTest extends TestCase { <nl> + public void testMakeAdditionalLanguage () throws Exception { <nl> 
mmm At2000ProtocolDecoderTest . java <nl> ppp At2000ProtocolDecoderTest . java <nl> - At2000ProtocolDecoder decoder = new At2000ProtocolDecoder ( new At2000Protocol ()); <nl> + At2000ProtocolDecoder decoder ; <nl> + decoder = new At2000ProtocolDecoder ( new At2000Protocol ()); <nl> + verifyNothing ( decoder , binary ( ByteOrder . LITTLE _ ENDIAN , <nl> 
mmm PassphraseCreateActivity . java <nl> ppp PassphraseCreateActivity . java <nl> - getSupportActionBar () . setDisplayOptions ( ActionBar . DISPLAY _ SHOW _ CUSTOM ); <nl> - getSupportActionBar () . setCustomView ( R . layout . centered _ app _ title ); <nl> 
mmm WhitespaceTokenizerTest . java <nl> ppp WhitespaceTokenizerTest . java <nl> + public static final String [] TEST _ WHITESPACE _ ONLY = { <nl> + " ", <nl> + "", <nl> + }; <nl> + public static final String [] TEST _ NO _ WHITESPACE = { <nl> + " Thisisatest . Thisisasecondline . ", <nl> + " ABC ", <nl> + " A . B ", <nl> 
mmm TextComponent . java <nl> ppp TextComponent . java <nl> + private boolean outline ; <nl> + if ( outline ) <nl> + { <nl> + graphics . drawString ( textWithoutCol , x - 1 , position . y - 1 ); <nl> + graphics . drawString ( textWithoutCol , x - 1 , position . y + 1 ); <nl> + graphics . drawString ( textWithoutCol , x + 1 , position . y - 1 ); <nl> 
mmm XxlJobLogger . java <nl> ppp XxlJobLogger . java <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - import java . text . MessageFormat ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + import org . slf4j . helpers . FormattingTuple ; <nl> 
mmm CacheVertex . java <nl> ppp CacheVertex . java <nl> - return queryCache . size (); <nl> + synchronized ( queryCache ) { <nl> + return queryCache . size (); <nl> + } <nl> - if ( queryCache . size () > 0 ) { <nl> - synchronized ( queryCache ) { <nl> + synchronized ( queryCache ) { <nl> + if ( queryCache . size () > 0 ) { <nl> 
mmm WebViewFragment . java <nl> ppp WebViewFragment . java <nl> 
mmm ThreadGate . java <nl> ppp ThreadGate . java <nl> - if ( lock . await ( lock . getCount (), TimeUnit . MINUTES )) { <nl> + if (! lock . await ( lock . getCount (), TimeUnit . MINUTES )) { <nl> 
new file <nl> ppp dfs . java <nl> + import java . util . *; <nl> + public class App { <nl> +  <nl> +  <nl> +  <nl> +  <nl> + while (! st . isEmpty ()){ <nl> + System . out . println ( st . peek ()); <nl> + int pop = st . pop (); <nl> + for ( int i = 0 ; i < vertices ; i + + ){ <nl> + if ( a [ pop ][ i ]!= 0 & & b [ i ]!=( byte ) 0 & & b [ i ]!=( byte ) 1 ){ <nl> 
mmm SetHeaderHandler . java <nl> ppp SetHeaderHandler . java <nl> 
mmm MessageListenerOrderly . java <nl> ppp MessageListenerOrderly . java <nl> 
mmm InternalProperties . java <nl> ppp InternalProperties . java <nl> - String ES _ INDEX _ INITIALIZING _ PREFIX = " es . initializing . "; <nl> 
mmm AgroalRuntimeConfig . java <nl> ppp AgroalRuntimeConfig . java <nl> + import io . quarkus . runtime . annotations . ConfigDocMapKey ; <nl> + import io . quarkus . runtime . annotations . ConfigDocSection ; <nl> + @ ConfigDocMapKey (" datasource - name ") <nl> + @ ConfigDocSection <nl> 
mmm AsyncDialogFragment . java <nl> ppp AsyncDialogFragment . java <nl> + import timber . log . Timber ; <nl> 
mmm CompatV26 . java <nl> ppp CompatV26 . java <nl> + import androidx . annotation . NonNull ; <nl> - public void copyFile ( String source , String target ) throws IOException { <nl> + public void copyFile (@ NonNull String source , @ NonNull String target ) throws IOException { <nl> - public long copyFile ( String source , OutputStream target ) throws IOException { <nl> 
mmm Version . java <nl> ppp Version . java <nl> - String PLUGIN _ VERSION = " 0 . 28 "; <nl> + String PLUGIN _ VERSION = " 0 . 29 "; <nl> 
mmm PackingPlanTest . java <nl> ppp PackingPlanTest . java <nl> - public static PackingPlan generatePacking ( Map < String , List < String >> basePacking ) { <nl> + private static PackingPlan generatePacking ( Map < String , List < String >> basePacking ) { <nl> + Resource instanceResource ; <nl> + if (" bolt " . equals ( componentName )) { <nl> 
mmm RetryItemProcessor . java <nl> ppp RetryItemProcessor . java <nl> + private static final int TWO _ SECONDS = 2000 ; <nl> - final RequestConfig config = RequestConfig . custom () . setConnectTimeout ( 2 * 1000 ) . build (); <nl> + final RequestConfig config = RequestConfig . custom () . setConnectTimeout ( TWO _ SECONDS ) . build (); <nl> 
mmm HttpUploadServerInitializer . java <nl> ppp HttpUploadServerInitializer . java <nl> - return ; <nl> 
mmm OkHttpDownloader . java <nl> ppp OkHttpDownloader . java <nl> + protected OkHttpClient getClient (){ <nl> + return client ; <nl> + } <nl> 
mmm WondexProtocolDecoderTest . java <nl> ppp WondexProtocolDecoderTest . java <nl> + verifyPosition ( decoder , text ( <nl> + " 2000000108 , 20151030145404 , 76 . 948633 , 43 . 354700 , 0 , 140 , 15 , 100 , 1 , 1325 , 125 . 4 , 10 . 5 , 0 . 0 "), <nl> + position (" 2015 - 10 - 30 14 : 54 : 04 . 000 ", true , 43 . 35470 , 76 . 94863 )); <nl> 
new file <nl> ppp RatioToReport . java <nl> + package org . jooq . impl ; <nl> + import java . math . BigDecimal ; <nl> + import org . jooq . Context ; <nl> + import org . jooq . Field ; <nl> + final class RatioToReport extends Function < BigDecimal > { <nl> + private static final long serialVersionUID = 7292087943334025737L ; <nl> 
mmm Api . java <nl> ppp Api . java <nl> + private Api () <nl> + { <nl> + } <nl> 
deleted file <nl> mmm CompleteChannelPromise . java <nl> - package io . netty . channel ; <nl> - import io . netty . util . concurrent . EventExecutor ; <nl> - import io . netty . util . concurrent . Future ; <nl> - import io . netty . util . concurrent . GenericFutureListener ; <nl> - abstract class CompleteChannelPromise extends CompleteChannelFuture implements ChannelPromise { <nl> 
mmm SchemaTokenAssert . java <nl> ppp SchemaTokenAssert . java <nl> - assertThat ( assertMessage . getFullAssertMessage (" Schema tokens begin position assertion error : "), actual . getStartIndex (), is ( expected . getBeginPosition ())); <nl> - assertThat ( assertMessage . getFullAssertMessage (" Schema tokens original literals assertion error : "), actual . getOriginalLiterals (), is ( expected . getOriginalLiterals ())); <nl> 
new file <nl> ppp TemplateTest . java <nl> + package com . ichi2 . libanki . template ; <nl> + import com . ichi2 . anki . RobolectricTest ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import java . util . HashMap ; <nl> + import androidx . test . ext . junit . runners . AndroidJUnit4 ; <nl> 
mmm DetachmentContextHolder . java <nl> ppp DetachmentContextHolder . java <nl> - import net . sf . acegisecurity . context . SecurityContextImpl ; <nl> 
mmm AWS2S3Constants . java <nl> ppp AWS2S3Constants . java <nl> - String USER _ METADATA = " CamelAwsS3UserMetadata "; <nl> - String S3 _ HEADERS = " CamelAwsS3Headers "; <nl> 
mmm IndexTaskTest . java <nl> ppp IndexTaskTest . java <nl> - import org . apache . lucene . ant . IndexTask ; <nl> 
mmm OutputDirectory . java <nl> ppp OutputDirectory . java <nl> - Path relativePath = Paths . get ( cr . getClassName () + " . class "); <nl> + Path relativePath = outputDir . getFileSystem () . getPath ( cr . getClassName () + " . class "); <nl> 
mmm NarayanaJtaProcessor . java <nl> ppp NarayanaJtaProcessor . java <nl> + import com . arjuna . ats . arjuna . common . ObjectStoreEnvironmentBean ; <nl> + import com . arjuna . ats . internal . arjuna . objectstore . ShadowNoFileLockStore ; <nl> - TransactionSynchronizationRegistryImple . class . getName ())); <nl> 
mmm GenerateJLIClassesHelper . java <nl> ppp GenerateJLIClassesHelper . java <nl> + static byte [] generateInvokersHolderClassBytes ( String str , MethodType [] invokerMts , MethodType [] callMts ) { <nl> + throw OpenJDKCompileStub . OpenJDKCompileStubThrowError (); <nl> + } <nl> 
mmm LogInterceptor . java <nl> ppp LogInterceptor . java <nl> - LOGGER . debug ("\ n "); <nl> - LOGGER . debug ("\ n "); <nl> 
mmm UrlNav . java <nl> ppp UrlNav . java <nl> + TWO _ HOURS _ BEFORE (" - 2h ", - 2 ), <nl> + TWO _ HOURS _ LATER (" + 2h ", 2 ), <nl> 
mmm CountingRetryTest . java <nl> ppp CountingRetryTest . java <nl> - public final class CountingRetryTest { <nl> + public class CountingRetryTest { <nl> 
mmm QuestionA . java <nl> ppp QuestionA . java <nl> + import java . util . LinkedList ; <nl> + import java . awt . *; <nl> 
mmm CommandLineJobInfoTest . java <nl> ppp CommandLineJobInfoTest . java <nl> + import static org . junit . Assert . assertEquals ; <nl> - import org . junit . Assert ; <nl> - Assert . assertEquals ( a . getCommand (), b . getCommand ()); <nl> - Assert . assertEquals ( a . getConf (), b . getConf ()); <nl> 
mmm CacheServiceConfigurator . java <nl> ppp CacheServiceConfigurator . java <nl> - import org . infinispan . configuration . cache . PersistenceConfiguration ; <nl> - import org . infinispan . configuration . cache . StoreConfiguration ; <nl> - import org . infinispan . eviction . PassivationManager ; <nl> 
mmm FrameworkField . java <nl> ppp FrameworkField . java <nl> - FrameworkField ( Field field ) { <nl> + public FrameworkField ( Field field ) { <nl> - } catch ( SecurityException e ) { <nl> + } catch ( SecurityException e ) { <nl> 
mmm HasParentNode . java <nl> ppp HasParentNode . java <nl> - import javafx . scene . Parent ; <nl> 
mmm Apr . java <nl> ppp Apr . java <nl> 
mmm ScreenUtils . java <nl> ppp ScreenUtils . java <nl> + public static int getHeightOfNavigationBar ( Context context ) { <nl> + Display d = (( WindowManager ) context . getSystemService ( Context . WINDOW _ SERVICE )) . getDefaultDisplay (); <nl> + int realHeight = getScreenSize ( context )[ 1 ]; <nl> + DisplayMetrics displayMetrics = new DisplayMetrics (); <nl> 
new file <nl> ppp RulesTest . java <nl> + package org . jeasy . rules . api ; <nl> + import org . jeasy . rules . annotation . Action ; <nl> + import org . jeasy . rules . annotation . Condition ; <nl> + import org . jeasy . rules . core . BasicRule ; <nl> + import org . junit . Test ; <nl> + import java . util . HashSet ; <nl> 
new file <nl> ppp SampleUtil . java <nl> + package com . metaweb . gridworks . sampleExtension ; <nl> + public class SampleUtil { <nl> + static public int stringArrayLength ( String [] a ) { <nl> + return a . length ; <nl> + } <nl> + } <nl> 
mmm SeedNodeMain . java <nl> ppp SeedNodeMain . java <nl> - private static final boolean USE _ DETAILED _ LOGGING = true ; <nl> + private static final boolean USE _ DETAILED _ LOGGING = false ; <nl> 
new file <nl> ppp CamelRestletGsonTest . java <nl> + package org . apache . camel . itest . karaf ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . ops4j . pax . exam . junit . PaxExam ; <nl> + @ RunWith ( PaxExam . class ) <nl> + public class CamelRestletGsonTest extends BaseKarafTest { <nl> 
mmm MasterSlaveOnly . java <nl> ppp MasterSlaveOnly . java <nl> - import io . shardingsphere . example . jdbc . fixture . DataRepository ; <nl> + import repository . DataRepository ; <nl> 
mmm ViewsResource . java <nl> ppp ViewsResource . java <nl> + import javax . ws . rs . DELETE ; <nl> + import javax . ws . rs . NotFoundException ; <nl> - @ ApiOperation (" Update existing view ") <nl> + @ ApiOperation (" Update view ") <nl> + loadView ( id ); <nl> - @ JsonAutoDetect <nl> - @ SuppressWarnings (" unused ") <nl> 
mmm TrappingWater . java <nl> ppp TrappingWater . java <nl> + package com . interview . array ; <nl> 
mmm DefaultValidationMessages . java <nl> ppp DefaultValidationMessages . java <nl> + addMessage ( DecimalMax . class . getName () + MESSAGE _ SUFFIX , " must be less than or equal to { value }"); <nl> + addMessage ( DecimalMin . class . getName () + MESSAGE _ SUFFIX , " must be greater than or equal to { value }"); <nl> 
new file <nl> ppp FeedSettingsTest . java <nl> + package de . test . antennapod . ui ; <nl> + import android . content . Intent ; <nl> + import androidx . test . espresso . intent . rule . IntentsTestRule ; <nl> + import androidx . test . platform . app . InstrumentationRegistry ; <nl> + import androidx . test . runner . AndroidJUnit4 ; <nl> 
mmm RenderLivingEvent . java <nl> ppp RenderLivingEvent . java <nl> + @ Cancelable <nl> + public static class Pre extends RenderLivingEvent <nl> + { <nl> + public Pre ( EntityLivingBase entity , RendererLivingEntity renderer ){ super ( entity , renderer ); } <nl> + } <nl> + public static class Post extends RenderLivingEvent <nl> 
mmm Bug _ for _ lenolix _ 9 . java <nl> ppp Bug _ for _ lenolix _ 9 . java <nl> + import com . alibaba . json . bvt . bug . Bug _ for _ lenolix _ 9 . Address . Country ; <nl> - Country country = new Country (); <nl> + Country country = address . new Country (); <nl> - } <nl> + public class Country { <nl> - public static class Country { <nl> 
mmm RegistryCenterConfiguration . java <nl> ppp RegistryCenterConfiguration . java <nl> 
mmm SettingsHelper . java <nl> ppp SettingsHelper . java <nl> - import android . os . Build ; <nl> - int currentApiVersion = android . os . Build . VERSION . SDK _ INT ; <nl> - if ( currentApiVersion >= Build . VERSION _ CODES . JELLY _ BEAN _ MR2 ) { <nl> - SecretKey key = EncryptionHelper . loadOrGenerateKeys ( context , new File ( context . getFilesDir () + "/" + KEY _ FILE )); <nl> 
mmm WSService . java <nl> ppp WSService . java <nl> + SessionManager . remove ( session ); <nl> + SessionManager . remove ( session ); <nl> 
mmm Subject . java <nl> ppp Subject . java <nl> + import rx . Subscriber ; <nl> + public final SerializedSubject < T , R > toSerialized () { <nl> + return new SerializedSubject < T , R >( this ); <nl> + } <nl> 
new file <nl> ppp Issue1227 . java <nl> + package com . alibaba . json . bvt . issue _ 1200 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + public class Issue1227 extends TestCase { <nl> + public void test _ for _ issue () throws Exception { <nl> + String t2 = "{\" state \": 2 ,\" msg \":\"\ ufeffmsg2222 \",\" data \":[]}"; <nl> 
mmm CallerAccessTest . java <nl> ppp CallerAccessTest . java <nl> + * @ requires os . family != " aix " <nl> 
mmm BasicStubbingTest . java <nl> ppp BasicStubbingTest . java <nl> - import java . util . List ; <nl> - class Base {} <nl> - class Sub extends Base {} <nl> - interface Generic { <nl> - List < Base > getList (); <nl> - } <nl> - @ Test <nl> - public void shouldAllowStubbingWithSubtypes () throws Exception { <nl> 
mmm IOUtils . java <nl> ppp IOUtils . java <nl> + public static String getDataPath ( String path ) { <nl> + return home + "/ . . / data /" + path ; <nl> + } <nl> - return new java . io . File ( home + "/ . . / data /" + path ); <nl> + return new java . io . File ( getDataPath ( path )); <nl> 
mmm Plugins . java <nl> ppp Plugins . java <nl> 
mmm EmployeeController . java <nl> ppp EmployeeController . java <nl> - import com . baeldung . model . Employee ; <nl> + import org . springframework . ui . Model ; <nl> + import org . springframework . web . bind . annotation . ControllerAdvice ; <nl> + import com . baeldung . model . Employee ; <nl> + @ ControllerAdvice <nl> 
mmm NotSameException . java <nl> ppp NotSameException . java <nl> + import com . jpexs . asdec . helpers . Helper ; <nl> - super (" Streams are not the same at pos :" + pos ); <nl> + super (" Streams are not the same at pos " + Helper . formatHex (( int ) pos , 8 )); <nl> 
mmm ArticleLimitReachedException . java <nl> ppp ArticleLimitReachedException . java <nl> 
mmm SourceTest . java <nl> ppp SourceTest . java <nl> - import org . apache . beam . runners . spark . structuredstreaming . translation . batch . DatasetSourceBatch ; <nl> - import org . junit . Rule ; <nl> + import org . junit . ClassRule ; <nl> - @ Rule <nl> - public TemporaryFolder temporaryFolder ; <nl> 
mmm DDDSampleApplicationContext . java <nl> ppp DDDSampleApplicationContext . java <nl> - RoutingService routingService ; <nl> + GraphTraversalService graphTraversalService ; <nl> - HandlingEventRepository handlingEventRepository ; <nl> + RoutingService routingService ; <nl> - ApplicationEvents applicationEvents ; <nl> 
mmm StreamResponse . java <nl> ppp StreamResponse . java <nl> + @ Nullable <nl> - @ JsonProperty (" description ") String description , <nl> + @ JsonProperty (" description ") @ Nullable String description , <nl> 
mmm SecurityConfiguration . java <nl> ppp SecurityConfiguration . java <nl> - @ JsonProperty (" apiKey ") <nl> + @ JsonProperty (" scopeSeparator ") <nl> 
mmm EncryptSchema . java <nl> ppp EncryptSchema . java <nl> + import org . apache . shardingsphere . api . config . encryptor . EncryptRuleConfiguration ; <nl> + import org . apache . shardingsphere . api . config . sharding . ShardingRuleConfiguration ; <nl> + import org . apache . shardingsphere . core . metadata . datasource . ShardingDataSourceMetaData ; <nl> 
mmm ApplicationModule . java <nl> ppp ApplicationModule . java <nl> - import android . app . Application ; <nl> + import com . fernandocejas . android10 . sample . presentation . AndroidApplication ; <nl> - import com . fernandocejas . android10 . sample . presentation . internal . di . components . ForApplication ; <nl> 
mmm ShardingAndMasterSlaveTogether . java <nl> ppp ShardingAndMasterSlaveTogether . java <nl> - import repository . DataRepository ; <nl> + import io . shardingsphere . repository . common . repository . DataRepository ; <nl> 
mmm RingBuffer . java <nl> ppp RingBuffer . java <nl> - * @ param size of the RingBuffer that will be rounded up to the next power of 2 <nl> + * @ param bufferSize of the RingBuffer that will be rounded up to the next power of 2 <nl> - final int size , <nl> + final int bufferSize , <nl> - super ( size , claimStrategyOption , waitStrategyOption ); <nl> 
new file <nl> ppp BridgeMethodPuzzleTest . java <nl> + package org . mockito . usage . binding ; <nl> + import static org . junit . Assert . *; <nl> + import static org . mockito . Mockito . *; <nl> + import static org . mockito . util . ExtraMatchers . hasBridgeMethod ; <nl> + import org . junit . Test ; <nl> 
mmm GoImportReferenceHelper . java <nl> ppp GoImportReferenceHelper . java <nl> - import com . intellij . openapi . module . Module ; <nl> - @ NotNull <nl> - @ Override <nl> - public Collection < PsiFileSystemItem > getRoots (@ NotNull Module module ) { <nl> - return super . getRoots ( module ); <nl> - } <nl> 
new file <nl> ppp OutputVisitorTest . java <nl> + package com . alibaba . druid . sql . oracle . demo ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> + import com . alibaba . druid . sql . dialect . oracle . visitor . OracleOutputVisitor ; <nl> + import com . alibaba . druid . sql . parser . SQLParserUtils ; <nl> 
mmm NERPipelineEndToEndSlowITest . java <nl> ppp NERPipelineEndToEndSlowITest . java <nl> + StanfordCoreNLP pipeline4Class ; <nl> + StanfordCoreNLP pipeline7Class ; <nl> - Properties props3Class = new Properties (); <nl> - props3Class . setProperty (" annotators ", " tokenize , ssplit , pos , lemma , ner "); <nl> 
mmm MockitoConfiguration . java <nl> ppp MockitoConfiguration . java <nl> - } <nl> + } <nl> 

mmm ServerBindings . java <nl> ppp ServerBindings . java <nl> - install ( new FactoryModuleBuilder () . build ( StreamNew . Factory . class )); <nl> - TypeLiteral < ModelFactory < StreamNew >> type = new TypeLiteral < ModelFactory < StreamNew >>(){}; <nl> - bind ( type ) . to ( StreamNew . Factory . class ); <nl> 
mmm MyJUnitTest . java <nl> ppp MyJUnitTest . java <nl> - Async async = context . async (); <nl> - vertx . createHttpServer () . requestHandler ( req - > req . response () . end (" foo ")) . listen ( 8080 , res - > { <nl> - if ( res . succeeded ()) { <nl> - async . complete (); <nl> - } else { <nl> - context . fail (); <nl> 
mmm AlterOperation . java <nl> ppp AlterOperation . java <nl> - ADD , DROP , MODIFY ; <nl> + ADD , DROP , MODIFY , CHANGE ; <nl> 
mmm FieldNameBasedTupleToKafkaMapper . java <nl> ppp FieldNameBasedTupleToKafkaMapper . java <nl> - public class FieldNameBasedTupleToKafkaMapper < K , V > implements TupleToKafkaMapper { <nl> + public class FieldNameBasedTupleToKafkaMapper < K , V > implements TupleToKafkaMapper < K , V > { <nl> 
deleted file <nl> mmm DiscoveryApplicationGateway . java <nl> - package com . nepxion . discovery . plugin . example ; <nl> - import org . springframework . boot . autoconfigure . SpringBootApplication ; <nl> - import org . springframework . boot . builder . SpringApplicationBuilder ; <nl> - import org . springframework . cloud . client . discovery . EnableDiscoveryClient ; <nl> 
mmm WatchEventType . java <nl> ppp WatchEventType . java <nl> - return CREATE ; <nl> + return MODIFY ; <nl> - return CREATE ; <nl> + return DELETE ; <nl> 
mmm AggregationDistinctQueryMetaData . java <nl> ppp AggregationDistinctQueryMetaData . java <nl> + import java . util . ArrayList ; <nl> - public AggregationDistinctQueryMetaData ( final Collection < AggregationDistinctSelectItem > aggregationDistinctSelectItems ) { <nl> + public AggregationDistinctQueryMetaData ( final Collection < AggregationDistinctSelectItem > aggregationDistinctSelectItems , final int aggregationDistinctColumnIndex , final int derivedBeginIndex ) { <nl> 
mmm StageEventTest . java <nl> ppp StageEventTest . java <nl> - @ Test <nl> - public void shouldNotParseArbitraryStrings () { <nl> - assertThat ( StageEvent . valueOf ("< script > alert ( 1 )</ script >"), is ( StageEvent . All )); <nl> - } <nl> 
mmm OutageMetricWaterMark . java <nl> ppp OutageMetricWaterMark . java <nl> - package com . zhisheng . alert . schema ; <nl> + package com . zhisheng . alert . watermark ; <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public class Constants { <nl> + public final class Constants { <nl> - static final String OPENSHIFT _ ANNOTATIONS _ VCS _ URL = " app . openshift . io / vcs - url "; <nl> + private Constants () { <nl> + } <nl> 
mmm Palindrome . java <nl> ppp Palindrome . java <nl> 
mmm HuaShengProtocolDecoderTest . java <nl> ppp HuaShengProtocolDecoderTest . java <nl> + verifyNothing ( decoder , binary ( <nl> + " c0010c003e0002000000000010020012a0014f42445f3347315f56312e302e330013a0043335353835353035303434303635380006a08701000006a0a1035fc0 ")); <nl> + verifyNothing ( decoder , binary ( <nl> 
mmm Archives . java <nl> ppp Archives . java <nl> - " % s / lib " + target . getShortName () + " . a "); <nl> + " % s / lib " + target . getShortNameOnly () + " . a "); <nl> 
mmm DataFetchingEnvironment . java <nl> ppp DataFetchingEnvironment . java <nl> + import graphql . PublicApi ; <nl> + @ PublicApi <nl> 
mmm DebugTransformer . java <nl> ppp DebugTransformer . java <nl> - method . addInterceptor ( BasicMethodInterceptor . class . getName ()); <nl> + target . addInterceptor ( BasicMethodInterceptor . class . getName ()); <nl> 
mmm GroupByKeyTest . java <nl> ppp GroupByKeyTest . java <nl> + import org . apache . beam . sdk . transforms . DoFn ; <nl> + import org . apache . beam . sdk . transforms . windowing . FixedWindows ; <nl> + import org . apache . beam . sdk . transforms . windowing . Window ; <nl> + import org . apache . beam . sdk . values . TimestampedValue ; <nl> 
mmm DeepLinkProcessorTest . java <nl> ppp DeepLinkProcessorTest . java <nl> + " }\ n " <nl> + "}\ n ")); <nl> + @ Test public void testNonStaticMethodCompileFail () { <nl> + JavaFileObject sampleActivity = JavaFileObjects <nl> + . forSourceString (" SampleActivity ", " package com . example ;" <nl> + + " import com . airbnb . deeplinkdispatch . DeepLink ; " <nl> 
mmm OrchestrationShardingDataSource . java <nl> ppp OrchestrationShardingDataSource . java <nl> - import io . shardingsphere . jdbc . orchestration . internal . event . config . ShardingConfigurationEventBusEvent ; <nl> - import io . shardingsphere . jdbc . orchestration . internal . event . state . CircuitStateEventBusEvent ; <nl> 
mmm LineageFileOutStream . java <nl> ppp LineageFileOutStream . java <nl> 
new file <nl> ppp NamedForkJoinPool . java <nl> + package com . google . devtools . build . lib . concurrent ; <nl> + import java . util . concurrent . ForkJoinPool ; <nl> + import java . util . concurrent . ForkJoinWorkerThread ; <nl> + import java . util . concurrent . atomic . AtomicLong ; <nl> + public class NamedForkJoinPool extends ForkJoinPool { <nl> 
mmm FileSystemMasterWorkerServiceHandler . java <nl> ppp FileSystemMasterWorkerServiceHandler . java <nl> - Preconditions . checkNotNull ( fileSystemMaster ); <nl> + Preconditions . checkNotNull ( fileSystemMaster , " fileSystemMaster "); <nl> 
mmm HotelMapper . java <nl> ppp HotelMapper . java <nl> + import org . apache . ibatis . annotations . Mapper ; <nl> + @ Mapper <nl> 
mmm TestLegacyGeoPointQuery . java <nl> ppp TestLegacyGeoPointQuery . java <nl> + @ Override <nl> + public void testSamePointManyTimes () throws Exception { <nl> + assumeTrue (" legacy encoding goes OOM on this test ", false ); <nl> + } <nl> 
new file <nl> ppp ValidateBinarySearchTree . java <nl> + package stevesun . algorithms ; <nl> + import stevesun . common . classes . TreeNode ; <nl> + public class ValidateBinarySearchTree { <nl> + public boolean isValidBST ( TreeNode root ) { <nl> + if ( root == null ) return true ; <nl> + return dfs ( root . left , Long . MIN _ VALUE , root . val ) & & dfs ( root . right , root . val , Long . MAX _ VALUE ); <nl> 
mmm AutowireBeanFactoryObjectPostProcessor . java <nl> ppp AutowireBeanFactoryObjectPostProcessor . java <nl> + import org . springframework . beans . factory . SmartInitializingSingleton ; <nl> - implements ObjectPostProcessor < Object >, DisposableBean { <nl> + implements ObjectPostProcessor < Object >, DisposableBean , SmartInitializingSingleton { <nl> 
new file <nl> ppp WordCount . java <nl> + package com . oreilly . learningsparkexamples . java ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import java . lang . Iterable ; <nl> + import scala . Tuple2 ; <nl> + import org . apache . commons . lang . StringUtils ; <nl> + import org . apache . spark . api . java . JavaRDD ; <nl> 
mmm DownloadAuthenticationActivity . java <nl> ppp DownloadAuthenticationActivity . java <nl> - import android . support . v7 . app . ActionBarActivity ; <nl> - import android . util . Log ; <nl> + import android . support . v7 . app . ActionBar ; <nl> + import android . support . v7 . app . AppCompatActivity ; <nl> 
mmm JaxbResponseConverter . java <nl> ppp JaxbResponseConverter . java <nl> + } finally { <nl> + value . close (); <nl> 
mmm WebMvcConfig . java <nl> ppp WebMvcConfig . java <nl> + @ EnableWebMvc <nl> 
mmm TransformReadField . java <nl> ppp TransformReadField . java <nl> - if ( is _ private ? c == fclass : c . subclassOf ( fclass )) <nl> + if ( c == fclass || (! is _ private & & isFieldInSuper ( c , fclass , fname ))) <nl> + static boolean isFieldInSuper ( CtClass clazz , CtClass fclass , String fname ) { <nl> 
mmm KeyManager . java <nl> ppp KeyManager . java <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + MinecraftForge . EVENT _ BUS . register ( this ); <nl> 
new file <nl> ppp SendMessages . java <nl> + package com . example . sqs ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . sqs . SqsClient ; <nl> + import software . amazon . awssdk . services . sqs . model . CreateQueueRequest ; <nl> + import software . amazon . awssdk . services . sqs . model . CreateQueueResponse ; <nl> 
mmm SpringRetryIntegrationTest . java <nl> ppp SpringRetryIntegrationTest . java <nl> - public class SpringRetryTest { <nl> + public class SpringRetryIntegrationTest { <nl> 
mmm WeightThresholdAlertFilter . java <nl> ppp WeightThresholdAlertFilter . java <nl> - private double dwnThreshold = Double . parseDouble ( DEFAULT _ DOWN _ THRESHOLD ); <nl> + private double downThreshold = Double . parseDouble ( DEFAULT _ DOWN _ THRESHOLD ); <nl> - return dwnThreshold ; <nl> + return downThreshold ; <nl> 
new file <nl> ppp AndroidSkylarkData . java <nl> + package com . google . devtools . build . lib . rules . android ; <nl> + import com . google . devtools . build . lib . actions . Artifact ; <nl> + import com . google . devtools . build . lib . analysis . ConfiguredTarget ; <nl> + import com . google . devtools . build . lib . analysis . skylark . SkylarkRuleContext ; <nl> 
new file <nl> ppp FlattenBinaryTree . java <nl> + package tree ; <nl> + public class FlattenBinaryTree { <nl> + private class LinkNode { <nl> + TreeNode head ; <nl> + TreeNode tail ; <nl> + LinkNode ( TreeNode head , TreeNode tail ){ <nl> + this . head = head ; <nl> + this . tail = tail ; <nl> + } <nl> + } <nl> 
mmm ValidatorReifier . java <nl> ppp ValidatorReifier . java <nl> - ValidatorReifier ( T definition ) { <nl> + public ValidatorReifier ( T definition ) { <nl> + public static void registerReifier ( Class <?> processorClass , Function < ValidatorDefinition , ValidatorReifier <? extends ValidatorDefinition >> creator ) { <nl> 
new file <nl> ppp ConcurrentCloseConnectionTest . java <nl> + package com . zaxxer . hikari . pool ; <nl> + import com . zaxxer . hikari . HikariConfig ; <nl> + import org . junit . Test ; <nl> + import com . zaxxer . hikari . HikariDataSource ; <nl> + import java . sql . Connection ; <nl> + import java . sql . PreparedStatement ; <nl> 
mmm RoboTrackProtocolDecoderTest . java <nl> ppp RoboTrackProtocolDecoderTest . java <nl> + import java . nio . ByteOrder ; <nl> - verifyNull ( decoder , binary ( <nl> + verifyNull ( decoder , binary ( ByteOrder . LITTLE _ ENDIAN , <nl> + verifyPosition ( decoder , binary ( ByteOrder . LITTLE _ ENDIAN , <nl> 
deleted file <nl> mmm CallerSensitive . java <nl> - package sun . reflect ; <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Retention ; <nl> - import java . lang . annotation . RetentionPolicy ; <nl> - import java . lang . annotation . Target ; <nl> - @ Retention ( RetentionPolicy . RUNTIME ) <nl> 
mmm ShadowConnectivityManager . java <nl> ppp ShadowConnectivityManager . java <nl> - public void _ _ constructor _ _ () { <nl> + public ShadowConnectivityManager () { <nl> 
new file <nl> ppp Action . java <nl> + package com . just . agentweb ; <nl> + import android . os . Parcel ; <nl> + import android . os . Parcelable ; <nl> + public class Action implements Parcelable { <nl> + public transient static final int ACTION _ PERMISSION = 1 ; <nl> + public transient static final int ACTION _ FILE = 2 ; <nl> 
mmm AnnotationHandler . java <nl> ppp AnnotationHandler . java <nl> + boolean isEnabled (); <nl> 
mmm HashMapChangedListener . java <nl> ppp HashMapChangedListener . java <nl> - @ SuppressWarnings (" UnusedParameters ") <nl> - void onRemoved ( Collection < ProtectedStorageEntry > protectedStorageEntries ); <nl> + default void onRemoved ( Collection < ProtectedStorageEntry > protectedStorageEntries ) { <nl> 
mmm PersistableList . java <nl> ppp PersistableList . java <nl> + import java . util . Collection ; <nl> + import java . util . function . Consumer ; <nl> - import lombok . Setter ; <nl> - import lombok . experimental . Delegate ; <nl> - public abstract class PersistableList < T extends PersistablePayload > implements PersistableEnvelope , Iterable < T > { <nl> 
mmm WordListValidatorTest . java <nl> ppp WordListValidatorTest . java <nl> + " Bra č", <nl> 
mmm VersionNumberTest . java <nl> ppp VersionNumberTest . java <nl> - import java . io . BufferedReader ; <nl> - import java . io . FileReader ; <nl> + import junit . framework . TestCase ; <nl> + import org . languagetool . tools . StringTools ; <nl> + import java . io . FileInputStream ; <nl> - import junit . framework . TestCase ; <nl> 
mmm ConfigMapListenerManager . java <nl> ppp ConfigMapListenerManager . java <nl> - @ Override <nl> - public void watchMasterSlave () { <nl> - String cachePath = configNode . getConfigMapPath (); <nl> - regCenter . watch ( cachePath , new EventListener () { <nl> - @ Override <nl> - public void onChange ( final DataChangedEvent event ) { <nl> 
mmm Wrappers . java <nl> ppp Wrappers . java <nl> + import java . nio . file . FileSystem ; <nl> + FileSystem filesystem = FileSystems . getDefault (); <nl> - FileSystems . getDefault (), argsArray , wrapper . name (), wrapper . subtoolName ()); <nl> + filesystem , argsArray , wrapper . name (), wrapper . subtoolName ()); <nl> 
mmm ExecuteJobsRunnable . java <nl> ppp ExecuteJobsRunnable . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> - public class ExecuteJobsRunnable implements Runnable { <nl> - private final List < String > jobIds ; <nl> - private final JobExecutor jobExecutor ; <nl> 
mmm BadgeIntentService . java <nl> ppp BadgeIntentService . java <nl> - @ Override <nl> - public void onCreate () { <nl> - super . onCreate (); <nl> - mNotificationManager = ( NotificationManager ) getSystemService ( Context . NOTIFICATION _ SERVICE ); <nl> - } <nl> + mNotificationManager = ( NotificationManager ) getSystemService ( Context . NOTIFICATION _ SERVICE ); <nl> 
mmm ConfigExample . java <nl> ppp ConfigExample . java <nl> - import java . util . *; <nl> + import java . util . Properties ; <nl> - import java . util . concurrent . locks . LockSupport ; <nl> - import com . alibaba . nacos . api . config . listener . Listener ; <nl> - import com . alibaba . nacos . client . config . impl . ConfigChangeEvent ; <nl> 
mmm AdminsSmsSignController . java <nl> ppp AdminsSmsSignController . java <nl> - public CommonResult addSign (@ RequestBody AddSignRequest addSignRequest ) { <nl> + public CommonResult <?> addSign (@ RequestBody AddSignRequest addSignRequest ) { <nl> - public CommonResult updateSign (@ RequestBody UpdateSignRequest updateSignRequest ) { <nl> 
mmm KeyspaceService . java <nl> ppp KeyspaceService . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private final Logger LOG = LoggerFactory . getLogger ( KeyspaceService . class ); <nl> + LOG . error (" Exception during keyspaces retrieval . ", e ); <nl> + LOG . error (" Exception during keyspace deletion . ", e ); <nl> 
new file <nl> ppp GridworksBrokerTests . java <nl> + package com . metaweb . gridworks . broker . tests ; <nl> + import org . slf4j . Logger ; <nl> + import org . testng . annotations . BeforeSuite ; <nl> + public class GridworksBrokerTests { <nl> + protected Logger logger ; <nl> + @ BeforeSuite <nl> + public void init () { <nl> 
mmm RowKey . java <nl> ppp RowKey . java <nl> - static Deferred < String > metricNameAsync ( final TSDB tsdb , final byte [] row ) { <nl> + public static Deferred < String > metricNameAsync ( final TSDB tsdb , <nl> + final byte [] row ) { <nl> 
mmm Async . java <nl> ppp Async . java <nl> + return ; <nl> 
mmm ThreadGroupName . java <nl> ppp ThreadGroupName . java <nl> - JMeterContext context = null ; <nl> + JMeterContext context ; <nl> 
mmm AgentMojo . java <nl> ppp AgentMojo . java <nl> - * Note that these properties must not be overwritten by the test configuration , <nl> - * otherwise the JaCoCo agent cannot be attached . If you need custom parameters <nl> - * please append them . For example : <nl> + * If your project already uses the argLine to configure the <nl> 
deleted file <nl> mmm ScmChecker . java <nl> - package org . opensolaris . opengrok . history ; <nl> - import org . opensolaris . opengrok . util . Executor ; <nl> - class ScmChecker { <nl> - boolean available ; <nl> - ScmChecker ( final String [] argv ) { <nl> - Executor exec = new Executor ( argv ); <nl> - available = exec . exec ( false ) == 0 ; <nl> 
deleted file <nl> mmm MetricsController . java <nl> - package cn . escheduler . api . controller ; <nl> - public class MetricsController { <nl> - } <nl> 
mmm CommandMission . java <nl> ppp CommandMission . java <nl> - return Bundles . format (" text . mission . battle ", command . localized ()); <nl> + return Bundles . format (" text . mission . command ", command . localized ()); <nl> 
mmm AESShardingEncryptorTest . java <nl> ppp AESShardingEncryptorTest . java <nl> + Properties properties = new Properties (); <nl> + encryptor . setProperties ( properties ); <nl> 
mmm TestReflectionUtil . java <nl> ppp TestReflectionUtil . java <nl> 
mmm ThreadLocalInvoker . java <nl> ppp ThreadLocalInvoker . java <nl> 
mmm DumpChannel . java <nl> ppp DumpChannel . java <nl> +  <nl> - public DumpChannel ( MessageCodec codec , File baseDir , String path , long maxSize , long lastChunkAdjust , long startTime ) throws IOException { <nl> + public DumpChannel ( MessageCodec codec , File baseDir , String path , long maxSize , long lastChunkAdjust , long startTime ) <nl> 
new file <nl> ppp PreferenceClick . java <nl> + package org . androidannotations . annotations ; <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + import java . lang . annotation . Target ; <nl> 
mmm OleAutoTest . java <nl> ppp OleAutoTest . java <nl> - "{ 00020905 - 0000 - 0000 - C000 - 000000000046 }"), clsid ); <nl> + "{ 420B2830 - E718 - 11CF - 893D - 00A0C9054228 }"), clsid ); <nl> - hr = OleAuto . INSTANCE . LoadRegTypeLib ( clsid , 8 , 3 , lcid , pWordTypeLib ); <nl> + hr = OleAuto . INSTANCE . LoadRegTypeLib ( clsid , 1 , 0 , lcid , pWordTypeLib ); <nl> 
mmm RelativeDateTimeOptions . java <nl> ppp RelativeDateTimeOptions . java <nl> - return new AutoParcel _ RelativeDateOptions . Builder () <nl> + return new AutoParcel _ RelativeDateTimeOptions . Builder () <nl> 
mmm SpringAkkaIntegrationTest . java <nl> ppp SpringAkkaIntegrationTest . java <nl> - public class SpringAkkaTest extends AbstractJUnit4SpringContextTests { <nl> + public class SpringAkkaIntegrationTest extends AbstractJUnit4SpringContextTests { <nl> 
new file <nl> ppp TestHttpWebdav . java <nl> + package org . apache . jmeter . protocol . http . sampler ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + import java . net . URI ; <nl> 
mmm EitherTest . java <nl> ppp EitherTest . java <nl> - package com . facebook . buck . model ; <nl> + package com . facebook . buck . util . types ; <nl> - import com . facebook . buck . util . types . Either ; <nl> 
mmm JavaMelodyConfiguration . java <nl> ppp JavaMelodyConfiguration . java <nl> 
mmm OrchestrationMasterSlaveDataSource . java <nl> ppp OrchestrationMasterSlaveDataSource . java <nl> + * @ author panjuan <nl> 
mmm ProfileListItemSkin . java <nl> ppp ProfileListItemSkin . java <nl> - root . setStyle (" - fx - background - color : white ; - fx - padding : 8 8 8 0 ;"); <nl> + root . setStyle (" - fx - background - color : white ; - fx - padding : 8 8 8 12 ;"); <nl> 
mmm JniRuntimeAccessBuildItem . java <nl> ppp JniRuntimeAccessBuildItem . java <nl> + import java . util . Arrays ; <nl> + public JniRuntimeAccessBuildItem ( boolean constructors , boolean methods , boolean fields , String . . . className ) { <nl> + this ( constructors , methods , fields , false , className ); <nl> 
mmm ES6ModuleLoaderFileSystemTest . java <nl> ppp ES6ModuleLoaderFileSystemTest . java <nl> - } <nl> + } <nl> 
mmm ZuulDependencyKeys . java <nl> ppp ZuulDependencyKeys . java <nl> - import com . netflix . discovery . DiscoveryClient ; <nl> + import com . netflix . discovery . EurekaClient ; <nl> - public static final ChannelConfigKey < DiscoveryClient > discoveryClient = new ChannelConfigKey <>(" discoveryClient "); <nl> 

mmm RestAssuredSetupRule . java <nl> ppp RestAssuredSetupRule . java <nl> - import integration . util . graylog . ServerHelper ; <nl> - final ServerHelper serverHelper = new ServerHelper (); <nl> 
mmm Undoable . java <nl> ppp Undoable . java <nl> - public static class UndoableFlag extends Undoable { <nl> - public UndoableFlag ( Collection col ) { <nl> - super ( FLAG ); <nl> - } <nl> - public long undo ( Collection col ) { <nl> - Timber . d (" Not implemented . "); <nl> - return NO _ REVIEW ; <nl> - } <nl> 
mmm ErrorCollector . java <nl> ppp ErrorCollector . java <nl> - checkSucceeds ( new Callable < Object >() { <nl> - public Object call () throws Exception { <nl> - assertThat ( value , matcher ); <nl> - return value ; <nl> - } <nl> - }); <nl> + checkThat ("", value , matcher ); <nl> - } <nl> + } <nl> 
mmm CacheWriter . java <nl> ppp CacheWriter . java <nl> 
mmm VersionStringComparator . java <nl> ppp VersionStringComparator . java <nl> - Pattern . compile ("(\\ d + )(\\ . \\ d + )*?( _ rc \\ d + )*?$"); <nl> + Pattern . compile ("(\\ d + )(\\ . \\ d + )*?( _ rc \\ d + )*?(?: - preview )?$"); <nl> 
mmm ActivityGenerator . java <nl> ppp ActivityGenerator . java <nl> 
mmm MaxFreeAllocator . java <nl> ppp MaxFreeAllocator . java <nl> - mManagerView = Preconditions . checkNotNull ( view ); <nl> + mManagerView = Preconditions . checkNotNull ( view , " view "); <nl> - mManagerView = Preconditions . checkNotNull ( view ); <nl> + mManagerView = Preconditions . checkNotNull ( view , " view "); <nl> 
mmm TSLSLauncher . java <nl> ppp TSLSLauncher . java <nl> - private static final String REGEX = " . *\\ . ts "; <nl> + private static final String REGEX = " . *\\ . ( ts | tsx )"; <nl> 
mmm StringCriterion . java <nl> ppp StringCriterion . java <nl> - return ( ExpressionUtils . isNonBlankData ( value ) & & !( value instanceof String )) ? <nl> - collator . getCollationKey ( value . toString ()) : value ; <nl> + return collator . getCollationKey (( ExpressionUtils . isNonBlankData ( value ) <nl> 
mmm PrettyPrinter . java <nl> ppp PrettyPrinter . java <nl> - public void executeStart ( ExecuteContext ctx ) { <nl> + public void renderEnd ( ExecuteContext ctx ) { <nl> 
mmm OptimalTreeSearch . java <nl> ppp OptimalTreeSearch . java <nl> - int min = Integer . MIN _ VALUE ; <nl> + int min = Integer . MAX _ VALUE ; <nl> 
new file <nl> ppp StartupConsistencyCheckTest . java <nl> + package alluxio . master . file ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import alluxio . AlluxioURI ; <nl> + import alluxio . master . file . StartupConsistencyCheck . Status ; <nl> + import com . google . common . collect . ImmutableList ; <nl> 
mmm SQLExecutePrepareCallback . java <nl> ppp SQLExecutePrepareCallback . java <nl> + import io . shardingsphere . core . constant . ConnectionMode ; <nl> + * @ author panjuan <nl> + * @ param connectionMode connection mode <nl> - SQLExecuteUnit createSQLExecuteUnit ( Connection connection , RouteUnit routeUnit ) throws SQLException ; <nl> 
new file <nl> ppp CancelCall . java <nl> + package com . squareup . okhttp . recipes ; <nl> + import com . squareup . okhttp . Call ; <nl> + import com . squareup . okhttp . OkHttpClient ; <nl> + import com . squareup . okhttp . Request ; <nl> + import com . squareup . okhttp . Response ; <nl> + import java . io . IOException ; <nl> 
mmm BatchProcessing . java <nl> ppp BatchProcessing . java <nl> - Class . forName (" org . hsqldb . jdbcDriver "); <nl> - connection = DriverManager . getConnection (" jdbc : hsqldb : file : C :\\ EMPLOYEEDB ", " SA ", ""); <nl> + Class . forName (" org . h2 . Driver "); <nl> + connection = DriverManager . getConnection (" jdbc : h2 : file : C :\\ EMPLOYEEDB ", " SA ", ""); <nl> 
mmm WriteTimeoutException . java <nl> ppp WriteTimeoutException . java <nl> 
deleted file <nl> mmm ChangeVariableType . java <nl> - package org . activiti . examples . variables <nl> - import org . activiti . engine . delegate . DelegateExecution ; <nl> - import org . activiti . engine . delegate . JavaDelegate ; <nl> - public class ChangeVariableType implements JavaDelegate { <nl> 
mmm BaseMultiItemQuickAdapter . java <nl> ppp BaseMultiItemQuickAdapter . java <nl> + @ Override <nl> + public void remove (@ IntRange ( from = 0L ) int position ) { <nl> + MultiItemEntity entity = mData . get ( position ); <nl> + if ( entity instanceof IExpandable ) { <nl> + removeAllChild (( IExpandable ) entity , position ); <nl> 
mmm DependencyParserDemo . java <nl> ppp DependencyParserDemo . java <nl> - package edu . stanford . nlp . parser . nndep . demo ; <nl> - import edu . stanford . nlp . util . logging . Redwood ; <nl> + package edu . stanford . nlp . parser . nndep . demo ; <nl> + import edu . stanford . nlp . util . logging . Redwood ; <nl> 
mmm NotifyGroupExecuteService . java <nl> ppp NotifyGroupExecuteService . java <nl> - return transactionState ; <nl> + return commitState ; <nl> 
deleted file <nl> mmm CardBrowserContextMenu . java <nl> - package com . ichi2 . anki . dialogs ; <nl> - import com . afollestad . materialdialogs . MaterialDialog ; <nl> - import com . ichi2 . anki . R ; <nl> - import com . ichi2 . anki . analytics . AnalyticsDialogFragment ; <nl> - import android . app . Dialog ; <nl> 
mmm DataSourceChangedListenerTest . java <nl> ppp DataSourceChangedListenerTest . java <nl> - import io . shardingsphere . core . config . DataSourceConfiguration ; <nl> - import io . shardingsphere . orchestration . internal . registry . config . service . ConfigurationService ; <nl> - import io . shardingsphere . orchestration . util . FieldUtil ; <nl> 
mmm DelegatingSchedulerTest . java <nl> ppp DelegatingSchedulerTest . java <nl> - import java . util . concurrent . ExecutionException ; <nl> - import java . util . concurrent . Future ; <nl> - import java . util . concurrent . TimeUnit ; <nl> + import java . util . concurrent . *; <nl> + import java . util . concurrent . atomic . AtomicReference ; <nl> 
mmm DecodeThread . java <nl> ppp DecodeThread . java <nl> + import java . util . concurrent . CountDownLatch ; <nl> 
mmm BroadcastUpdatedEvent . java <nl> ppp BroadcastUpdatedEvent . java <nl> - mergeAndRepost ( broadcast , source ); <nl> + mergeAndRepost ( oldBroadcast , source ); <nl> 
deleted file <nl> mmm DescribeClusters . java <nl> - package com . example . redshift ; <nl> - import software . amazon . awssdk . regions . Region ; <nl> - import software . amazon . awssdk . services . redshift . RedshiftClient ; <nl> - import software . amazon . awssdk . services . redshift . model . Cluster ; <nl> 
new file <nl> ppp DemoDisambiguationFilter . java <nl> + package org . languagetool . tagging . disambiguation . rules . xx ; <nl> + import org . jetbrains . annotations . Nullable ; <nl> + import org . languagetool . AnalyzedTokenReadings ; <nl> + import org . languagetool . rules . RuleMatch ; <nl> + import org . languagetool . rules . patterns . RuleFilter ; <nl> 
new file <nl> ppp ApolloDataSourceProvider . java <nl> + package com . ctrip . framework . apollo . ds ; <nl> + import org . codehaus . plexus . logging . LogEnabled ; <nl> + import org . codehaus . plexus . logging . Logger ; <nl> + import org . unidal . dal . jdbc . datasource . DataSourceProvider ; <nl> 

new file <nl> ppp UseShortArrayInitializerTest . java <nl> + package net . sourceforge . pmd . lang . java . rule . codestyle ; <nl> + import net . sourceforge . pmd . testframework . PmdRuleTst ; <nl> + public class UseShortArrayInitializerTest extends PmdRuleTst { <nl> + } <nl> 
new file <nl> ppp WebSocketProcessorAdapter . java <nl> + package org . atmosphere . websocket ; <nl> + import org . atmosphere . cpr . AtmosphereConfig ; <nl> + import org . atmosphere . cpr . AtmosphereRequest ; <nl> + import org . atmosphere . cpr . AtmosphereResponse ; <nl> + import javax . servlet . http . HttpServletRequest ; <nl> 
mmm MatlabTokenizerTest . java <nl> ppp MatlabTokenizerTest . java <nl> - TokenEntry . getEOF (); <nl> - TokenEntry . getEOF (); <nl> + assertEquals ("\" This is a double - quoted string \"", tokens . getTokens () . get ( 2 ) . toString ()); <nl> 
mmm ASTRecordConstructorDeclaration . java <nl> ppp ASTRecordConstructorDeclaration . java <nl> - * {@ linkplain ASTTypeParameters TypeParameters }? <nl> 
mmm AlienDictionary . java <nl> ppp AlienDictionary . java <nl> - Set < Character > orderChar = new HashSet (); <nl> - orders . add ( order ); <nl> - orderChar . add ( words [ i ] . charAt ( j )); <nl> - orderChar . add ( words [ i + 1 ] . charAt ( j )); <nl> - } <nl> + orders . add ( order ); } <nl> - for ( char c : appearedLetters ){ <nl> 
mmm TransactionReportMessageAnalyzerTest . java <nl> ppp TransactionReportMessageAnalyzerTest . java <nl> - import com . dianping . cat . consumer . MessageAnalyzerManager ; <nl> - long current = System . currentTimeMillis (); <nl> - long start = current - current % ( 60 * 60 * 1000 ) - 1000L * 60 * 60 ; <nl> 
mmm MessagingException . java <nl> ppp MessagingException . java <nl> + public MessagingException ( Throwable cause ) { <nl> + super ( cause ); <nl> + } <nl> 
mmm AddingNewLineToString . java <nl> ppp AddingNewLineToString . java <nl> + System . out . println (" 7 . Using % n "); <nl> + rhyme = " Humpty Dumpty sat on a wall . % nHumpty Dumpty had a great fall . "; <nl> + System . out . println ( rhyme ); <nl> 
mmm TimezoneDisplay . java <nl> ppp TimezoneDisplay . java <nl> - import sun . util . calendar . ZoneInfo ; <nl> + import java . time . ZoneOffset ; <nl> - import java . util . TimeZone ; <nl> - TimeZone tz1 = ZoneInfo . getTimeZone ( zoneId1 ); <nl> - TimeZone tz2 = ZoneInfo . getTimeZone ( zoneId2 ); <nl> 
mmm TranslateMouseListener . java <nl> ppp TranslateMouseListener . java <nl> - return new MouseEvent (( Component ) e . getSource (), e . getID (), e . getWhen (), e . getModifiers (), <nl> - newX , newY , e . getClickCount (), e . isPopupTrigger ()); <nl> + return new MouseEvent (( Component ) e . getSource (), e . getID (), e . getWhen (), e . getModifiersEx (), <nl> 
mmm TreebankLanguagePackTest . java <nl> ppp TreebankLanguagePackTest . java <nl> 
mmm Olingo4Consumer . java <nl> ppp Olingo4Consumer . java <nl> + import org . apache . olingo . client . api . domain . ClientEntitySet ; <nl> 
mmm AsyncContext . java <nl> ppp AsyncContext . java <nl> 
new file <nl> ppp SO61963756 . java <nl> + package picocli . examples . arggroup ; <nl> + import picocli . CommandLine ; <nl> + import picocli . CommandLine . *; <nl> + import picocli . CommandLine . Model . CommandSpec ; <nl> + public class SO61963756 implements Runnable { <nl> + static class MyGroupX { <nl> 
mmm JMeterColor . java <nl> ppp JMeterColor . java <nl> 
mmm AbstractCommand . java <nl> ppp AbstractCommand . java <nl> - if ( args . length != getNumOfArgs ()) { <nl> + if ( cmd . getArgs () . length != getNumOfArgs ()) { <nl> - getCommandName (), getNumOfArgs (), args . length )); <nl> + getCommandName (), getNumOfArgs (), cmd . getArgs () . length )); <nl> 
mmm ES6ModuleLoaderFileSystemTest . java <nl> ppp ES6ModuleLoaderFileSystemTest . java <nl> - rootPath = tempFolder . getRoot () . getPath () + "/"; <nl> + rootPath = tempFolder . getRoot () . getPath () . replace ( File . separatorChar , '/') + "/"; <nl> - return compiler . getInput ( new InputId ( rootPath + s )); <nl> 
mmm _ 303 . java <nl> ppp _ 303 . java <nl> - public class RangeSumQueryImmutable { <nl> - } <nl> - class NumArray { <nl> - int [] sums ; <nl> - public NumArray ( int [] nums ) { <nl> - sums = new int [ nums . length ]; <nl> - for ( int i = 0 ; i < nums . length ; i + + ){ <nl> - if ( i == 0 ){ <nl> - sums [ i ] = nums [ i ]; <nl> 
new file <nl> ppp ArrayStoreExampleCE . java <nl> + package com . baeldung . array . arraystoreexception ; <nl> + public class ArrayStoreExampleCE { <nl> + public static void main ( String [] args ) { <nl> + } <nl> + } <nl> 
mmm PipelineStreamAssignment . java <nl> ppp PipelineStreamAssignment . java <nl> - public abstract String id (); <nl> + public abstract String _ id (); <nl> - public static PipelineStreamAssignment create (@ Id @ ObjectId @ JsonProperty (" _ id ") @ Nullable String id , <nl> + public static PipelineStreamAssignment create (@ Id @ ObjectId @ JsonProperty (" id ") @ Nullable String _ id , <nl> 
mmm DeleteArtifactStoreConfigCommand . java <nl> ppp DeleteArtifactStoreConfigCommand . java <nl> - ArtifactStore existingArtifactStore = findExistingProfile ( modifiedConfig ); <nl> - if ( existingArtifactStore == null ) { <nl> + preprocessedProfile = findExistingProfile ( modifiedConfig ); <nl> + if ( preprocessedProfile == null ) { <nl> 
mmm YarnConfigUtils . java <nl> ppp YarnConfigUtils . java <nl> - import java . util . Collection ; <nl> - public static < T > void encodeListToConfig ( <nl> - final Configuration configuration , <nl> - final ConfigOption < List < String >> key , <nl> - final Collection < T > value , <nl> - final Function < T , String > mapper ) { <nl> 
mmm NewHighlighting . java <nl> ppp NewHighlighting . java <nl> - * . save ; <nl> + * . save (); <nl> 
mmm RetransmissionHandler . java <nl> ppp RetransmissionHandler . java <nl> - import io . netty . util . concurrent . ScheduledFuture ; <nl> + import io . netty . handler . codec . mqtt . MqttQoS ; <nl> + import io . netty . util . concurrent . ScheduledFuture ; <nl> - boolean isDup = this . originalMessage . fixedHeader () . messageType () == MqttMessageType . PUBLISH ? true : this . originalMessage . fixedHeader () . isDup (); <nl> 
mmm OrchestrationMasterSlaveDataSourceFactory . java <nl> ppp OrchestrationMasterSlaveDataSourceFactory . java <nl> + * @ author panjuan <nl> 
mmm MySQLDataSourceProvider . java <nl> ppp MySQLDataSourceProvider . java <nl> - HikariDataSource dataSource = new HikariDataSource ( createConfiguration ()); <nl> - flywayMigrate ( dataSource ); <nl> - return dataSource ; <nl> + HikariDataSource dataSource = null ; <nl> + try { <nl> + dataSource = new HikariDataSource ( createConfiguration ()); <nl> 
mmm TableNameExtractHandler . java <nl> ppp TableNameExtractHandler . java <nl> + import org . antlr . v4 . runtime . ParserRuleContext ; <nl> - import io . shardingsphere . core . parsing . parser . context . table . Table ; <nl> - import io . shardingsphere . core . parsing . parser . sql . SQLStatement ; <nl> 
mmm AuthManagerServiceImpl . java <nl> ppp AuthManagerServiceImpl . java <nl> - if ( callerUid != callingUid ) { <nl> + if ( callerUid != 0 & & callerUid != callingUid ) { <nl> - String [] packagesForUid = context . getPackageManager () . getPackagesForUid ( callerUid ); <nl> - if (! Arrays . asList ( packagesForUid ) . contains ( packageName )) { <nl> 
mmm Dispatcher . java <nl> ppp Dispatcher . java <nl> - protected final SocketPolicy peekSocketPolicy () { <nl> - throw new UnsupportedOperationException (" This API is obsolete . Override peek () instead !"); <nl> - } <nl> 
mmm UiTest . java <nl> ppp UiTest . java <nl> - import org . junit . Ignore ; <nl> - @ Ignore (" Temporary disable to allow 5 . 6 - RC1 to be released ") <nl> 
mmm InsertSetPlaceholder . java <nl> ppp InsertSetPlaceholder . java <nl> + import org . apache . shardingsphere . core . route . type . TableUnit ; <nl> + import org . apache . shardingsphere . core . rule . DataNode ; <nl> + import java . util . Map ; <nl> 
mmm ComponentsDslMetadataRegistryTest . java <nl> ppp ComponentsDslMetadataRegistryTest . java <nl> + import java . nio . file . Files ; <nl> + import java . nio . file . StandardCopyOption ; <nl> + final File metadataWork = metadata . toPath () . resolveSibling (" component _ metadata _ work . json ") . toFile (); <nl> 
new file <nl> ppp Echo . java <nl> + package org . apache . cordova ; <nl> + import org . apache . cordova . api . Plugin ; <nl> + import org . apache . cordova . api . PluginResult ; <nl> + import org . json . JSONArray ; <nl> + import org . json . JSONException ; <nl> + public class Echo extends Plugin { <nl> 
mmm SpringSecurityContextFilter . java <nl> ppp SpringSecurityContextFilter . java <nl> + public static final String DEFAULT _ SECURITY _ MANAGER _ BEAN _ NAME = " securityManager "; <nl> - protected String securityManagerBeanName = " securityManager "; <nl> + protected String securityManagerBeanName = DEFAULT _ SECURITY _ MANAGER _ BEAN _ NAME ; <nl> 
mmm SelectorUtil . java <nl> ppp SelectorUtil . java <nl> - SELECT _ TIMEOUT _ NANOS = TimeUnit . MILLISECONDS . toMicros ( SELECT _ TIMEOUT ); <nl> + SELECT _ TIMEOUT _ NANOS = TimeUnit . MILLISECONDS . toNanos ( SELECT _ TIMEOUT ); <nl> 
mmm _ 474 . java <nl> ppp _ 474 . java <nl> - public class OnesandZeroes { <nl> + public class _ 474 { <nl> 
new file <nl> ppp JUnitStaticSuiteRule . java <nl> + package net . sourceforge . pmd . lang . java . rule . errorprone ; <nl> + import net . sourceforge . pmd . lang . java . ast . ASTMethodDeclaration ; <nl> + import net . sourceforge . pmd . lang . java . rule . AbstractJUnitRule ; <nl> + public class JUnitStaticSuiteRule extends AbstractJUnitRule { <nl> 
mmm Parser . java <nl> ppp Parser . java <nl> + @ Deprecated <nl> 
mmm OReturnStatement . java <nl> ppp OReturnStatement . java <nl> + import com . orientechnologies . orient . core . command . OCommandContext ; <nl> + import com . orientechnologies . orient . core . db . record . OIdentifiable ; <nl> + import com . orientechnologies . orient . core . sql . executor . OInternalResultSet ; <nl> 
mmm HeadersTest . java <nl> ppp HeadersTest . java <nl> - List < Header > headers = Headers . createRequestHeaders ( metaData , path , authority , userAgent ); <nl> + List < Header > headers = Headers . createRequestHeaders ( <nl> + metaData , <nl> + path , <nl> + authority , <nl> + userAgent , <nl> + false ); <nl> 
new file <nl> ppp HaskellModule . java <nl> + package com . facebook . buck . haskell ; <nl> + import com . facebook . buck . module . BuckModule ; <nl> + @ BuckModule ( id = " com . facebook . buck . haskell ") <nl> + public class HaskellModule {} <nl> 
mmm ColoredDecimalPlacesWithZerosTextTest . java <nl> ppp ColoredDecimalPlacesWithZerosTextTest . java <nl> + import javafx . scene . text . Text ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + @ Test <nl> + public void testOnlyZeroDecimals () { <nl> + ColoredDecimalPlacesWithZerosText text = new ColoredDecimalPlacesWithZerosText (" 1 . 0000 "); <nl> 
mmm SpringBootTomcatConnectionPoolIntegrationTest . java <nl> ppp SpringBootTomcatConnectionPoolIntegrationTest . java <nl> + import org . springframework . test . context . TestPropertySource ; <nl> + @ TestPropertySource ( properties = " spring . datasource . type = org . apache . tomcat . jdbc . pool . DataSource ") <nl> 
mmm DefaultDruidParserTest . java <nl> ppp DefaultDruidParserTest . java <nl> - assertArrayEquals ( getParseTables (" select id as id from company t ;"), getArr (" company " . toUpperCase ())); <nl> - assertArrayEquals ( getParseTables (" select 1 from ( select 1 from company ) company ;"), getArr (" company " . toUpperCase ())); <nl> 
mmm L100Protocol . java <nl> ppp L100Protocol . java <nl> - import org . jboss . netty . bootstrap . ConnectionlessBootstrap ; <nl> - import org . traccar . model . Command ; <nl> 
mmm ConfigLoaderTest . java <nl> ppp ConfigLoaderTest . java <nl> - "/ org / jacoco / agent / rt / agent - test . properties ", system ); <nl> + "/ org / jacoco / agent / rt / internal / agent - test . properties ", system ); <nl> + assertEquals (" 3333 ", config . get (" port ")); <nl> 
mmm TestStringBufferAndBuilderGrowth . java <nl> ppp TestStringBufferAndBuilderGrowth . java <nl> - import com . sun . management . OperatingSystemMXBean ; <nl> - import java . lang . management . ManagementFactory ; <nl> 
mmm WatchFrameDecoder . java <nl> ppp WatchFrameDecoder . java <nl> - return buf . readBytes ( length ); <nl> + ChannelBuffer frame = ChannelBuffers . dynamicBuffer (); <nl> + int endIndex = buf . readerIndex () + length ; <nl> + while ( buf . readerIndex () < endIndex ) { <nl> + byte b = buf . readByte (); <nl> 
mmm QuitCommandPacket . java <nl> ppp QuitCommandPacket . java <nl> - public static final byte [] QUIT = new byte [] { 1 , 0 , 0 , 0 , 1 }; <nl> - out . write ( QUIT ); <nl> 
mmm FileSystemMasterClientServiceProcessor . java <nl> ppp FileSystemMasterClientServiceProcessor . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static Logger LOG = LoggerFactory . getLogger ( FileSystemMasterClientServiceProcessor . class ); <nl> 
mmm LayoutSample . java <nl> ppp LayoutSample . java <nl> + import android . view . View ; <nl> + import android . widget . TextView ; <nl> - public class LayoutSample extends Activity { <nl> + public class LayoutSample extends Activity implements View . OnClickListener { <nl> - private static final String TAG = " LayoutSample "; <nl> 
new file <nl> ppp ShiroInterceptor . java <nl> + package org . atmosphere . interceptor ; <nl> + import org . apache . shiro . SecurityUtils ; <nl> + import org . apache . shiro . UnavailableSecurityManagerException ; <nl> + import org . apache . shiro . subject . Subject ; <nl> + import org . apache . shiro . web . env . WebEnvironment ; <nl> 
mmm AllKarateFeaturesTest . java <nl> ppp AllKarateFeaturesTest . java <nl> - assertTrue ( files . size () > 500 ); <nl> 
mmm BinaryTree . java <nl> ppp BinaryTree . java <nl> - IntegerRef ir = new IntegerRef (); <nl> - heightOfTree ( root , ir ); <nl> - return ir . height ; <nl> - } <nl> - private void heightOfTree ( Node root , IntegerRef max ){ <nl> - max . height = 0 ; <nl> - return ; <nl> + return 0 ; <nl> - IntegerRef irl = new IntegerRef (); <nl> 
mmm Response . java <nl> ppp Response . java <nl> 
mmm FilterServiceImplTest . java <nl> ppp FilterServiceImplTest . java <nl> 
mmm LayoutSpecAnnotator . java <nl> ppp LayoutSpecAnnotator . java <nl> - if (! ComponentGenerateService . getInstance () . tryUpdateLayoutComponent ( layoutSpec )) { <nl> - return ; <nl> + try { <nl> + if (! ComponentGenerateService . getInstance () . tryUpdateLayoutComponent ( layoutSpec )) { <nl> + return ; <nl> 
mmm MountItem . java <nl> ppp MountItem . java <nl> - class MountItem { <nl> + public class MountItem { <nl> - MountItem ( RenderTreeNode renderTreeNode , @ Nullable Host host , Object content ) { <nl> + public MountItem ( RenderTreeNode renderTreeNode , @ Nullable Host host , Object content ) { <nl> - Object getContent () { <nl> 
mmm MemoryTest . java <nl> ppp MemoryTest . java <nl> - Memory core = new Memory ( 10 ); <nl> + final boolean [] flag = { false }; <nl> + Memory core = new Memory ( 10 ) { <nl> + protected void finalize () { <nl> + super . finalize (); <nl> + flag [ 0 ] = true ; <nl> + } <nl> + }; <nl> - assertNotNull (" Memory prematurely GC ' d ", ref . get ()); <nl> 
mmm PredicateValidatorDefinition . java <nl> ppp PredicateValidatorDefinition . java <nl> - import org . apache . camel . Predicate ; <nl> - if ( expression instanceof Expression ) { <nl> - this . expression = ExpressionNodeHelper . toExpressionDefinition (( Expression ) expression ); <nl> - } else if ( expression instanceof Predicate ) { <nl> 
mmm Category . java <nl> ppp Category . java <nl> + public Integer rootId () { <nl> + return isRoot () ? id () : parentId (); <nl> + } <nl> 
mmm LogUtils . java <nl> ppp LogUtils . java <nl> 
mmm WireMockRule . java <nl> ppp WireMockRule . java <nl> + import com . github . tomakehurst . wiremock . client . RequestPatternBuilder ; <nl> + import com . github . tomakehurst . wiremock . verification . LoggedRequest ; <nl> + import java . util . List ; <nl> - public class WireMockRule implements MethodRule , TestRule , Stubbing { <nl> 
mmm XmlSerializer . java <nl> ppp XmlSerializer . java <nl> - * <nl> + * <nl> + * @ deprecated This class should not be used directly because of unsecure XMLEncoder / XMLDecoder usage . <nl> 
new file <nl> ppp ContextUtils . java <nl> + package com . google . android . material . internal ; <nl> + import static android . support . annotation . RestrictTo . Scope . LIBRARY _ GROUP ; <nl> + import android . app . Activity ; <nl> + import android . content . Context ; <nl> + import android . content . ContextWrapper ; <nl> 
mmm PageController . java <nl> ppp PageController . java <nl> 
mmm DataSourceMetaDataFactoryTest . java <nl> ppp DataSourceMetaDataFactoryTest . java <nl> + import io . shardingsphere . core . metadata . datasource . dialect . OracleDataSourceMetaData ; <nl> + @ Test <nl> + public void assertAllNewInstanceForOracle () { <nl> + } <nl> 
new file <nl> ppp AddingNewLineToString . java <nl> + package com . baeldung . string ; <nl> + public class AddingNewLineToString { <nl> +  <nl> + public static void main ( String [] args ) { <nl> + String line1 = " Humpty Dumpty sat on a wall . "; <nl> + String line2 = " Humpty Dumpty had a great fall . "; <nl> 
mmm Right . java <nl> ppp Right . java <nl> - String result = strValue . substring ( strValue . length () - intValue , strValue . length ()); <nl> + int start = strValue . length () - intValue ; <nl> + if ( start < 0 ) { <nl> + start = 0 ; <nl> + } <nl> + String result = strValue . substring ( start , strValue . length ()); <nl> 
mmm ServletSessionListenerOrderingTestCase . java <nl> ppp ServletSessionListenerOrderingTestCase . java <nl> - import io . undertow . servlet . test . util . MessageServlet ; <nl> 
mmm AclEntityFactory . java <nl> ppp AclEntityFactory . java <nl> + import java . util . UUID ; <nl> + UUID uuidObj = UUID . fromString ( uuid ); <nl> + uuid = uuidObj . toString (); <nl> 
new file <nl> ppp ConvertSortedArraytoBinarySearchTree . java <nl> + package stevesun . algorithms ; <nl> + import stevesun . common . classes . TreeNode ; <nl> + public class ConvertSortedArraytoBinarySearchTree { <nl> + public TreeNode sortedArrayToBST ( int [] num ) { <nl> + return rec ( num , 0 , num . length - 1 ); <nl> 
mmm HttpUtils . java <nl> ppp HttpUtils . java <nl> - post ( url , timeout , new IProcessInputStream () { <nl> - @ Override <nl> - public void process ( InputStream inputStream ) throws IOException { <nl> - try ( BufferedReader br = new BufferedReader ( <nl> - new InputStreamReader ( inputStream , " UTF - 8 "))) { <nl> 
mmm ChunkIndex . java <nl> ppp ChunkIndex . java <nl> - durationUs = durationsUs [ length - 1 ] + timesUs [ length - 1 ]; <nl> + if ( length > 0 ) { <nl> + durationUs = durationsUs [ length - 1 ] + timesUs [ length - 1 ]; <nl> + } else { <nl> + durationUs = 0 ; <nl> + } <nl> 
mmm RelationIndexStatusWatcher . java <nl> ppp RelationIndexStatusWatcher . java <nl> - return new RelationIndexStatusReport ( true , relationIndexName , relationTypeName , actualStatus , status , t . elapsed ()); <nl> + return new RelationIndexStatusReport ( false , relationIndexName , relationTypeName , actualStatus , status , t . elapsed ()); <nl> 
mmm JWTAuthContextInfoGroup . java <nl> ppp JWTAuthContextInfoGroup . java <nl> - @ ConfigRoot ( phase = ConfigPhase . RUN _ TIME _ STATIC , name = " jwt ") <nl> + @ ConfigRoot ( name = " smallrye - jwt ") <nl> 
mmm DiacriticsCheckFilter . java <nl> ppp DiacriticsCheckFilter . java <nl> 
mmm MaterialUpdateServiceIntegrationTest . java <nl> ppp MaterialUpdateServiceIntegrationTest . java <nl> + @ Test public void shouldClearServerHealthLogsForMaterialWhereAutoUpdateChanged () throws Exception { <nl> + SvnMaterialConfig material = new SvnMaterialConfig (" non - existent - url !", " user ", " pwd2 ", false ); <nl> 
mmm Nutz . java <nl> ppp Nutz . java <nl> - return " 1 . b . 50 "; <nl> + return " 1 . b . 51 "; <nl> 
mmm OutputLabel . java <nl> ppp OutputLabel . java <nl> 
mmm DefaultLoggersManager . java <nl> ppp DefaultLoggersManager . java <nl> - public class RxLoggersManager implements LoggersManager < Map < String , Object >> { <nl> + public class DefaultLoggersManager implements LoggersManager < Map < String , Object >> { <nl> 
mmm InstanceHealthService . java <nl> ppp InstanceHealthService . java <nl> + JsonArray instances = new JsonArray (); <nl> + response . add (" instances ", instances ); <nl> - JsonArray instances = new JsonArray (); <nl> - response . add (" instances ", instances ); <nl> 
deleted file <nl> mmm FlightDelayExample . java <nl> - package tech . tablesaw ; <nl> - import tech . tablesaw . api . Table ; <nl> - public class FlightDelayExample extends AbstractExample { <nl> - public static void main ( String [] args ) throws Exception { <nl> - Table t = Table . read () . csv ("/ Users / larrywhite / IdeaProjects / testdata / bigdata / 2015 . csv "); <nl> 
mmm AppDataDirectoryTest . java <nl> ppp AppDataDirectoryTest . java <nl> - assertEquals (" Path wrong on Mac ", winPath ( appName ), path ); <nl> + assertEquals (" Path wrong on Windows ", winPath ( appName ), path ); <nl> - assertEquals (" Path wrong on Mac ", winPath ( appName ), path ); <nl> + assertEquals (" Path wrong on Windows ", winPath ( appName ), path ); <nl> 
mmm InterceptUrlMapRule . java <nl> ppp InterceptUrlMapRule . java <nl> - final URI uri = request . getUri (); <nl> - final String uriString = uri . toString (); <nl> + final String path = request . getUri () . getPath (); <nl> - . filter ( p - > pathMatcher . matches ( p . getPattern (), uriString )) <nl> 
mmm SecureServletTest . java <nl> ppp SecureServletTest . java <nl> - public void testSecureServletWithCorrectCredentials () throws Exception { <nl> + public void testWithCorrectCredentials () throws Exception { <nl> - public void testSecureServletWithIncorrectCredentials () throws Exception { <nl> + public void testWithIncorrectCredentials () throws Exception { <nl> 
mmm IOreHandler . java <nl> ppp IOreHandler . java <nl> 

deleted file <nl> mmm HcorefChineseAPIExampleTest . java <nl> - package edu . stanford . nlp . hcoref ; <nl> - import edu . stanford . nlp . hcoref . CorefCoreAnnotations ; <nl> - import edu . stanford . nlp . hcoref . data . CorefChain ; <nl> - import edu . stanford . nlp . hcoref . data . Mention ; <nl> 
mmm TouchEvent . java <nl> ppp TouchEvent . java <nl> 
mmm CrateClientClassLoader . java <nl> ppp CrateClientClassLoader . java <nl> - " Oorg . apache . log4j " . substring ( 1 ), <nl> - " Oorg . slf4j " . substring ( 1 ), <nl> 
mmm DiffSectionSpec . java <nl> ppp DiffSectionSpec . java <nl> - * {@ literal } OnDiff <nl> + * {@ literal @} OnDiff <nl> - * SectionContext c , <nl> - * ChangeSet changeSet , <nl> - * {@ code Diff < MyProp >} prop ) { <nl> + * SectionContext c , <nl> + * ChangeSet changeSet , <nl> + * {@ code Diff < MyProp >} prop ) { <nl> 
mmm Mysql5xConnectionInstrumentation . java <nl> ppp Mysql5xConnectionInstrumentation . java <nl> 
new file <nl> ppp ModelAdapter . java <nl> + package com . activeandroid . widget ; <nl> + import java . util . List ; <nl> + import android . content . Context ; <nl> + import android . widget . ArrayAdapter ; <nl> + import com . activeandroid . Model ; <nl> + public class ModelAdapter < T extends Model > extends ArrayAdapter < T > { <nl> 
mmm Header . java <nl> ppp Header . java <nl> - this . setName (""); <nl> - this . setValue (""); <nl> 
new file <nl> ppp RuleOrchestrationListenerTest . java <nl> + package io . shardingsphere . orchestration . internal . config . listener ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + public class RuleOrchestrationListenerTest { <nl> + @ Before <nl> + public void setUp () { <nl> 
mmm CsrfAuthenticationStrategyTests . java <nl> ppp CsrfAuthenticationStrategyTests . java <nl> + CsrfToken tokenInRequest = ( CsrfToken ) request . getAttribute ( CsrfToken . class . getName ()); <nl> + assertThat ( tokenInRequest . getToken ()) . isSameAs ( generatedToken . getToken ()); <nl> + assertThat ( tokenInRequest . getHeaderName ()) . isSameAs ( generatedToken . getHeaderName ()); <nl> 
mmm FinalList . java <nl> ppp FinalList . java <nl> - public class FinalList extends MyList { <nl> + public final class FinalList extends MyList { <nl> 
mmm PackageIT . java <nl> ppp PackageIT . java <nl> - import java . util . HashMap ; <nl> - new HashMap < String , String >() { <nl> - { <nl> - put (" QUARKUS _ PACKAGE _ TYPES ", " thin - jar "); <nl> - } <nl> - }); <nl> + Collections . singletonMap (" QUARKUS _ PACKAGE _ TYPES ", " thin - jar ")); <nl> - new HashMap < String , String >() { <nl> 
mmm ForwardingTimeline . java <nl> ppp ForwardingTimeline . java <nl> + @ Override <nl> + public final Window getWindow ( <nl> + int windowIndex , Window window , boolean setIds , long defaultPositionProjectionUs ) { <nl> + return getWindow ( windowIndex , window , defaultPositionProjectionUs ); <nl> + } <nl> 
mmm RpcContextFilter . java <nl> ppp RpcContextFilter . java <nl> + import java . nio . charset . StandardCharsets ; <nl> - String value = entry . getKey (); <nl> + String value = entry . getValue (); <nl> - size + = value . getBytes (" UTF - 8 ") . length ; <nl> + size + = value . getBytes ( StandardCharsets . UTF _ 8 ) . length ; <nl> 
mmm DataSourceParameterConverter . java <nl> ppp DataSourceParameterConverter . java <nl> + import io . shardingsphere . core . config . DataSourceConfiguration ; <nl> + import io . shardingsphere . core . rule . DataSourceParameter ; <nl> + import java . lang . reflect . Field ; <nl> + import java . util . HashMap ; <nl> 
new file <nl> ppp EventbridgeDescribeRuleLocalstackTest . java <nl> + package org . apache . camel . component . aws2 . eventbridge . localstack ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertNotNull ; <nl> + import java . util . ArrayList ; <nl> 
new file <nl> ppp ProjectMetadataTests . java <nl> + package com . google . refine . tests . io ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + import org . apache . commons . io . IOUtils ; <nl> + import org . testng . annotations . Test ; <nl> + import com . google . refine . model . metadata . ProjectMetadata ; <nl> 
mmm DefaultConfigurationRepresenter . java <nl> ppp DefaultConfigurationRepresenter . java <nl> - import org . yaml . snakeyaml . nodes . ScalarNode ; <nl> - Node keyNode = tuple . getKeyNode (); <nl> - if ( keyNode instanceof ScalarNode & & (( ScalarNode ) keyNode ) . getValue () . equals (" password ")) { <nl> 
mmm Suite . java <nl> ppp Suite . java <nl> - import org . apache . maven . integrationtests . IntegrationTestSuite ; <nl> + import org . apache . maven . it . IntegrationTestSuite ; <nl> 
mmm Weapon . java <nl> ppp Weapon . java <nl> 
mmm WordListValidatorTest . java <nl> ppp WordListValidatorTest . java <nl> + "å ngstr ö m ", <nl> + "å ngstr ö ms ", <nl> 
mmm NormalizationTest . java <nl> ppp NormalizationTest . java <nl> - import org . junit . Test ; <nl> + import com . mysema . testutil . Benchmark ; <nl> + import com . mysema . testutil . Runner ; <nl> + import org . junit . Test ; <nl> - public void Performance () { <nl> - int iterations = 1000000 ; <nl> 
mmm InstantParserTest . java <nl> ppp InstantParserTest . java <nl> - Instant instant = Instant . now (); <nl> + Instant instant = Instant . parse (" 2019 - 05 - 31T03 : 45 : 04 . 021Z "); <nl> - Instant instant = Instant . now (); <nl> + Instant instant = Instant . parse (" 2019 - 05 - 31T03 : 45 : 04 . 021Z "); <nl> 
mmm TestNUMAPageSize . java <nl> ppp TestNUMAPageSize . java <nl> - * @ run main / othervm - Xmx128m - XX : + UseNUMA TestNUMAPageSize <nl> + * @ requires vm . gc != " Z " <nl> + * @ run main / othervm - Xmx128m - XX : + UseNUMA - XX : + UseLargePages TestNUMAPageSize <nl> 
new file <nl> ppp Bug _ for _ issue _ 469 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + public class Bug _ for _ issue _ 469 extends TestCase { <nl> + public void test _ for _ issue () throws Exception { <nl> 
mmm TimeColumnDef . java <nl> ppp TimeColumnDef . java <nl> + } else if ( value instanceof Long ) { <nl> + Time time = new Time (( Long ) value ); <nl> + String timeAsStr = String . valueOf ( time ); <nl> + return objectWithPrecisionToString ( timeAsStr , new Timestamp (( Long ) value ), this . columnLength ); <nl> 
mmm WithProbability . java <nl> ppp WithProbability . java <nl> 
mmm NimbusClient . java <nl> ppp NimbusClient . java <nl> - public class NimbusClient extends ThriftClient { <nl> + public class NimbusClient extends ThriftClient { <nl> - Integer timeout = new Integer ( Utils . getInt ( conf . get ( Config . NIMBUS _ TASK _ TIMEOUT _ SECS ))); <nl> + Integer timeout = Utils . getInt ( conf . get ( Config . NIMBUS _ TASK _ TIMEOUT _ SECS )); <nl> 
new file <nl> ppp _ 403 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . HashMap ; <nl> + import java . util . HashSet ; <nl> + import java . util . Map ; <nl> + import java . util . Set ; <nl> + public class _ 403 { <nl> + public boolean canCross ( int [] stones ) { <nl> + if ( stones . length == 0 ) return true ; <nl> 
new file <nl> ppp CreateHealthCheck . java <nl> + package com . example . route ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . route53 . Route53Client ; <nl> + import software . amazon . awssdk . services . route53 . model . Route53Exception ; <nl> 
mmm InProcessSocketAddress . java <nl> ppp InProcessSocketAddress . java <nl> + @ Override <nl> + public String toString () { <nl> + return name ; <nl> + } <nl> 
deleted file <nl> mmm GatewayApplicationTest . java <nl> - package com . baeldung . spring . cloud . bootstrap . gateway ; <nl> - import org . junit . Assert ; <nl> - import org . junit . Test ; <nl> - import org . springframework . boot . test . web . client . TestRestTemplate ; <nl> - import org . springframework . http . *; <nl> 
mmm IGuiHandler . java <nl> ppp IGuiHandler . java <nl> + import javax . annotation . Nullable ; <nl> - public Object getServerGuiElement ( int ID , EntityPlayer player , World world , int x , int y , int z ); <nl> + @ Nullable <nl> + Object getServerGuiElement ( int ID , EntityPlayer player , World world , int x , int y , int z ); <nl> 
mmm VerifyDisputeResultSignatureWindow . java <nl> ppp VerifyDisputeResultSignatureWindow . java <nl> - import javafx . scene . control . Label ; <nl> - Label label = addMultilineLabel ( gridPane , + + rowIndex , Res . get (" support . sigCheck . popup . info "), 0 , width ); <nl> + addMultilineLabel ( gridPane , + + rowIndex , Res . get (" support . sigCheck . popup . info "), 0 , width ); <nl> 
mmm ThirdeyeAuthFilter . java <nl> ppp ThirdeyeAuthFilter . java <nl> - || uriPath . startsWith ("/ app / # / screenshot /") <nl> - || uriPath . startsWith (" anomalies / search / anomalyIds ") <nl> - || authConfig . getAllowedPaths () . contains ( uriPath )) { <nl> + || uriPath . startsWith (" app / # / screenshot /") <nl> 
mmm PrettyPrinter . java <nl> ppp PrettyPrinter . java <nl> + public PrettyPrinter () { <nl> + this ( new PrettyPrinterConfiguration ()); <nl> + } <nl> 
mmm SerializationUtils . java <nl> ppp SerializationUtils . java <nl> 
mmm ProfileIntroductionLayout . java <nl> ppp ProfileIntroductionLayout . java <nl> - . replaceAll ("\\ A (\\ h *\ n )*", "") <nl> - . replaceAll ("(\ n \\ h *)*\ n ?\\ Z ", ""); <nl> + . replaceFirst ( <nl> + "^([ \\ t \\ xA0 \\ u1680 \\ u180e \\ u2000 - \\ u200a \\ u202f \\ u205f \\ u3000 ]*\\ n )*", <nl> 
mmm RequestParams . java <nl> ppp RequestParams . java <nl> - private ConcurrentHashMap < String , String > urlParams ; <nl> + protected ConcurrentHashMap < String , String > urlParams ; <nl> 
mmm ConfigReloadTask . java <nl> ppp ConfigReloadTask . java <nl> - @ Inject <nl> - private ExceptionThresholdConfigManager m _ exceptionConfigManager ; <nl> 
mmm JsonMarshallerSerializer . java <nl> ppp JsonMarshallerSerializer . java <nl> - import java . io . ByteArrayInputStream ; <nl> - import java . io . ByteArrayOutputStream ; <nl> - import java . io . InputStreamReader ; <nl> - import java . io . OutputStreamWriter ; <nl> + import java . io . *; <nl> - _ charset = Charset . forName (" UTF8 "); <nl> 
mmm MasterSlaveOnly . java <nl> ppp MasterSlaveOnly . java <nl> - import repository . DataRepository ; <nl> + import io . shardingsphere . repository . common . repository . DataRepository ; <nl> 
mmm NodeTreeUseActivity . java <nl> ppp NodeTreeUseActivity . java <nl> + import com . chad . baserecyclerviewadapterhelper . utils . Tips ; <nl> - private RecyclerView mRecyclerView ; <nl> + private RecyclerView mRecyclerView ; <nl> + mRecyclerView . postDelayed ( new Runnable () { <nl> + @ Override <nl> + public void run () { <nl> 
new file <nl> ppp SchemaContextTest . java <nl> + package org . apache . shardingsphere . kernel . context ; <nl> + import org . apache . shardingsphere . infra . config . RuleConfiguration ; <nl> + import org . apache . shardingsphere . infra . metadata . ShardingSphereMetaData ; <nl> + import org . apache . shardingsphere . infra . rule . ShardingSphereRule ; <nl> 
mmm ComponentKeyUtils . java <nl> ppp ComponentKeyUtils . java <nl> - final StringBuilder sb = new StringBuilder (); <nl> + if ( key == null ) { <nl> + key = " null "; <nl> + } <nl> + int parentLength = parentGlobalKey . length (); <nl> + int keyLength = key . length (); <nl> + final StringBuilder sb = new StringBuilder ( parentLength + keyLength + 1 ); <nl> 
mmm AssertJava . java <nl> ppp AssertJava . java <nl> - JavaVersion . VERSION _ 13 <nl> + JavaVersion . VERSION _ 13 , <nl> + JavaVersion . VERSION _ 14 <nl> 
new file <nl> ppp Progress . java <nl> + package com . squareup . okhttp . recipes ; <nl> + import com . squareup . okhttp . Interceptor ; <nl> + import com . squareup . okhttp . MediaType ; <nl> + import com . squareup . okhttp . OkHttpClient ; <nl> + import com . squareup . okhttp . Response ; <nl> + import com . squareup . okhttp . ResponseBody ; <nl> 
mmm TlvProtocol . java <nl> ppp TlvProtocol . java <nl> - pipeline . addLast (" frameDecoder ", new CharacterDelimiterFrameDecoder ('\ 0 ')); <nl> + pipeline . addLast (" frameDecoder ", new CharacterDelimiterFrameDecoder ( 1024 , '\ 0 ')); <nl> 
mmm OrchestrationSpringShardingDataSource . java <nl> ppp OrchestrationSpringShardingDataSource . java <nl> + public OrchestrationSpringShardingDataSource ( final OrchestrationConfiguration orchestrationConfig ) throws SQLException { <nl> + super ( new OrchestrationFacade ( orchestrationConfig )); <nl> + } <nl> 
new file <nl> ppp AntiDependentLoadInOuterStripMinedLoop . java <nl> + public class AntiDependentLoadInOuterStripMinedLoop { <nl> + private static int field ; <nl> + private static volatile int barrier ; <nl> + public static void main ( String [] args ) { <nl> + int [] array = new int [ 1 ]; <nl> + A a = new A (); <nl> 
mmm HelperRecordTests . java <nl> ppp HelperRecordTests . java <nl> + import static org . junit . Assert . assertFalse ; <nl> - save ( new FloatFieldExtendedModel ( 0 . 25F )); <nl> - save ( new FloatFieldExtendedModel ( 0 . 5F )); <nl> + Float firstObjectFloat = new Float ( 25F ); <nl> + Float lastObjectFloat = new Float ( 50F ); <nl> 
mmm SecurityConfHandlerLocal . java <nl> ppp SecurityConfHandlerLocal . java <nl> - import org . apache . solr . core . SolrResourceLoader ; <nl> 
mmm MyCommonAST . java <nl> ppp MyCommonAST . java <nl> + public String toString () <nl> + { <nl> + return "{ Text = '" + getText () + "', Line = " + getLineNo () <nl> + + ", Column = " + getColumnNo () + "}"; <nl> + } <nl> 
mmm ZuulFilterInitializerTests . java <nl> ppp ZuulFilterInitializerTests . java <nl> + import static org . junit . Assert . assertNull ; <nl> + int originalSize = FilterRegistry . instance () . getAllFilters () . size (); <nl> - assertEquals ( null , ReflectionTestUtils . getField ( TracerFactory . class , " INSTANCE ")); <nl> 
mmm TableWriter . java <nl> ppp TableWriter . java <nl> + import liquibase . datatype . DataTypeFactory ; <nl> - cells . add ( Arrays . asList ( TypeConverterFactory . getInstance () . findTypeConverter ( database ) . convertToDatabaseTypeString ( column , database ), <nl> + cells . add ( Arrays . asList ( column . getType () . toString (), <nl> 
mmm AppDataDirectoryTest . java <nl> ppp AppDataDirectoryTest . java <nl> - AppDataDirectory . get (":"); <nl> + AppDataDirectory . get ("\ 0 "); <nl> 
mmm ActivityMain . java <nl> ppp ActivityMain . java <nl> - import androidx . annotation . NonNull ; <nl> - private static final int REQUEST _ CAMERA = 1 ; <nl> - switch ( v . getId ()) { <nl> + if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . CAMERA ) <nl> + == PackageManager . PERMISSION _ DENIED ) { <nl> 
deleted file <nl> mmm RocketTest . java <nl> - package com . baeldung . beaninjectiontypes ; <nl> - import static org . junit . Assert . assertNotNull ; <nl> - import org . junit . Test ; <nl> - import org . junit . runner . RunWith ; <nl> - import org . springframework . beans . factory . annotation . Autowired ; <nl> 
mmm SlaveLooper . java <nl> ppp SlaveLooper . java <nl> + lock . isWaiting = true ; <nl> + } finally { <nl> + lock . isWaiting = false ; <nl> - lock . proceedLock . notify (); <nl> + if ( lock . isWaiting ) { <nl> + lock . proceedLock . notify (); <nl> + } <nl> + private volatile boolean isWaiting ; <nl> + isWaiting = false ; <nl> 
mmm _ 350 . java <nl> ppp _ 350 . java <nl> - public class IntersectionofTwoArraysII { <nl> + public class _ 350 { <nl> 
mmm ServiceController . java <nl> ppp ServiceController . java <nl> - import org . apache . dubbo . admin . common . util . ConvertUtil ; <nl> - import java . util . Map ; <nl> 
new file <nl> ppp TestGroovyFunction . java <nl> + package org . apache . jmeter . functions ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import java . util . Collection ; <nl> + import java . util . LinkedList ; <nl> + import org . apache . jmeter . engine . util . CompoundVariable ; <nl> 
mmm MemoryCleaner . java <nl> ppp MemoryCleaner . java <nl> - try { <nl> - SecretKeySpec cipherKey = masterSecret . getEncryptionKey (); <nl> - SecretKeySpec macKey = masterSecret . getMacKey (); <nl> - Field keyField = SecretKeySpec . class . getDeclaredField (" key "); <nl> - keyField . setAccessible ( true ); <nl> 
mmm ExcessiveClassLengthRule . java <nl> ppp ExcessiveClassLengthRule . java <nl> + import static apex . jorje . semantic . symbol . type . AnnotationTypeInfos . IS _ TEST ; <nl> 
mmm BingMapsReverseGeocoder . java <nl> ppp BingMapsReverseGeocoder . java <nl> - import org . traccar . helper . Log ; <nl> - Log . info ( location . toString ()); <nl> 
mmm EtcdTestSupport . java <nl> ppp EtcdTestSupport . java <nl> - public static final String CONTAINER _ IMAGE = " quay . io / coreos / etcd : v2 . 3 . 7 "; <nl> + public static final String CONTAINER _ IMAGE = " quay . io / coreos / etcd : v2 . 3 . 8 "; <nl> 
mmm MockCreator . java <nl> ppp MockCreator . java <nl> - if ( isSpy & & ! isStatic ) { <nl> - } <nl> 
mmm XooPlugin . java <nl> ppp XooPlugin . java <nl> + import org . sonar . api . SonarProduct ; <nl> - MeasureSensor . class , <nl> - DeprecatedResourceApiSensor . class , <nl> + if ( context . getRuntimeProduct () != SonarProduct . SONARLINT ) { <nl> + context . addExtensions ( MeasureSensor . class , <nl> 
mmm TestValueSource . java <nl> ppp TestValueSource . java <nl> + (( LogMergePolicy ) w . getConfig () . getMergePolicy ()) . setMergeFactor ( _ TestUtil . nextInt ( random , 2 , 16 )); <nl> 
new file <nl> ppp SanityCompareAndBranch . java <nl> + package jit . test . jitt . misc ; <nl> + import org . testng . annotations . Test ; <nl> + import org . testng . Assert ; <nl> + @ Test ( groups = { " level . sanity ", " component . jit "}) <nl> + public class SanityCompareAndBranch extends jit . test . jitt . Test { <nl> 
mmm BinarySearch . java <nl> ppp BinarySearch . java <nl> - Random random = ThreadLocalRandom . current (); <nl> + Random r = ThreadLocalRandom . current (); <nl> 
mmm MySQLComInitDbPacketTest . java <nl> ppp MySQLComInitDbPacketTest . java <nl> + public void assertNew () { <nl> + when ( payload . readStringEOF ()) . thenReturn ( ShardingConstant . LOGIC _ SCHEMA _ NAME ); <nl> + MySQLComInitDbPacket actual = new MySQLComInitDbPacket ( payload ); <nl> + assertThat ( actual . getSequenceId (), is ( 0 )); <nl> 
mmm ModelParserTest . java <nl> ppp ModelParserTest . java <nl> - import org . junit . Test ; <nl> + import org . junit . jupiter . api . Test ; <nl> - import static org . junit . Assert . assertNotNull ; <nl> + import static org . junit . jupiter . api . Assertions . assertNotNull ; <nl> 
new file <nl> ppp ServiceApplication . java <nl> + package sample . service ; <nl> + import org . springframework . boot . SpringApplication ; <nl> + import org . springframework . boot . autoconfigure . SpringBootApplication ; <nl> + import org . springframework . cache . annotation . EnableCaching ; <nl> 
mmm CatHomeModule . java <nl> ppp CatHomeModule . java <nl> - import com . dianping . cat . report . alert . app . AppAlert ; <nl> - import com . dianping . cat . report . alert . database . DatabaseAlert ; <nl> - import com . dianping . cat . report . alert . exception . FrontEndExceptionAlert ; <nl> - import com . dianping . cat . report . alert . network . NetworkAlert ; <nl> 
mmm ZoneTests . java <nl> ppp ZoneTests . java <nl> + zone . generator . init ( zone . loadout ); <nl> 
mmm RuleOrchestrationListenerTest . java <nl> ppp RuleOrchestrationListenerTest . java <nl> + import io . shardingsphere . orchestration . reg . api . RegistryCenter ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . mockito . Mock ; <nl> + import org . mockito . junit . MockitoJUnitRunner ; <nl> 
mmm StubMethodTest . java <nl> ppp StubMethodTest . java <nl> + @ Test ( expected = ClassCastException . class ) <nl> + public void whenStubbingInstanceMethodWithWrongReturnTypeThenClasscastExceptionIsThrown () throws Exception { <nl> + String illegalReturnType = " Hello "; <nl> + stubMethod ( Whitebox . getMethod ( SuppressMethod . class , " getFloat "), illegalReturnType ); <nl> 
mmm ViewProviderPlugin . java <nl> ppp ViewProviderPlugin . java <nl> - package springfox . documentation . spi . service ; <nl> + package springfox . documentation . spi . schema ; <nl> 
mmm SimpleClimber . java <nl> ppp SimpleClimber . java <nl> + private final double restartThreshold ; <nl> + private final double initialStepSize ; <nl> + private final int initialSampleSize ; <nl> - this . sampleSize = ( int ) ( settings . percentSample () * settings . maximumSize ()); <nl> - this . stepSize = ( int ) ( settings . percentPivot () * settings . maximumSize ()); <nl> 
mmm XPathRule . java <nl> ppp XPathRule . java <nl> - if (" 1 . 0 " . equals ( version )) { <nl> + if ( XPATH _ 1 _ 0 . equals ( version )) { <nl> 
new file <nl> ppp FindbugsVersionTest . java <nl> + package org . sonar . plugins . findbugs ; <nl> + import static org . hamcrest . MatcherAssert . assertThat ; <nl> + import static org . hamcrest . Matchers . greaterThan ; <nl> + import org . junit . Test ; <nl> + public class FindbugsVersionTest { <nl> + @ Test <nl> 
new file <nl> ppp SimpleApolloConfigDemo . java <nl> + import com . google . common . base . Charsets ; <nl> + import com . ctrip . framework . apollo . Config ; <nl> + import com . ctrip . framework . apollo . ConfigChangeListener ; <nl> + import com . ctrip . framework . apollo . ConfigService ; <nl> + import com . ctrip . framework . apollo . model . ConfigChange ; <nl> 
mmm Provides . java <nl> ppp Provides . java <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 1 . 4 . 2 "; <nl> + public static final String VERSION = " 1 . 5 . 0 "; <nl> - public static final int VERSION _ INT = 001004002 ; <nl> + public static final int VERSION _ INT = 001005000 ; <nl> 
mmm FullscreenHandler . java <nl> ppp FullscreenHandler . java <nl> - import javax . annotation . processing . ProcessingEnvironment ; <nl> - import javax . lang . model . element . Element ; <nl> + import com . sun . codemodel . JFieldRef ; <nl> + import com . sun . codemodel . JInvocation ; <nl> - import com . sun . codemodel . JFieldRef ; <nl> 
new file <nl> ppp EncryptStatement . java <nl> + package org . apache . shardingsphere . shardingjdbc . jdbc . core . statement ; <nl> + public final class EncryptStatement { <nl> + } <nl> 
mmm ElseHandler . java <nl> ppp ElseHandler . java <nl> - if ( ifAST != null ) { <nl> - final DetailAST slist = ifAST . findFirstToken ( TokenTypes . SLIST ); <nl> - if ( slist != null ) { <nl> - final DetailAST lcurly = slist . getLastChild (); <nl> - if ( lcurly != null <nl> - & & lcurly . getLineNo () == getMainAst () . getLineNo ()) { <nl> 
mmm MustacheViewRenderer . java <nl> ppp MustacheViewRenderer . java <nl> - import java . util . Optional ; <nl> - private boolean useCache ; <nl> - return createNewMustacheFactory ( key ); <nl> + return new DefaultMustacheFactory ( new PerClassMustacheResolver ( key )); <nl> - final MustacheFactory mustacheFactory = useCache ? factories . get ( view . getClass ()) : createNewMustacheFactory ( view . getClass ()); <nl> 
mmm Version . java <nl> ppp Version . java <nl> - String PLUGIN _ VERSION = " 0 . 24 "; <nl> + String PLUGIN _ VERSION = " 0 . 25 "; <nl> 
new file <nl> ppp SemgrexDemo . java <nl> + package edu . stanford . nlp . semgraph . semgrex . demo ; <nl> + import edu . stanford . nlp . parser . lexparser . TreebankLangParserParams ; <nl> + import edu . stanford . nlp . parser . lexparser . EnglishTreebankParserParams ; <nl> + import edu . stanford . nlp . semgraph . SemanticGraph ; <nl> 
mmm GreenLightningHttpServer . java <nl> ppp GreenLightningHttpServer . java <nl> - private HttpServerConfiguration serverConfiguration ; <nl> - private ApplicationContext applicationContext ; <nl> + private final HttpServerConfiguration serverConfiguration ; <nl> + private final ApplicationContext applicationContext ; <nl> 
mmm Application . java <nl> ppp Application . java <nl> + private DataSource dataSource ; <nl> - return new DataSourceTransactionManager ( dataSource ()); <nl> + return new DataSourceTransactionManager ( dataSource ); <nl> 
new file <nl> ppp Issue1683 . java <nl> + package com . alibaba . json . bvt . issue _ 1600 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . annotation . JSONType ; <nl> + import com . alibaba . fastjson . parser . Feature ; <nl> + import junit . framework . TestCase ; <nl> 
mmm DefaultBroadcasterCache . java <nl> ppp DefaultBroadcasterCache . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger logger = LoggerFactory . getLogger ( DefaultBroadcasterCache . class ); <nl> + logger . trace (" Message {} will be lost ! Please install a proper BroadcasterCache ", e . message ); <nl> 
mmm VERSION . java <nl> ppp VERSION . java <nl> - public final static int RevisionVersion = 15 ; <nl> + public final static int RevisionVersion = 14 ; <nl> 
mmm FooController . java <nl> ppp FooController . java <nl> - import org . baeldung . persistence . service . impl . FooService ; <nl> + import org . baeldung . persistence . service . IFooService ; <nl> - private FooService service ; <nl> + private IFooService service ; <nl> 
mmm EncryptColumnPlaceholder . java <nl> ppp EncryptColumnPlaceholder . java <nl> - return placeholderIndex . isEmpty () ? String . format (" % s % s \" % s \"", columnName , operator . name (), indexValues . get ( 0 )) : String . format (" % s = ?", columnName ); <nl> + return placeholderIndex . isEmpty () ? String . format (" % s = \" % s \"", columnName , indexValues . get ( 0 )) : String . format (" % s = ?", columnName ); <nl> 
mmm TestIdentityManager . java <nl> ppp TestIdentityManager . java <nl> + @ Override <nl> + public long addUnknownDevice ( String uniqueId ) { <nl> + return 1 ; <nl> + } <nl> 
mmm RoutingEngineFactory . java <nl> ppp RoutingEngineFactory . java <nl> - return new StandardRoutingEngine ( shardingRule , shardingTableNames . iterator () . next (), shardingConditions ); <nl> + return new StandardRoutingEngine ( sqlStatement , shardingRule , shardingTableNames . iterator () . next (), shardingConditions ); <nl> 
mmm GoToolchainFactory . java <nl> ppp GoToolchainFactory . java <nl> - if ( platformFactory . getDefaultOs () . equals ( defaultGoPlatform . getGoOs ()) <nl> - & & platformFactory . getDefaultArch () . equals ( defaultGoPlatform . getGoArch ())) { <nl> - goPlatforms = <nl> - FlavorDomain . from ( <nl> - goPlatforms . getName (), <nl> 
mmm ComponentsConfigurator . java <nl> ppp ComponentsConfigurator . java <nl> - if ( isEnv (" dev ") || property (" env ", null ) == null ) { <nl> - . config ( E (" maxSize ") . value ( String . valueOf ( 2 * 1024 * 1024L )))); <nl> - . req ( MessagePathBuilder . class )); <nl> - . req ( MessageCodec . class , " plain - text ")); <nl> 
mmm IncludesArtifactFilter . java <nl> ppp IncludesArtifactFilter . java <nl> + public List < String > getPatterns () <nl> + { <nl> + return patterns ; <nl> + } <nl> 
mmm HttpConfiguration . java <nl> ppp HttpConfiguration . java <nl> - public HttpConfiguration ( Optional < Integer > port , MocoMonitor monitor , MocoConfig [] configs ) { <nl> + protected HttpConfiguration ( final Optional < Integer > port , final MocoMonitor monitor , final MocoConfig [] configs ) { <nl> 
mmm AbstractMaxwellTest . java <nl> ppp AbstractMaxwellTest . java <nl> - return dir + "/ . . / spec / sql "; <nl> + return dir + "/ src / test / resources / sql / schema /"; <nl> - Path p = Paths . get ( System . getProperty (" user . dir ") + "/ . . / spec / rows . sql "); <nl> + Path p = Paths . get ( System . getProperty (" user . dir ") + "/ src / test / resources / sql / rows / rows . sql "); <nl> 
new file <nl> ppp Main . java <nl> + package com . spotify . simple ; <nl> + public class Main { <nl> + public static void main ( String [] args ) { <nl> + System . out . println (" Hello , world !"); <nl> + } <nl> + } <nl> 
mmm JsonParser . java <nl> ppp JsonParser . java <nl> - @ SuppressWarnings (" unchecked ") <nl> 
deleted file <nl> mmm SimpleControllerHandlerAdapterExampleController . java <nl> - package com . baeldung . spring . controller ; <nl> - import javax . servlet . http . HttpServletRequest ; <nl> - import javax . servlet . http . HttpServletResponse ; <nl> - import org . springframework . web . servlet . ModelAndView ; <nl> 
new file <nl> ppp BSPlusPreference . java <nl> + package com . google . zxing . client . android . pref ; <nl> + import android . content . Context ; <nl> + import android . content . Intent ; <nl> + import android . net . Uri ; <nl> + import android . preference . Preference ; <nl> + import android . util . AttributeSet ; <nl> 
mmm QuarkusTestResourceLifecycleManager . java <nl> ppp QuarkusTestResourceLifecycleManager . java <nl> + * < p > <nl> + * Due to the very early execution in the test setup lifecycle , logging does < b > not </ b > <nl> + * work in such a manager . <nl> 
new file <nl> ppp FormSampleApplication . java <nl> + package flowable ; <nl> + import org . springframework . boot . SpringApplication ; <nl> + import org . springframework . boot . autoconfigure . SpringBootApplication ; <nl> + @ SpringBootApplication <nl> + public class FormSampleApplication { <nl> + public static void main ( String [] args ) { <nl> 
mmm ExtraObjectsMethodsForWeb . java <nl> ppp ExtraObjectsMethodsForWeb . java <nl> - import jsinterop . annotations . JsMethod ; <nl> - @ JsMethod <nl> + } <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm ConfigurationFactory . java <nl> ppp ConfigurationFactory . java <nl> - import com . google . common . base . Charsets ; <nl> - import com . google . common . io . Files ; <nl> - import java . io . BufferedReader ; <nl> - final BufferedReader reader = Files . newReader ( file , Charsets . UTF _ 8 ); <nl> 
mmm TestServlet . java <nl> ppp TestServlet . java <nl> - public TestServlet (){ <nl> - new RuntimeException () . printStackTrace (); <nl> - } <nl> 
mmm ExecutionChannelHandler . java <nl> ppp ExecutionChannelHandler . java <nl> - + ") threadpool is exhausted , detail msg :" + t . getMessage (); <nl> + + ") thread pool is exhausted , detail msg :" + t . getMessage (); <nl> - throw new ExecutionException ( message , channel , getClass () + " error when process received event . ", t ); <nl> 
mmm DisplayNameGeneratorDemo . java <nl> ppp DisplayNameGeneratorDemo . java <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> + bundle . initialize ( this ); <nl> 
mmm ForEachMapTest . java <nl> ppp ForEachMapTest . java <nl> - int count = sqlSession . selectOne (" sel _ key _ cols ", mapParam ); <nl> - Assert . assertEquals ( 1 , count ); <nl> + Integer count = sqlSession . selectOne (" sel _ key _ cols ", mapParam ); <nl> + Assert . assertEquals ( Integer . valueOf ( 1 ), count ); <nl> 
mmm Response . java <nl> ppp Response . java <nl> - import com . wordnik . swagger . models . Model ; <nl> - import com . wordnik . swagger . models . properties . Property ; <nl> + import java . util . HashMap ; <nl> + import java . util . LinkedHashMap ; <nl> + import java . util . Map ; <nl> - import java . util . *; <nl> 
mmm CanvasTransformerBuilder . java <nl> ppp CanvasTransformerBuilder . java <nl> - public class CanvasTranformerBuilder { <nl> + public class CanvasTransformerBuilder { <nl> 
mmm LambdaClassesTest . java <nl> ppp LambdaClassesTest . java <nl> - assertThat ( getDeclaredMethodNames ( HasLambdaBody . class ), is ( ImmutableSet . of (" lambda $ main $ 0 ", " main "))); <nl> + assertThat ( getDeclaredMethodNames ( HasLambdaBody . class ), containsInAnyOrder ( startsWith (" lambda $ main $"), equalTo (" main "))); <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> - server . setBossThreadNum ( cpuNum + 1 ); <nl> + server . setBossThreadNum ( cpuNum + 4 ); <nl> 
new file <nl> ppp CamelAs2Test . java <nl> + package org . apache . camel . itest . karaf ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . ops4j . pax . exam . junit . PaxExam ; <nl> + @ RunWith ( PaxExam . class ) <nl> + public class CamelAs2Test extends BaseKarafTest { <nl> 
mmm ZookeeperSaver . java <nl> ppp ZookeeperSaver . java <nl> + marshaller . setProperty ( Marshaller . JAXB _ FRAGMENT , Boolean . TRUE ); <nl> - String . format ("\ n <! DOCTYPE mycat : % 1 $ s SYSTEM \" % 1 $ s . dtd \">", dtdName )); <nl> + String . format ("<! DOCTYPE mycat : % 1 $ s SYSTEM \" % 1 $ s . dtd \">", dtdName )); <nl> 
new file <nl> ppp TomcatCustomizer . java <nl> + package com . techempower . spring ; <nl> + import org . apache . catalina . connector . Connector ; <nl> + import org . apache . coyote . AbstractProtocol ; <nl> + import org . apache . coyote . ProtocolHandler ; <nl> + import org . springframework . beans . factory . annotation . Value ; <nl> 
mmm TitanHBaseInputFormat . java <nl> ppp TitanHBaseInputFormat . java <nl> - config . set (" hbase . mapreduce . scan . column . family ", GraphDatabaseConfiguration . STORAGE _ EDGESTORE _ NAME ); <nl> + config . set ( TableInputFormat . SCAN _ COLUMN _ FAMILY , GraphDatabaseConfiguration . STORAGE _ EDGESTORE _ NAME ); <nl> 
mmm SectionsComponentProcessor . java <nl> ppp SectionsComponentProcessor . java <nl> + BuilderGenerator . generate ( listSpecHelper . getSpecModel ()) <nl> + . addToTypeSpec ( listSpecHelper . getTypeSpec ()); <nl> - BuilderGenerator . generate ( listSpecHelper . getSpecModel ()) <nl> - . addToTypeSpec ( listSpecHelper . getTypeSpec ()); <nl> 
mmm DQLMergeEngine . java <nl> ppp DQLMergeEngine . java <nl> - private final List < QueryResult > queryResults ; <nl> + private final List < QueryResult > queryResults ; <nl> - this . queryResults = getQueryResults ( queryResults ); <nl> + this . queryResults = getQueryResults ( queryResults ); <nl> 
mmm AsyncDataFetcher . java <nl> ppp AsyncDataFetcher . java <nl> + * @ param < T > the type of data <nl> + * @ param < T > the type of data <nl> 
mmm RabbitConnectionFactoryConfig . java <nl> ppp RabbitConnectionFactoryConfig . java <nl> - import io . micronaut . context . annotation . Requires ; <nl> - import javax . inject . Singleton ; <nl> - @ Singleton <nl> - @ Requires ( classes = { ConnectionFactory . class }) <nl> 
mmm OConstants . java <nl> ppp OConstants . java <nl> - public static final String ORIENT _ VERSION = " 2 . 2 . 0 - beta2 "; <nl> + public static final String ORIENT _ VERSION = " 2 . 2 . 0 - SNAPSHOT "; <nl> 
mmm RemoveOracle . java <nl> ppp RemoveOracle . java <nl> - public class RemoveOracle { <nl> + import com . oracle . svm . core . annotate . Delete ; <nl> + import com . oracle . svm . core . annotate . TargetClass ; <nl> + @ TargetClass ( className = " org . hibernate . dialect . Oracle8iDialect ") <nl> + @ Delete <nl> 
mmm StandardOptions . java <nl> ppp StandardOptions . java <nl> 
new file <nl> ppp VariableResolutionTest . java <nl> + package com . github . javaparser . symbolsolver . resolution ; <nl> + import com . github . javaparser . ast . CompilationUnit ; <nl> + import com . github . javaparser . ast . body . ClassOrInterfaceDeclaration ; <nl> + import com . github . javaparser . ast . body . MethodDeclaration ; <nl> 
mmm RedissonLockEntry . java <nl> ppp RedissonLockEntry . java <nl> - this . latch = new Semaphore ( 1 ); <nl> + this . latch = new Semaphore ( 0 ); <nl> 
mmm StrictStubbingE2ETest . java <nl> ppp StrictStubbingE2ETest . java <nl> - import org . junit . Ignore ; <nl> + JUnitCore junit = new JUnitCore (); <nl> - JUnitCore junit = new JUnitCore (); <nl> - JUnitCore junit = new JUnitCore (); <nl> - @ Test public void prevents _ multiple _ listeners _ in _ the _ same _ thread () { <nl> 
new file <nl> ppp ShadowSpannableStringInternal . java <nl> + package org . robolectric . shadows ; <nl> + import org . robolectric . Robolectric ; <nl> + import org . robolectric . internal . Implementation ; <nl> + import org . robolectric . internal . Implements ; <nl> + import java . util . ArrayList ; <nl> 
mmm ClassLoaderStrategy . java <nl> ppp ClassLoaderStrategy . java <nl> - class Instance { <nl> + class Implementation { <nl> - Instance . classLoaderStrategy = classLoaderStrategy ; <nl> + Implementation . classLoaderStrategy = classLoaderStrategy ; <nl> - return Instance . classLoaderStrategy ; <nl> + return Implementation . classLoaderStrategy ; <nl> 
new file <nl> ppp AaptManager . java <nl> + package brut . util ; <nl> + import brut . common . BrutException ; <nl> + import java . io . File ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + public class AaptManager { <nl> + public static File getAppt2 () throws BrutException { <nl> 
mmm TitanGraphConfiguration . java <nl> ppp TitanGraphConfiguration . java <nl> - if ( titanConfig . getString (" storage . backend ") . equals (" local ") & & location . trim () . length () > 0 ) { <nl> + if ( titanConfig . getString (" storage . backend ") . equals (" berkeleyje ") & & location . trim () . length () > 0 ) { <nl> 
mmm AvoidLogicInTriggerRule . java <nl> ppp AvoidLogicInTriggerRule . java <nl> + import java . util . List ; <nl> - import net . sourceforge . pmd . lang . apex . ast . ApexNode ; <nl> - import net . sourceforge . pmd . lang . ast . Node ; <nl> - public Object visit ( ASTBlockStatement node , Object data ) { <nl> 
mmm MaxQueryDepthInstrumentation . java <nl> ppp MaxQueryDepthInstrumentation . java <nl> + import static graphql . execution . instrumentation . SimpleInstrumentationContext . *; <nl> - return SimpleInstrumentationContext . whenCompleted (( errors , throwable ) - > { <nl> + return whenCompleted (( errors , throwable ) - > { <nl> 

mmm PrettyPrinter . java <nl> ppp PrettyPrinter . java <nl> - import org . jooq . conf . Settings ; <nl> + import org . jooq . conf . SettingsTools ; <nl> - new Settings () . withRenderFormatted ( true )); <nl> + SettingsTools . clone ( ctx . getSettings ()) . withRenderFormatted ( true )); <nl> 
mmm ScriptDumperTest . java <nl> ppp ScriptDumperTest . java <nl> + import java . nio . charset . Charset ; <nl> - Files . write ( contents , new java . io . File ( outDir , archive . getArchiveId () + " . script ")); <nl> + String str = gson . toJson ( script ); <nl> + Files . write ( str , new java . io . File ( outDir , archive . getArchiveId () + " . script "), Charset . defaultCharset ()); <nl> 
mmm CallableImporter . java <nl> ppp CallableImporter . java <nl> - success = result . getType () == ImportResult . ResultType . OK ; <nl> - if ( success ) { <nl> - result = result . copyWithCounts ( data . getCounts ()); <nl> - } <nl> - if (! success || ! errors . isEmpty ()) { <nl> + success = result . getType () == ImportResult . ResultType . OK & & errors . isEmpty (); <nl> 
mmm CassandraTicketRegistryConfiguration . java <nl> ppp CassandraTicketRegistryConfiguration . java <nl> - @ Qualifier (" ticketSerializationManager ;") <nl> + @ Qualifier (" ticketSerializationManager ") <nl> 
new file <nl> ppp EncryptColumnRuleConfiguration . java <nl> + package org . apache . shardingsphere . api . config . encryptor ; <nl> + import lombok . RequiredArgsConstructor ; <nl> + @ RequiredArgsConstructor <nl> + public final class EncryptColumnRuleConfiguration { <nl> + private final String plainColumn ; <nl> 
mmm Binary . java <nl> ppp Binary . java <nl> + public Binary ( byte [] data ){ <nl> + this (( byte ) 0 , data ); <nl> + } <nl> 
mmm ShadowService . java <nl> ppp ShadowService . java <nl> + foregroundStopped = false ; <nl> - } <nl> + } <nl> 
mmm ShlwapiTest . java <nl> ppp ShlwapiTest . java <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> - assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ("\\\\?\\ UNC \\ path1 \\ path2 ")); <nl> - assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ("\\\\?\\ UNC \\ path1 ")); <nl> - assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ("\\\\?\\ UNC \\")); <nl> 
mmm RoleInfo . java <nl> ppp RoleInfo . java <nl> 
mmm SQLExecuteCallback . java <nl> ppp SQLExecuteCallback . java <nl> - System . err . println ("!!!!"); <nl> - System . err . println ( statementExecuteUnit . getStatement ()); <nl> - System . err . println ( statementExecuteUnit . getStatement () . getConnection ()); <nl> - System . err . println ( statementExecuteUnit . getStatement () . getConnection () . getMetaData ()); <nl> 
mmm APICrumbExclusion . java <nl> ppp APICrumbExclusion . java <nl> - package io . jenkins . blueocean ; <nl> + package io . jenkins . blueocean . rest ; <nl> + import io . jenkins . blueocean . RootRoutable ; <nl> 
mmm LazyUfsBlockLocationCache . java <nl> ppp LazyUfsBlockLocationCache . java <nl> + import javax . annotation . Nullable ; <nl> 
mmm AndroidInstrumentationTestDescription . java <nl> ppp AndroidInstrumentationTestDescription . java <nl> - import com . facebook . buck . rules . AbstractDescriptionArg ; <nl> + import com . facebook . buck . rules . CommonDescriptionArg ; <nl> - import com . facebook . infer . annotation . SuppressFieldNotInitialized ; <nl> 
mmm LoginActivity . java <nl> ppp LoginActivity . java <nl> + import android . content . Intent ; <nl> + import android . widget . Button ; <nl> + import android . widget . TextView ; <nl> + import com . kickstarter . models . User ; <nl> + import com . kickstarter . services . ApiResponses . AccessTokenEnvelope ; <nl> 
new file <nl> ppp LonelyPixelI . java <nl> + package com . stevesun . solutions ; <nl> + public class LonelyPixelI { <nl> + public int findLonelyPixel ( char [][] picture ) { <nl> + int m = picture . length ; <nl> + int n = picture [ 0 ] . length ; <nl> + int count = 0 ; <nl> + for ( int i = 0 ; i < m ; i + + ) { <nl> 
mmm AbstractLiquibaseMojoTest . java <nl> ppp AbstractLiquibaseMojoTest . java <nl> - PlexusConfiguration config = extractPluginConfiguration (" liquibase - plugin ", <nl> + PlexusConfiguration config = extractPluginConfiguration (" dbmanul - plugin ", <nl> 
mmm AsyncToSyncInvoker . java <nl> ppp AsyncToSyncInvoker . java <nl> - throw new RpcException (" Interrupted unexpectedly while waiting for remoting result to return ! method : " + invocation . getMethodName () + ", provider : " + getUrl () + ", cause : " + e . getMessage (), e ); <nl> + throw new RpcException (" Interrupted unexpectedly while waiting for remote result to return ! method : " + <nl> 
mmm DownloadTaskTest . java <nl> ppp DownloadTaskTest . java <nl> - DownloadTask instance = new DownloadTask ( cve , processExecutor , cveDB , Settings . getInstance ());; <nl> + DownloadTask instance = new DownloadTask ( cve , processExecutor , cveDB , Settings . getInstance ()); <nl> 
new file <nl> ppp TestOpenSSL . java <nl> + package org . openj9 . test . openssl ; <nl> + import org . testng . Assert ; <nl> + import org . testng . annotations . Test ; <nl> + @ Test ( groups ={ " level . sanity " }) <nl> + public class TestOpenSSL { <nl> + @ Test ( expectedExceptions = UnsatisfiedLinkError . class ) <nl> 
mmm ReactiveDelegatingContract . java <nl> ppp ReactiveDelegatingContract . java <nl> - import java . util . Arrays ; <nl> - Type raw = parameterizedType . getRawType (); <nl> - return Arrays . asList ((( Class ) raw ) . getInterfaces ()) <nl> - . contains ( Publisher . class ); <nl> + Class <?> raw = ( Class <?>) parameterizedType . getRawType (); <nl> 
new file <nl> ppp ListCollections . java <nl> + package com . example . rekognition ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . rekognition . RekognitionClient ; <nl> + import software . amazon . awssdk . services . rekognition . model . ListCollectionsRequest ; <nl> 
mmm ExternalEvaluate . java <nl> ppp ExternalEvaluate . java <nl> - package edu . stanford . nlp . sentiment ; <nl> - import edu . stanford . nlp . util . logging . Redwood ; <nl> + package edu . stanford . nlp . sentiment ; <nl> + import java . util . Iterator ; <nl> + import java . util . List ; <nl> - import java . util . Iterator ; <nl> 
mmm NavisProtocolDecoderTest . java <nl> ppp NavisProtocolDecoderTest . java <nl> + verifyPositions ( decoder , binary ( ByteOrder . LITTLE _ ENDIAN , <nl> + " 404e544301000000000000005a002e6c2a3e410125d7540100001512233a0b0a0f08026300000a000b000b00020000000000000000000c12233b0b0a0f03fd6d3f0fde603f00000000ba0051e0c845000000000000000000000000000000000000000000000080808080 ")); <nl> 
new file <nl> ppp JdbcDriverLoadingUnitTest . java <nl> + package com . baeldung . jdbc ; <nl> + import static org . junit . Assert . *; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import java . sql . Driver ; <nl> + import java . sql . DriverManager ; <nl> + import java . sql . SQLException ; <nl> 
mmm MyResource . java <nl> ppp MyResource . java <nl> - private String [] response = { " apple ", " banana ", " mango " }; <nl> + private final String [] response = { " apple ", " banana ", " mango " }; <nl> 
mmm ExceptionInChainedStubException . java <nl> ppp ExceptionInChainedStubException . java <nl> -  <nl> -  <nl> -  <nl> -  <nl> -  <nl> 
mmm EmailSettings . java <nl> ppp EmailSettings . java <nl> 
mmm RibbonExamples . java <nl> ppp RibbonExamples . java <nl> + import com . netflix . hystrix . HystrixCommandProperties ; <nl> + import com . netflix . hystrix . HystrixCommandProperties . Setter ; <nl> + . withHystrixCollapserPropertiesDefaults ( HystrixCommandProperties . Setter () . withExecutionIsolationThreadTimeoutInMilliseconds ( 2000 )) <nl> 
mmm OracleResourceTest . java <nl> ppp OracleResourceTest . java <nl> - exec _ test (" bvt / parser / oracle - 17 . txt "); <nl> + for ( int i = 0 ; i <= 53 ; + + i ) { <nl> + exec _ test (" bvt / parser / oracle - " + i + " . txt "); <nl> + } <nl> 
mmm MoreExecutors . java <nl> ppp MoreExecutors . java <nl> - return Executors . newFixedThreadPool ( threadCount , new NamedThreadFactory ( threadName )); <nl> + return new ThreadPoolExecutor ( <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - String VERSION = " 2 . 0 . 3 "; <nl> + String VERSION = " 2 . 0 . 4 "; <nl> - int VERSION _ INT = 2000003 ; <nl> + int VERSION _ INT = 2000004 ; <nl> 
mmm NodeThreadPoolsExpression . java <nl> ppp NodeThreadPoolsExpression . java <nl> - import io . crate . monitor . ThreadPools ; <nl> + import io . crate . monitor . ThreadPools ; <nl> - return new HashMap < String , Object >() { <nl> - { <nl> - put ( POOL _ NAME , BytesRefs . toBytesRef ( input . getKey ())); <nl> 
mmm JPAFunctionalityTest . java <nl> ppp JPAFunctionalityTest . java <nl> 
mmm StartupConsistencyCheck . java <nl> ppp StartupConsistencyCheck . java <nl> - return new StartupConsistencyCheck ( Status . DISABLED , new ArrayList < AlluxioURI >()); <nl> + return new StartupConsistencyCheck ( Status . DISABLED , new ArrayList <>()); <nl> 
mmm PalindromePartition . java <nl> ppp PalindromePartition . java <nl> - import com . interview . recursion . StringPermutation ; <nl> 
new file <nl> ppp Bug _ for _ yanpei2 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import junit . framework . TestCase ; <nl> + public class Bug _ for _ yanpei2 extends TestCase { <nl> 
mmm XmlAssertionTest . java <nl> ppp XmlAssertionTest . java <nl> - private final String invalidXml = "< note >< to > Tove </ to >< from > Jani </ from >< heading > Reminder </ heading >< body > Don ' t forget me this weekend !</ body ></ note1 >"; <nl> - private final String validXml = "< note >< to > Tove </ to >< from > Jani </ from >< heading > Reminder </ heading >< body > Don ' t forget me this weekend !</ body ></ note >"; <nl> 
mmm SearchFilter . java <nl> ppp SearchFilter . java <nl> - filters . put ( filter . fieldName , filter ); <nl> + filters . put ( entry . getKey (), filter ); <nl> 
mmm StarWishesHelper . java <nl> ppp StarWishesHelper . java <nl> - double intervalTimes = Math . pow ( tipTimes + 1 , tipTimes ); <nl> + double intervalTimes = Math . pow ( tipTimes + 2 , tipTimes + 1 ); <nl> 
mmm ExpandableItemAdapter . java <nl> ppp ExpandableItemAdapter . java <nl> - addItemType ( TYPE _ PERSON , R . layout . item _ text _ view ); <nl> + addItemType ( TYPE _ PERSON , R . layout . item _ expandable _ lv2 ); <nl> 
new file <nl> ppp AntiCollisionHashMapTest . java <nl> + package com . alibaba . json . bvt . util ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import com . alibaba . fastjson . util . AntiCollisionHashMap ; <nl> + import junit . framework . TestCase ; <nl> + import java . io . ByteArrayInputStream ; <nl> 
mmm TsurgeonPattern . java <nl> ppp TsurgeonPattern . java <nl> - import edu . stanford . nlp . util . Generics ; <nl> 
mmm SPI . java <nl> ppp SPI . java <nl> - * Use < code > Protocol </ code > as an example , its configuration file ' META - INF / dubbo / com . xxx . Protocol ' is changes from : < br /> <nl> + * Use < code > Protocol </ code > as an example , its configuration file ' META - INF / dubbo / com . xxx . Protocol ' is changed from : < br /> <nl> 
mmm Secured . java <nl> ppp Secured . java <nl> + import java . lang . annotation . Documented ; <nl> + import java . lang . annotation . Inherited ; <nl> + @ Inherited <nl> + @ Documented <nl> 
new file <nl> ppp CreateDeliveryStream . java <nl> + package com . example . firehose ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . firehose . FirehoseClient ; <nl> + import software . amazon . awssdk . services . firehose . model . FirehoseException ; <nl> 
new file <nl> ppp MySqlSelectTest _ 315 _ issue _ 3960 . java <nl> + package com . alibaba . druid . bvt . sql . mysql . select ; <nl> + import com . alibaba . druid . DbType ; <nl> + import com . alibaba . druid . sql . MysqlTest ; <nl> + import com . alibaba . druid . sql . SQLUtils ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> 
mmm AnnotationDescriptionForLoadedAnnotationTest . java <nl> ppp AnnotationDescriptionForLoadedAnnotationTest . java <nl> + import java . net . URL ; <nl> + import java . net . URLClassLoader ; <nl> + @ Test ( expected = IllegalArgumentException . class ) <nl> + public void testLoadAnnotationWrongClassLoader () throws Exception { <nl> 
mmm AbstractProcessTask . java <nl> ppp AbstractProcessTask . java <nl> - private Collection getFiles () { <nl> + protected Collection getFiles () { <nl> 
mmm MemoryHandler . java <nl> ppp MemoryHandler . java <nl> - inner . publish ( record ); <nl> + try { <nl> + inner . publish ( record ); <nl> + } catch ( Exception e ) { <nl> + } <nl> 
mmm GradleBuildFileTest . java <nl> ppp GradleBuildFileTest . java <nl> - assertThat ( depsString ) . contains (" io . quarkus : quarkus - jsonp : jar : 999 - SNAPSHOT ", <nl> - " io . quarkus : quarkus - jsonb : jar : 999 - SNAPSHOT ", " io . quarkus : quarkus - resteasy : jar : 999 - SNAPSHOT "); <nl> 
mmm NettyServerWebSocketBroadcaster . java <nl> ppp NettyServerWebSocketBroadcaster . java <nl> + import io . micronaut . context . annotation . Requires ; <nl> + @ Requires ( beans = WebSocketSessionRepository . class ) <nl> 
mmm JdbcCamelCodec . java <nl> ppp JdbcCamelCodec . java <nl> + import java . io . InputStream ; <nl> + import java . io . OutputStream ; <nl> + ByteArrayOutputStream bytesOut = new ByteArrayOutputStream (); <nl> + marshallExchange ( camelContext , exchange , allowSerializedHeaders , bytesOut ); <nl> + return bytesOut . toByteArray (); <nl> 
new file <nl> ppp ReconstructItinerary . java <nl> + package com . interview . recursion ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + public class ReconstructItinerary { <nl> + public List < String > findItinerary ( String [][] tickets ) { <nl> 
mmm RunSketchAsAppletShortcut . java <nl> ppp RunSketchAsAppletShortcut . java <nl> - if ( proj . hasNature (" processing . plugin . core . sketchNature ")){ <nl> + if ( proj . hasNature (" processing . plugin . core . sketchNature ")) <nl> - } else { <nl> + else <nl> - } <nl> +  <nl> - if ( file != null ){ <nl> 
deleted file <nl> mmm QueryCommandOptions . java <nl> - package com . facebook . buck . cli ; <nl> - import com . google . common . collect . Lists ; <nl> - import org . kohsuke . args4j . Argument ; <nl> - import java . util . List ; <nl> - public class QueryCommandOptions extends AbstractCommandOptions { <nl> 
mmm ShardingMasterSlaveConfigurationPrecise . java <nl> ppp ShardingMasterSlaveConfigurationPrecise . java <nl> + import io . shardingsphere . api . config . KeyGeneratorConfiguration ; <nl> - result . setKeyGeneratorColumnName (" order _ id "); <nl> + result . setKeyGeneratorConfig ( getKeyGeneratorConfiguration ()); <nl> 
mmm SecureServletTest . java <nl> ppp SecureServletTest . java <nl> - public void testWithCorrectCredentials () throws Exception { <nl> + public void testGetWithCorrectCredentials () throws Exception { <nl> - public void testWithIncorrectCredentials () throws Exception { <nl> + public void testGetWithIncorrectCredentials () throws Exception { <nl> 

mmm MainWebAppInitializer . java <nl> ppp MainWebAppInitializer . java <nl> - public class AppInitializer implements WebApplicationInitializer { <nl> + public class MainWebAppInitializer implements WebApplicationInitializer { <nl> 
mmm Metric . java <nl> ppp Metric . java <nl> 
mmm ApiGeneratorUtils . java <nl> ppp ApiGeneratorUtils . java <nl> + import org . zaproxy . zap . extension . authorization . AuthorizationAPI ; <nl> + imps . add ( new AuthorizationAPI ()); <nl> 
mmm MatcherTest . java <nl> ppp MatcherTest . java <nl> - Arrays . asList ( new Failure ( Description . EMPTY , new Error (" cheese ")), <nl> - new Failure ( Description . EMPTY , new Error (" mustard ")))); <nl> + Arrays . asList ( failure (" cheese "), failure (" mustard "))); <nl> + private static Failure failure ( String string ) { <nl> 
mmm LiquibaseGenerateChangeLogMojo . java <nl> ppp LiquibaseGenerateChangeLogMojo . java <nl> - StringUtils . trimToNull ( changeSetAuthor ), StringUtils . trimToNull ( changeSetContext ), StringUtils . trimToNull ( dataDir ), new DiffOutputControl ()); <nl> + StringUtils . trimToNull ( changeSetAuthor ), StringUtils . trimToNull ( changeSetContext ), StringUtils . trimToNull ( dataDir ), new DiffOutputControl ( outputDefaultCatalog , outputDefaultSchema , true )); <nl> 
new file <nl> ppp ComboBoxItem . java <nl> + package org . zaproxy . zap . view ; <nl> + public class ComboBoxItem < E > { <nl> + private E value ; <nl> + private String label ; <nl> + public ComboBoxItem ( E value , String label ) { <nl> + super (); <nl> + this . value = value ; <nl> + this . label = label ; <nl> 
new file <nl> ppp BlockInStreamTest . java <nl> + package alluxio . client . block . stream ; <nl> + import static org . mockito . Matchers . any ; <nl> + import static org . mockito . Matchers . eq ; <nl> + import static org . mockito . Mockito . mock ; <nl> + import static org . mockito . Mockito . when ; <nl> 
mmm ComplexRoutingEngine . java <nl> ppp ComplexRoutingEngine . java <nl> - if (! shardingRule . findBroadcastTableRule ( each ) . isPresent () & & ! bindingTableNames . contains ( each )) { <nl> + if (! bindingTableNames . contains ( each )) { <nl> 
new file <nl> ppp DoubleLinkList . java <nl> + package com . interview . linklist ; <nl> + public class DoubleLinkList { <nl> + public Node addNode ( Node head , int data ){ <nl> + if ( head == null ){ <nl> + head = Node . newNode ( data ); <nl> + return head ; <nl> + } <nl> + Node newNode = Node . newNode ( data ); <nl> 
mmm TriggerResult . java <nl> ppp TriggerResult . java <nl> + * <nl> + * < p > If a {@ link Trigger } returns {@ link # FIRE } or {@ link # FIRE _ AND _ PURGE } but the window does not <nl> + * contain any data the window function will not be invoked , i . e . no data will be produced for the <nl> + * window . <nl> 
mmm RandomString . java <nl> ppp RandomString . java <nl> - throw new AssertionError (" Instantiating utility class " + getClass ()); <nl> + throw new AssertionError (" Instantiating utility class " + getClass ()); <nl> 
mmm World . java <nl> ppp World . java <nl> + public Integer getId () { <nl> + return id ; <nl> + } <nl> 
mmm DrawHelper . java <nl> ppp DrawHelper . java <nl> - import android . util . Log ; <nl> 
mmm Axe . java <nl> ppp Axe . java <nl> + import static net . runelite . api . AnimationID . WOODCUTTING _ GILDED ; <nl> + import static net . runelite . api . ItemID . GILDED _ AXE ; <nl> + GILDED ( WOODCUTTING _ GILDED , GILDED _ AXE ), <nl> 
mmm PutMetricAlarm . java <nl> ppp PutMetricAlarm . java <nl> + */ <nl> 
mmm RegisteredServicePublicKeyImplTests . java <nl> ppp RegisteredServicePublicKeyImplTests . java <nl> - import java . io . IOException ; <nl> - public void verifySerializeAX509CertificateCredentialToJson () throws IOException { <nl> + public void verifySerializeAX509CertificateCredentialToJson () throws Exception { <nl> 
new file <nl> ppp NonStandardPkgIdTest . java <nl> + package brut . androlib . aapt2 ; <nl> + import brut . androlib . *; <nl> + import brut . androlib . res . data . ResTable ; <nl> + import brut . common . BrutException ; <nl> + import brut . directory . ExtFile ; <nl> + import brut . util . OS ; <nl> + import org . junit . AfterClass ; <nl> 
mmm InvalidUseOfMatchersTest . java <nl> ppp InvalidUseOfMatchersTest . java <nl> - import org . junit . runner . RunWith ; <nl> - import org . mockito . Mock ; <nl> - import org . mockito . runners . MockitoJUnitRunner ; <nl> - @ RunWith ( MockitoJUnitRunner . class ) <nl> - @ Mock private IMethods mock ; <nl> 
mmm MathUtilRandomBenchmark . java <nl> ppp MathUtilRandomBenchmark . java <nl> - public long randomInt _ with _ Random () { <nl> + public int randomInt _ with _ Random () { <nl> - public long randomInt _ with _ ThreadLocalRandom () { <nl> + public int randomInt _ with _ ThreadLocalRandom () { <nl> 
mmm ShapeThemingDemoFragment . java <nl> ppp ShapeThemingDemoFragment . java <nl> + import com . google . android . material . button . MaterialButton ; <nl> + import com . google . android . material . dialog . MaterialAlertDialogBuilder ; <nl> + import android . view . View . OnClickListener ; <nl> + MaterialButton materialButton = container . findViewById ( R . id . material _ button ); <nl> 
mmm SetParams . java <nl> ppp SetParams . java <nl> + if ( contains ( NX )) { <nl> + byteParams . add ( SafeEncoder . encode ( NX )); <nl> + } <nl> + if ( contains ( XX )) { <nl> + byteParams . add ( SafeEncoder . encode ( XX )); <nl> + } <nl> - if ( contains ( NX )) { <nl> - byteParams . add ( SafeEncoder . encode ( NX )); <nl> 
new file <nl> ppp _ 1295 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . Arrays ; <nl> + public class _ 1295 { <nl> + public static class Solution1 { <nl> + public int findNumbers ( int [] nums ) { <nl> + int count = 0 ; <nl> + for ( int num : nums ) { <nl> + if ( String . valueOf ( num ) . length () % 2 == 0 ) { <nl> 
mmm Service . java <nl> ppp Service . java <nl> - public CompletableFuture < World > findWorld () { <nl> - return source . findAsync ( World . class , randomId ()); <nl> + public World findWorld () { <nl> + return source . find ( World . class , randomId ()); <nl> - public CompletableFuture < World []> queryWorld (@ RestParam ( name = " queries ") int count ) { <nl> 
mmm LatencyContainerDeserializer . java <nl> ppp LatencyContainerDeserializer . java <nl> - throw ctxt . mappingException ( TextContainer . class , currentToken ); <nl> + throw ctxt . mappingException ( LatencyContainer . class , currentToken ); <nl> 
new file <nl> ppp DeleteFunction . java <nl> + package com . example . lambda . demo ; <nl> + import software . amazon . awssdk . services . lambda . LambdaClient ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . lambda . model . InvokeResponse ; <nl> 
mmm BaseEntity . java <nl> ppp BaseEntity . java <nl> + import java . io . Serializable ; <nl> - public class BaseEntity implements Serializable { <nl> + public class BaseEntity { <nl> 
mmm CORSFilter . java <nl> ppp CORSFilter . java <nl> 
mmm UseUtilityClassRule . java <nl> ppp UseUtilityClassRule . java <nl> - Node n = p . jjtGetChild ( 0 ); <nl> - if ( n instanceof ASTAnnotation ) { <nl> - n = p . jjtGetChild ( 1 ); <nl> - } <nl> + Node n = skipAnnotations ( p ); <nl> + private Node skipAnnotations ( Node p ) { <nl> + int index = 0 ; <nl> + Node n = p . jjtGetChild ( index + + ); <nl> 
mmm LoadingDialog . java <nl> ppp LoadingDialog . java <nl> + import android . graphics . PorterDuff ; <nl> + import android . widget . ProgressBar ; <nl> + ProgressBar progressBar = ( ProgressBar ) v . findViewById ( R . id . loadingBar ); <nl> + progressBar . getIndeterminateDrawable () . setColorFilter ( <nl> 
mmm MainActivity . java <nl> ppp MainActivity . java <nl> + import com . crashlytics . android . Crashlytics ; <nl> + import com . crashlytics . android . ndk . CrashlyticsNdk ; <nl> + import io . fabric . sdk . android . Fabric ; <nl> + Fabric . with ( this , new Crashlytics (), new CrashlyticsNdk ()); <nl> 
mmm RuptelaProtocolDecoderTest . java <nl> ppp RuptelaProtocolDecoderTest . java <nl> + verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertHexString ( <nl> + " 00560003116e7438a7a50100015565cbb9000020fd21300f113f4600005f000600090d090805011b13cf00020003001c012029ad00041d31dd1e0ebd160000c50000047200000000d0000000004100016a2a960000a5a300c9ee ")))); <nl> 
mmm TrackSelectorResult . java <nl> ppp TrackSelectorResult . java <nl> + if ( other == null ) { <nl> + return false ; <nl> + } <nl> - * @ param other The other {@ link TrackSelectorResult } . May be null . <nl> + * @ param other The other {@ link TrackSelectorResult } . May be null , in which case {@ code false } <nl> 
mmm StaticInitializerExampleTest . java <nl> ppp StaticInitializerExampleTest . java <nl> - @ Test <nl> - public void testSupressStaticInitializer () throws Exception { <nl> - assertNull (" Should be null because the static initializer should be suppressed ", StaticInitializerExample . getMySet ()); <nl> 
mmm WorldDatabaseController . java <nl> ppp WorldDatabaseController . java <nl> - final Random random = ThreadLocalRandom . current (); <nl> - return this . worldRepository . findOne ( random . nextInt ( DB _ ROWS ) + 1 ); <nl> + return this . worldRepository . findOne ( ThreadLocalRandom . current () . nextInt ( DB _ ROWS ) + 1 ); <nl> 
mmm Scripts . java <nl> ppp Scripts . java <nl> + context . getWrapFactory () . setJavaPrimitiveWrap ( false ); <nl> 
mmm DB2ExceptionSorter . java <nl> ppp DB2ExceptionSorter . java <nl> + String sqlState = e . getSQLState (); <nl> + return true ; <nl> + } <nl> - case - 514 : <nl> + switch ( errorCode ) { <nl> 
mmm TestNgRunner . java <nl> ppp TestNgRunner . java <nl> + private static final String OUTPUT _ DIRECTORY = getTestOutputDirectory (); <nl> + private static String getTestOutputDirectory () { <nl> + try { <nl> + return System . getProperty (" groovy . plugin . testng . output "); <nl> + } catch ( SecurityException ignore ) { <nl> 
mmm ClassNameMBean . java <nl> ppp ClassNameMBean . java <nl> + * @ param < T > The type that this bean represents . <nl> + * <nl> 

mmm UpbitUtils . java <nl> ppp UpbitUtils . java <nl> - private UpbitUtils () {} <nl> 
mmm ImageUploadTaskService . java <nl> ppp ImageUploadTaskService . java <nl> - Log . i ( TAG , " Service starting !"); <nl> + Log . i ( TAG , " Service stopping !"); <nl> 
mmm HttpChunk . java <nl> ppp HttpChunk . java <nl> - static HttpChunk LAST _ CHUNK = new DefaultHttpChunk ( ChannelBuffers . EMPTY _ BUFFER ); <nl> + static HttpChunk LAST _ CHUNK = new HttpChunk () { <nl> + public ChannelBuffer getContent () { <nl> + return ChannelBuffers . EMPTY _ BUFFER ; <nl> + } <nl> 
mmm JsonClass . java <nl> ppp JsonClass . java <nl> 
mmm MainActivity . java <nl> ppp MainActivity . java <nl> + import android . app . AlertDialog ; <nl> + import android . content . DialogInterface ; <nl> - @ OnClick ({ R . id . button _ default , R . id . button _ bold }) <nl> - public void onClickButton () { <nl> + @ OnClick ({ R . id . button _ bold }) <nl> 
mmm VersionCommand . java <nl> ppp VersionCommand . java <nl> + private static String version ; <nl> - public String getVersion () { <nl> - try ( InputStream is = getClass () . getClassLoader () . getResourceAsStream (" vertx - version . txt ")) { <nl> + public static String getVersion () { <nl> + if ( version != null ) { <nl> 
mmm _ 342 . java <nl> ppp _ 342 . java <nl> - public class PowerOfFour { <nl> + public class _ 342 { <nl> 
mmm EndpointIdentificationSocketFactory . java <nl> ppp EndpointIdentificationSocketFactory . java <nl> - private Socket setEndpoint ( Socket socket ) { <nl> + private Socket prepareSocket ( Socket socket ) { <nl> - return setEndpoint ( factory . createSocket ( host , port )); <nl> + return prepareSocket ( factory . createSocket ( host , port )); <nl> 
mmm OCSVTransformerTest . java <nl> ppp OCSVTransformerTest . java <nl> + @ Test <nl> + public void testStringInDblQoutes () throws Exception { <nl> + String cfgJson = "{ source : { content : { value : ' text \ n \" Hello , quotes are here !\"' } }, extractor : { row : {} }, transformers : [{ csv : {} }], loader : { test : {} } }"; <nl> 
mmm BinaryDaoTest . java <nl> ppp BinaryDaoTest . java <nl> - import java . io . FileOutputStream ; <nl> -  <nl> 
new file <nl> ppp HackyDrawerLayout . java <nl> + package uk . co . senab . photoview . sample ; <nl> + import android . content . Context ; <nl> + import android . support . v4 . widget . DrawerLayout ; <nl> + import android . view . MotionEvent ; <nl> + public class HackyDrawerLayout extends DrawerLayout { <nl> 
mmm ServerStatusCommandTest . java <nl> ppp ServerStatusCommandTest . java <nl> - import static org . easymock . EasyMock . expect ; <nl> + import com . facebook . buck . testutil . FakeProjectFilesystem ; <nl> - import org . easymock . EasyMockSupport ; <nl> - public class ServerStatusCommandTest extends EasyMockSupport { <nl> 
new file <nl> ppp InstrumentedNClientConnManager . java <nl> + package com . codahale . metrics . httpasyncclient ; <nl> + import com . codahale . metrics . Gauge ; <nl> + import com . codahale . metrics . MetricRegistry ; <nl> + import static com . codahale . metrics . MetricRegistry . name ; <nl> + import java . util . concurrent . TimeUnit ; <nl> 
mmm OnSubscribeFromQuery . java <nl> ppp OnSubscribeFromQuery . java <nl> + break ; <nl> - return ; <nl> + break ; <nl> 
new file <nl> ppp ImagePerfImageOriginListenerTest . java <nl> + package com . facebook . drawee . backends . pipeline . info . internal ; <nl> + import static org . mockito . Matchers . eq ; <nl> + import static org . mockito . Mockito . mock ; <nl> + import static org . mockito . Mockito . verify ; <nl> 
mmm SpringContextTest . java <nl> ppp SpringContextTest . java <nl> - package org . baeldung ; <nl> + package com . baeldung ; <nl> 
mmm Person . java <nl> ppp Person . java <nl> + import java . util . Objects ; <nl> + @ Override <nl> + public String toString () { <nl> + return " Person {" + <nl> + " firstName ='" + firstName + '\'' + <nl> + ", lastName ='" + lastName + '\'' + <nl> + '}'; <nl> + } <nl> + @ Override <nl> + public boolean equals ( Object o ) { <nl> 
new file <nl> ppp MonoUnitTest . java <nl> + package com . baeldung . mono ; <nl> + import org . junit . Test ; <nl> + import reactor . core . publisher . Mono ; <nl> + import java . time . Duration ; <nl> + import java . time . temporal . ChronoUnit ; <nl> + import java . util . Optional ; <nl> + import static org . junit . Assert . assertEquals ; <nl> 
mmm MainActivity . java <nl> ppp MainActivity . java <nl> - integrator . autoWide (); <nl> 
mmm SampleApplication . java <nl> ppp SampleApplication . java <nl> + import io . undertow . Undertow ; <nl> + import io . undertow . UndertowOptions ; <nl> + import org . xnio . Options ; <nl> + import org . springframework . boot . context . embedded . undertow . UndertowBuilderCustomizer ; <nl> + import org . springframework . boot . context . embedded . undertow . UndertowEmbeddedServletContainerFactory ; <nl> 
mmm BlobPlugin . java <nl> ppp BlobPlugin . java <nl> - import com . google . common . collect . Lists ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> - Collection < Module > modules = Lists . newArrayList (); <nl> - if (! settings . getAsBoolean (" node . client ", false )) { <nl> 
new file <nl> ppp JupiterParamsIntegration . java <nl> + package standalone ; <nl> + import static org . junit . jupiter . api . Assertions . assertEquals ; <nl> + import org . junit . jupiter . params . ParameterizedTest ; <nl> + import org . junit . jupiter . params . provider . ValueSource ; <nl> + class JupiterParamsIntegration { <nl> 
mmm ColumnDefinition . java <nl> ppp ColumnDefinition . java <nl> - private String oldName ; <nl> - private boolean isAdd ; <nl> - public ColumnDefinition ( final String name , final String oldName ) { <nl> - this . name = name ; <nl> - this . oldName = oldName ; <nl> - } <nl> 
mmm OSUtils . java <nl> ppp OSUtils . java <nl> - } else if ( OPERATING _ SYSTEM _ NAME . startsWith (" mac ") || OPERATING _ SYSTEM _ NAME . startsWith (" darwin ")) { <nl> - platform = PlatformEnum . MACOSX ; <nl> 
mmm AbstractResourceAwareSchedulingInfo . java <nl> ppp AbstractResourceAwareSchedulingInfo . java <nl> - return ( rule instanceof NoopBuildRuleWithDeclaredAndExtraDeps ); <nl> + return rule instanceof NoopBuildRuleWithDeclaredAndExtraDeps || rule instanceof NoopBuildRule ; <nl> 
mmm PinotClientRequestServlet . java <nl> ppp PinotClientRequestServlet . java <nl> + import java . io . PrintWriter ; <nl> + resp . setCharacterEncoding (" UTF - 8 "); <nl> + PrintWriter writer = resp . getWriter (); <nl> - resp . setCharacterEncoding (" UTF - 8 "); <nl> - resp . getOutputStream () . print ( jsonString ); <nl> 
mmm MessageViewInfo . java <nl> ppp MessageViewInfo . java <nl> - @ Deprecated <nl> - public MessageViewInfo ( String text , List < AttachmentViewInfo > attachments , Message message ) { <nl> - containers = new ArrayList < MessageViewContainer >(); <nl> - containers . add ( new MessageViewContainer ( text , attachments )); <nl> 
mmm Sha256Hash . java <nl> ppp Sha256Hash . java <nl> + private static final long serialVersionUID = 3778897922647016546L ; <nl> 
mmm TableTokenAssert . java <nl> ppp TableTokenAssert . java <nl> - assertThat ( assertMessage . getFullAssertMessage (" Table tokens left delimiter assertion error : "), actual . getLeftDelimiter (), is ( expected . getLeftDelimiter ())); <nl> - assertThat ( assertMessage . getFullAssertMessage (" Table tokens right delimiter assertion error : "), actual . getRightDelimiter (), is ( expected . getRightDelimiter ())); <nl> 
mmm CoreMapNodePattern . java <nl> ppp CoreMapNodePattern . java <nl> + public static class AttributesEqualMatchChecker < K > implements SequencePattern . NodesMatchChecker < CoreMap > { <nl> + Collection < Class > keys ; <nl> + public AttributesEqualMatchChecker ( Class . . . keys ) { <nl> + this . keys = CollectionUtils . asSet ( keys ); <nl> 
mmm Tracing . java <nl> ppp Tracing . java <nl> - import static com . a . eye . skywalking . util . TraceIdUtil . formatTraceId ; <nl> 
mmm ManagedChannel . java <nl> ppp ManagedChannel . java <nl> + * <nl> + * < p > NOT YET IMPLEMENTED . This method currently behaves identically to shutdown () . <nl> 
mmm SpellingCheckRuleTest . java <nl> ppp SpellingCheckRuleTest . java <nl> - import junit . framework . TestCase ; <nl> + import org . junit . Test ; <nl> + import org . languagetool . AnalyzedSentence ; <nl> + import org . languagetool . TestTools ; <nl> + import org . languagetool . rules . spelling . SpellingCheckRule ; <nl> 
mmm CatHomeModule . java <nl> ppp CatHomeModule . java <nl> - executeAbtestModule ( ctx ); <nl> 
mmm SysdigStatsdLineBuilder . java <nl> ppp SysdigStatsdLineBuilder . java <nl> - return stat == null ? tagsNoStat : tags . computeIfAbsent ( stat , this :: sysdigTag ); <nl> - } <nl> - private String sysdigTag (@ Nullable Statistic stat ) { <nl> + if ( stat == null ) { <nl> + return tagsNoStat ; <nl> + } <nl> 
mmm AppLagartoServletFilter . java <nl> ppp AppLagartoServletFilter . java <nl> + @ Override <nl> + protected boolean acceptActionPath ( HttpServletRequest request , String actionPath ) { <nl> + if ( actionPath . equals ( bundlesManager . getStaplerServletPath ())) { <nl> + return false ; <nl> + } <nl> + return super . acceptActionPath ( request , actionPath ); <nl> 
mmm ScenarioHookTest . java <nl> ppp ScenarioHookTest . java <nl> - Results results = Runner . parallel ( null , Collections . singletonList ( path ), null , <nl> - Collections . singletonList ( new MandatoryTagHook ()), 1 , null ); <nl> + Results results = Runner . path ( path ) . hook ( new MandatoryTagHook ()) . parallel ( 1 ); <nl> 
mmm ReportService . java <nl> ppp ReportService . java <nl> + import io . metersphere . base . domain . LoadTestReportWithBLOBs ; <nl> - LoadTestReport loadTestReport = loadTestReportMapper . selectByPrimaryKey ( id ); <nl> + LoadTestReportWithBLOBs loadTestReport = loadTestReportMapper . selectByPrimaryKey ( id ); <nl> 
mmm RowDesc . java <nl> ppp RowDesc . java <nl> + method (" Row ", " after ", ""); <nl> + method (" Row ", " before ", ""); <nl> + method (" AbstractColumn []", " columns ", ""); <nl> + method (" Row ", " next ", ""); <nl> + method (" Row ", " previous ", ""); <nl> + method (" FooType ", " getFoo ", ""); <nl> 
mmm PlayerWidget . java <nl> ppp PlayerWidget . java <nl> - Log . d ( TAG , " Widet disabled "); <nl> + Log . d ( TAG , " Widget disabled "); <nl> 
mmm DroidGap . java <nl> ppp DroidGap . java <nl> 
mmm ClientStreamTracer . java <nl> ppp ClientStreamTracer . java <nl> - @ Deprecated <nl> - public ClientStreamTracer newClientStreamTracer ( Metadata headers ) { <nl> - throw new UnsupportedOperationException (" This method will be deleted . Do not call . "); <nl> - } <nl> - @ SuppressWarnings (" deprecation ") <nl> 
mmm ScheduledCache . java <nl> ppp ScheduledCache . java <nl> 
mmm SimpleDataSource . java <nl> ppp SimpleDataSource . java <nl> + import java . sql . SQLFeatureNotSupportedException ; <nl> + import java . util . logging . Logger ; <nl> + public Logger getParentLogger () throws SQLFeatureNotSupportedException { <nl> + throw new SQLFeatureNotSupportedException (); <nl> 
mmm _ 437 . java <nl> ppp _ 437 . java <nl> - public class PathSumIII { <nl> + public class _ 437 { <nl> 
mmm Main . java <nl> ppp Main . java <nl> - flyway . setLocations (" com . googlecode . flyway . sample . migration "); <nl> + flyway . setLocations (" db . migration ", " com . googlecode . flyway . sample . migration "); <nl> 
mmm PaintHouse . java <nl> ppp PaintHouse . java <nl> - public int minCostTopDownPainHouse1 ( int [][] costs ) { <nl> + public int minCostTopDownPainHouse1or2 ( int [][] costs ) { <nl> - return minCostUtil ( costs , 0 , - 1 , dp ); <nl> + return minCostUtil ( costs , 0 , - 1 , 3 , dp ); <nl> - private int minCostUtil ( int [][] costs , int house , int prevColor , int [][] dp ) { <nl> 
mmm JournalReaderOptions . java <nl> ppp JournalReaderOptions . java <nl> 
mmm YamlKeyGeneratorConfiguration . java <nl> ppp YamlKeyGeneratorConfiguration . java <nl> - throw new ShardingConfigurationException (" Invalid built - in key generator type . "); <nl> + throw new ShardingConfigurationException (" Invalid key generator type . "); <nl> 
new file <nl> ppp HelloWorldVerticle . java <nl> + package io . vertx . example ; <nl> + import io . vertx . core . AbstractVerticle ; <nl> + import io . vertx . core . Future ; <nl> + import io . vertx . core . Vertx ; <nl> + import io . vertx . core . http . HttpServer ; <nl> + public class HelloWorldVerticle extends AbstractVerticle { <nl> 
mmm ParametrizedTest . java <nl> ppp ParametrizedTest . java <nl> - System . out . println (" Parameter : " + number ); <nl> + System . out . print ( String . format (" Parameter : % d \ n ", number )); <nl> 
mmm DescribeRegionsAndZones . java <nl> ppp DescribeRegionsAndZones . java <nl> 
mmm SingletonASTTransformationTest . java <nl> ppp SingletonASTTransformationTest . java <nl> - new EmptyExpression () <nl> + EmptyExpression . INSTANCE <nl> 
mmm NetworkBitmapHunter . java <nl> ppp NetworkBitmapHunter . java <nl> - private static final int MARKER = 16384 ; <nl> + private static final int MARKER = 65536 ; <nl> 
mmm TestStandardContext . java <nl> ppp TestStandardContext . java <nl> - docBase . mkdirs (); <nl> + if (! docBase . exists () & & ! docBase . mkdirs ()) { <nl> + fail (" Unable to create docBase "); <nl> + } <nl> 
mmm ProtoUtils . java <nl> ppp ProtoUtils . java <nl> - ProtoLiteUtils . metadataMarshaller ( instance )); <nl> + metadataMarshaller ( instance )); <nl> + } <nl> + public static < T extends Message > Metadata . BinaryMarshaller < T > metadataMarshaller ( T instance ) { <nl> + return ProtoLiteUtils . metadataMarshaller ( instance ); <nl> 
mmm ArtifactResolver . java <nl> ppp ArtifactResolver . java <nl> 
new file <nl> ppp _ 1165 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 1165 { <nl> + public static class Solution1 { <nl> + public int calculateTime ( String keyboard , String word ) { <nl> + return - 1 ; <nl> + } <nl> + } <nl> + } <nl> 
mmm DroidGap . java <nl> ppp DroidGap . java <nl> 
mmm MailServiceTest . java <nl> ppp MailServiceTest . java <nl> - receivers . add (" shaoshi @ ebay . com "); <nl> + receivers . add (" foobar @ foobar . com "); <nl> 
mmm MockedStreamDataSearchClient . java <nl> ppp MockedStreamDataSearchClient . java <nl> + dataRequest . setDeadline ( System . currentTimeMillis () + 60000L ); <nl> 
mmm IntervalTreeTests . java <nl> ppp IntervalTreeTests . java <nl> + if ( c1 . size ()!= c2 . size ()) return false ; <nl> - assertTrue (" Interval Tree query error . query = 9 returned =" + query , collectionsEqual ( query . getData (), Arrays . asList ( <nl> - GREEN , DARK _ GREEN , BLUE , PURPLE ))); <nl> 
mmm TieredIdentityTest . java <nl> ppp TieredIdentityTest . java <nl> + public void string () { <nl> + TieredIdentity identity = new TieredIdentity ( <nl> + Arrays . asList ( new LocalityTier (" k1 ", " v1 "), new LocalityTier (" k2 ", " v2 "))); <nl> + assertEquals (" TieredIdentity ( k1 = v1 , k2 = v2 )", identity . toString ()); <nl> 
mmm MySQLKeyword . java <nl> ppp MySQLKeyword . java <nl> - ROLLUP <nl> + ROLLUP , <nl> + RESTRICT <nl> 
mmm DescriptiveDocFormatter . java <nl> ppp DescriptiveDocFormatter . java <nl> - configItem . getConfigPhase () . getIllustration (), configItem . getConfigDoc (), configItem . getType ()); <nl> + configItem . getConfigPhase () . getIllustration (), configItem . getConfigDoc (), <nl> + configItem . computeTypeSimpleName ()); <nl> 
mmm ParameterizedTestNameFormatter . java <nl> ppp ParameterizedTestNameFormatter . java <nl> + Object [] humanReadableArguments = new Object [ arguments . length ]; <nl> - arguments [ i ] = StringUtils . nullSafeToString ( arguments [ i ]); <nl> + humanReadableArguments [ i ] = StringUtils . nullSafeToString ( arguments [ i ]); <nl> 
mmm SpringLimitedExpressionsTest . java <nl> ppp SpringLimitedExpressionsTest . java <nl> - assertTextPresent (" Unknown property used in expression ", ae . getCause () . getMessage ()); <nl> + assertTextPresent (" Cannot resolve identifier ' bean2 '", ae . getCause () . getMessage ()); <nl> 
mmm RestUtils . java <nl> ppp RestUtils . java <nl> - LOG . error (" Failed to set AuthenticatedClientUser in REST service handler . ", e ); <nl> + LOG . warn (" Failed to set AuthenticatedClientUser in REST service handler : {}", e . getMessage ()); <nl> - LOG . error (" Unexpected error invoking rest endpoint ", e ); <nl> 
deleted file <nl> mmm Program . java <nl> - package org . cf ; <nl> - public class Program { <nl> - } <nl> 
mmm SwaggerAnnotationIntrospector . java <nl> ppp SwaggerAnnotationIntrospector . java <nl> - for ( JsonSubTypes . Type subType : subTypes ) <nl> + for ( JsonSubTypes . Type subType : subTypes ) { <nl> + } <nl> - for ( Class <?> subType : classes ) <nl> + for ( Class <?> subType : classes ) { <nl> + } <nl> 
mmm Parallel . java <nl> ppp Parallel . java <nl> - * < p > This allows optimized startup time by allowing beans that have slow initialization paths to startup and startup time without impacting the overall startup time of the application . </ p > <nl> + * < p > This allows optimized startup time by allowing beans that have slow initialization paths to startup and without impacting the overall startup time of the application . </ p > <nl> 
mmm DebugResolutionListener . java <nl> ppp DebugResolutionListener . java <nl> - logger . debug ( indent + artifact . getId () + " ( selected )" ); <nl> + logger . debug ( indent + artifact . getId () + " ( selected for " + artifact . getScope () + ")" ); <nl> 
mmm PlatformLog . java <nl> ppp PlatformLog . java <nl> - import static org . codehaus . groovy . ast . tools . GeneralUtils . callThisX ; <nl> 
mmm AbstractJavaSamplerClient . java <nl> ppp AbstractJavaSamplerClient . java <nl> 
mmm WialonProtocolDecoderTest . java <nl> ppp WialonProtocolDecoderTest . java <nl> + verifyPosition ( decoder , text ( <nl> + " # D # 151216 ; 135910 ; 5321 . 1466 ; N ; 04441 . 7929 ; E ; 87 ; 156 ; 265 . 000000 ; 12 ; 1 . 000000 ; 241 ; NA ; NA ; NA ; odo : 2 : 0 . 000000 , total _ fuel : 1 : 430087 , can _ fls : 1 : 201 , can _ taho : 1 : 11623 , can _ mileage : 1 : 140367515 ")); <nl> 
mmm SmsCharacterCalculator . java <nl> ppp SmsCharacterCalculator . java <nl> - int maxMessageSize = ( charactersSpent + charactersRemaining ) / messagesSpent ; <nl> + int maxMessageSize ; <nl> + if ( messagesSpent > 0 ) { <nl> + maxMessageSize = ( charactersSpent + charactersRemaining ) / messagesSpent ; <nl> 
mmm SystemStoreClientFactory . java <nl> ppp SystemStoreClientFactory . java <nl> - . setEnablePipelineRoutedStore ( clientConfig . getSysEnablePipelineRoutedStore ()) <nl> - String clusterXml , <nl> - FailureDetector fd ) { <nl> + String clusterXml , <nl> + FailureDetector fd ) { <nl> 
mmm AESShardingEncryptorTest . java <nl> ppp AESShardingEncryptorTest . java <nl> + import org . apache . shardingsphere . core . exception . ShardingConfigurationException ; <nl> + @ Test ( expected = ShardingConfigurationException . class ) <nl> + public void assertEncodeWithoutKey () { <nl> + Properties properties = new Properties (); <nl> 
mmm ScrollFixLayoutHelper . java <nl> ppp ScrollFixLayoutHelper . java <nl> + public int getShowType () { <nl> + return mShowType ; <nl> + } <nl> 
mmm MainWindowTitleController . java <nl> ppp MainWindowTitleController . java <nl> + window . setOnCloseRequest ( event - > { <nl> + close (); <nl> + event . consume (); <nl> + }); <nl> 
mmm ResourcesTest . java <nl> ppp ResourcesTest . java <nl> - Robolectric . application = ShadowApplication . bind ( new Application (), new ResourceLoader ( R . class , new File (" test / res "))); <nl> + Robolectric . application = ShadowApplication . bind ( new Application (), new ResourceLoader ( R . class , new File (" test / res "), new File (" test / assets "))); <nl> 
mmm EnglishTaggerTest . java <nl> ppp EnglishTaggerTest . java <nl> - import de . danielnaber . languagetool . AnalyzedToken ; <nl> + import de . danielnaber . languagetool . AnalyzedTokenReadings ; <nl> 
mmm Bootstrapper . java <nl> ppp Bootstrapper . java <nl> + String adminFirstname = env . getRequiredProperty (" admin . firstname "); <nl> + admin . setFirstName ( adminFirstname ); <nl> 
new file <nl> ppp DockerComposeContainerTests . java <nl> + package com . baeldung . testconainers ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import java . io . BufferedReader ; <nl> + import java . io . File ; <nl> + import java . io . InputStreamReader ; <nl> + import java . net . HttpURLConnection ; <nl> 
mmm ProvidersRepository . java <nl> ppp ProvidersRepository . java <nl> 
mmm Carbon . java <nl> ppp Carbon . java <nl> + import com . sun . jna . Library ; <nl> - public interface Carbon { <nl> + public interface Carbon extends Library { <nl> 
mmm DruidDataSourceWrapper . java <nl> ppp DruidDataSourceWrapper . java <nl> + if ( super . getDriverClassName () == null ){ <nl> + super . setDriverClassName ( basicProperties . getDriverClassName ()); <nl> + } <nl> 
mmm StubManifest . java <nl> ppp StubManifest . java <nl> + public static final String STUB _ DEF _ AUTHORITY = " virtual _ stub _ "; <nl> - public static final String STUB _ DEF _ AUTHORITY = " virtual _ stub _ "; <nl> - public static boolean ENABLE _ IO _ REDIRECT = false ; <nl> + public static boolean ENABLE _ IO _ REDIRECT = true ; <nl> 
mmm HttpUrlConnectionNetworkFetcher . java <nl> ppp HttpUrlConnectionNetworkFetcher . java <nl> - import java . io . InputStream ; <nl> - import java . net . HttpURLConnection ; <nl> - import java . net . URL ; <nl> - import java . util . concurrent . Executor ; <nl> - import java . util . concurrent . Executors ; <nl> 
mmm KeyGeneratorConfigurationTest . java <nl> ppp KeyGeneratorConfigurationTest . java <nl> - YamlKeyGeneratorConfiguration keyGeneratorConfiguration = new YamlKeyGeneratorConfiguration (); <nl> + KeyGeneratorConfiguration keyGeneratorConfiguration = new KeyGeneratorConfiguration (); <nl> - YamlKeyGeneratorConfiguration keyGeneratorConfiguration = new YamlKeyGeneratorConfiguration (); <nl> 
mmm DefaultPaths . java <nl> ppp DefaultPaths . java <nl> - public static final String DEFAULT _ WIKIDICT _ TSV = " edu / stanford / nlp / models / kbp / wikidict . tab . gz "; <nl> + public static final String DEFAULT _ WIKIDICT _ TSV = " edu / stanford / nlp / models / kbp / english / wikidict . tab . gz "; <nl> 
new file <nl> ppp RequiredMultiValueOptionDemo . java <nl> + package picocli . examples . synopsis ; <nl> + import picocli . CommandLine ; <nl> + import picocli . CommandLine . Command ; <nl> + import picocli . CommandLine . Option ; <nl> + import picocli . CommandLine . Parameters ; <nl> + import java . util . List ; <nl> 
mmm MXBeansGetterSanityTest . java <nl> ppp MXBeansGetterSanityTest . java <nl> - } else if ( mxBeanClass . getName () . equals (" com . ibm . lang . management . internal . UnixExtendedOperatingSystem ") <nl> - & & methodName . equals (" getHardwareModel ")) { <nl> - } else if ( mxBeanClass . getName () . equals (" com . ibm . lang . management . internal . ExtendedRuntimeMXBeanImpl ") <nl> 
new file <nl> ppp OrientJdbcArray . java <nl> + package com . orientechnologies . orient . jdbc ; <nl> + import java . sql . Array ; <nl> + import java . sql . ResultSet ; <nl> + import java . sql . SQLException ; <nl> + import java . sql . Types ; <nl> + import java . util . Collection ; <nl> + import java . util . Map ; <nl> 
mmm TrackableSession . java <nl> ppp TrackableSession . java <nl> - logger . info (" Tracking {}", trackableResource . trackingID ()); <nl> + logger . debug (" Tracking {}", trackableResource . trackingID ()); <nl> - logger . info (" Lookup trackinID {}", trackingID ); <nl> + logger . debug (" Lookup trackinID {}", trackingID ); <nl> 
mmm ReutersQueries . java <nl> ppp ReutersQueries . java <nl> - import org . apache . lucene . search . spans . SpanQuery ; <nl> - import org . apache . lucene . search . spans . SpanNearQuery ; <nl> - import org . apache . lucene . search . spans . SpanTermQuery ; <nl> - import org . apache . lucene . search . spans . SpanFirstQuery ; <nl> 
mmm SmartTextContentAdapter . java <nl> ppp SmartTextContentAdapter . java <nl> - if ( i > 0 & & contentsUC . startsWith ( prefix )) { <nl> + if ( i == 0 & & contentsUC . startsWith ( prefix )) { <nl> 
mmm LocalesResponse . java <nl> ppp LocalesResponse . java <nl> + import java . util . HashMap ; <nl> - import java . util . function . Function ; <nl> + import java . util . Map ; <nl> - final ImmutableMap < String , LocaleDescription > localeMap = Arrays . stream ( locales ) <nl> + final Map < String , LocaleDescription > localeMap = new HashMap <>(); <nl> 
mmm NegraPennTreeReaderFactory . java <nl> ppp NegraPennTreeReaderFactory . java <nl> + import edu . stanford . nlp . io . IOUtils ; <nl> + public NegraPennTreeReaderFactory () { <nl> + this ( new NegraPennLanguagePack ()); <nl> + } <nl> + @ Override <nl> - System . out . printf (" Usage : java % s tree _ file \ n ", NegraPennTreeReaderFactory . class . getName ()); <nl> 
mmm SolrSlf4jReporterTest . java <nl> ppp SolrSlf4jReporterTest . java <nl> - assertTrue ( history . stream () . filter ( d - > " solr . node " . equals ( d . getFirstValue (" logger "))) . count () > 0 ); <nl> - assertTrue ( history . stream () . filter ( d - > " foobar " . equals ( d . getFirstValue (" logger "))) . count () > 0 ); <nl> 
mmm StreamsTest . java <nl> ppp StreamsTest . java <nl> - running ( testServer ( 56517 ), new Runnable () { <nl> + running ( testServer ( 3333 ), new Runnable () { <nl> - Result r = login ( testBrowser ( driver ), serverStub , " lennart ", " 123123123 "); <nl> + Result r = login ( testBrowser ( driver , 80 ), serverStub , " lennart ", " 123123123 "); <nl> 
mmm TaskServlet . java <nl> ppp TaskServlet . java <nl> - final Enumeration <?> names = req . getParameterNames (); <nl> + final Enumeration < String > names = req . getParameterNames (); <nl> - final String name = ( String ) names . nextElement (); <nl> + final String name = names . nextElement (); <nl> 
mmm SupposeThreadHandler . java <nl> ppp SupposeThreadHandler . java <nl> + import javax . annotation . processing . ProcessingEnvironment ; <nl> + import javax . lang . model . element . Element ; <nl> - import javax . annotation . processing . ProcessingEnvironment ; <nl> - import javax . lang . model . element . Element ; <nl> 
mmm DrmSessionManager . java <nl> ppp DrmSessionManager . java <nl> + DrmSessionManager < ExoMediaCrypto > DUMMY = <nl> + new DrmSessionManager < ExoMediaCrypto >() { <nl> + @ Override <nl> + public boolean canAcquireSession ( DrmInitData drmInitData ) { <nl> + return false ; <nl> + } <nl> + @ Override <nl> + public DrmSession < ExoMediaCrypto > acquireSession ( <nl> 
mmm ConfusionMatrixTest . java <nl> ppp ConfusionMatrixTest . java <nl> 
mmm CCJSqlParserManager . java <nl> ppp CCJSqlParserManager . java <nl> -  <nl> - public static Statement parse ( String sql ) throws JSQLParserException { <nl> - CCJSqlParser parser = new CCJSqlParser ( new StringReader ( sql )); <nl> - try { <nl> - return parser . Statement (); <nl> - } catch ( Throwable e ) { <nl> 
mmm MyExtension . java <nl> ppp MyExtension . java <nl> - " processing annotation : { 0 }", <nl> + " CDI Extension Processing Annotation - > { 0 }", <nl> 
new file <nl> ppp PalindromeNumber . java <nl> + package easy ; <nl> + public class PalindromeNumber { <nl> + public boolean isPalindrome ( int x ) { <nl> + if ( x == 0 ) return true ; <nl> + if ( x < 0 ) return false ; <nl> + int rev = 0 , tmp = x ; <nl> + while ( tmp != 0 ){ <nl> + rev *= 10 ; <nl> + rev + = tmp % 10 ; <nl> 
new file <nl> ppp TooManyMethodsTest . java <nl> + package net . sourceforge . pmd . lang . plsql . rule . design ; <nl> + import net . sourceforge . pmd . testframework . PmdRuleTst ; <nl> + public class TooManyMethodsTest extends PmdRuleTst { <nl> + } <nl> 
mmm Phone . java <nl> ppp Phone . java <nl> + public boolean isValid () { <nl> + return getPhoneNumber () != null & & isNormalized (); <nl> + } <nl> 
mmm NaiveCacheAllFramesCachingBackend . java <nl> ppp NaiveCacheAllFramesCachingBackend . java <nl> + mBitmapSparseArray . clear (); <nl> 
new file <nl> ppp MergeSortTest . java <nl> + package com . github . pedrovgs . problem79 ; <nl> + import com . github . pedrovgs . sortingalgorithm . SortingAlgorithm ; <nl> + import com . github . pedrovgs . sortingalgorithms . SortingAlgorithmTest ; <nl> + public class MergeSortTest extends SortingAlgorithmTest { <nl> 
mmm JMeterEngineException . java <nl> ppp JMeterEngineException . java <nl> + public JMeterEngineException ( Throwable t ) { <nl> + super ( t ); <nl> + } <nl> + public JMeterEngineException ( String msg , Throwable t ) { <nl> + super ( msg , t ); <nl> + } <nl> 
mmm JewelleryCountPlugin . java <nl> ppp JewelleryCountPlugin . java <nl> + import net . runelite . client . ui . overlay . Overlay ; <nl> + @ Override <nl> + public Overlay getOverlay () <nl> + { <nl> + return overlay ; <nl> + } <nl> 
mmm CpuCoreSensorTest . java <nl> ppp CpuCoreSensorTest . java <nl> - package io . vertx . core . impl ; <nl> + package io . vertx . core . impl . cpu ; <nl> 
mmm DistributedStoreManagerTest . java <nl> ppp DistributedStoreManagerTest . java <nl> - System . err . println (" range : " + local . get ( 0 ) . getStart () + ":" + local . get ( 0 ) . getStart () . length () + " " + local . get ( 0 ) . getEnd () + ":" + local . get ( 0 ) . getEnd () . length ()); <nl> 
mmm KCVSLogTest . java <nl> ppp KCVSLogTest . java <nl> + import java . util . concurrent . TimeUnit ; <nl> + import com . thinkaurelius . titan . util . time . StandardDuration ; <nl> 
mmm SagaTransactionManagerTest . java <nl> ppp SagaTransactionManagerTest . java <nl> + import javax . transaction . Status ; <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + import static org . junit . Assert . assertThat ; <nl> + @ Test <nl> + public void assertGetStatus () { <nl> + assertThat ( new SagaTransactionManager () . getStatus (), is ( Status . STATUS _ NO _ TRANSACTION )); <nl> 
mmm TestRejectionOrder . java <nl> ppp TestRejectionOrder . java <nl> 
mmm ExpectedValueCheckingStoreManager . java <nl> ppp ExpectedValueCheckingStoreManager . java <nl> - log . debug (" Mutations on transaction {} using consistent store transaction {} due to held locks ", etx , etx . getConsistentTx ()); <nl> + log . debug (" Transaction {} holds one or more locks : writing using consistent transaction {} due to held locks ", etx , etx . getConsistentTx ()); <nl> 
new file <nl> ppp BlurTransformation . java <nl> + package com . jess . arms . http . imageloader . glide ; <nl> + import android . graphics . Bitmap ; <nl> + import android . support . annotation . IntRange ; <nl> + import android . support . annotation . NonNull ; <nl> + import com . bumptech . glide . load . Key ; <nl> 
mmm MaximumSizeSubMatrix . java <nl> ppp MaximumSizeSubMatrix . java <nl> 
mmm Java . java <nl> ppp Java . java <nl> - @ Override <nl> - public int hashCode () { <nl> - return super . hashCode (); <nl> - } <nl> 
mmm ChecksumIndexInput . java <nl> ppp ChecksumIndexInput . java <nl> - final long skip = pos - getFilePointer (); <nl> + final long curFP = getFilePointer (); <nl> + final long skip = pos - curFP ; <nl> - throw new IllegalStateException ( getClass () + " cannot seek backwards "); <nl> + throw new IllegalStateException ( getClass () + " cannot seek backwards ( pos =" + pos + " getFilePointer ()=" + curFP + ")"); <nl> 
mmm TestPrivateStaticFinal . java <nl> ppp TestPrivateStaticFinal . java <nl> + import android . support . annotation . Keep ; <nl> + @ Keep <nl> 
mmm AccountServiceImpl . java <nl> ppp AccountServiceImpl . java <nl> - private static final Logger LOGGER = LoggerFactory . getLogger ( OrderService . class ); <nl> + private static final Logger LOGGER = LoggerFactory . getLogger ( AccountService . class ); <nl> 
mmm PGValidConnectionChecker . java <nl> ppp PGValidConnectionChecker . java <nl> - import java . io . Serializable ; <nl> - import java . sql . Connection ; <nl> - import java . sql . ResultSet ; <nl> - import java . sql . Statement ; <nl> + import java . io . Serializable ; <nl> + import java . sql . Connection ; <nl> 
mmm AbstractJupiterTestEngineTests . java <nl> ppp AbstractJupiterTestEngineTests . java <nl> - import org . junit . platform . engine . ExecutionRequest ; <nl> - TestDescriptor testDescriptor = discoverTests ( request ); <nl> - ExecutionRecorder executionRecorder = new ExecutionRecorder (); <nl> - engine . execute ( new ExecutionRequest ( testDescriptor , executionRecorder , request . getConfigurationParameters ())); <nl> 
mmm ProtocolUtils . java <nl> ppp ProtocolUtils . java <nl> - return generic != null <nl> - & & !"" . equals ( generic ) <nl> + return StringUtils . isNotEmpty ( generic ) <nl> 
new file <nl> ppp ResetPasswordViewModelTest . java <nl> + package com . kickstarter . viewmodels ; <nl> + import com . kickstarter . KSRobolectricTestCase ; <nl> + import org . junit . Test ; <nl> + import rx . observers . TestSubscriber ; <nl> + public class ResetPasswordViewModelTest extends KSRobolectricTestCase { <nl> 
mmm EnumSerializerSnapshotMigrationTest . java <nl> ppp EnumSerializerSnapshotMigrationTest . java <nl> + import org . apache . flink . api . common . typeutils . TypeSerializerSchemaCompatibility ; <nl> + import org . hamcrest . Description ; <nl> + import org . hamcrest . Matcher ; <nl> + import org . hamcrest . TypeSafeDiagnosingMatcher ; <nl> 
mmm MasterUtils . java <nl> ppp MasterUtils . java <nl> - return () - > new HeapBlockStore (); <nl> + return HeapBlockStore :: new ; <nl> 
mmm PathBase . java <nl> ppp PathBase . java <nl> - if ( length () < BaritoneAPI . getSettings () . pathCutoffMinimumLength . get ()) { <nl> + int min = BaritoneAPI . getSettings () . pathCutoffMinimumLength . get (); <nl> + if ( length () < min ) { <nl> - int newLength = ( int ) (( length () - 1 ) * factor ); <nl> 
mmm HelloWorld . java <nl> ppp HelloWorld . java <nl> + import com . tightdb . Table ; <nl> + import com . tightdb . lib . TightDB ; <nl> - EmployeeTable employees = new EmployeeTable ( group ); <nl> + EmployeeTable employees = new EmployeeTable (); <nl> - Employee john = employees . add (" John ", " Doe ", 10000 , true , new byte [] { <nl> 
new file <nl> ppp TestCustomFunctions . java <nl> + package org . apache . lucene . expressions . js ; <nl> + import java . lang . reflect . Method ; <nl> + import java . util . Collections ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + import org . apache . lucene . expressions . Expression ; <nl> 
new file <nl> ppp MetricsContextListener . java <nl> + package com . codahale . metrics . servlet ; <nl> + import com . codahale . metrics . MetricRegistry ; <nl> + import javax . servlet . ServletContextEvent ; <nl> + import javax . servlet . ServletContextListener ; <nl> + public class MetricsContextListener implements ServletContextListener { <nl> 
new file <nl> ppp RemoteConnetWrongUrlTest . java <nl> + package com . orientechnologies . orient . client . remote ; <nl> + import com . orientechnologies . orient . core . db . document . ODatabaseDocument ; <nl> + import com . orientechnologies . orient . core . db . document . ODatabaseDocumentTx ; <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - String VERSION = " 2 . 4 . 0 "; <nl> + String VERSION = " 2 . 4 . 1 "; <nl> - String VERSION _ SLASHY = " ExoPlayerLib / 2 . 4 . 0 "; <nl> + String VERSION _ SLASHY = " ExoPlayerLib / 2 . 4 . 1 "; <nl> - int VERSION _ INT = 2004000 ; <nl> 
mmm KickstarterWebViewClient . java <nl> ppp KickstarterWebViewClient . java <nl> + import android . net . Uri ; <nl> - public WebResourceResponse shouldInterceptRequest ( final WebView view , final WebResourceRequest request ) { <nl> - if (! isInterceptable ( request )) { <nl> + public WebResourceResponse shouldInterceptRequest ( final WebView view , final String url ) { <nl> 
mmm SessionFactory . java <nl> ppp SessionFactory . java <nl> 
mmm OAuth2RefreshTokenTests . java <nl> ppp OAuth2RefreshTokenTests . java <nl> - assertThatIllegalArgumentException () . isThrownBy (() - > <nl> - new OAuth2RefreshToken ( null , ISSUED _ AT , EXPIRES _ AT )) <nl> + assertThatIllegalArgumentException () . isThrownBy (() - > new OAuth2RefreshToken ( null , ISSUED _ AT , EXPIRES _ AT )) <nl> 
mmm GsonAnnotator . java <nl> ppp GsonAnnotator . java <nl> - boolean fieldDiffersFromPropertyName = ! field . name () . equals ( propertyName ); <nl> - if ( fieldDiffersFromPropertyName ) { <nl> - field . annotate ( SerializedName . class ) . param (" value ", propertyName ); <nl> - } <nl> + field . annotate ( SerializedName . class ) . param (" value ", propertyName ); <nl> 
mmm SkylarkRuleContextApi . java <nl> ppp SkylarkRuleContextApi . java <nl> + import com . google . devtools . build . lib . skylarkinterface . SkylarkModule ; <nl> + import com . google . devtools . build . lib . skylarkinterface . SkylarkModuleCategory ; <nl> + @ SkylarkModule ( <nl> + name = " ctx ", <nl> 

mmm Cardinality . java <nl> ppp Cardinality . java <nl> - import static org . jooq . impl . Names . N _ ARRAY _ LENGTH ; <nl> - switch ( ctx . family ()) { <nl> - default : <nl> - ctx . visit ( N _ CARDINALITY ) . sql ('(') . visit ( arg ) . sql (')'); <nl> - break ; <nl> - } <nl> + ctx . visit ( N _ CARDINALITY ) . sql ('(') . visit ( arg ) . sql (')'); <nl> 
mmm PanmirrorUIPrefs . java <nl> ppp PanmirrorUIPrefs . java <nl> + pUIPrefs _ . get () . writeUserPrefs (); <nl> 
mmm Gl200ProtocolDecoderTest . java <nl> ppp Gl200ProtocolDecoderTest . java <nl> + verify ( decoder . decode ( null , null , <nl> + " + RESP : GTFRI , 240100 , 135790246811220 ,,, 10 , 1 , 1 , 4 . 3 , 92 , 70 . 0 , 121 . 354335 , 31 . 222073 , 20090214013254 , 0460 , 0000 , 18d8 , 6141 , 00 , 2000 . 0 , 12345 : 12 : 34 ,, 80 ,,,,,, 20090214093254 , 11F0 $")); <nl> 
mmm Buffer . java <nl> ppp Buffer . java <nl> + @ Override <nl> + @ Override <nl> - case BLOCKING : <nl> - while ( buffer [ i ] != null ) { <nl> - try { <nl> - Thread . sleep ( 1L ); <nl> - } catch ( InterruptedException e ) { <nl> - } <nl> - } <nl> - break ; <nl> + @ Override <nl> + @ Override <nl> 
mmm ClassRowWriter . java <nl> ppp ClassRowWriter . java <nl> - import static org . jacoco . core . analysis . ICoverageNode . CounterEntity . BRANCH ; <nl> - import static org . jacoco . core . analysis . ICoverageNode . CounterEntity . COMPLEXITY ; <nl> - import static org . jacoco . core . analysis . ICoverageNode . CounterEntity . INSTRUCTION ; <nl> 
mmm TokenFactory . java <nl> ppp TokenFactory . java <nl> 
mmm CamelIgniteTest . java <nl> ppp CamelIgniteTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore <nl> 
mmm W32StdCallTest . java <nl> ppp W32StdCallTest . java <nl> + if ( value == - 1 ) { <nl> + fail (" stdcall callback did not restore the stack pointer "); <nl> + } <nl> + if ( value == - 1 ) { <nl> + fail (" stdcall callback did not restore the stack pointer "); <nl> + } <nl> 
mmm SymlinkTraversal . java <nl> ppp SymlinkTraversal . java <nl> - import com . google . devtools . build . lib . events . EventHandler ; <nl> + import com . google . devtools . build . lib . actions . ActionExecutionContext ; <nl> - void addSymlinks ( EventHandler eventHandler , FilesetLinks links , ThreadPoolExecutor filesetPool ) <nl> 
new file <nl> ppp _ 324 . java <nl> + package com . stevesun . solutions ; <nl> + import java . util . Collections ; <nl> + import java . util . PriorityQueue ; <nl> + public class _ 324 { <nl> + public void wiggleSort ( int [] nums ) { <nl> + int median = findKthLargest ( nums , ( nums . length + 1 ) / 2 ); <nl> 
mmm _ 249 . java <nl> ppp _ 249 . java <nl> - List < List < String >> result = new ArrayList < List < String >>(); <nl> - Map < String , List < String >> map = new HashMap < String , List < String >>(); <nl> + List < List < String >> result = new ArrayList <>(); <nl> + Map < String , List < String >> map = new HashMap <>(); <nl> 
mmm EnglishConfusionProbabilityRule . java <nl> ppp EnglishConfusionProbabilityRule . java <nl> + " paste event ", <nl> 
new file <nl> ppp LicenseTool . java <nl> + package io . crate . license ; <nl> + import io . crate . types . DataTypes ; <nl> + import joptsimple . ArgumentAcceptingOptionSpec ; <nl> + import joptsimple . OptionParser ; <nl> + import joptsimple . OptionSet ; <nl> + import org . elasticsearch . common . logging . LogConfigurator ; <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm Result . java <nl> ppp Result . java <nl> + import org . junit . runner . notification . Failure ; <nl> + import org . junit . runner . notification . RunListener ; <nl> - import java . util . ArrayList ; <nl> - import java . util . Collections ; <nl> + import java . util . concurrent . CopyOnWriteArrayList ; <nl> 

mmm LoadTest . java <nl> ppp LoadTest . java <nl> - package com . mysema . query ; <nl> + package com . mysema . query . collections ; <nl> - import com . mysema . query . collections . Cat ; <nl> 
mmm Swagger2Controller . java <nl> ppp Swagger2Controller . java <nl> + import com . google . common . base . Strings ; <nl> - swagger . host ( hostName ( servletRequest )); <nl> + final UriComponents uriComponents = componentsFrom ( servletRequest ); <nl> + swagger . basePath ( Strings . isNullOrEmpty ( uriComponents . getPath ()) ? "/" : uriComponents . getPath ()); <nl> 
new file <nl> ppp AdmProtocolEncoderTest . java <nl> + package org . traccar . protocol ; <nl> + import org . junit . Test ; <nl> + import org . traccar . ProtocolTest ; <nl> + import org . traccar . model . Command ; <nl> + public class AdmProtocolEncoderTest extends ProtocolTest { <nl> + @ Test <nl> + public void testEncode () throws Exception { <nl> 
mmm FacebookSdkVersion . java <nl> ppp FacebookSdkVersion . java <nl> - public static final String BUILD = " 3 . 0 . 0 "; <nl> + public static final String BUILD = " 3 . 0 . 2 . b "; <nl> 
new file <nl> ppp ClassLoader . java <nl> + package mirror . java . lang ; <nl> + import mirror . RefObject ; <nl> + public class ClassLoader { <nl> + public static RefObject < java . lang . ClassLoader > parent ; <nl> + } <nl> 
mmm _ 611 . java <nl> ppp _ 611 . java <nl> 
mmm Issue2074 . java <nl> ppp Issue2074 . java <nl> - package com . alibaba . json . bvt . issue _ 2200 ; <nl> + package com . alibaba . json . bvt . issue _ 2000 ; <nl> 
mmm OsgiBundleTest . java <nl> ppp OsgiBundleTest . java <nl> - import static org . ops4j . pax . exam . CoreOptions . mavenBundle ; <nl> - import static org . ops4j . pax . exam . CoreOptions . wrappedBundle ; <nl> + import static org . ops4j . pax . exam . CoreOptions . url ; <nl> - import java . io . BufferedReader ; <nl> 
mmm GoCreateFileAction . java <nl> ppp GoCreateFileAction . java <nl> 
mmm VersionNumberTest . java <nl> ppp VersionNumberTest . java <nl> - String buildFile = load (" build . xml "); <nl> - Pattern p1 = Pattern . compile (" name =\" version \" value =\"( . *?)\""); <nl> + String buildFile = load (" build . properties "); <nl> + Pattern p1 = Pattern . compile (" version = ([ 0 - 9 \\ . ] + ( - dev )?)"); <nl> 
mmm BritishReplaceRule . java <nl> ppp BritishReplaceRule . java <nl> - return tokenStr + " is a common American expression , in British English it is more common to use : " <nl> - + String . join (", ", replacements ) + " . "; <nl> + return "'" + tokenStr + "' is a common American expression . Consider using expressions more common to British English . "; <nl> 
mmm LoadingActivity . java <nl> ppp LoadingActivity . java <nl> - long startTime = System . currentTimeMillis (); <nl> - long spend = System . currentTimeMillis () - startTime ; <nl> - if ( spend < 500 ) { <nl> - try { <nl> - Thread . sleep ( 500 - spend ); <nl> - } catch ( InterruptedException e ) { <nl> - e . printStackTrace (); <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 5 . 0 - beta2 "; <nl> + public static final String VERSION = " 2 . 5 . 0 - beta3 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 5 . 0 - beta2 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 5 . 0 - beta3 "; <nl> 
mmm SmallRyeOpenApiTemplate . java <nl> ppp SmallRyeOpenApiTemplate . java <nl> - OpenAPI readerModel = OpenApiProcessor . modelFromReader ( openApiConfig , Quarkus . class . getClassLoader ()); <nl> + OpenAPI readerModel = OpenApiProcessor . modelFromReader ( openApiConfig , <nl> + Thread . currentThread () . getContextClassLoader ()); <nl> 
mmm _ 1558 . java <nl> ppp _ 1558 . java <nl> - import java . util . Arrays ; <nl> - Arrays . sort ( nums ); <nl> 
mmm X509WebflowConfigurer . java <nl> ppp X509WebflowConfigurer . java <nl> - val clearAction = createEvaluateAction ( CasWebflowConstants . ACTION _ ID _ CLEAR _ WEBFLOW _ CREDENTIALS ); <nl> - prependActionsToActionStateExecutionList ( flow , CasWebflowConstants . TRANSITION _ ID _ WARN , clearAction ); <nl> 
mmm MySink . java <nl> ppp MySink . java <nl> - public MySink ( String xxxx ) { <nl> - System . out . println (" + + + + + + + + + + + + + " + xxxx ); <nl> - tx = xxxx ; <nl> + public MySink ( String tx ) { <nl> + System . out . println (" + + + + + + + + + + + + + " + tx ); <nl> + this . tx = tx ; <nl> 
new file <nl> ppp GetSucNodeIdMessageClass . java <nl> + package org . openhab . binding . zwave . internal . protocol . serialmessage ; <nl> + import org . openhab . binding . zwave . internal . protocol . SerialMessage ; <nl> + import org . openhab . binding . zwave . internal . protocol . ZWaveController ; <nl> 
mmm DnsTests . java <nl> ppp DnsTests . java <nl> + import com . koushikdutta . async . AsyncSocket ; <nl> + import com . koushikdutta . async . callback . ConnectCallback ; <nl> + public void testNoDomain () throws Exception { <nl> + AsyncServer server = new AsyncServer (); <nl> + try { <nl> + final Semaphore semaphore = new Semaphore ( 0 ); <nl> 
new file <nl> ppp EditorActionsHandledActivity . java <nl> + package org . androidannotations . test15 ; <nl> + import android . app . Activity ; <nl> + import android . os . Bundle ; <nl> + import android . view . KeyEvent ; <nl> + import android . widget . EditText ; <nl> + import android . widget . TextView ; <nl> 
mmm ServicesTest . java <nl> ppp ServicesTest . java <nl> 
mmm PulsarProducer . java <nl> ppp PulsarProducer . java <nl> - if ( producer == null ) { <nl> - createProducer (); <nl> - } <nl> + @ Override <nl> + protected void doStart () throws Exception { <nl> + log . debug (" Starting producer : {}", this ); <nl> + if ( producer == null ) { <nl> + createProducer (); <nl> 
mmm ArchivedJson . java <nl> ppp ArchivedJson . java <nl> - import org . apache . flink . runtime . jobmanager . MemoryArchivist ; <nl> + import org . apache . flink . runtime . history . FsJobArchivist ; <nl> 
mmm DisruptorQueueCreator . java <nl> ppp DisruptorQueueCreator . java <nl> + import com . lmax . disruptor . ExceptionHandler ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private final Logger logger = LoggerFactory . getLogger ( DisruptorQueueCreator . class ); <nl> 
new file <nl> ppp GPUImageZoomBlurFilter . java <nl> + package jp . co . cyberagent . android . gpuimage . filter ; <nl> + import android . graphics . PointF ; <nl> + import android . opengl . GLES20 ; <nl> + public class GPUImageZoomBlurFilter extends GPUImageFilter { <nl> + public static final String ZOOM _ BLUR _ FRAGMENT _ SHADER = "" + <nl> 
mmm TestRunListener . java <nl> ppp TestRunListener . java <nl> - public static final int STATUS _ ERROR = 1 ; <nl> - public static final int STATUS _ FAILURE = 2 ; <nl> + int STATUS _ ERROR = 1 ; <nl> + int STATUS _ FAILURE = 2 ; <nl> - public void testRunStarted ( String testSuiteName , int testCount ); <nl> 
deleted file <nl> mmm Constants . java <nl> - package org . apache . catalina . realm ; <nl> - @ Deprecated <nl> - public final class Constants { <nl> - public static final String Package = " org . apache . catalina . realm "; <nl> - public static final String FORM _ METHOD = " FORM "; <nl> - public static final String FORM _ ACTION = "/ j _ security _ check "; <nl> 
mmm DiscoveryViewModelInputs . java <nl> ppp DiscoveryViewModelInputs . java <nl> + import android . support . annotation . NonNull ; <nl> - void initializer ( DiscoveryParams _ _ ); <nl> + void initializer ( final @ NonNull DiscoveryParams params ); <nl> - void projectClick ( Project _ _ ); <nl> + void projectClick ( final @ NonNull Project project ); <nl> 
mmm PersistedHttpMessagesList . java <nl> ppp PersistedHttpMessagesList . java <nl> - * database . <nl> + * database ( for example , no longer exists ) . <nl> - LOGGER . error (" Failed to get the message from DB : " + e . getMessage (), e ); <nl> + if ( LOGGER . isDebugEnabled ()) { <nl> + LOGGER . debug (" Failed to get the message from DB : " + e . getMessage (), e ); <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 1 . 5 . 1 "; <nl> + public static final String VERSION = " 1 . 5 . 2 "; <nl> - public static final int VERSION _ INT = 001005001 ; <nl> + public static final int VERSION _ INT = 001005002 ; <nl> 

mmm WorkerHealthCheckClientIntegrationTest . java <nl> ppp WorkerHealthCheckClientIntegrationTest . java <nl> - import alluxio . util . network . NetworkAddressUtils ; <nl> + import java . net . InetSocketAddress ; <nl> - new LocalAlluxioClusterResource . Builder () <nl> - . setProperty ( PropertyKey . USER _ RPC _ RETRY _ MAX _ NUM _ RETRY , 30 ) <nl> 
mmm MySQLHelpProvider . java <nl> ppp MySQLHelpProvider . java <nl> + import org . jkiss . utils . CommonUtils ; <nl> + import java . util . Locale ; <nl> 
mmm VisitWebsiteActionButton . java <nl> ppp VisitWebsiteActionButton . java <nl> + import de . danoeh . antennapod . core . util . IntentUtils ; <nl> - Uri uri = Uri . parse ( item . getLink ()); <nl> - context . startActivity ( new Intent ( Intent . ACTION _ VIEW , uri )); <nl> + IntentUtils . openInBrowser ( context , item . getLink ()); <nl> 
mmm MaxSizeConstraintValidator . java <nl> ppp MaxSizeConstraintValidator . java <nl> - boolean isValid = true ; <nl> - if ( values . size () > 4 ) { <nl> - isValid = false ; <nl> - } <nl> - return isValid ; <nl> + return values . size () <= 4 ; <nl> 
mmm ServerReleaseTaglet . java <nl> ppp ServerReleaseTaglet . java <nl> - import com . sun . javadoc . Tag ; <nl> 
mmm XmlPathNamespaceTest . java <nl> ppp XmlPathNamespaceTest . java <nl> + import static org . hamcrest . Matchers . isEmptyOrNullString ; <nl> + @ Test public void <nl> + xml _ path _ supports _ declared _ namespaces () { <nl> + String xml = "<? xml version =\" 1 . 0 \" encoding =\" UTF - 8 \"?>\ n " + <nl> 
mmm ReviewListAdapter . java <nl> ppp ReviewListAdapter . java <nl> + import android . widget . ImageView ; <nl> + import me . zhanghai . android . douya . util . ImageUtils ; <nl> + ImageUtils . loadAvatar ( holder . avatarImage , review . author . avatar ); <nl> + @ BindView ( R . id . avatar ) <nl> + public ImageView avatarImage ; <nl> 
mmm ArthasBanner . java <nl> ppp ArthasBanner . java <nl> - VERSION = IOUtils . toString ( versionInputStream ); <nl> + VERSION = IOUtils . toString ( versionInputStream ) . trim (); <nl> 
mmm LanguageIdentifierTools . java <nl> ppp LanguageIdentifierTools . java <nl> - public static final String [] ADDITIONAL _ LANGUAGES = {" be ", " ca ", " eo ", " gl ", " ro ", " sk ", " sl ", " uk "}; <nl> + public static final String [] ADDITIONAL _ LANGUAGES = {" be ", " ca ", " eo ", " gl ", " ro ", " sk ", " sl ", " uk ", " ast ", " tl "}; <nl> 
mmm CPDCommandLineInterfaceTest . java <nl> ppp CPDCommandLineInterfaceTest . java <nl> - import net . sourceforge . pmd . PMD ; <nl> 
mmm AllTests . java <nl> ppp AllTests . java <nl> + TestHttp . class , <nl> - TransactionDailyGraphMergerTest . class , ProblemDailyGraphMergerTest . class , <nl> - TestHttp . class }) <nl> + TransactionDailyGraphMergerTest . class , ProblemDailyGraphMergerTest . class }) <nl> 
mmm _ 7 . java <nl> ppp _ 7 . java <nl> - public class ReverseInteger { <nl> + public class _ 7 { <nl> - ReverseInteger test = new ReverseInteger (); <nl> + _ 7 test = new _ 7 (); <nl> 
mmm CassandraToSqlEventTsColumn . java <nl> ppp CassandraToSqlEventTsColumn . java <nl> - super (" id ", " ts ", CassandraToSqlColumnType . BIGINT , null ); <nl> + super (" id ", " ts ", CassandraToSqlColumnType . BIGINT , null , false ); <nl> 
mmm RestPreconditions . java <nl> ppp RestPreconditions . java <nl> 
mmm ComponentsTestRunner . java <nl> ppp ComponentsTestRunner . java <nl> - private static String getAndroidManifestPath () { <nl> + private static String getResPrefix () { <nl> - return prefix + <nl> - " litho - it / src / main / AndroidManifest . xml "; <nl> + if ( System . getProperty (" org . gradle . test . worker ") != null ) { <nl> 
mmm Message . java <nl> ppp Message . java <nl> + * @ deprecated Message implementations should extend {@ linke com . jme3 . network . AbstractMessage } <nl> + * instead or use the {@ linke com . jme3 . network . Message } for referencing . <nl> + @ Deprecated <nl> - public class Message implements com . jme3 . network . Message { <nl> 
mmm SegmentCostSpanListener . java <nl> ppp SegmentCostSpanListener . java <nl> - import org . skywalking . apm . collector . agentstream . worker . segment . EntrySpanListener ; <nl> - import org . skywalking . apm . collector . agentstream . worker . segment . ExitSpanListener ; <nl> - import org . skywalking . apm . collector . agentstream . worker . segment . LocalSpanListener ; <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 7 . 2 "; <nl> + public static final String VERSION = " 2 . 7 . 3 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 7 . 2 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 7 . 3 "; <nl> 
new file <nl> ppp MockResolverFactory . java <nl> + package org . activiti . engine . test . mock ; <nl> + import org . activiti . engine . delegate . VariableScope ; <nl> + import org . activiti . engine . impl . scripting . Resolver ; <nl> + import org . activiti . engine . impl . scripting . ResolverFactory ; <nl> 
new file <nl> ppp IExplorerPage . java <nl> + package org . autojs . autojs . model . explorer ; <nl> + public interface IExplorerPage { <nl> + } <nl> 
mmm ONonBlockingQueryTest . java <nl> ppp ONonBlockingQueryTest . java <nl> + @ Override public Object getResult () { <nl> + return null ; <nl> + } <nl> 
mmm PersistenceUtil . java <nl> ppp PersistenceUtil . java <nl> + ds . setMinIdle ( 10 ); <nl> - ds . setDefaultAutoCommit ( true ); <nl> + ds . setRemoveAbandonedTimeout ( 15 * 60 ); <nl> + ds . setDefaultAutoCommit ( true ); <nl> 
mmm SleepingUnderFileSystemFactory . java <nl> ppp SleepingUnderFileSystemFactory . java <nl> + import alluxio . conf . PropertyKey ; <nl> + conf . set ( PropertyKey . MASTER _ UFS _ MANAGED _ BLOCKING _ ENABLED , true ); <nl> 
mmm HystrixHealthIndicator . java <nl> ppp HystrixHealthIndicator . java <nl> - if ( circuitBreaker . isOpen ()) { <nl> + if ( circuitBreaker != null & & circuitBreaker . isOpen ()) { <nl> 
new file <nl> ppp OracleSelectTest82 _ wmsysconcat . java <nl> + package com . alibaba . druid . bvt . sql . oracle . select ; <nl> + import com . alibaba . druid . sql . OracleTest ; <nl> + import com . alibaba . druid . sql . SQLUtils ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> 
mmm soae001 . java <nl> ppp soae001 . java <nl> - System . out . println (" This is expected with an empty JEP331 implementation !"); <nl> - result = true ; <nl> 
mmm TitanOutputFormat . java <nl> ppp TitanOutputFormat . java <nl> - public static final ConfigOption < Boolean > INFER _ SCHEMA = new ConfigOption < Boolean >( <nl> - TitanHadoopConfiguration . OUTPUT _ NS , " infer - schema ", <nl> - " Whether to attempt to automatically create Titan property keys and labels before writing data ", <nl> 
mmm JavaRuntime . java <nl> ppp JavaRuntime . java <nl> + import com . google . devtools . build . lib . analysis . Runfiles ; <nl> + Runfiles runfiles = <nl> + new Runfiles . Builder ( ruleContext . getWorkspaceName ()) <nl> + . addTransitiveArtifacts ( filesToBuild ) <nl> + . build (); <nl> - . addProvider ( RunfilesProvider . class , RunfilesProvider . EMPTY ) <nl> 
mmm Get . java <nl> ppp Get . java <nl> - * ResponseEntity & lt ; EventList & gt ; getEvents ( int < b > max </ b >); <nl> + * ResponseEntity & lt ; EventList & gt ; getEvents ( & # 064 ; Path int < b > max </ b >); <nl> - * ArrayList & lt ; Event & gt ; getEvents ( int < b > max </ b >, String < b > filter </ b >); <nl> 
mmm FrenchConfusionProbabilityRule . java <nl> ppp FrenchConfusionProbabilityRule . java <nl> + " se titre ", <nl> 
mmm NettyCometSupport . java <nl> ppp NettyCometSupport . java <nl> - import org . apache . catalina . CometEvent ; <nl> - import org . atmosphere . cpr . ApplicationConfig ; <nl> - import org . atmosphere . cpr . AtmosphereResourceImpl ; <nl> - import org . jboss . servlet . http . HttpEvent ; <nl> - import java . util . concurrent . CountDownLatch ; <nl> 
mmm ModelBakeEvent . java <nl> ppp ModelBakeEvent . java <nl> + import net . minecraft . client . resources . model . ModelBakery ; <nl> + @ Deprecated <nl> + public final ModelBakery modelBakery ; <nl> + @ Deprecated <nl> + public ModelBakeEvent ( ModelManager modelManager , IRegistry modelRegistry , ModelBakery modelBakery ) <nl> 
mmm RegistryCenterLoaderTest . java <nl> ppp RegistryCenterLoaderTest . java <nl> - import io . shardingsphere . orchestration . registry . SecondTestRegistryCenter ; <nl> + import io . shardingsphere . orchestration . fixture . SecondTestRegistryCenter ; <nl> 
mmm GenericContainerTest . java <nl> ppp GenericContainerTest . java <nl> + import com . github . dockerjava . api . model . HostConfig ; <nl> - it . getHostConfig () . withMemory ( 32 * FileUtils . ONE _ MB ); <nl> + it . getHostConfig () <nl> + . withMemory ( 20 * FileUtils . ONE _ MB ) <nl> + . withMemorySwappiness ( 0L ) <nl> 
mmm SQLExecuteTemplate . java <nl> ppp SQLExecuteTemplate . java <nl> 
mmm OrchestrationFacadeTest . java <nl> ppp OrchestrationFacadeTest . java <nl> - setRegistry ( orchestrationFacade . getClass () . getDeclaredField (" instanceStateService ") . get ( orchestrationFacade )); <nl> - setRegistry ( orchestrationFacade . getClass () . getDeclaredField (" dataSourceService ") . get ( orchestrationFacade )); <nl> 
mmm EventsLogger . java <nl> ppp EventsLogger . java <nl> - @ Override <nl> - @ Override <nl> - @ Override <nl> - @ Override <nl> 
mmm EnglishConfusionProbabilityRule . java <nl> ppp EnglishConfusionProbabilityRule . java <nl> - " your ride " <nl> + " your ride ", <nl> + " he most likely ", <nl> + " good cause ", <nl> + " big butt ", <nl> + " news debate " <nl> 
mmm AggregationRepository . java <nl> ppp AggregationRepository . java <nl> - public static final String FIND _ MAX _ QUERY = " SELECT time _ bucket (: timeBucket , tskv . ts ) AS tsBucket , : timeBucket AS interval , MAX ( COALESCE ( tskv . long _ v , - 9223372036854775807 )) AS longValue , MAX ( COALESCE ( tskv . dbl _ v , - 1 . 79769E + 308 )) as doubleValue , SUM ( CASE WHEN tskv . long _ v IS NULL THEN 0 ELSE 1 END ) AS longCountValue , SUM ( CASE WHEN tskv . dbl _ v IS NULL THEN 0 ELSE 1 END ) AS doubleCountValue , MAX ( tskv . str _ v ) AS strValue , MAX ( tskv . json _ v ) AS jsonValue , ' MAX ' AS aggType "; <nl> 
mmm HiddenCharacterRuleTest . java <nl> ppp HiddenCharacterRuleTest . java <nl> - final MixedAlphabetsRule rule = new MixedAlphabetsRule ( TestTools . getMessages (" uk ")); <nl> + final HiddenCharacterRule rule = new HiddenCharacterRule ( TestTools . getMessages (" uk ")); <nl> - RuleMatch [] matches = rule . match ( langTool . getAnalyzedSentence ("см i \ u00AD ття")); <nl> 
new file <nl> ppp ErrorMessageSimplifier . java <nl> + package processing . mode . experimental ; <nl> + import java . lang . reflect . Field ; <nl> + import java . lang . reflect . Modifier ; <nl> + import java . util . TreeMap ; <nl> + import org . eclipse . jdt . internal . compiler . problem . DefaultProblem ; <nl> 
mmm EntityClassById . java <nl> ppp EntityClassById . java <nl> - if (( entity = EntityList . REGISTRY . getObject ( id )) == null ) { <nl> + try { <nl> + entity = EntityList . REGISTRY . getObject ( id ); <nl> + } catch ( NoSuchFieldError e ) { <nl> + try { <nl> + entity = ( Class <? extends Entity >) EntityList . class . getMethod (" getClass ", ResourceLocation . class ) . invoke ( null , id ); <nl> 
mmm MeasureFilterAsCloudWidget . java <nl> ppp MeasureFilterAsCloudWidget . java <nl> - @ WidgetProperty ( key = " reverseColor ", type = WidgetPropertyType . BOOLEAN , defaultValue = " false ") <nl> 
mmm CrossPlatformBrowserLauncher . java <nl> ppp CrossPlatformBrowserLauncher . java <nl> - import javax . swing . JOptionPane ; <nl> + import net . java . sip . communicator . impl . gui . main . message . ChatWindow ; <nl> + import net . java . sip . communicator . util . Logger ; <nl> + import edu . stanford . ejalbert . exception . BrowserLaunchingInitializingException ; <nl> 
mmm TaskServletTest . java <nl> ppp TaskServletTest . java <nl> - when ( request . getRequestURI ()) . thenReturn ("/ test "); <nl> + when ( request . getRequestURI ()) . thenReturn ("/ tasks / test "); <nl> - when ( request . getRequestURI ()) . thenReturn ("/ gc "); <nl> + when ( request . getRequestURI ()) . thenReturn ("/ tasks / gc "); <nl> 
mmm EncryptNamespaceHandler . java <nl> ppp EncryptNamespaceHandler . java <nl> - import org . apache . shardingsphere . shardingjdbc . spring . namespace . parser . EncryptRuleBeanDefinitionParser ; <nl> 
mmm ViolationsTimeMachineIT . java <nl> ppp ViolationsTimeMachineIT . java <nl> - assertThat ( timemachine . getCells () . length , is ( 2 )); <nl> - for ( TimeMachineCell cell : timemachine . getCells ()) { <nl> - assertThat ( cell . getValues ()[ 0 ], nullValue ()); <nl> - } <nl> + assertThat ( timemachine . getCells () . length , is ( 0 )); <nl> 
mmm SmaliDecoder . java <nl> ppp SmaliDecoder . java <nl> - mDebug ? main . DIFFPRE : 0 , false , false , null ); <nl> + mDebug ? main . DIFFPRE : 0 , false , mDebug ? true : false , null ); <nl> 
new file <nl> ppp IntersectByKey . java <nl> + package com . oreilly . learningsparkexamples . java ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import java . util . Map . Entry ; <nl> + import com . google . common . collect . Iterables ; <nl> 
mmm JsonResource . java <nl> ppp JsonResource . java <nl> - private final Map < String , String > MESSAGE = new HashMap < String , String >(); <nl> + public final static class HelloMessage { <nl> + public final String message ; <nl> - public JsonResource () <nl> - { <nl> - MESSAGE . put (" message ", " Hello , world !"); <nl> 
mmm ShadowDeviceConfig . java <nl> ppp ShadowDeviceConfig . java <nl> + import org . robolectric . annotation . Resetter ; <nl> + import org . robolectric . util . ReflectionHelpers ; <nl> + import java . util . Map ; <nl> + @ Resetter <nl> + public static void reset () { <nl> + Object lock = ReflectionHelpers . getStaticField ( DeviceConfig . class , " sLock "); <nl> 
mmm TomcatCustomizer . java <nl> ppp TomcatCustomizer . java <nl> + @ Value ("${ tomcat . connector . acceptCount }") <nl> + private int acceptCount ; <nl> - connector . setProperty (" acceptCount ", maxConnections + ""); <nl> + connector . setProperty (" acceptCount ", acceptCount + ""); <nl> 
mmm FlickrExample . java <nl> ppp FlickrExample . java <nl> - String apiKey = " your _ app _ id "; <nl> + String apiKey = " your _ api _ key "; <nl> + System . out . println ("( you can get the username , full name , and nsid by parsing the rawResponse : " + accessToken . getRawResponse () + ")"); <nl> 
mmm FilterableRequestSpecification . java <nl> ppp FilterableRequestSpecification . java <nl> - import org . apache . http . client . HttpClient ; <nl> + import org . apache . http . impl . client . AbstractHttpClient ; <nl> - HttpClient getHttpClient (); <nl> + AbstractHttpClient getHttpClient (); <nl> 
mmm SimpleSourceTest . java <nl> ppp SimpleSourceTest . java <nl> + import org . apache . beam . sdk . testing . PAssert ; <nl> + import org . apache . beam . sdk . transforms . Create ; <nl> + import org . apache . beam . sdk . values . PCollection ; <nl> - } <nl> + @ Test <nl> + public void testBoundedSource () { <nl> 
mmm BenqProjectorSourceMapping . java <nl> ppp BenqProjectorSourceMapping . java <nl> - if ( idx > 0 & & idx < BenqProjectorSourceMapping . values () . length ) <nl> + if ( idx >= 0 & & idx < BenqProjectorSourceMapping . values () . length ) <nl> 
mmm SourceTest . java <nl> ppp SourceTest . java <nl> + import java . io . IOException ; <nl> + import java . io . Serializable ; <nl> + import java . util . ArrayList ; <nl> + import java . util . HashMap ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import org . apache . beam . runners . core . construction . PipelineOptionsSerializationUtils ; <nl> 
mmm SpringContextTest . java <nl> ppp SpringContextTest . java <nl> - package org . baeldung ; <nl> + package com . baeldung ; <nl> 
new file <nl> ppp _ 683 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 683 { <nl> + public static class Solution1 { <nl> + public int kEmptySlots ( int [] flowers , int k ) { <nl> + return - 1 ; <nl> + } <nl> + } <nl> + } <nl> 
mmm NetworkManager . java <nl> ppp NetworkManager . java <nl> -  <nl> -  <nl> 
mmm OperatingSystemNotificationThread . java <nl> ppp OperatingSystemNotificationThread . java <nl> + import java . security . AccessController ; <nl> + import java . security . PrivilegedAction ; <nl> - Runtime . getRuntime () . addShutdownHook ( myShutdownNotifier ); <nl> + AccessController . doPrivileged ( new PrivilegedAction < Void >() { <nl> 
new file <nl> ppp JPAOrderEncryptRepositoryImpl . java <nl> + package io . shardingsphere . example . repository . jpa . repository ; <nl> + import io . shardingsphere . example . repository . api . entity . OrderEncrypt ; <nl> + import io . shardingsphere . example . repository . api . entity . OrderItem ; <nl> 
mmm NettyAsyncResponseTest . java <nl> ppp NettyAsyncResponseTest . java <nl> - assertEquals ( cookie . getMaxAge (), - 1 ); <nl> + assertEquals ( cookie . getMaxAge (), Integer . MIN _ VALUE ); <nl> 
mmm LanguageIdentifierTest . java <nl> ppp LanguageIdentifierTest . java <nl> - import org . junit . Ignore ; <nl> - import static org . junit . Assert . *; <nl> + import static org . junit . Assert . fail ; <nl> + langAssert (" tl ", " Dhammaan garoomada caalamka ayaa loo isticmaalaa . Ururku waxa uu qabtaa ama uu ku shaqaleeyahay " + <nl> 
mmm InterceptedBeanMetadataProvider . java <nl> ppp InterceptedBeanMetadataProvider . java <nl> - if ( parent != null ) { <nl> - return parent . getContextual (); <nl> - } <nl> + return parent . getContextual (); <nl> 
mmm DummyTestCase . java <nl> ppp DummyTestCase . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger LOGGER = LoggerFactory . getLogger ( DummyTestCase . class ); <nl> - e . printStackTrace (); <nl> + LOGGER . warn (" Exception on sleep ", e ); <nl> 
mmm ColumnType . java <nl> ppp ColumnType . java <nl> - ColumnTypeDate ( 3 ), <nl> -  <nl> + ColumnTypeDate ( 7 ); <nl> -  <nl> 
mmm OracleToolTableGatherStatisticsSettings . java <nl> ppp OracleToolTableGatherStatisticsSettings . java <nl> - private class OracleStatisticPercentLimiter implements IPropertyValueValidator < OracleToolTableGatherStatisticsSettings , Object > { <nl> + public static class OracleStatisticPercentLimiter implements IPropertyValueValidator < OracleToolTableGatherStatisticsSettings , Object > { <nl> 
mmm SpoutFailInfo . java <nl> ppp SpoutFailInfo . java <nl> + public int spoutTaskId ; <nl> - public SpoutFailInfo ( Object messageId , Long failLatencyMs ) { <nl> + public SpoutFailInfo ( Object messageId , int spoutTaskId , Long failLatencyMs ) { <nl> + this . spoutTaskId = spoutTaskId ; <nl> 
mmm ReceiverAction . java <nl> ppp ReceiverAction . java <nl> - * The method could contain any type or parameters . <nl> - * </ p > <nl> - * < p > <nl> - * You MAY use the {@ link ReceiverAction . Extra } annotation on parameters to <nl> - * define a different extra name . <nl> - * </ p > <nl> - * < p > <nl> 
mmm DiscoverFragment . java <nl> ppp DiscoverFragment . java <nl> - import android . view . Menu ; <nl> - import android . view . MenuInflater ; <nl> + import android . view . *; <nl> 
mmm TeltonikaProtocolDecoderTest . java <nl> ppp TeltonikaProtocolDecoderTest . java <nl> - verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertArray ( <nl> + assertNull ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertArray ( <nl> 
mmm App . java <nl> ppp App . java <nl> - import org . jooby . Jooby ; <nl> - import org . jooby . MediaType ; <nl> - import org . jooby . Results ; <nl> - import org . jooby . Result ; <nl> - import org . jooby . json . Jackson ; <nl> - import java . util . Map ; <nl> - import java . util . HashMap ; <nl> - import java . util . Locale ; <nl> 
new file <nl> ppp Server . java <nl> + package io . vertx . example . web . vertxbus . webpack ; <nl> + import io . vertx . core . AbstractVerticle ; <nl> + import io . vertx . core . eventbus . EventBus ; <nl> + import io . vertx . core . json . JsonObject ; <nl> + import io . vertx . example . util . Runner ; <nl> 
mmm Streamable . java <nl> ppp Streamable . java <nl> + * <nl> + * @ deprecated Unused - will be removed in Tomcat 8 . 0 . x <nl> + @ Deprecated <nl> 
mmm LongestConsecutiveSubsequence . java <nl> ppp LongestConsecutiveSubsequence . java <nl> - * <nl> + * <nl> + public static void main ( String args []) { <nl> + LongestConsecutiveSubsequence lcs = new LongestConsecutiveSubsequence (); <nl> + int [] input = { 100 , 4 , 200 , 1 , 3 , 2 }; <nl> + System . out . println ( lcs . longestConsecutive ( input )); <nl> 
mmm XPathRulesTest . java <nl> ppp XPathRulesTest . java <nl> + addRule ( RULESET , " AvoidAxisNavigation "); <nl> 
mmm LargerElementOnRight . java <nl> ppp LargerElementOnRight . java <nl> + * This is different than finding largest element on right side which can <nl> + * be done by keeping max while iterating from right <nl> + * It is also different from find next higher number on right side which can <nl> + * be found by keeping AVL tree and finding ceiling . <nl> 
new file <nl> ppp IssueKey . java <nl> + package org . mapstruct . ap . testutil ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + @ Retention ( RetentionPolicy . SOURCE ) <nl> + public @ interface IssueKey { <nl> + String value (); <nl> 
new file <nl> ppp FMFTRLTestCase . java <nl> + package net . librec . recommender . cf . rating ; <nl> + import net . librec . BaseTestCase ; <nl> + import net . librec . common . LibrecException ; <nl> + import net . librec . conf . Configuration ; <nl> + import net . librec . job . RecommenderJob ; <nl> + import org . junit . Before ; <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final int MAX _ REFERENCE _ VERSION = 15090 * 1000 ; <nl> + public static final int MAX _ REFERENCE _ VERSION = 17455 * 1000 ; <nl> 
mmm CalendarAppWidgetProvider . java <nl> ppp CalendarAppWidgetProvider . java <nl> + import com . bumptech . glide . request . target . AppWidgetTarget ; <nl> + import me . zhanghai . android . douya . glide . GlideApp ; <nl> + GlideApp . with ( context ) <nl> + . asBitmap () <nl> + . load ( calendarDay . poster ) <nl> 
new file <nl> ppp JsonParserFromReaderTest . java <nl> + package org . javaee7 . json . streaming . parser ; <nl> + import java . io . File ; <nl> + import java . io . StringReader ; <nl> + import javax . json . Json ; <nl> + import javax . json . stream . JsonParser ; <nl> + import org . jboss . arquillian . container . test . api . Deployment ; <nl> 
mmm ConfigurationValidator . java <nl> ppp ConfigurationValidator . java <nl> - if ( configuration . isBatch () & & configuration . getErrorOverrides () . length > 0 ) { <nl> - throw new FlywayException (" flyway . batch configuration option is incompatible with flyway . errorOverrides . \ n " + <nl> - " It is impossible to intercept the errors in a batch process . \ n " + <nl> 
mmm CommandTest . java <nl> ppp CommandTest . java <nl> - import static org . junit . Assert . assertEquals ; <nl> - import static org . junit . Assert . assertTrue ; <nl> + import org . junit . Ignore ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + @ Ignore (" DW lifecycle doesn ' t play well with Surefire ") <nl> 
mmm RexsterConfiguration . java <nl> ppp RexsterConfiguration . java <nl> - public static final String REXSTER _ INPUT _ REST _ ADDRESS = " rexster . input . rest . address "; <nl> - public static final String REXSTER _ INPUT _ REST _ PORT = " rexster . input . rest . port "; <nl> + public static final String REXSTER _ INPUT _ ADDRESS = " rexster . input . address "; <nl> 
new file <nl> ppp Feedback . java <nl> + package com . ichi2 . anki ; <nl> + import java . text . SimpleDateFormat ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Date ; <nl> + import java . util . List ; <nl> + import java . util . Locale ; <nl> + import java . util . TimeZone ; <nl> + import org . apache . http . NameValuePair ; <nl> 
new file <nl> ppp Issue3281 . java <nl> + package com . alibaba . json . bvt . issue _ 3200 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + import lombok . AllArgsConstructor ; <nl> + import lombok . Builder ; <nl> + import lombok . Data ; <nl> + import org . junit . Assert ; <nl> 
mmm Gt06FrameDecoderTest . java <nl> ppp Gt06FrameDecoderTest . java <nl> + Assert . assertEquals ( <nl> + binary (" 78781f1210020e140613cc04770690003e3f2e3414b20000000000000000044c446a0d0a "), <nl> + decoder . decode ( null , null , binary (" 78781f1210020e140613cc04770690003e3f2e3414b20000000000000000044c446a0d0a "))); <nl> 
mmm TaskOperationResource . java <nl> ppp TaskOperationResource . java <nl> - if ( entity != null & & StringUtils . isNotEmpty ( entity . getText ())) { <nl> - String startParams = entity . getText (); <nl> + String startParams = entity . getText (); <nl> + if ( StringUtils . isNotEmpty ( startParams )) { <nl> 
mmm KQueueSocketTest . java <nl> ppp KQueueSocketTest . java <nl> - import static org . junit . Assert . assertNotEquals ; <nl> - import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . *; <nl> + @ Test <nl> + public void testPeerPID () throws IOException { <nl> + BsdSocket s1 = BsdSocket . newSocketDomain (); <nl> 
new file <nl> ppp SimpleExample . java <nl> + package org . zaproxy . clientapi . core ; <nl> + public class SimpleExample { <nl> + public static void main ( String [] args ) { <nl> +  <nl> + String zapHost = " localhost "; <nl> + int zapPort = 8090 ; <nl> +  <nl> +  <nl> + try { <nl> +  <nl> + ClientApi api = new ClientApi ( zapHost , zapPort ); <nl> 
mmm LoadingCircleDrawable . java <nl> ppp LoadingCircleDrawable . java <nl> - final int maxStrokeRadius = (( int ) Math . max ( getForegroundLineSize (), getBackgroundLineSize ()) + 1 ) >> 1 ; <nl> + final int maxStrokeRadius = (( int ) Math . max ( getForegroundLineSize (), getBackgroundLineSize ()) >> 1 ) + 1 ; <nl> 
deleted file <nl> mmm SimpleLoginRequest . java <nl> - package org . datatransferproject . types . client . transfer ; <nl> - import com . fasterxml . jackson . annotation . JsonCreator ; <nl> - import com . fasterxml . jackson . annotation . JsonProperty ; <nl> - import io . swagger . annotations . ApiModel ; <nl> 
mmm RuleDefinition . java <nl> ppp RuleDefinition . java <nl> - public Builder ancestors ( Class <? extends RuleDefinition > . . . ancstrs ) { <nl> + @ SafeVarargs <nl> + public final Builder ancestors ( Class <? extends RuleDefinition > . . . ancstrs ) { <nl> 
new file <nl> ppp NativeBuildReport . java <nl> + import org . kohsuke . github . *; <nl> + import picocli . CommandLine ; <nl> + import picocli . CommandLine . Command ; <nl> + import picocli . CommandLine . Option ; <nl> + import picocli . CommandLine . Parameters ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> 
deleted file <nl> mmm ProxyDisabledStateEventBusEvent . java <nl> - package io . shardingsphere . orchestration . internal . event . state ; <nl> - import lombok . Getter ; <nl> - import lombok . RequiredArgsConstructor ; <nl> - import java . util . Collection ; <nl> - import java . util . Map ; <nl> - @ RequiredArgsConstructor <nl> 
deleted file <nl> mmm NoOpTransientBlobService . java <nl> - package org . apache . flink . docs . rest ; <nl> - import org . apache . flink . api . common . JobID ; <nl> - import org . apache . flink . runtime . blob . TransientBlobKey ; <nl> - import org . apache . flink . runtime . blob . TransientBlobService ; <nl> 
new file <nl> ppp TestParallelRefProc . java <nl> + import java . util . Arrays ; <nl> + import java . util . ArrayList ; <nl> + import jdk . test . lib . process . OutputAnalyzer ; <nl> + import jdk . test . lib . process . ProcessTools ; <nl> + public class TestParallelRefProc { <nl> + public static void main ( String args []) throws Exception { <nl> 
mmm soae001 . java <nl> ppp soae001 . java <nl> - if ( 1 != samplingResult ) { <nl> - System . out . println (" com . ibm . jvmti . tests . samplingObjectAllocation . soae001 . check () failed , expected 1 but got : " + samplingResult ); <nl> + if ( samplingResult < 1 ) { <nl> + System . out . println (" com . ibm . jvmti . tests . samplingObjectAllocation . soae001 . check () failed , expected 1 + but got : " + samplingResult ); <nl> 
new file <nl> ppp MeterRegistrationBenchmark . java <nl> + package io . micrometer . benchmark . core ; <nl> + import io . micrometer . core . instrument . MeterRegistry ; <nl> + import io . micrometer . core . instrument . simple . SimpleMeterRegistry ; <nl> + import org . openjdk . jmh . annotations . *; <nl> 
mmm RuptelaProtocolDecoderTest . java <nl> ppp RuptelaProtocolDecoderTest . java <nl> + verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertHexString ( <nl> + " 00560003116e7438a7a50100015565cbb9000020fd21300f113f4600005f000600090d090805011b13cf00020003001c012029ad00041d31dd1e0ebd160000c50000047200000000d0000000004100016a2a960000a5a300c9ee ")))); <nl> 
new file <nl> ppp PlatformHttpSpanDecorator . java <nl> + package org . apache . camel . opentracing . decorators ; <nl> + public class PlatformHttpSpanDecorator extends AbstractHttpSpanDecorator { <nl> + @ Override <nl> + public String getComponent () { <nl> + return " platform - http "; <nl> + } <nl> + @ Override <nl> 
new file <nl> ppp SplayTree . java <nl> + package ds ; <nl> + public class SplayTree { <nl> + } <nl> 
new file <nl> ppp GoRecursiveMethodCallMarkerInfoTest . java <nl> + package com . goide . marker ; <nl> + import com . goide . GoCodeInsightFixtureTestCase ; <nl> + import com . intellij . codeInsight . daemon . GutterMark ; <nl> + import com . intellij . icons . AllIcons ; <nl> + import com . intellij . openapi . util . text . StringUtil ; <nl> 
mmm GiraphInputFormat . java <nl> ppp GiraphInputFormat . java <nl> - private RefCountedCloseable < TitanVertexDeserializer > refCounter ; <nl> + private static RefCountedCloseable < TitanVertexDeserializer > refCounter ; <nl> - @ Override <nl> - public void setConf ( Configuration conf ) { <nl> + public void setConf ( Configuration conf , Boolean reset ) { <nl> 
mmm OnCompletionActions . java <nl> ppp OnCompletionActions . java <nl> 
mmm InstrumentedTimingCollector . java <nl> ppp InstrumentedTimingCollector . java <nl> + import com . yammer . metrics . Metrics ; <nl> + public InstrumentedTimingCollector () { <nl> + this ( Metrics . defaultRegistry ()); <nl> + } <nl> 
mmm TextLevelRule . java <nl> ppp TextLevelRule . java <nl> - @ Override <nl> - public int estimateContextForSureMatch () { <nl> - return - 1 ; <nl> - } <nl> 
mmm EncryptInsertOptimizeEngine . java <nl> ppp EncryptInsertOptimizeEngine . java <nl> + import com . google . common . base . Optional ; <nl> - for ( String each : insertColumnValues . getColumnNames ()) { <nl> + for ( int i = 0 ; i < insertColumnValues . getColumnNames () . size (); i + + ) { <nl> + String columnName = insertColumnValues . getColumnName ( i ); <nl> 
mmm FortranAnalyzerFactory . java <nl> ppp FortranAnalyzerFactory . java <nl> - " INC ",}; <nl> + " F95 ", <nl> + " F03 ", <nl> + " F08 ", <nl> + " F15 "}; <nl> 
mmm Gps103ProtocolDecoderTest . java <nl> ppp Gps103ProtocolDecoderTest . java <nl> + assertNotNull ( decoder . decode ( null , null , <nl> + " imei : 359710040565419 , tracker , 13 / 05 / 25 14 : 23 ,, F , 062209 . 000 , A , 0626 . 0411 , N , 10149 . 3904 , E , 0 . 00 , 0 ")); <nl> 
deleted file <nl> mmm KubernetesDeserializerSubstitutions . java <nl> - package io . quarkus . kubernetes . client . runtime . graal ; <nl> - import com . oracle . svm . core . annotate . Substitute ; <nl> - import com . oracle . svm . core . annotate . TargetClass ; <nl> - @ TargetClass ( className = " io . fabric8 . kubernetes . internal . KubernetesDeserializer ") <nl> 
mmm InventoryMessage . java <nl> ppp InventoryMessage . java <nl> + import static com . google . common . base . Preconditions . checkArgument ; <nl> + public static InventoryMessage with ( Transaction . . . txns ) { <nl> + checkArgument ( txns . length > 0 ); <nl> + InventoryMessage result = new InventoryMessage ( txns [ 0 ] . getParams ()); <nl> 
mmm KBPAnnotatorSpanishBenchmarkSlowITest . java <nl> ppp KBPAnnotatorSpanishBenchmarkSlowITest . java <nl> - KBP _ MINIMUM _ SCORE = . 1 ; <nl> + KBP _ MINIMUM _ SCORE = . 27 ; <nl> 
new file <nl> ppp TreeTraversal . java <nl> + public class TreeTraversal { <nl> + public static void main ( String [] args ) { <nl> + Node tree = new Node ( 5 ); <nl> + tree . insert ( 3 ); <nl> + tree . insert ( 7 ); <nl> + tree . printInOrder (); <nl> + System . out . println (); <nl> + tree . printPreOrder (); <nl> 
mmm EncoderDecoderUnitTest . java <nl> ppp EncoderDecoderUnitTest . java <nl> - import java . net . URL ; <nl> - import java . net . URLDecoder ; <nl> - import java . net . URLEncoder ; <nl> + import java . net . *; <nl> - URL url = new URL ( testUrl ); <nl> + URI uri = new URI ( testUrl ); <nl> - Assert . assertThat ( url . getProtocol (), CoreMatchers . is (" http ")); <nl> 
mmm ScaleSample . java <nl> ppp ScaleSample . java <nl> + import android . support . v4 . view . animation . FastOutLinearInInterpolator ; <nl> + import android . support . v4 . view . animation . LinearOutSlowInInterpolator ; <nl> - TransitionManager . beginDelayedTransition ( transitionsContainer , <nl> 
new file <nl> ppp MaterialComponentsViewInflater . java <nl> + package android . support . design . theme ; <nl> + import android . support . annotation . Keep ; <nl> + import android . support . v7 . app . AppCompatViewInflater ; <nl> + public class MaterialComponentsViewInflater extends AppCompatViewInflater {} <nl> 
mmm SellerStep1View . java <nl> ppp SellerStep1View . java <nl> - " The bitcoin buyer need to wait for at least one blockchain confirmation before " + <nl> + " The bitcoin buyer needs to wait for at least one blockchain confirmation before " + <nl> 
mmm ArchiveUtil . java <nl> ppp ArchiveUtil . java <nl> - import java . io . *; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> - public class ArchiveUtil <nl> + class ArchiveUtil <nl> 
mmm HttpSnoopServerInitializer . java <nl> ppp HttpSnoopServerInitializer . java <nl> 
mmm JavascriptClientFilter . java <nl> ppp JavascriptClientFilter . java <nl> 
mmm CustomKeyMap . java <nl> ppp CustomKeyMap . java <nl> - public V remove ( Object key ) { return super . remove ( customKey ( key )); } <nl> + public V remove ( Object key ) { <nl> + return super . remove ( customKey ( key )); <nl> + } <nl> - public boolean remove ( Object key , Object value ) { return super . remove ( customKey ( key ), value ); } <nl> 
new file <nl> ppp ResourceChat . java <nl> + package org . atmosphere . commons . jersey ; <nl> + import org . atmosphere . annotation . Broadcast ; <nl> + import org . atmosphere . annotation . Schedule ; <nl> + import org . atmosphere . annotation . Suspend ; <nl> + import org . atmosphere . util . XSSHtmlFilter ; <nl> 
mmm StanfordCoreNLPSlowITest . java <nl> ppp StanfordCoreNLPSlowITest . java <nl> - props . setProperty (" annotators ", <nl> - " tokenize , ssplit , pos , lemma , ner , regexner , parse , depparse , mention , entitymentions , coref , natlog , openie , kbp ," + <nl> - " entitylink "); <nl> + props . setProperty (" annotators ", " tokenize , cleanxml , ssplit , pos , lemma , ner , regexner , parse , depparse , mention ," + <nl> 
mmm Jsonschema2PojoTaskIT . java <nl> ppp Jsonschema2PojoTaskIT . java <nl> - Class <?> generatedClass = resultsClassLoader . loadClass (" com . example . PrimitiveProperties "); <nl> + Class <?> generatedClass = resultsClassLoader . loadClass (" com . example . WordDelimit "); <nl> 
new file <nl> ppp GlideFutures . java <nl> + package com . bumptech . glide . integration . concurrent ; <nl> + import androidx . annotation . NonNull ; <nl> + import androidx . annotation . Nullable ; <nl> + import androidx . concurrent . futures . CallbackToFutureAdapter ; <nl> + import androidx . concurrent . futures . CallbackToFutureAdapter . Completer ; <nl> 
mmm Answer . java <nl> ppp Answer . java <nl> - * return " called with arguments : " + args ; <nl> + * return " called with arguments : " + Arrays . toString ( args ); <nl> 
mmm soae001 . java <nl> ppp soae001 . java <nl> + System . out . println (" This is expected with an empty JEP331 implementation !"); <nl> + result = true ; <nl> 
mmm MessageSet . java <nl> ppp MessageSet . java <nl> - private String id ; <nl> - private List < MessageExt > data ; <nl> + private final String id ; <nl> + private final List < MessageExt > data ; <nl> + private final Iterator < MessageExt > iterator ; <nl> + this . iterator = data . iterator (); <nl> - return data . iterator () . hasNext (); <nl> 
mmm SamplingService . java <nl> ppp SamplingService . java <nl> - } else { <nl> + } else { <nl> 
new file <nl> ppp HelloConfigurableVerticle . java <nl> + package io . vertx . example ; <nl> + import io . vertx . core . AbstractVerticle ; <nl> + public class HelloConfigurableVerticle extends AbstractVerticle { <nl> + @ Override <nl> + public void start () throws Exception { <nl> + String name = config () . getString (" name ", " world "); <nl> 
new file <nl> ppp SpringBootConsoleApplication . java <nl> + package com . baeldung . springbootnonwebapp ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + import org . springframework . boot . CommandLineRunner ; <nl> + import org . springframework . boot . SpringApplication ; <nl> 
mmm ScrollableTabLayout . java <nl> ppp ScrollableTabLayout . java <nl> + setTabMode ( TabLayout . MODE _ FIXED ); <nl> + setTabMode ( TabLayout . MODE _ FIXED ); <nl> - protected void onAttachedToWindow () { <nl> - super . onAttachedToWindow (); <nl> + protected void onLayout ( boolean changed , int l , int t , int r , int b ) { <nl> 
mmm MainActivity . java <nl> ppp MainActivity . java <nl> 
mmm SQLServerGrammar . java <nl> ppp SQLServerGrammar . java <nl> + @ Deprecated <nl> + @ Deprecated <nl> 
mmm SellerSignAndFinalizePayoutTx . java <nl> ppp SellerSignAndFinalizePayoutTx . java <nl> - import static com . google . common . base . Preconditions . checkArgument ; <nl> - Optional < AddressEntry > MultiSigAddressEntryOptional = walletService . getAddressEntry ( id , AddressEntry . Context . MULTI _ SIG ); <nl> 
mmm SpringContextLiveTest . java <nl> ppp SpringContextLiveTest . java <nl> - public class SpringContextTest { <nl> + public class SpringContextLiveTest { <nl> 
new file <nl> ppp ScreenUtils . java <nl> + package me . jessyan . autosize . utils ; <nl> + import android . content . Context ; <nl> + import android . content . res . Resources ; <nl> + import android . graphics . Point ; <nl> + import android . os . Build ; <nl> + import android . util . DisplayMetrics ; <nl> 
mmm RocksDbStorageEngine . java <nl> ppp RocksDbStorageEngine . java <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + import org . rocksdb . RocksDBException ; <nl> + import voldemort . store . PersistenceFailureException ; <nl> + import voldemort . store . StoreBinaryFormat ; <nl> 
mmm RelayTunnelProvider . java <nl> ppp RelayTunnelProvider . java <nl> - private boolean first ; <nl> + private boolean first = true ; <nl> - if (! first ) { <nl> - Thread . sleep ( 5000 ); <nl> - first = true ; <nl> - } <nl> + if (! first ) { <nl> + Thread . sleep ( 5000 ); <nl> + } else { <nl> + first = false ; <nl> 
mmm GameEventHandler . java <nl> ppp GameEventHandler . java <nl> - import baritone . bot . chunk . ChunkPacker ; <nl> - import baritone . bot . event . events . type . EventState ; <nl> - import baritone . bot . utils . Helper ; <nl> - public final class GameEventHandler implements IGameEventListener , Helper { <nl> 
mmm SuiteDisplayName . java <nl> ppp SuiteDisplayName . java <nl> - import static org . junit . platform . commons . meta . API . Usage . Maintained ; <nl> + import static java . lang . annotation . ElementType . TYPE ; <nl> + import static java . lang . annotation . RetentionPolicy . RUNTIME ; <nl> + import static org . apiguardian . api . API . Status . MAINTAINED ; <nl> 
mmm SecurityUtils . java <nl> ppp SecurityUtils . java <nl> - public final class SecurityUtils { <nl> + public class SecurityUtils { <nl> 
mmm FactoryExpressionTransformer . java <nl> ppp FactoryExpressionTransformer . java <nl> + if ( projection . getArgs () . size () < tuple . length ) { <nl> + Object [] shortened = new Object [ projection . getArgs () . size ()]; <nl> + System . arraycopy ( tuple , 0 , shortened , 0 , shortened . length ); <nl> 
new file <nl> ppp GlideTest . java <nl> + package com . bumptech . glide ; <nl> + import android . net . Uri ; <nl> + import android . test . AndroidTestCase ; <nl> + import android . view . ViewGroup ; <nl> + import android . widget . ImageView ; <nl> + import com . bumptech . glide . presenter . ImagePresenter ; <nl> 
mmm OrientDBGraphAPITest . java <nl> ppp OrientDBGraphAPITest . java <nl> - boolean articleExists = graph . getVertexType (" Article ") != null ; <nl> - boolean writerExists = graph . getVertexType (" Writer ") != null ; <nl> - boolean authorExists = graph . getVertexType (" Author ") != null ; <nl> - boolean editorExists = graph . getVertexType (" Editor ") != null ; <nl> 
mmm MinimumHeightTree . java <nl> ppp MinimumHeightTree . java <nl> - public class MinumHeightTree { <nl> + public class MinimumHeightTree { <nl> - MinumHeightTree mht = new MinumHeightTree (); <nl> + MinimumHeightTree mht = new MinimumHeightTree (); <nl> 
mmm LockResourceTest . java <nl> ppp LockResourceTest . java <nl> - public class LockResourceTest { <nl> + public final class LockResourceTest { <nl> 
mmm TransactionalTemplate . java <nl> ppp TransactionalTemplate . java <nl> - * @ throws ExecutionException the execution exception <nl> + * @ throws TransactionalExecutor . ExecutionException the execution exception <nl> 
mmm MockLocalizerStatus . java <nl> ppp MockLocalizerStatus . java <nl> - return getLocalizerId () . equals ( other ) <nl> + return getLocalizerId () . equals ( other . getLocalizerId ()) <nl> 
mmm ClojureTransformer . java <nl> ppp ClojureTransformer . java <nl> - package org . apache . storm . maven . shade . clojure ; <nl> - import org . apache . maven . plugins . shade . relocation . Relocator ; <nl> - import org . apache . maven . plugins . shade . resource . ResourceTransformer ; <nl> + package org . apache . storm . maven . shade . clojure ; <nl> 
mmm RenderingRegistry . java <nl> ppp RenderingRegistry . java <nl> - * Will be removed in 1 . 9 . <nl> + * TODO Will be removed in 1 . 11 . <nl> 
mmm OrchestrationMasterSlaveDataSource . java <nl> ppp OrchestrationMasterSlaveDataSource . java <nl> - public final class OrchestrationMasterSlaveDataSource extends AbstractOrchestrationDataSource { <nl> + public class OrchestrationMasterSlaveDataSource extends AbstractOrchestrationDataSource { <nl> 
new file <nl> ppp NewMatchersTest . java <nl> + package org . mockitousage . matchers ; <nl> + import static org . mockito . Matchers . *; <nl> + import static org . mockito . Mockito . *; <nl> + import java . util . Arrays ; <nl> + import java . util . HashMap ; <nl> + import java . util . HashSet ; <nl> + import org . junit . Before ; <nl> 
new file <nl> ppp RooEntitiesTest . java <nl> + package com . mysema . query . domain ; <nl> + import static org . junit . Assert . assertNotNull ; <nl> + import org . junit . Test ; <nl> + public class RooEntitiesTest { <nl> + @ Test <nl> + public void test () { <nl> + assertNotNull ( QRooEntities _ MyEntity . myEntity ); <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 5 . 0 - beta2 "; <nl> + public static final String VERSION = " 2 . 5 . 0 - beta3 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 5 . 0 - beta2 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 5 . 0 - beta3 "; <nl> 
mmm RocketMQBinderConfigurationProperties . java <nl> ppp RocketMQBinderConfigurationProperties . java <nl> + import javax . validation . constraints . Pattern ; <nl> + import org . springframework . validation . annotation . Validated ; <nl> + @ Validated <nl> + @ Pattern ( regexp = "^[\\ d . :;] + $", <nl> 
mmm FrenchRuleDisambiguatorTest . java <nl> ppp FrenchRuleDisambiguatorTest . java <nl> - import org . languagetool . JLanguageTool ; <nl> - private JLanguageTool lt ; <nl> - lt = new JLanguageTool ( language ); <nl> 
mmm TestOpenSSLConf . java <nl> ppp TestOpenSSLConf . java <nl> - ciphers = SSLContext . getCiphers ( sslHostConfig . getOpenSslContext ()); <nl> + ciphers = SSLContext . getCiphers ( sslHostConfig . getOpenSslContext () . longValue ()); <nl> 
mmm GoogleReverseGeocoder . java <nl> ppp GoogleReverseGeocoder . java <nl> + import javax . json . Json ; <nl> + import javax . json . JsonArray ; <nl> + import javax . json . JsonObject ; <nl> + import javax . json . JsonString ; <nl> - import javax . json . *; <nl> - JsonObject result = ( JsonObject ) json . getJsonArray (" results ") . get ( 0 ); <nl> 
new file <nl> ppp _ 1267 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 1267 { <nl> + public static class Solution1 { <nl> + public int countServers ( int [][] grid ) { <nl> + return - 1 ; <nl> + } <nl> + } <nl> + } <nl> 
mmm JBangIntegration . java <nl> ppp JBangIntegration . java <nl> - if ( name . startsWith (" org . ") & & !( name . startsWith (" org . xml . ") || name . startsWith (" org . w3c . "))) { <nl> + if ( name . startsWith (" org . ")) { <nl> - if ( name . startsWith (" org /") & & !( name . startsWith (" org / xml /") || name . startsWith (" org / w3c /"))) { <nl> 
mmm Version . java <nl> ppp Version . java <nl> - VERSION _ REVISION = 6 ; <nl> + VERSION _ REVISION = 7 ; <nl> 
new file <nl> ppp NullPointerAndEmptyArrayTest . java <nl> + package APITests ; <nl> + import java . net . URL ; <nl> + import CustomClassloaders . CustomURLClassLoader ; <nl> + public class NullPointerAndEmptyArrayTest { <nl> + public static void main ( String [] args ) throws Throwable { <nl> + NullPointerAndEmptyArrayTest test = new NullPointerAndEmptyArrayTest (); <nl> 
deleted file <nl> mmm XMacros . java <nl> - package org . lwjgl . system . linux ; <nl> - import java . nio . ByteBuffer ; <nl> - public final class XMacros { <nl> - private XMacros () { <nl> - } <nl> - public static void XISetMask ( ByteBuffer ptr , int event ) { <nl> - int index = ptr . position () + ( event >> 3 ); <nl> 
mmm ZWaveDbProductFile . java <nl> ppp ZWaveDbProductFile . java <nl> + import java . util . Collections ; <nl> - return Configuration . Parameter ; <nl> + final List < ZWaveDbConfigurationParameter > params ; <nl> + if ( Configuration == null ) { <nl> + params = Collections . emptyList (); <nl> + } else { <nl> 
new file <nl> ppp JsTreeDumpTest . java <nl> + package net . sourceforge . pmd . lang . ecmascript . ast ; <nl> + import org . junit . Test ; <nl> + import net . sourceforge . pmd . lang . ast . test . BaseParsingHelper ; <nl> + import net . sourceforge . pmd . lang . ast . test . BaseTreeDumpTest ; <nl> + import net . sourceforge . pmd . lang . ast . test . NodePrintersKt ; <nl> 
new file <nl> ppp CartBeanStatefulnessTest . java <nl> + package org . javaee7 . ejb . stateful ; <nl> + import org . jboss . arquillian . container . test . api . Deployment ; <nl> + import org . jboss . arquillian . junit . Arquillian ; <nl> + import org . jboss . arquillian . junit . InSequence ; <nl> + import org . jboss . shrinkwrap . api . Archive ; <nl> 
mmm CountResource . java <nl> ppp CountResource . java <nl> - import org . graylog2 . indexer . Indexer ; <nl> - import org . graylog2 . indexer . results . DateHistogramResult ; <nl> - import javax . ws . rs . *; <nl> + import javax . ws . rs . GET ; <nl> + import javax . ws . rs . Path ; <nl> + import javax . ws . rs . Produces ; <nl> 
mmm BaseApplication . java <nl> ppp BaseApplication . java <nl> + import android . app . Activity ; <nl> + import cat . ereza . customactivityoncrash . activity . DefaultErrorActivity ; <nl> + import me . jessyan . autosize . external . ExternalAdaptInfo ; <nl> + import me . jessyan . autosize . internal . CustomAdapt ; <nl> 
mmm HikariCPConnectionProvider . java <nl> ppp HikariCPConnectionProvider . java <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - private static final Logger LOG = LoggerFactory . getLogger ( HikariCPConnectionProvider . class ); <nl> - if ( properties . containsKey (" dataSource . url ")) { <nl> 
mmm FakeToast . java <nl> ppp FakeToast . java <nl> + import android . view . View ; <nl> + import android . widget . TextView ; <nl> + import com . xtremelabs . robolectric . util . RealObject ; <nl> - import java . util . HashMap ; <nl> - import java . util . HashSet ; <nl> - import java . util . Map ; <nl> 
mmm MsParser . java <nl> ppp MsParser . java <nl> - if ( StringUtils . equalsIgnoreCase ( requestObject . getString (" method "), " POST ") & & bodies != null ) { <nl> + if ( bodies != null ) { <nl> - if ( StringUtils . equalsIgnoreCase ( requestObject . getString (" method "), " POST ") & & bodyObj != null ) { <nl> 
mmm GetUserListMembers . java <nl> ppp GetUserListMembers . java <nl> - if ( args . length < 1 ) { <nl> + if ( args . length < 2 ) { <nl> 
mmm GoTfsVersionControlClient . java <nl> ppp GoTfsVersionControlClient . java <nl> - WorkspaceLocation workspaceLocation = " Y " . equalsIgnoreCase ( getProperty (" toggle . agent . tfs . use . server . workspace . location ", " N ")) ? SERVER : null ; <nl> + WorkspaceLocation workspaceLocation = " Y " . equalsIgnoreCase ( getProperty (" toggle . agent . tfs . use . server . workspace . location ", " Y ")) ? SERVER : null ; <nl> 
mmm AntResourceAccessor . java <nl> ppp AntResourceAccessor . java <nl> + if ( changeLogDirectory != null ) { <nl> + changeLogDirectory = changeLogDirectory . replace ("\\", "/"); <nl> + } <nl> - this . addRootPath ( new File (" . ") . getAbsoluteFile () . toPath ()); <nl> + this . addRootPath ( new File ("") . getAbsoluteFile () . toPath ()); <nl> 
new file <nl> ppp ScrollEvent . java <nl> + package org . apache . cordova ; <nl> + import android . view . View ; <nl> + public class ScrollEvent { <nl> + public int l , t , nl , nt ; <nl> + private View targetView ; <nl> + ScrollEvent ( int nx , int ny , int x , int y , View view ) <nl> + { <nl> + l = x ; y = t ; nl = nx ; nt = ny ; <nl> 
mmm CustomParamList . java <nl> ppp CustomParamList . java <nl> + @ Parameters ( paramLabel = " Another ", description = { <nl> + " Some positional parameter with a very very long description that spans multiple lines ", <nl> + " And has multiple paragraphs " <nl> + }) <nl> + String str2 ; <nl> - " Usage : CustomParamList [ - hV ] Other % n " + <nl> 
mmm ProcessVariablesInitiator . java <nl> ppp ProcessVariablesInitiator . java <nl> - + "' with value " + variableDefinition . getValue ()); <nl> + + "' with value " + variableDefinition . getValue (), e ); <nl> 
mmm MultiDexHelper . java <nl> ppp MultiDexHelper . java <nl> + private static final String INSTANT _ RUN _ DEX _ DIR _ PATH = " files / instant - run / dex /"; <nl> + sourcePaths . add ( dexFile . getAbsolutePath ()); <nl> + } <nl> + } <nl> - } <nl> + } <nl> 
mmm Utils . java <nl> ppp Utils . java <nl> - int i = originalText . toLowerCase ( Locale . getDefault ()) . indexOf ( constraint ); <nl> + int i = originalText . toLowerCase ( Locale . getDefault ()) . indexOf ( constraint . toLowerCase ( Locale . getDefault ())); <nl> 
mmm TitanKeyVertex . java <nl> ppp TitanKeyVertex . java <nl> - indexes = new IndexDefinition [ indexTypes . length ]; <nl> + IndexDefinition tmp [] = new IndexDefinition [ indexTypes . length ]; <nl> - indexes [ i ]= IndexDefinition . of ( indexTypes [ i ], indexParas [ i ]); <nl> + tmp [ i ]= IndexDefinition . of ( indexTypes [ i ], indexParas [ i ]); <nl> 
mmm BuildTest . java <nl> ppp BuildTest . java <nl> - " Missing required parameters : base - image , destination - image ", ex . getMessage ()); <nl> + " Missing required parameters : ' base - image ', ' destination - image '", ex . getMessage ()); <nl> 
new file <nl> ppp Jersey2Resource . java <nl> + package org . atmosphere . samples . chat . jersey ; <nl> + import org . atmosphere . client . TrackMessageSizeInterceptor ; <nl> + import org . atmosphere . config . service . AtmosphereService ; <nl> + import org . atmosphere . cpr . BroadcasterFactory ; <nl> 
mmm ThrowingSupplier . java <nl> ppp ThrowingSupplier . java <nl> - import java . util . function . Supplier ; <nl> - public interface ThrowingSupplier < T , E extends Exception > extends Supplier < T > { <nl> - @ Override <nl> - default T get () { <nl> - try { <nl> - return throwingGet (); <nl> - } catch ( RuntimeException e ) { <nl> 
mmm MysqlSchemaCompactorTest . java <nl> ppp MysqlSchemaCompactorTest . java <nl> + " drop database if exists foo ", <nl> 
mmm PlanUnwrappingReduceGroupOperator . java <nl> ppp PlanUnwrappingReduceGroupOperator . java <nl> - private TupleUnwrappingIterator < IN , K > iter ; <nl> + private TupleUnwrappingIterator < IN , K > iter = new TupleUnwrappingIterator < IN , K >(); <nl> - private ReferenceWrappingCollector < OUT > coll ; <nl> 
new file <nl> ppp CasIdleStrategy . java <nl> + package uk . co . real _ logic . aeron ; <nl> + import uk . co . real _ logic . agrona . concurrent . IdleStrategy ; <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> + public class CasIdleStrategy implements IdleStrategy <nl> + { <nl> + private static final int COUNT = Integer . getInteger (" aeron . cas . idle . strategy . count ", 1 ); <nl> 
mmm StateBuilder . java <nl> ppp StateBuilder . java <nl> +  <nl> + private static final int COUNT = 500 * 10000 ; <nl> - if ( machine . getTotalLoss () > 300 * 10000 ) { <nl> + if ( machine . getTotalLoss () > COUNT ) { <nl> 
mmm DownloadAuthenticationActivity . java <nl> ppp DownloadAuthenticationActivity . java <nl> - private static final String TAG = " DownloadAuthenticationActivity "; <nl> 
mmm Utils . java <nl> ppp Utils . java <nl> + import android . support . annotation . AttrRes ; <nl> + import android . support . annotation . ColorRes ; <nl> + import android . support . annotation . DrawableRes ; <nl> - public static Drawable getTintedDrawable ( Resources res , Resources . Theme theme , int id , <nl> 
mmm SystemProfilerParserTest . java <nl> ppp SystemProfilerParserTest . java <nl> + output = TestHelper . inputStreamToString ( SystemProfilerParserTest . class . getResourceAsStream (" system _ profiler _ output5 . txt ")); <nl> + assertEquals (" 0X2341 _ 0X8041 ", new SystemProfilerParser () . extractVIDAndPID ( output , "/ dev / cu . usbmodem06201 ")); <nl> 
mmm MaxwellMysqlStatus . java <nl> ppp MaxwellMysqlStatus . java <nl> + private void ensureServerIDIsSet () throws SQLException , MaxwellCompatibilityError { <nl> + String id = getVariableState (" server _ id ", false ); <nl> + if ( " 0 " . equals ( id ) ) { <nl> + throw new MaxwellCompatibilityError (" server _ id is ' 0 ' . Maxwell will not function without a server _ id being set . "); <nl> 
mmm MySqlMappingShardingTest . java <nl> ppp MySqlMappingShardingTest . java <nl> + import junit . framework . Assert ; <nl> - public void test _ 0 () throws Exception { <nl> + public void test _ 0 () throws Exception { <nl> + " WHERE u . uid = ' a '"; <nl> - System . out . println ( sql ); <nl> + Assert . assertEquals ( expected , sql ); <nl> 
mmm ObjectCommandsTest . java <nl> ppp ObjectCommandsTest . java <nl> - Thread . sleep ( 10001 ); <nl> - assertEquals ( new Long ( 10 ), time ); <nl> + assertEquals ( new Long ( 0 ), time ); <nl> - assertEquals ( new Long ( 10 ), time ); <nl> + assertEquals ( new Long ( 0 ), time ); <nl> 
new file <nl> ppp TO _ DATEWithoutDateFormatTest . java <nl> + package net . sourceforge . pmd . lang . plsql . rule . errorprone ; <nl> + import net . sourceforge . pmd . testframework . PmdRuleTst ; <nl> + public class TO _ DATEWithoutDateFormatTest extends PmdRuleTst { <nl> + } <nl> 
mmm SampleApplication . java <nl> ppp SampleApplication . java <nl> - import java . io . File ; <nl> - import okhttp3 . Cache ; <nl> - . cache ( new Cache ( new File ( getCacheDir (), " okhttp "), 10 * 1024 )) <nl> 
mmm ExportedDepsClosureResolver . java <nl> ppp ExportedDepsClosureResolver . java <nl> - exportedDeps = arg . getExportedDeps (); <nl> + exportedDeps = <nl> + ImmutableSet . < BuildTarget > builder () <nl> + . addAll ( arg . getExportedDeps ()) <nl> + . addAll ( arg . getExportedProvidedDeps ()) <nl> + . build (); <nl> 
mmm LogicSchema . java <nl> ppp LogicSchema . java <nl> - public LogicSchema ( final String name , final Map < String , DataSourceParameter > dataSources , final boolean isUsingRegistry ) { <nl> + public LogicSchema ( final String name , final Map < String , DataSourceParameter > dataSources ) { <nl> 
mmm CLRSourceDispatcher . java <nl> ppp CLRSourceDispatcher . java <nl> - serviceInstanceCLRThread . setId ( serviceInstance ); <nl> + serviceInstanceCLRThread . setId ( serviceInstanceId ); <nl> 
new file <nl> ppp LoginUserRuleTest . java <nl> + package alluxio ; <nl> + import alluxio . security . LoginUser ; <nl> + import alluxio . security . LoginUserTestUtils ; <nl> + import org . junit . After ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import org . junit . runners . model . Statement ; <nl> 
new file <nl> ppp _ 1619 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . Arrays ; <nl> + public class _ 1619 { <nl> + public static class Solution1 { <nl> + public double trimMean ( int [] arr ) { <nl> + Arrays . sort ( arr ); <nl> + int n = arr . length ; <nl> + long sum = 0 ; <nl> 
deleted file <nl> mmm V3 _ _ remove _ foreign _ key . java <nl> - package db . h2 . migration ; <nl> - import java . sql . Connection ; <nl> - import java . sql . ResultSet ; <nl> - import org . flywaydb . core . api . migration . jdbc . JdbcMigration ; <nl> - public class V3 _ _ remove _ foreign _ key implements JdbcMigration { <nl> 
mmm SingleShareIntent . java <nl> ppp SingleShareIntent . java <nl> - } else { <nl> + } else { <nl> - } else { <nl> - super . open ( options ); <nl> - } <nl> + } <nl> + super . open ( options ); <nl> 
mmm ProtocolUtil . java <nl> ppp ProtocolUtil . java <nl> + import java . util . Map ; <nl> + import java . util . concurrent . ConcurrentHashMap ; <nl> + Map < String , Object > m = attributes ( webSocket , request ); <nl> - . attributes ( webSocket . attributes ()) <nl> + . attributes ( m ) <nl> + private static Map < String , Object > attributes ( WebSocket webSocket , AtmosphereRequest request ) { <nl> 
mmm MasterSlaveRouter . java <nl> ppp MasterSlaveRouter . java <nl> + import io . shardingsphere . core . util . SQLLogger ; <nl> + private final boolean showSQL ; <nl> - return route ( new SQLJudgeEngine ( sql ) . judge () . getType ()); <nl> + Collection < String > result = route ( new SQLJudgeEngine ( sql ) . judge () . getType ()); <nl> 
mmm OCSVTransformerTest . java <nl> ppp OCSVTransformerTest . java <nl> + @ Test <nl> + public void testFloatDouble () { <nl> + String cfgJson = "{ source : { content : { value : ' firstDig , secondDig \ n10 . 78 , \" 888888888888888888878 , 9 \"' } }, extractor : { row : {} }, transformers : [{ csv : {} }], loader : { test : {} } }"; <nl> 
mmm RequestLogDetail . java <nl> ppp RequestLogDetail . java <nl> + tryPrettyJson ( resp ) <nl> + "\ n "); <nl> - html . getElement () . getStyle () . setProperty (" userSelect ", " text "); <nl> 
mmm YamlShadowDataSourceFactory . java <nl> ppp YamlShadowDataSourceFactory . java <nl> - import lombok . SneakyThrows ; <nl> + import java . io . IOException ; <nl> + import java . sql . SQLException ; <nl> + * @ throws IOException IO exception <nl> + * @ throws SQLException SQL exception <nl> - @ SneakyThrows <nl> 
mmm InfluxdbMetricsSender . java <nl> ppp InfluxdbMetricsSender . java <nl> 
mmm VoidMethodStubbable . java <nl> ppp VoidMethodStubbable . java <nl> - package org . mockito . internal . stubbing ; <nl> - import org . mockito . Mockito ; <nl> - public interface VoidMethodStubbable < T > { <nl> - VoidMethodStubbable < T > toThrow ( Throwable throwable ); <nl> - VoidMethodStubbable < T > toReturn (); <nl> 
mmm ThingsboardInstallApplication . java <nl> ppp ThingsboardInstallApplication . java <nl> + import lombok . extern . slf4j . Slf4j ; <nl> + @ Slf4j <nl> - SpringApplication application = new SpringApplication ( ThingsboardInstallApplication . class ); <nl> - application . setAdditionalProfiles (" install "); <nl> 
new file <nl> ppp EncryptorBeanDefinitionParserTag . java <nl> + package org . apache . shardingsphere . shardingjdbc . spring . namespace . constants ; <nl> + import lombok . AccessLevel ; <nl> + import lombok . NoArgsConstructor ; <nl> + @ NoArgsConstructor ( access = AccessLevel . PRIVATE ) <nl> + public final class EncryptorBeanDefinitionParserTag { <nl> 
mmm AggregationDistinctToken . java <nl> ppp AggregationDistinctToken . java <nl> - import io . shardingsphere . core . util . SQLUtil ; <nl> - private String tableName ; <nl> + private String columnName ; <nl> - public String getIndexName () { <nl> - return SQLUtil . getExactlyValue ( originalLiterals ); <nl> 
mmm MockDirectoryFactory . java <nl> ppp MockDirectoryFactory . java <nl> - (( MockDirectoryWrapper ) dir ) . setAssertNoUnrefencedFilesOnClose ( false ); <nl> + MockDirectoryWrapper mockDirWrapper = ( MockDirectoryWrapper ) dir ; <nl> + mockDirWrapper . setAssertNoUnrefencedFilesOnClose ( false ); <nl> + mockDirWrapper . setCheckIndexOnClose ( false ); <nl> 
mmm GameOverDialog . java <nl> ppp GameOverDialog . java <nl> + if ( control . saves . getCurrent () != null ){ <nl> + t . add ( Core . bundle . format (" stat . playtime ", control . saves . getCurrent () . getPlayTime ())); <nl> + t . row (); <nl> + } <nl> 
mmm InventoryID . java <nl> ppp InventoryID . java <nl> - EQUIPMENT ( 94 ); <nl> + EQUIPMENT ( 94 ), <nl> + PUZZLE _ BOX ( 140 ); <nl> 
mmm DefaultMarkdownManager . java <nl> ppp DefaultMarkdownManager . java <nl> - import static org . pegdown . Extensions . ALL ; <nl> + import static org . pegdown . Extensions . ALL _ WITH _ OPTIONALS ; <nl> - PegDownProcessor processor = new PegDownProcessor ( ALL , plugins ); <nl> + PegDownProcessor processor = new PegDownProcessor ( ALL _ WITH _ OPTIONALS , plugins ); <nl> 
mmm MoveFunctionDeclarations . java <nl> ppp MoveFunctionDeclarations . java <nl> + import com . google . common . collect . ArrayListMultimap ; <nl> + import com . google . common . collect . ListMultimap ; <nl> + import com . google . common . collect . Multimaps ; <nl> - import java . util . ArrayList ; <nl> 
mmm DisruptorVmSplitterTest . java <nl> ppp DisruptorVmSplitterTest . java <nl> - import org . apache . camel . impl . JndiRegistry ; <nl> 
mmm SpringContextTest . java <nl> ppp SpringContextTest . java <nl> - package org . baeldung ; <nl> + package com . baeldung ; <nl> 
mmm VitoView . java <nl> ppp VitoView . java <nl> - import com . facebook . fresco . vito . provider . FrescoVitoProvider ; <nl> - public static void init () { <nl> - init ( <nl> - new VitoViewImpl2 ( <nl> - FrescoVitoProvider . getController (), FrescoVitoProvider . getImagePipeline ())); <nl> - } <nl> 
mmm ConfigPhase . java <nl> ppp ConfigPhase . java <nl> - @ Deprecated <nl> - public static final ConfigPhase RUN _ TIME _ STATIC = BUILD _ AND _ RUN _ TIME _ FIXED ; <nl> 
mmm Aapt2Compile . java <nl> ppp Aapt2Compile . java <nl> - context . getSourcePathResolver () . getRelativePath ( resDir ), <nl> + context . getSourcePathResolver () . getAbsolutePath ( resDir ), <nl> 
mmm UndirectedGraphConnections . java <nl> ppp UndirectedGraphConnections . java <nl> - new HashMap < N , V >( INNER _ CAPACITY , INNER _ LOAD _ FACTOR )); <nl> + new HashMap < N , V >( INNER _ CAPACITY , INNER _ LOAD _ FACTOR )); <nl> 
mmm DoktornaraboteApi . java <nl> ppp DoktornaraboteApi . java <nl> 
new file <nl> ppp MessageReferenceTest . java <nl> + package com . fsck . k9 . activity ; <nl> + import com . fsck . k9 . mail . Flag ; <nl> + import com . fsck . k9 . mail . MessagingException ; <nl> + import junit . framework . TestCase ; <nl> + public class MessageReferenceTest extends TestCase <nl> + { <nl> 
mmm GoogleJavaFormatVersion . java <nl> ppp GoogleJavaFormatVersion . java <nl> - import com . google . common . base . MoreObjects ; <nl> - public static final String VERSION = <nl> - MoreObjects . firstNonNull ( Main . class . getPackage () . getImplementationVersion (), " dev "); <nl> + public static final String VERSION = " 1 . 0 "; <nl> 
mmm MixinItemStack . java <nl> ppp MixinItemStack . java <nl> - baritoneHash = item == null ? - 1 : item . hashCode () * itemDamage ; <nl> + baritoneHash = item == null ? - 1 : item . hashCode () + itemDamage ; <nl> 
mmm ConfInterpreter . java <nl> ppp ConfInterpreter . java <nl> - return null ; <nl> + return FormType . NATIVE ; <nl> 
mmm MockContextSnapshot . java <nl> ppp MockContextSnapshot . java <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - import org . apache . skywalking . apm . agent . core . context . ids . DistributedTraceId ; <nl> - List < DistributedTraceId > distributedTraceIds = new ArrayList < DistributedTraceId >(); <nl> 
mmm MessageCounter . java <nl> ppp MessageCounter . java <nl> - public int getThroughput (); <nl> - public int getHighestThroughput (); <nl> - public void resetThroughput (); <nl> - public void incrementThroughput (); <nl> - public void countUpThroughput ( final int x ); <nl> 
new file <nl> ppp Support . java <nl> + package org . apache . maven . it ; <nl> + public class Support <nl> + { <nl> + } <nl> 
new file <nl> ppp _ 84 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . Stack ; <nl> + public class _ 84 { <nl> + public int largestRectangleArea ( int [] heights ) { <nl> + int len = heights . length ; <nl> + Stack < Integer > s = new Stack <>(); <nl> + int maxArea = 0 ; <nl> 
mmm QueryVisitorFieldEnvironment . java <nl> ppp QueryVisitorFieldEnvironment . java <nl> 
new file <nl> ppp HelloClientSpec . java <nl> + package io . micronaut . docs . server . intro ; <nl> + import io . micronaut . context . ApplicationContext ; <nl> + import io . micronaut . context . env . Environment ; <nl> + import io . micronaut . runtime . server . EmbeddedServer ; <nl> + import org . junit . AfterClass ; <nl> 
mmm Generated . java <nl> ppp Generated . java <nl> + int hash () default - 1 ; <nl> 
new file <nl> ppp Authority . java <nl> + package io . shardingsphere . dbtest . cases . authority ; <nl> + import io . shardingsphere . core . constant . DatabaseType ; <nl> + import lombok . Getter ; <nl> + import lombok . Setter ; <nl> + import javax . xml . bind . annotation . XmlElement ; <nl> + import javax . xml . bind . annotation . XmlRootElement ; <nl> 
mmm Flash . java <nl> ppp Flash . java <nl> + private static final String ATTRIBUTE = " flash "; <nl> - this . value = ( T ) session . getAttribute (" flash "); <nl> + this . value = ( T ) session . getAttribute ( ATTRIBUTE ); <nl> - session . removeAttribute (" flash "); <nl> + session . removeAttribute ( ATTRIBUTE ); <nl> 
mmm NumericFormatTest . java <nl> ppp NumericFormatTest . java <nl> - import io . swagger . annotations . ApiModelProperty ; <nl> - import io . swagger . models . Model ; <nl> + import io . swagger . oas . models . media . Schema ; <nl> - final Map < String , Model > models = ModelConverters . getInstance () . readAll ( ModelWithIntegerFields . class ); <nl> 
mmm PetValidator . java <nl> ppp PetValidator . java <nl> 
deleted file <nl> mmm ConcurrentCountersManager . java <nl> - package io . aeron . driver ; <nl> - import org . agrona . DirectBuffer ; <nl> - import org . agrona . MutableDirectBuffer ; <nl> - import org . agrona . concurrent . AtomicBuffer ; <nl> - import org . agrona . concurrent . status . CountersManager ; <nl> 
deleted file <nl> mmm MapMatcher . java <nl> - package org . mockserver . matchers ; <nl> - import org . mockserver . collections . CaseInsensitiveRegexMultiMap ; <nl> - import org . mockserver . model . KeyToMultiValue ; <nl> - import org . mockserver . model . ObjectWithReflectiveEqualsHashCodeToString ; <nl> 
mmm RepositoryOpenSaveExtensionPoint . java <nl> ppp RepositoryOpenSaveExtensionPoint . java <nl> + import java . util . Calendar ; <nl> + import java . util . Date ; <nl> - if ( lastUsedFileList . size () > 0 ) { <nl> + Calendar calendar = Calendar . getInstance (); <nl> + calendar . add ( Calendar . DATE , - 30 ); <nl> 
mmm EnvironmentalExecException . java <nl> ppp EnvironmentalExecException . java <nl> - return new ActionExecutionException ( messagePrefix + " failed " + getMessage (), this , action , <nl> - isCatastrophic ()); <nl> + return new ActionExecutionException ( <nl> + messagePrefix + " failed (" + getMessage () + ")", this , action , isCatastrophic ()); <nl> 
mmm YamlOrchestrationConfiguration . java <nl> ppp YamlOrchestrationConfiguration . java <nl> - import io . shardingsphere . orchestration . config . OrchestrationType ; <nl> + * @ author panjuan <nl> - private OrchestrationType type ; <nl> - return new OrchestrationConfiguration ( getName (), null != etcd ? etcd : zookeeper , overwrite , type ); <nl> 
new file <nl> ppp MyResourceTest . java <nl> + package org . javaee7 . jaxrs . singelton . application ; <nl> + import java . util . StringTokenizer ; <nl> + import javax . ws . rs . client . Client ; <nl> + import javax . ws . rs . client . ClientBuilder ; <nl> + import javax . ws . rs . client . Entity ; <nl> 
mmm FpsPlugin . java <nl> ppp FpsPlugin . java <nl> + drawListener . reloadConfig (); <nl> 
new file <nl> ppp NewArray . java <nl> + package com . sun . btrace . samples ; <nl> + import com . sun . btrace . annotations . *; <nl> + import static com . sun . btrace . BTraceUtils . *; <nl> + @ BTrace public class NewArray { <nl> + private static volatile long count ; <nl> + @ OnMethod ( <nl> + location =@ Location ( value = Kind . NEWARRAY , clazz =" char ") <nl> 
mmm TypeCachingBytecodeGenerator . java <nl> ppp TypeCachingBytecodeGenerator . java <nl> + private final Object BOOTSTRAP _ LOCK = new Object (); <nl> - return ( Class < T >) typeCache . findOrInsert ( params . mockedType . getClassLoader (), <nl> - new SerializationFeatureKey ( params . mockedType , params . interfaces , params . serializableMode ), <nl> 
mmm BubbleSort . java <nl> ppp BubbleSort . java <nl> 
mmm DeleteObjects . java <nl> ppp DeleteObjects . java <nl> + import software . amazon . awssdk . services . s3 . model . Delete ; <nl> + import software . amazon . awssdk . services . s3 . model . ObjectIdentifier ; <nl> + import java . util . ArrayList ; <nl> 
new file <nl> ppp Counter . java <nl> + package org . jctools . counters ; <nl> + public interface Counter { <nl> + void inc (); <nl> + void inc ( long delta ); <nl> + long get (); <nl> + long getAndReset (); <nl> + } <nl> 
mmm ShadowBundle . java <nl> ppp ShadowBundle . java <nl> + import java . util . Set ; <nl> + @ Implementation <nl> + public Set < String > keySet () { <nl> + return map . keySet (); <nl> + } <nl> 
mmm ManyLinkField . java <nl> ppp ManyLinkField . java <nl> - if ( Strings . isBlank ( mapKey )) { <nl> - } else { <nl> - hostField = this . getEntity () . getField ( mapKey ); <nl> - } <nl> 
mmm MovieLibUsage . java <nl> ppp MovieLibUsage . java <nl> - import static rx . lang . scala . ImplicitFunctionConversions . toScalaObservable ; <nl> + import static rx . lang . scala . JavaConversions . toScalaObservable ; <nl> 
mmm BaseTest . java <nl> ppp BaseTest . java <nl> 
new file <nl> ppp ONetworkConfirmTest . java <nl> + package com . orientechnologies . orient . distributed . impl . coordinator . network ; <nl> + import com . orientechnologies . orient . distributed . impl . log . OLogId ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import java . io . *; <nl> 
mmm BenchmarkRunner . java <nl> ppp BenchmarkRunner . java <nl> - JacksonJsonTree . register ( groups ); <nl> - JacksonJsonTreeWithStrings . register ( groups ); <nl> + JacksonJsonTree . register ( groups ); <nl> + JacksonJsonTreeWithStrings . register ( groups ); <nl> 
mmm DefaultDatabaseFilesProvider . java <nl> ppp DefaultDatabaseFilesProvider . java <nl> - for ( String filename : mContext . databaseList ()) { <nl> - databaseFiles . add ( new File ( filename )); <nl> + for ( String databaseName : mContext . databaseList ()) { <nl> + databaseFiles . add ( mContext . getDatabasePath ( databaseName )); <nl> 
mmm SpyOnInjectedFieldsHandler . java <nl> ppp SpyOnInjectedFieldsHandler . java <nl> 

mmm NumberUtils . java <nl> ppp NumberUtils . java <nl> - final String prefix = options . currencySymbol () != null ? options . currencySymbol () : ""; <nl> 
new file <nl> ppp KeyMergeUtilTest . java <nl> + package redis . clients . jedis . tests . utils ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import redis . clients . jedis . util . KeyMergeUtil ; <nl> + public class KeyMergeUtilTest { <nl> + @ Test <nl> + public void mergeByteArray () { <nl> 
new file <nl> ppp GetJob . java <nl> + package com . example . mediaconvert ; <nl> + import software . amazon . awssdk . core . exception . SdkException ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . mediaconvert . model . GetJobRequest ; <nl> 
mmm EmojiView . java <nl> ppp EmojiView . java <nl> - import android . graphics . Rect ; <nl> - private final Rect textBounds = new Rect (); <nl> - paint . getTextBounds ( emoji , 0 , emoji . length (), textBounds ); <nl> - float overflow = textBounds . width () / ( getWidth () - getPaddingLeft () - getPaddingRight ()); <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm SourceVersion . java <nl> ppp SourceVersion . java <nl> + JAVA _ 11 ( 11 , " 11 "), <nl> 
mmm ITIIQueryTest . java <nl> ppp ITIIQueryTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore (" Temporarily ignore this as seems II couldn ' t serve topN query correctly ") <nl> 
new file <nl> ppp SortingTopNCollectorBenchmark . java <nl> + package io . crate . execution . engine . sort ; <nl> + import com . google . common . collect . ImmutableList ; <nl> + import io . crate . data . BatchIterator ; <nl> + import io . crate . data . Bucket ; <nl> + import io . crate . data . CollectingBatchIterator ; <nl> 
mmm ShadowLogger . java <nl> ppp ShadowLogger . java <nl> - static class LogItem { <nl> + public static class LogItem { <nl> 
mmm Sys . java <nl> ppp Sys . java <nl> + import java . util . regex . Matcher ; <nl> + import java . util . regex . Pattern ; <nl> - v = new BigDecimal ( sversion ); <nl> + Pattern p = Pattern . compile ("^([ 1 - 9 ]\\ . [ 0 - 9 ] + )"); <nl> + Matcher matcher = p . matcher ( sversion ); <nl> + if ( matcher . find ()) { <nl> 
mmm DanmakuRenderer . java <nl> ppp DanmakuRenderer . java <nl> + mRenderingState . endTime = drawItem != null ? drawItem . time : RenderingState . UNKNOWN _ TIME ; <nl> - mRenderingState . endTime = drawItem != null ? drawItem . time : RenderingState . UNKNOWN _ TIME ; <nl> 
mmm CustomObjectMappingITest . java <nl> ppp CustomObjectMappingITest . java <nl> + import com . jayway . restassured . RestAssured ; <nl> + import com . jayway . restassured . config . ObjectMapperConfig ; <nl> + import com . jayway . restassured . config . RestAssuredConfig ; <nl> - public void ikk () throws Exception { <nl> 
mmm AndroidManifestFinderTest . java <nl> ppp AndroidManifestFinderTest . java <nl> + deleteManifestFromParentOfOutputDirectory (); <nl> 
new file <nl> ppp DB2SelectTest _ 31 . java <nl> + package com . alibaba . druid . bvt . sql . db2 ; <nl> + import com . alibaba . druid . sql . DB2Test ; <nl> + import com . alibaba . druid . sql . SQLUtils ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> + import com . alibaba . druid . sql . ast . statement . SQLSelectStatement ; <nl> 
mmm CompoundList . java <nl> ppp CompoundList . java <nl> - return of ( Collections . singletonList ( left ), right ); <nl> + if ( right . isEmpty ()) { <nl> + return Collections . singletonList ( left ); <nl> + } else { <nl> + List < S > list = new ArrayList < S >( 1 + right . size ()); <nl> + list . add ( left ); <nl> 
mmm CredentialProvider . java <nl> ppp CredentialProvider . java <nl> + import java . security . KeyStore ; <nl> + public KeyStore getKeyStore (); <nl> + public void setKeyStore ( final KeyStore keyStore ); <nl> 
mmm Croat . java <nl> ppp Croat . java <nl> - super (" Croat ", " CROAT ", new RegexAddressValidator ("^ C [ 1 - 9A - Za - z ^ OIl ]{ 94 }")); <nl> + super (" Croat ", " CROAT ", new RegexAddressValidator ("^ C [ 1 - 9A - Za - z ]{ 94 }")); <nl> 
mmm ServletModuleBinding . java <nl> ppp ServletModuleBinding . java <nl> + * @ since 3 . 0 <nl> 
new file <nl> ppp FakeMetricConsumer . java <nl> + package org . apache . storm . metric ; <nl> + import com . google . common . collect . ArrayListMultimap ; <nl> + import com . google . common . collect . HashBasedTable ; <nl> + import com . google . common . collect . Multimap ; <nl> + import com . google . common . collect . Table ; <nl> 
mmm AbstractIntegrationTest . java <nl> ppp AbstractIntegrationTest . java <nl> - @ Test ( enabled = true ) <nl> + @ Test ( enabled = false ) <nl> 
new file <nl> ppp GetConfKeyTest . java <nl> + package alluxio . cli ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import alluxio . PropertyKey ; <nl> + import alluxio . SystemOutRule ; <nl> + import org . junit . Rule ; <nl> + import org . junit . Test ; <nl> + import java . io . ByteArrayOutputStream ; <nl> 
mmm BasicRedisPipeline . java <nl> ppp BasicRedisPipeline . java <nl> + import java . util . List ; <nl> + Response < List < String >> time (); <nl> 
mmm TracingCDIExtension . java <nl> ppp TracingCDIExtension . java <nl> + import org . wildfly . security . manager . WildFlySecurityManager ; <nl> - return TRACERS . get ( Thread . currentThread () . getContextClassLoader ()); <nl> + return TRACERS . get ( WildFlySecurityManager . getCurrentContextClassLoaderPrivileged ()); <nl> 
new file <nl> ppp AbstractReSessionData . java <nl> + package com . facebook . buck . remoteexecution . event . listener . model ; <nl> + import com . facebook . buck . core . util . immutables . BuckStyleImmutable ; <nl> + import com . facebook . buck . remoteexecution . proto . RESessionID ; <nl> + import org . immutables . value . Value ; <nl> 
mmm ResourceAdaptersSubSystemAdd . java <nl> ppp ResourceAdaptersSubSystemAdd . java <nl> - model . get ( RESOURCEADAPTER _ NAME ); <nl> 
new file <nl> ppp RuleTypeFactory . java <nl> + package com . facebook . buck . multitenant . importer ; <nl> + import com . facebook . buck . core . model . RuleType ; <nl> + public class RuleTypeFactory { <nl> + private RuleTypeFactory () {} <nl> + public static RuleType createBuildRule ( String name ) { <nl> 
mmm EnvironmentFilter . java <nl> ppp EnvironmentFilter . java <nl> 
mmm LoadTestDTO . java <nl> ppp LoadTestDTO . java <nl> + private String userName ; <nl> 
mmm RequestTemplateModel . java <nl> ppp RequestTemplateModel . java <nl> - private final String absoluteUrl ; <nl> - public RequestTemplateModel ( String absoluteUrl , String url , UrlPath path , Map < String , ListOrSingle < String >> query , Map < String , ListOrSingle < String >> headers , Map < String , ListOrSingle < String >> cookies , String body ) { <nl> 
mmm GrpcMethodHandler . java <nl> ppp GrpcMethodHandler . java <nl> + import io . grpc . Status ; <nl> - Object responseBody = exchange . getIn () . getBody (); <nl> - if ( responseBody instanceof List ) { <nl> - List < Object > responseList = ( List < Object >) responseBody ; <nl> - responseList . forEach ( responseObserver :: onNext ); <nl> 
mmm GlobalSearchAdminImpl . java <nl> ppp GlobalSearchAdminImpl . java <nl> + import android . os . Parcelable ; <nl> + import com . google . android . gms . common . api . Status ; <nl> + import com . google . android . gms . search . global . GetCurrentExperimentIdsRequest ; <nl> + import com . google . android . gms . search . global . GetCurrentExperimentIdsResponse ; <nl> 
mmm EmojiFilter . java <nl> ppp EmojiFilter . java <nl> - import android . text . TextUtils . TruncateAt ; <nl> - import android . view . View ; <nl> - import android . view . ViewTreeObserver . OnGlobalLayoutListener ; <nl> - public class EmojiFilter implements InputFilter , OnGlobalLayoutListener { <nl> 
new file <nl> ppp VoldemortUnsupportedOperationalException . java <nl> + package voldemort ; <nl> + public class VoldemortUnsupportedOperationalException extends VoldemortException { <nl> + private static final long serialVersionUID = 1L ; <nl> + public VoldemortUnsupportedOperationalException () { <nl> + super (); <nl> 

mmm BinarySearch . java <nl> ppp BinarySearch . java <nl> - { if ( lb > ub ) <nl> - { <nl> + { <nl> + if ( lb > ub ) <nl> - } <nl> +  <nl> + int mid = ( lb + ub ) / 2 ; <nl> - int mid =( lb + ub )/ 2 ; <nl> - if ( key < array [ mid ]) <nl> - { <nl> + if ( key < array [ mid ]) <nl> - } <nl> - else if ( key > array [ mid ]) <nl> 
mmm BSFAssertion . java <nl> ppp BSFAssertion . java <nl> + BSFManager mgr = null ; <nl> - BSFManager mgr = getManager (); <nl> + mgr = getManager (); <nl> - mgr . terminate (); <nl> + } finally { <nl> + if ( mgr != null ) { <nl> + mgr . terminate (); <nl> + } <nl> 
deleted file <nl> mmm InfinispanCacheAdapterLockStoreTest . java <nl> - package com . thinkaurelius . titan . diskstorage . infinispan ; <nl> - import com . thinkaurelius . titan . InfinispanStorageSetup ; <nl> - import com . thinkaurelius . titan . diskstorage . LockKeyColumnValueStoreTest ; <nl> - import com . thinkaurelius . titan . diskstorage . StorageException ; <nl> 
mmm AzurecosmodbApplicationManualTest . java <nl> ppp AzurecosmodbApplicationManualTest . java <nl> - Assert . notNull ( retrievedProduct , " Retrieved Product is Null "); <nl> + Assert . notNull ( retrievedProduct . get (), " Retrieved Product is Null "); <nl> 
deleted file <nl> mmm Node . java <nl> - package DataStructures . HashMap . Hashing ; <nl> - class Node { <nl> - int data ; <nl> - Node next ; <nl> - public Node ( int data ) { <nl> - this . data = data ; <nl> - this . next = null ; <nl> - } <nl> - } <nl> 
deleted file <nl> mmm AllTests . java <nl> - package com . google . devtools . build . workspace ; <nl> - import com . google . devtools . build . lib . testutil . ClasspathSuite ; <nl> - import org . junit . runner . RunWith ; <nl> - @ RunWith ( ClasspathSuite . class ) <nl> - public class AllTests { <nl> 
mmm SubversionHistoryParser . java <nl> ppp SubversionHistoryParser . java <nl> - client . logMessages ( file . getPath (), Revision . START , Revision . BASE ); <nl> + client . logMessages ( file . getPath (), Revision . START , Revision . BASE , false ); <nl> 
mmm _ 244 . java <nl> ppp _ 244 . java <nl> - public class ShortestWordDistanceII { <nl> + public class _ 244 { <nl> - public ShortestWordDistanceII ( String [] words ) { <nl> + public _ 244 ( String [] words ) { <nl> 
mmm LightHttpHandler . java <nl> ppp LightHttpHandler . java <nl> + status . setDescription ( status . getDescription () . replaceAll ("\\\\", "\\\\\\\\")); <nl> 
mmm DocumentableNode . java <nl> ppp DocumentableNode . java <nl> 
mmm LoginToutActivity . java <nl> ppp LoginToutActivity . java <nl> + import android . widget . Button ; <nl> + import com . facebook . FacebookSdk ; <nl> + import com . facebook . appevents . AppEventsLogger ; <nl> + import butterknife . ButterKnife ; <nl> + import butterknife . InjectView ; <nl> + @ InjectView ( R . id . login _ button ) Button login _ button ; <nl> 
mmm BaseNacosTest . java <nl> ppp BaseNacosTest . java <nl> - nacosProcess = NacosStarterBuilder . nacosStarter () . withNacosVersion (" 0 . 9 . 0 ") . build () . start (); <nl> + nacosProcess = NacosStarterBuilder . nacosStarter () . withNacosVersion (" 1 . 0 . 0 ") . build () . start (); <nl> 
mmm InstanceStateServiceTest . java <nl> ppp InstanceStateServiceTest . java <nl> + import org . junit . Before ; <nl> + @ Before <nl> 
mmm PrivateKeys . java <nl> ppp PrivateKeys . java <nl> - peerGroup . stopAsync (); <nl> + peerGroup . stopAsync (); <nl> 
mmm Globs . java <nl> ppp Globs . java <nl> - Path path = Paths . get ( glob ); <nl> + Path path = getGlobPath ( glob ); <nl> + private static Path getGlobPath ( final String glob ) { <nl> + Path path = Paths . get ( glob ); <nl> + if ( isCurrentPath ( path )) { <nl> + return Paths . get (" . ") . resolve ( path ); <nl> 
mmm Mongo . java <nl> ppp Mongo . java <nl> - public @ interface Id { <nl> - String value () default ""; <nl> - } <nl> + public @ interface Id {} <nl> 
deleted file <nl> mmm AuthenticationProcessingFilterDependenciesConfigurer . java <nl> - package org . acegisecurity . config ; <nl> - import org . acegisecurity . AuthenticationManager ; <nl> - import org . acegisecurity . ui . rememberme . RememberMeServices ; <nl> - import org . acegisecurity . ui . webapp . AuthenticationProcessingFilter ; <nl> 
mmm MobileCompositeProvider . java <nl> ppp MobileCompositeProvider . java <nl> - private String extensionVersion = " v0 . 19 "; <nl> + private String extensionVersion = " v0 . 20 "; <nl> 
mmm S2iConfig . java <nl> ppp S2iConfig . java <nl> - public static final String DEFAULT _ BASE _ NATIVE _ IMAGE = " quay . io / quarkus / ubi - quarkus - native - binary - s2i : 19 . 3 . 0 "; <nl> + public static final String DEFAULT _ BASE _ NATIVE _ IMAGE = " quay . io / quarkus / ubi - quarkus - native - binary - s2i : 1 . 0 "; <nl> 
mmm GermanConfusionProbabilityRule . java <nl> ppp GermanConfusionProbabilityRule . java <nl> + " so wir k ö nnen ", <nl> 
mmm ValidationError . java <nl> ppp ValidationError . java <nl> + private static final long serialVersionUID = 3176511008672645574L ; <nl> 
mmm ShadowImageView . java <nl> ppp ShadowImageView . java <nl> - import android . graphics . Bitmap ; <nl> - import android . graphics . drawable . BitmapDrawable ; <nl> - import static org . robolectric . Shadows . shadowOf ; <nl> + import org . robolectric . util . ReflectionHelpers ; <nl> - @ Deprecated <nl> 
deleted file <nl> mmm SpringMasterSlaveDataSource . java <nl> - package io . shardingsphere . jdbc . orchestration . spring . datasource ; <nl> - import io . shardingsphere . core . api . algorithm . masterslave . MasterSlaveLoadBalanceAlgorithm ; <nl> - import io . shardingsphere . core . api . algorithm . masterslave . MasterSlaveLoadBalanceAlgorithmType ; <nl> 
mmm CorruptRecordException . java <nl> ppp CorruptRecordException . java <nl> - super (" This message has failed its CRC checksum , exceeds the valid size , or is otherwise corrupt . "); <nl> + super (" This message has failed its CRC checksum , exceeds the valid size , has a null key for a compacted topic , or is otherwise corrupt . "); <nl> 
new file <nl> ppp _ 1309 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 1309 { <nl> + public static class Solution1 { <nl> + public String freqAlphabets ( String s ) { <nl> + return ""; <nl> + } <nl> + } <nl> + } <nl> 
mmm PubSubCommandHandler . java <nl> ppp PubSubCommandHandler . java <nl> + private PubSubOutput < K , V > output ; <nl> - this . codec = codec ; <nl> + this . codec = codec ; <nl> + this . output = new PubSubOutput < K , V >( codec ); <nl> - PubSubOutput < K , V > output = new PubSubOutput < K , V >( codec ); <nl> 
mmm SectionsConfiguration . java <nl> ppp SectionsConfiguration . java <nl> - public static boolean trimDataDiffSectionHeadAndTail = false ; <nl> - public static boolean trimSameInstancesOnly = false ; <nl> 
deleted file <nl> mmm ShadowConfiguration . java <nl> - package org . robolectric . shadows ; <nl> - import android . content . res . Configuration ; <nl> - import java . util . Locale ; <nl> - import org . robolectric . RuntimeEnvironment ; <nl> - import org . robolectric . annotation . Config ; <nl> - import org . robolectric . annotation . Implementation ; <nl> 
mmm HelloDB . java <nl> ppp HelloDB . java <nl> - response = HelloDB . mapper . writeValueAsString ( worlds ); <nl> + if ( queries == 1 ) <nl> + { <nl> + response = HelloDB . mapper . writeValueAsString ( worlds [ 0 ]); <nl> + } <nl> + else <nl> + { <nl> + response = HelloDB . mapper . writeValueAsString ( worlds ); <nl> 
mmm MethodCollector . java <nl> ppp MethodCollector . java <nl> - private final StringBuffer result ; <nl> + private final StringBuilder result ; <nl> - this . result = new StringBuffer (); <nl> + this . result = new StringBuilder (); <nl> 
mmm CombinedApplicationServer . java <nl> ppp CombinedApplicationServer . java <nl> - MasterServer master = new MasterServer ( processDao ); <nl> + MasterServer master = new MasterServer ( processDao , alertDao ); <nl> 
mmm ThrottleRequestFilter . java <nl> ppp ThrottleRequestFilter . java <nl> - this . maxWait = maxWait ; <nl> - available = new Semaphore ( maxConnections , true ); <nl> + this ( maxConnections , maxWait , false ); <nl> + } <nl> + public ThrottleRequestFilter ( int maxConnections , int maxWait , boolean fair ) { <nl> 
mmm BufferSynchronizerService . java <nl> ppp BufferSynchronizerService . java <nl> - final ThreadFactory threadFactory = new ThreadFactoryBuilder () . setNameFormat (" output - setup - service - % d ") . build (); <nl> + final ThreadFactory threadFactory = new ThreadFactoryBuilder () . setNameFormat (" buffer - synchronizer - service - % d ") . build (); <nl> 
mmm AbstractJournalCommand . java <nl> ppp AbstractJournalCommand . java <nl> + import org . graylog2 . audit . AuditBindings ; <nl> - new KafkaJournalModule ()); <nl> + new KafkaJournalModule (), <nl> + new AuditBindings ()); <nl> 
mmm RunnerFactory . java <nl> ppp RunnerFactory . java <nl> + import com . github . dreamhead . moco . util . Globs ; <nl> + import com . google . common . base . Function ; <nl> - import static com . google . common . collect . ImmutableList . of ; <nl> + import static com . google . common . collect . FluentIterable . from ; <nl> 
mmm Util . java <nl> ppp Util . java <nl> - result . put ( command , command ); <nl> - for ( CommandLine sub : command . subcommands () . values ()) { <nl> - addRecursively ( sub . getCommandSpec (), result ); <nl> + if (! command . usageMessage () . hidden ()) { <nl> + result . put ( command , command ); <nl> 
mmm RecordTranslator . java <nl> ppp RecordTranslator . java <nl> - * Return {@ code null } to discard an invalid {@ link ConsumerRecord } <nl> - * if {@ link Builder # setEmitNullTuples ( boolean )} is set to {@ code false } . <nl> + * Return null to discard an invalid {@ link ConsumerRecord } if {@ link Builder # setEmitNullTuples ( boolean )} is set to true <nl> 
mmm NightlyBuildID . java <nl> ppp NightlyBuildID . java <nl> - public static final String BUILD _ ID =" 1234 . 5678 "; <nl> + public static final String BUILD _ ID =" 0 . build . by . SVN "; <nl> 
new file <nl> ppp TypeUtilsTest _ loadClass . java <nl> + package com . alibaba . json . bvt . parser ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . util . TypeUtils ; <nl> + import junit . framework . TestCase ; <nl> + public class TypeUtilsTest _ loadClass extends TestCase { <nl> 
mmm TransformationsTest . java <nl> ppp TransformationsTest . java <nl> + @ Test <nl> + public void example10 () throws IOException { <nl> + considerExample (" Example10 _ original "); <nl> + cu . getClassByName (" A ") . get () . getMembers () . remove ( 0 ); <nl> + assertTransformed (" Example10 ", cu ); <nl> 
new file <nl> ppp ErrorRequestLimiterTest . java <nl> + package org . languagetool . server ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . *; <nl> + public class ErrorRequestLimiterTest { <nl> + @ Test <nl> + public void testErrorLimiter () throws InterruptedException { <nl> 
mmm FromQueueToQueueTest . java <nl> ppp FromQueueToQueueTest . java <nl> - import org . apache . camel . impl . JndiRegistry ; <nl> 
mmm AbstractInsertParser . java <nl> ppp AbstractInsertParser . java <nl> - import com . google . common . base . Optional ; <nl> - import org . apache . shardingsphere . core . parsing . parser . context . condition . Column ; <nl> 
mmm AdvancedValidationITest . java <nl> ppp AdvancedValidationITest . java <nl> + body (" price . min ()", equalTo ( 8 . 95f )) . <nl> + body (" price . max ()", equalTo ( 22 . 99f )) . <nl> + body (" min { it . price } . title ", equalTo (" Sayings of the Century ")) . <nl> + body (" author * . length () . sum ( 2 , { it * 2 })", is ( 108 )) . <nl> 
mmm TempFolderProviderTest . java <nl> ppp TempFolderProviderTest . java <nl> - TempFolderProvider tempFolderProvider = new TempFolderProvider (); <nl> + TempFolderProvider tempFolderProvider = new TempFolderProvider (); <nl> 
mmm CoyotePrincipal . java <nl> ppp CoyotePrincipal . java <nl> - public class CoyotePrincipal <nl> - implements Principal , Serializable { <nl> + public class CoyotePrincipal implements Principal , Serializable { <nl> + private static final long serialVersionUID = 1L ; <nl> 

mmm AccountLoginPane . java <nl> ppp AccountLoginPane . java <nl> + import java . util . logging . Level ; <nl> + import static org . jackhuang . hmcl . util . Logging . LOG ; <nl> + LOG . log ( Level . INFO , " Failed to login with password : " + oldAccount , e ); <nl> 
mmm DataSourceConverter . java <nl> ppp DataSourceConverter . java <nl> - import javax . sql . DataSource ; <nl> - import java . lang . reflect . Field ; <nl> - import java . util . HashMap ; <nl> - import java . util . Map . Entry ; <nl> - return Maps . transformValues ( dataSourceParameterMap , new Function < dataSourceParameterMap , DataSourceConfiguration >() { <nl> 
mmm AutoService . java <nl> ppp AutoService . java <nl> + import static java . lang . annotation . RetentionPolicy . SOURCE ; <nl> + import java . lang . annotation . Retention ; <nl> + @ Retention ( SOURCE ) <nl> 
new file <nl> ppp HiveTest . java <nl> + package net . sf . jsqlparser . test . select ; <nl> + import junit . framework . *; <nl> + import net . sf . jsqlparser . parser . CCJSqlParserUtil ; <nl> + import net . sf . jsqlparser . schema . Table ; <nl> + import net . sf . jsqlparser . statement . Statement ; <nl> 
mmm Tokenizer . java <nl> ppp Tokenizer . java <nl> - protected void reset ( Reader input ) throws IOException { <nl> + public void reset ( Reader input ) throws IOException { <nl> 
new file <nl> ppp AgentClassLoader . java <nl> + package com . nepxion . discovery . plugin . strategy . agent . loader ; <nl> + import java . net . URLClassLoader ; <nl> + public class AgentClassLoader { <nl> + public static < T > T load ( URLClassLoader currentClassLoader , ClassLoader targetClassLoader , String className ) throws ClassNotFoundException , IllegalAccessException , InstantiationException { <nl> 
mmm Stl060FrameDecoder . java <nl> ppp Stl060FrameDecoder . java <nl> - ChannelHandlerContext ctx , <nl> - Channel channel , <nl> - ChannelBuffer buf ) throws Exception { <nl> + ChannelHandlerContext ctx , Channel channel , ChannelBuffer buf ) throws Exception { <nl> - Integer beginIndex = ChannelBufferTools . find ( <nl> 
new file <nl> ppp LinearCongruentialGenerator . java <nl> + public class LinearCongruentialGenerator { <nl> + private double a , c , m , previousValue ; <nl> + public LinearCongruentialGenerator ( double multiplier , double increment , double modulo ) { <nl> + this ( System . currentTimeMillis (), multiplier , increment , modulo ); <nl> 
mmm UserController . java <nl> ppp UserController . java <nl> - private TransctionPersistenceContextUserService userServiceTransctionPersistenceContext1 ; <nl> + private TransctionPersistenceContextUserService transctionPersistenceContextUserService ; <nl> - private ExtendedPersistenceContextUserService userServiceExtendedPersistenceContext1 ; <nl> 
mmm OracleDataSourceMetaData . java <nl> ppp OracleDataSourceMetaData . java <nl> - private final Pattern pattern = Pattern . compile (" jdbc : oracle : thin :@/{ 0 , 2 }([\\ w \\ - \\ . ] + ):?([ 0 - 9 ]*)[:/]([\\ w \\ - ] + )"); <nl> + private final Pattern pattern = Pattern . compile (" jdbc : oracle : thin :@/{ 0 , 2 }([\\ w \\ - \\ . ] + ):?([ 0 - 9 ]*)[:/]([\\ w \\ - ] + )", Pattern . CASE _ INSENSITIVE ); <nl> 
mmm Nutz . java <nl> ppp Nutz . java <nl> - * @ return zTask 项目 目的 版本 版本号 <nl> + * @ return nutz 项目 目的 版本 版本号 <nl> 
mmm AccessFieldTransformer . java <nl> ppp AccessFieldTransformer . java <nl> - begin _ method ( Constants . ACC _ PUBLIC , <nl> - new Signature (" get " + property , <nl> - type , <nl> - Constants . TYPES _ EMPTY ), <nl> - null ); <nl> - load _ this (); <nl> - getfield ( name ); <nl> - return _ value (); <nl> 
mmm _ 98 . java <nl> ppp _ 98 . java <nl> 
deleted file <nl> mmm CopySets . java <nl> - package com . baeldung . set ; <nl> - import java . io . Serializable ; <nl> - import java . util . HashSet ; <nl> - import java . util . Set ; <nl> - import java . util . stream . Collectors ; <nl> - import org . apache . commons . lang . SerializationUtils ; <nl> 
mmm RunnableMojo . java <nl> ppp RunnableMojo . java <nl> - import org . apache . maven . plugin . MojoFailureException ; <nl> + import org . apache . maven . plugin . MojoExecutionException ; <nl> - public void execute () throws MojoFailureException <nl> + public void execute () throws MojoExecutionException <nl> 
mmm ModuleDetection . java <nl> ppp ModuleDetection . java <nl> + modules . put (" nettosphere ", " org . atmosphere . nettosphere . BridgeRuntime "); <nl> 
mmm RPCHandler . java <nl> ppp RPCHandler . java <nl> - mRPCExecutor . submit ( new Runnable () { <nl> - @ Override <nl> - public void run () { <nl> - final long sessionId = IdUtils . createSessionId (); <nl> - RpcUtils . nettyRPCAndLog ( LOG , new RpcUtils . NettyRpcCallable < Void >() { <nl> + mRPCExecutor . submit (() - > { <nl> 

mmm EnumSerializer . java <nl> ppp EnumSerializer . java <nl> - if ( enumConstants == null ) <nl> - throw new SerializerException ( " Class has no enum constants :" + c ); <nl> + if ( enumConstants == null ) { <nl> + throw new SerializerException (" Class has no enum constants :" + c + " Ordinal :" + ordinal ); <nl> 
mmm RecyclerEventsController . java <nl> ppp RecyclerEventsController . java <nl> + protected RecyclerViewWrapper getRecyclerViewWrapper () { <nl> + return mRecyclerViewWrapper ; <nl> + } <nl> 
mmm TimestampExtractor . java <nl> ppp TimestampExtractor . java <nl> 
deleted file <nl> mmm CxfRsProducerClientFactoryCache2Test . java <nl> - package org . apache . camel . component . cxf . jaxrs ; <nl> - import org . apache . camel . CamelContext ; <nl> - import org . apache . camel . Exchange ; <nl> - import org . apache . camel . ExchangePattern ; <nl> - import org . apache . camel . Message ; <nl> 
mmm ArchUnitTests . java <nl> ppp ArchUnitTests . java <nl> - . that ( are ( not ( resideInAPackage (" org . junit . platform . console . shadow . picocli . groovy ")))); <nl> + . that ( are ( not ( resideInAPackage (" org . junit . platform . console . shadow . picocli ")))); <nl> 
mmm MockitoExtension . java <nl> ppp MockitoExtension . java <nl> - * @ author Johannes Link <nl> - * @ author Sam Brannen <nl> 
mmm EventsLogger . java <nl> ppp EventsLogger . java <nl> - @ Override <nl> + event . getResource () . getRequest () . getRemotePort ()); <nl> - @ Override <nl> - @ Override <nl> + event . getResource () . getRequest () . getRemotePort ()); <nl> - @ Override <nl> 
mmm W3CDomTest . java <nl> ppp W3CDomTest . java <nl> + @ Test <nl> + public void convertsGoogleLocation () throws IOException { <nl> + File in = ParseTest . getFile ("/ htmltests / google - ipod . html "); <nl> + org . jsoup . nodes . Document doc = Jsoup . parse ( in , " UTF8 "); <nl> + W3CDom w3c = new W3CDom (); <nl> 
new file <nl> ppp DeleteEndpoint . java <nl> + package com . example . pinpoint ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . pinpoint . PinpointClient ; <nl> + import software . amazon . awssdk . services . pinpoint . model . DeleteEndpointRequest ; <nl> 
mmm QRLTest . java <nl> ppp QRLTest . java <nl> - import bisq . asset . AbstractAssetTest ; <nl> + import bisq . asset . AbstractAssetTest ; <nl> 
mmm TagExpressionParserTest . java <nl> ppp TagExpressionParserTest . java <nl> + import static org . junit . Assert . assertTrue ; <nl> + @ Test <nl> + public void evaluates _ expr _ with _ escaped _ chars () { <nl> + Expression expr = parser . parse ("(( not @ a \\( 1 \\) or @ b \\( 2 \\)) and not @ c \\( 3 \\) or not @ d \\( 4 \\) or @ e \\( 5 \\) and @ f \\( 6 \\))"); <nl> 
mmm TransactionDecoder . java <nl> ppp TransactionDecoder . java <nl> - byte [] r = zeroPadded ((( RlpString ) values . getValues () . get ( 7 )) . getBytes (), 32 ); <nl> - byte [] s = zeroPadded ((( RlpString ) values . getValues () . get ( 8 )) . getBytes (), 32 ); <nl> + byte [] r = Numeric . toBytesPadded ( <nl> 
mmm AnalysisTestCase . java <nl> ppp AnalysisTestCase . java <nl> 
mmm VisibleForTesting . java <nl> ppp VisibleForTesting . java <nl> 
new file <nl> ppp ShareViaAccountActivity . java <nl> + package eu . siacs . conversations . ui ; <nl> + import android . app . ActionBar ; <nl> + import android . content . Intent ; <nl> + import android . os . Bundle ; <nl> + import android . view . View ; <nl> + import android . widget . AdapterView ; <nl> 
mmm MockitoJUnit44Runner . java <nl> ppp MockitoJUnit44Runner . java <nl> - public class MockitoJUnit44Runner extends Runner { <nl> + public class MockitoJUnit44Runner extends MockitoJUnitRunner { <nl> - private RunnerImpl runner ; <nl> - public MockitoJUnit44Runner ( Class <?> klass ) throws InitializationError { <nl> 
mmm AESShardingEncryptorTest . java <nl> ppp AESShardingEncryptorTest . java <nl> - public void testGetProperties () { <nl> + public void assertGetProperties () { <nl> + assertThat ( encryptor . getProperties () . get (" aes . key . value ") . toString (), is (" test ")); <nl> 
mmm AgentBootstrapperBackwardCompatibilityTest . java <nl> ppp AgentBootstrapperBackwardCompatibilityTest . java <nl> - assertEquals ( new File ("/ path / to / certfile "), compatibility . rootCertFile ()); <nl> + assertEquals ( new File ("/ path / to / certfile ") . getAbsoluteFile (), compatibility . rootCertFile ()); <nl> 
mmm DumpingClassLoader . java <nl> ppp DumpingClassLoader . java <nl> - protected CompileUnit unit = new CompileUnit ( getClass () . getClassLoader (), new CompilerConfig ()); <nl> + protected CompileUnit unit = new CompileUnit ( this , new CompilerConfig ());; <nl> 
mmm FakeRemoteViews . java <nl> ppp FakeRemoteViews . java <nl> - @ Override public void doUpdate ( View view ) { <nl> + @ Override <nl> + public void doUpdate ( View view ) { <nl> - @ Override void doUpdate ( final View view ) { <nl> + @ Override <nl> + void doUpdate ( final View view ) { <nl> - @ Override public void onClick ( View v ) { <nl> 
mmm UnitTestParams . java <nl> ppp UnitTestParams . java <nl> + segwitAddressHrp = " tb "; <nl> 

mmm DataSourceServiceTest . java <nl> ppp DataSourceServiceTest . java <nl> + private DataSourceService dataSourceService ; <nl> + dataSourceService = new DataSourceService (" test ", regCenter ); <nl> 
mmm EmptyLineAndCommentSkippingInputStream . java <nl> ppp EmptyLineAndCommentSkippingInputStream . java <nl> + if ( commentSkipEnabled & & read == this . commentLineStartsWith . toCharArray ()[ 0 ]) { <nl> + while (( read = super . read ()) != '\ n ' & & read != '\ r ' & & read > 0 ) { <nl> + } <nl> + } <nl> 
mmm JmsBindingTest . java <nl> ppp JmsBindingTest . java <nl> + import org . apache . activemq . command . ActiveMQTextMessage ; <nl> + import org . apache . camel . impl . DefaultCamelContext ; <nl> + import org . apache . camel . impl . DefaultExchange ; <nl> + @ Test <nl> + public void noEndpointTest () throws Exception { <nl> 
mmm BlueMessageEnricher . java <nl> ppp BlueMessageEnricher . java <nl> - import io . jenkins . blueocean . rest . hal . LinkResolver ; <nl> + import java . net . URLEncoder ; <nl> 
mmm ExecutionTreeNode . java <nl> ppp ExecutionTreeNode . java <nl> 
mmm DateConverter . java <nl> ppp DateConverter . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger LOG = LoggerFactory . getLogger ( DateConverter . class ); <nl> - dateFormat = ( String ) config . get (" date _ format "); <nl> + dateFormat = (( String ) config . get (" date _ format ")) . trim (); <nl> 
mmm PolicyListeners . java <nl> ppp PolicyListeners . java <nl> 
mmm FragmentHost . java <nl> ppp FragmentHost . java <nl> - public class FragmentHost extends AppCompatActivity implements CustomAdapt { <nl> + public class FragmentHost extends AppCompatActivity implements CustomAdapt { <nl> - getSupportFragmentManager () . beginTransaction () . add ( R . id . container1 , new CustomFragment1 ()) . commit (); <nl> 
mmm AgentRegistrationResourceTest . java <nl> ppp AgentRegistrationResourceTest . java <nl> - final AgentRegistrationRequest input = AgentRegistrationRequest . create (" foobar ", " nodeId ", AgentNodeDetails . create (" DummyOS 1 . 0 ")); <nl> + final AgentRegistrationRequest input = AgentRegistrationRequest . create (" agentId ", " nodeId ", AgentNodeDetails . create (" DummyOS 1 . 0 ")); <nl> 
mmm AutoTooltipButton . java <nl> ppp AutoTooltipButton . java <nl> + import com . jfoenix . controls . JFXButton ; <nl> + import com . jfoenix . skins . JFXButtonSkin ; <nl> - import javafx . scene . control . Button ; <nl> - import javafx . scene . control . skin . ButtonSkin ; <nl> - public class AutoTooltipButton extends Button { <nl> 
mmm BazelDocumentationTest . java <nl> ppp BazelDocumentationTest . java <nl> - String documentationFilePath = " site / docs / bazel - user - manual . html "; <nl> + String documentationFilePath = " site / versions / master / docs / bazel - user - manual . html "; <nl> 
mmm TestPathChildrenCacheInCluster . java <nl> ppp TestPathChildrenCacheInCluster . java <nl> - Assert . assertTrue ( timing . awaitLatch ( resetLatch )); <nl> + Assert . assertTrue ( timing . multiple ( 4 ) . awaitLatch ( resetLatch )); <nl> 
mmm DataSourcePoolMetricsAutoConfiguration . java <nl> ppp DataSourcePoolMetricsAutoConfiguration . java <nl> - package io . micrometer . spring . jdbc ; <nl> + package io . micrometer . spring . autoconfigure . jdbc ; <nl> + import io . micrometer . spring . jdbc . DataSourcePoolMetrics ; <nl> 
mmm Grades . java <nl> ppp Grades . java <nl> + import picocli . CommandLine . ArgGroup ; <nl> - import java . util . LinkedHashMap ; <nl> - import java . util . Map ; <nl> + static class StudentGrade { <nl> + @ Parameters ( index = " 0 ") String name ; <nl> + @ Parameters ( index = " 1 ") BigDecimal grade ; <nl> 
new file <nl> ppp MockData . java <nl> + package bisq . network . p2p . storage . mocks ; <nl> + import bisq . network . p2p . storage . payload . ExpirablePayload ; <nl> + import bisq . network . p2p . storage . payload . ProtectedStoragePayload ; <nl> + import org . apache . commons . lang3 . NotImplementedException ; <nl> 
mmm AccessLogTestCase . java <nl> ppp AccessLogTestCase . java <nl> + import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . TimeUnit ; <nl> - private static final AccessLogReceiver RECIEVER = new AccessLogReceiver () { <nl> + private volatile CountDownLatch latch ; <nl> 
new file <nl> ppp _ 46Test . java <nl> + package com . fishercoder ; <nl> + import com . fishercoder . common . utils . CommonUtils ; <nl> + import com . fishercoder . solutions . _ 46 ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> + public class _ 46Test { <nl> + private static _ 46 . Solution1 solution1 ; <nl> 
mmm CommandRepositoryInitializer . java <nl> ppp CommandRepositoryInitializer . java <nl> + import java . io . InputStream ; <nl> - LOG . error ("[ Command Repository ] {}", message , e ); <nl> + LOG . error ("[ Command Repository ] {}", message ); <nl> + LOG . debug ( null , e ); <nl> - return new ZipInputStream ( this . getClass () . getResourceAsStream ( systemEnvironment . get ( DEFAULT _ COMMAND _ SNIPPETS _ ZIP ))); <nl> 
mmm BulkIndices . java <nl> ppp BulkIndices . java <nl> - @ JsonProperty (" reopened ") ClosedIndices reopened , <nl> - @ JsonProperty (" all ") AllIndicesInfo all ) { <nl> + @ JsonProperty (" reopened ") ClosedIndices reopened , <nl> + @ JsonProperty (" all ") AllIndicesInfo all ) { <nl> 
mmm MycatStartup . java <nl> ppp MycatStartup . java <nl> - server . beforeStart (); <nl> 
mmm EmbeddableIntegratorTest . java <nl> ppp EmbeddableIntegratorTest . java <nl> + import javax . persistence . PersistenceException ; <nl> - import org . hibernate . exception . GenericJDBCException ; <nl> + import static org . hibernate . testing . junit4 . ExtraAssertions . assertTyping ; <nl> + import static org . junit . Assert . fail ; <nl> 
mmm BinaryDistributionIT . java <nl> ppp BinaryDistributionIT . java <nl> - result . assertPMDExecutionResult ( 1 , " apex , java , ecmascript , jsp , plsql , vm , xml , xsl , wsdl , pom "); <nl> + result . assertPMDExecutionResult ( 1 , " java , jsp , wsdl , xsl , xml , vm , ecmascript , plsql "); <nl> 
mmm ShadowProviderGeneratorTest . java <nl> ppp ShadowProviderGeneratorTest . java <nl> + import java . util . Collections ; <nl> - List < ResetterInfo > resetterInfos = new ArrayList <>(); <nl> + when ( model . getVisibleShadowTypes ()) . thenReturn ( Collections . emptyList ()); <nl> + List < ResetterInfo > resetterInfos = new ArrayList <>(); <nl> 
mmm KeyGeneratorConfigurationYamlSwapper . java <nl> ppp KeyGeneratorConfigurationYamlSwapper . java <nl> + import com . google . common . base . Strings ; <nl> - KeyGenerateAlgorithm keyGenerateAlgorithm = TypedSPIRegistry . getRegisteredService ( KeyGenerateAlgorithm . class , yamlConfiguration . getType (), yamlConfiguration . getProps ()); <nl> 
mmm AtmosphereProviders . java <nl> ppp AtmosphereProviders . java <nl> - return new StringReader () { <nl> - @ Override <nl> - public Object fromString ( String topic ) { <nl> - Broadcaster broadcaster = null ; <nl> - try { <nl> - AtmosphereResource < HttpServletRequest , HttpServletResponse > r = <nl> - ( AtmosphereResource < HttpServletRequest , HttpServletResponse >) <nl> 
mmm TestConfigurationSlickFinalizer . java <nl> ppp TestConfigurationSlickFinalizer . java <nl> - assertTrue ( <nl> - " The configuration service contains properties after purging . ", <nl> - ( propertyNames == null ) || ( propertyNames . size () <= 0 )); <nl> 
new file <nl> ppp TranslateText . java <nl> + package com . example . translate ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . translate . TranslateClient ; <nl> + import software . amazon . awssdk . services . translate . model . TranslateTextRequest ; <nl> 
mmm BufferClaim . java <nl> ppp BufferClaim . java <nl> + import uk . co . real _ logic . aeron . protocol . HeaderFlyweight ; <nl> + import java . nio . ByteOrder ; <nl> + import static java . nio . ByteOrder . LITTLE _ ENDIAN ; <nl> - buffer . putIntOrdered ( 0 , buffer . capacity ()); <nl> + int frameLength = buffer . capacity (); <nl> 
mmm JFXListViewSkin . java <nl> ppp JFXListViewSkin . java <nl> + @ Override <nl> + protected double computePrefWidth ( double height , double topInset , double rightInset , double bottomInset , double leftInset ) { <nl> + return 200 ; <nl> + } <nl> 
mmm Issue191 . java <nl> ppp Issue191 . java <nl> + @ Test <nl> + public void testResultSetNumericComputationRecursiveReplacement () { <nl> + InputStream stream = ClassLoader . getSystemResourceAsStream (" issue _ 191 . json "); <nl> + Long value = JsonPath . parse ( stream ) . read ("$ . max ($ . . timestamp . avg (), $ . . timestamp . stddev ())", Long . class ); <nl> 
mmm SymbolStream . java <nl> ppp SymbolStream . java <nl> 
mmm AllTests . java <nl> ppp AllTests . java <nl> - import com . puppycrawl . tools . checkstyle . checks . IndentationCheckTest ; <nl> + import com . puppycrawl . tools . checkstyle . checks . indentation . IndentationCheckTest ; <nl> 
mmm StageRepresenter . java <nl> ppp StageRepresenter . java <nl> + . add (" approval _ type ", model . getApprovalTypeDescription ()) <nl> 
new file <nl> ppp IgnoredChangedEvent . java <nl> + package io . shardingsphere . orchestration . internal . registry . config . event ; <nl> + import io . shardingsphere . orchestration . internal . registry . listener . ShardingOrchestrationEvent ; <nl> + import lombok . Getter ; <nl> + import lombok . NoArgsConstructor ; <nl> 
new file <nl> ppp Searcha2DMatrixII . java <nl> + package stevesun . algorithms ; <nl> + public class Searcha2DMatrixII { <nl> + public boolean searchMatrix ( int [][] matrix , int target ) { <nl> + int m = matrix . length ; <nl> + int n = matrix [ 0 ] . length ; <nl> + int x = 0 ; <nl> + int y = n - 1 ; <nl> 
mmm UpdatesServlet . java <nl> ppp UpdatesServlet . java <nl> - import java . util . ArrayList ; <nl> + import java . util . *; <nl> + private static final Comparator < World > ASC = ( l , r ) - > l . getId () - r . getId (); <nl> + Collections . sort ( changed , ASC ); <nl> 
mmm PipelineActivityController . java <nl> ppp PipelineActivityController . java <nl> + import com . thoughtworks . go . config . CaseInsensitiveString ; <nl> + import com . thoughtworks . go . config . PipelineConfig ; <nl> + CaseInsensitiveString name = new CaseInsensitiveString ( pipelineName ); <nl> + meta . put (" canAdministerPipeline ", securityService . hasAdminPermissionsForPipeline ( currentUsername (), name )); <nl> 
mmm SQLAlterDatabaseStatement . java <nl> ppp SQLAlterDatabaseStatement . java <nl> 
mmm LombokPostfixTemplateProvider . java <nl> ppp LombokPostfixTemplateProvider . java <nl> - import com . intellij . codeInsight . template . postfix . templates . JavaPostfixTemplateProvider ; <nl> + import com . intellij . codeInsight . completion . CompletionInitializationContext ; <nl> + import com . intellij . codeInsight . completion . JavaCompletionContributor ; <nl> 
mmm BootService . java <nl> ppp BootService . java <nl> + import com . ichi2 . libanki . Collection ; <nl> + Collection col = CollectionHelper . getInstance () . getCol ( this ); <nl> + if ( col . getDecks () . isDyn ( deck . getLong (" id "))) { <nl> + continue ; <nl> + } <nl> - final JSONObject deckConfiguration = CollectionHelper . getInstance () . getCol ( this ) . getDecks () <nl> 
mmm JsonResource . java <nl> ppp JsonResource . java <nl> - private final Map < String , String > MESSAGE = new HashMap < String , String >(); <nl> + public final static class HelloMessage { <nl> + public final String message ; <nl> - public JsonResource () <nl> - { <nl> - MESSAGE . put (" message ", " Hello , world !"); <nl> 
mmm HBaseBlueprintsTest . java <nl> ppp HBaseBlueprintsTest . java <nl> - import com . thinkaurelius . titan . diskstorage . hbase . HBaseCompatLoader ; <nl> - import com . tinkerpop . blueprints . Graph ; <nl> - protected TitanGraph openGraph ( String uid ) { <nl> + public TitanGraph openGraph ( String uid ) { <nl> 
mmm WritableFileChooser . java <nl> ppp WritableFileChooser . java <nl> + import java . nio . file . Files ; <nl> - if (! java . nio . file . Files . isWritable ( selectedFile . getParentFile () . toPath ())) { <nl> - JOptionPane . showMessageDialog ( this , <nl> - MessageFormat . format ( Constant . messages . getString (" report . write . permission . dialog . message "), <nl> 
mmm CallableImporter . java <nl> ppp CallableImporter . java <nl> - + errors . size () + " errors , first one : " + errors . iterator () . next ()); <nl> + + errors . size () + " errors , first one : " + <nl> + ( errors . iterator () . hasNext () ? errors . iterator () . next () : " none ")); <nl> 
mmm MysqlController . java <nl> ppp MysqlController . java <nl> - count = Integer . parseInt ( request . getHeader (" queries ")); <nl> - if ( count > 500 ) <nl> + try <nl> - count = 500 ; <nl> + count = Integer . parseInt ( request . getHeader (" queries ")); <nl> +  <nl> + if ( count > 500 ) <nl> + { <nl> + count = 500 ; <nl> 
mmm ZipkinHttpConfiguration . java <nl> ppp ZipkinHttpConfiguration . java <nl> - sb . routeDecorator () <nl> - . methods ( HttpMethod . TRACE ) <nl> - . pathPrefix ("/") <nl> - . build (( delegate , ctx , req ) - > HttpResponse . of ( HttpStatus . METHOD _ NOT _ ALLOWED )); <nl> + sb . routeDecorator () . trace (" prefix :/") <nl> 
new file <nl> ppp FirstCommentTest . java <nl> + package com . alibaba . druid . bvt . sql ; <nl> + import java . util . List ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . druid . sql . dialect . mysql . parser . MySqlLexer ; <nl> + import com . alibaba . druid . sql . parser . Lexer ; <nl> 
mmm JsonStreamParserTest . java <nl> ppp JsonStreamParserTest . java <nl> - import java . util . Iterator ; <nl> 
mmm TestAuthManager . java <nl> ppp TestAuthManager . java <nl> - assertEquals ( 6 , ao . size ()); <nl> + assertEquals ( 9 , ao . size ()); <nl> + assertEquals (" login ", at . getUser ()); <nl> + assertEquals (" password ", at . getPass ()); <nl> + assertNull ( at ); <nl> + assertEquals (" jkl ", at . getUser ()); <nl> 
mmm MemcachedMethodInterceptor . java <nl> ppp MemcachedMethodInterceptor . java <nl> - Tags . DB _ STATEMENT . set ( span , method . getName () + " " + allArguments [ 0 ]); <nl> + Tags . DB _ STATEMENT . set ( span , getStatement ( method , allArguments )); <nl> + } <nl> + private String getStatement ( Method method , Object [] allArguments ) { <nl> 
mmm SubjectNotNullJwtClaimsValidator . java <nl> ppp SubjectNotNullJwtClaimsValidator . java <nl> - boolean condition = subject == null ; <nl> - if (! condition ) { <nl> + boolean hasSubject = subject != null ; <nl> + if (! hasSubject ) { <nl> - return condition ; <nl> + return hasSubject ; <nl> 
new file <nl> ppp _ 546 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 546 { <nl> + public int removeBoxes ( int [] boxes ) { <nl> + int [][][] dp = new int [ 100 ][ 100 ][ 100 ]; <nl> + return calculatePoints ( boxes , dp , 0 , boxes . length - 1 , 0 ); <nl> + } <nl> + public int calculatePoints ( int [] boxes , int [][][] dp , int l , int r , int k ) { <nl> 
mmm ProcessingSequenceBarrier . java <nl> ppp ProcessingSequenceBarrier . java <nl> - import com . lmax . disruptor . util . PaddedAtomicBoolean ; <nl> 
mmm ItemActivity . java <nl> ppp ItemActivity . java <nl> - adapter . setDropDownViewResource ( R . layout . shrine _ spinner _ dropdown ); <nl> 
mmm AggregationSelectItemAssert . java <nl> ppp AggregationSelectItemAssert . java <nl> + import io . shardingsphere . core . parsing . parser . context . selectitem . AggregationDistinctSelectItem ; <nl> + if ( actual instanceof AggregationDistinctSelectItem ) { <nl> + assertThat ( assertMessage . getFullAssertMessage (" Aggregation select item distinct column assertion error : "), (( AggregationDistinctSelectItem ) actual ) . getDistinctColumnName (), is ( expected . getDistinctColumnName ())); <nl> 
mmm ParquetReader . java <nl> ppp ParquetReader . java <nl> + private final ParquetMetadata mMetadata ; <nl> - private ParquetReader ( org . apache . parquet . hadoop . ParquetReader < Record > reader , Schema schema ) { <nl> + private ParquetReader ( org . apache . parquet . hadoop . ParquetReader < Record > reader , Schema schema , <nl> 
mmm ResourceChat . java <nl> ppp ResourceChat . java <nl> + @ Produces (" application / json ") <nl> - @ Produces (" application / json ") <nl> - @ Broadcast <nl> - @ Consumes (" application / json ") <nl> + @ Broadcast ( writeEntity = false ) <nl> - public void broadcast (@ Context Broadcaster b , Message message ) { <nl> 
mmm Application . java <nl> ppp Application . java <nl> - public final void run ( String [] arguments ) throws Exception { <nl> + public final void run ( String . . . arguments ) throws Exception { <nl> 
new file <nl> ppp ConnectedComponentsITCase . java <nl> + package eu . stratosphere . pact . test . scalaPactPrograms ; <nl> + import eu . stratosphere . nephele . configuration . Configuration ; <nl> + import eu . stratosphere . pact . common . plan . Plan ; <nl> + import org . junit . runner . RunWith ; <nl> 
new file <nl> ppp StaticResourcesServlet . java <nl> + package org . sonar . server . plugins ; <nl> + import org . apache . commons . io . IOUtils ; <nl> + import org . apache . commons . lang . StringUtils ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + import org . sonar . server . platform . Platform ; <nl> 
mmm VideoLoader . java <nl> ppp VideoLoader . java <nl> - import android . graphics . BitmapFactory ; <nl> - } catch ( RuntimeException ignored ) { <nl> + } catch ( Exception ignored ) { <nl> 
mmm JavacBootclasspath . java <nl> ppp JavacBootclasspath . java <nl> + import static com . google . common . collect . ImmutableList . toImmutableList ; <nl> + import com . google . common . collect . ImmutableList ; <nl> + import java . nio . file . Path ; <nl> + public static ImmutableList < Path > asPaths () { <nl> 
mmm StandardAnalyzer . java <nl> ppp StandardAnalyzer . java <nl> - private class SavedStreams { <nl> + private static final class SavedStreams { <nl> - }; <nl> + } <nl> 
mmm UtilDateType . java <nl> ppp UtilDateType . java <nl> - return new int []{ Types . DATE }; <nl> + return new int []{ Types . TIMESTAMP }; <nl> 
new file <nl> ppp rod _ cutting . java <nl> + public class RodCutting <nl> + { <nl> +  <nl> + private static int cutRod ( int price [], int n ) <nl> + { <nl> + int val [] = new int [ n + 1 ]; <nl> + val [ 0 ] = 0 ; <nl> + for ( int i = 1 ; i <= n ; i + + ) <nl> + { <nl> + int max _ val = Integer . MIN _ VALUE ; <nl> 
mmm UkrainianWordRepeatRule . java <nl> ppp UkrainianWordRepeatRule . java <nl> + @ Override <nl> + public String getId () { <nl> + return " UKRAINIAN _ WORD _ REPEAT _ RULE "; <nl> + } <nl> 
new file <nl> ppp MathGame . java <nl> + package demo ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . Random ; <nl> + import java . util . concurrent . TimeUnit ; <nl> + public class MathGame { <nl> + private static Random random = new Random (); <nl> + private int illegalArgumentCount = 0 ; <nl> 
mmm BaseProtocolEncoder . java <nl> ppp BaseProtocolEncoder . java <nl> - s . append (" command type : ") . append ( command . getType ()) . append (", "); <nl> - s . append (" id : ") . append ( command . getDeviceId ()) . append (" "); <nl> + s . append (" id : ") . append ( getUniqueId ( command . getDeviceId ())) . append (", "); <nl> 
mmm CronHelper . java <nl> ppp CronHelper . java <nl> - try { <nl> - FactoryFinder finder = context . adapt ( ExtendedCamelContext . class ) . getFactoryFinder ( RESOURCE _ PATH ); <nl> - return finder . newInstance ( FACTORY _ KEY , CamelCronService . class ) . orElse ( null ); <nl> - } catch ( NoFactoryAvailableException e ) { <nl> 
mmm GeneralDCLIntegrateTest . java <nl> ppp GeneralDCLIntegrateTest . java <nl> - if (! isExecuted ()) { <nl> - return ; <nl> - } <nl> - initEnvironment ( connection ); <nl> - cleanEnvironment ( connection ); <nl> 
new file <nl> ppp CompareVersionNumbers . java <nl> + package easy ; <nl> + public class CompareVersionNumbers { <nl> + public static int compareVersion ( String version1 , String version2 ) { <nl> + String [] v2s = version2 . split ("\\ . "); <nl> + int len = ( v1s . length < v2s . length ) ? v2s . length : v1s . length ; <nl> 
new file <nl> ppp AkkaRpcRuntimeException . java <nl> + package org . apache . flink . runtime . rpc . akka . exceptions ; <nl> + import org . apache . flink . runtime . rpc . exceptions . RpcRuntimeException ; <nl> + public class AkkaRpcRuntimeException extends RpcRuntimeException { <nl> + public AkkaRpcRuntimeException ( String message ) { <nl> 
mmm InvalidatePreviewCacheStepTest . java <nl> ppp InvalidatePreviewCacheStepTest . java <nl> + import static org . mockito . Matchers . eq ; <nl> - sut . execute ( mock ( DbSession . class ), mock ( AnalysisReportDto . class ), mock ( ComponentDto . class )); <nl> + DbSession session = mock ( DbSession . class ); <nl> 
mmm AgentResource . java <nl> ppp AgentResource . java <nl> - return Agents . toSummary ( agent ); <nl> + return agent . toSummary (); <nl> 
deleted file <nl> mmm CancelIntegrationTest . java <nl> - package alluxio . job . cancel ; <nl> - import alluxio . Constants ; <nl> - import alluxio . collections . Pair ; <nl> - import alluxio . job . plan . AbstractVoidPlanDefinition ; <nl> - import alluxio . job . plan . PlanConfig ; <nl> - import alluxio . job . plan . PlanDefinitionRegistry ; <nl> 
mmm BerkeleyGraphProvider . java <nl> ppp BerkeleyGraphProvider . java <nl> - return BerkeleyStorageSetup . getBerkeleyJEConfiguration ( StorageSetup . getHomeDir ( graphName )) . set ( GraphDatabaseConfiguration . IDAUTHORITY _ WAIT , Duration . ofMillis ( 20 )); <nl> + return BerkeleyStorageSetup . getBerkeleyJEConfiguration ( StorageSetup . getHomeDir ( graphName )) . set ( GraphDatabaseConfiguration . IDAUTHORITY _ WAIT , Duration . ofMillis ( 150L )); <nl> 
mmm BisqDaemonMain . java <nl> ppp BisqDaemonMain . java <nl> - import bisq . core . grpc . CoreApi ; <nl> 
mmm Logger . java <nl> ppp Logger . java <nl> - error ( message , null , null , args ); <nl> + error ( null , null , message , args ); <nl> - error ( message , element , null , args ); <nl> + error ( element , null , message , args ); <nl> - error ( message , null , thr , args ); <nl> + error ( null , thr , message , args ); <nl> 
new file <nl> ppp Bug _ for _ issue _ 320 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> 
mmm Network . java <nl> ppp Network . java <nl> - public void close () { <nl> + public synchronized void close () { <nl> 
mmm OperationRepeat . java <nl> ppp OperationRepeat . java <nl> - import rx . Scheduler ; <nl> - import rx . subscriptions . MultipleAssignmentSubscription ; <nl> - import rx . util . functions . Func2 ; <nl> + import rx . subscriptions . SerialSubscription ; <nl> + import rx . util . functions . Action0 ; <nl> 
mmm NotebookWebSocketCreator . java <nl> ppp NotebookWebSocketCreator . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + import static org . apache . zeppelin . conf . ZeppelinConfiguration . ConfVars . ZEPPELIN _ ALLOWED _ ORIGINS ; <nl> + private static final Logger LOG = LoggerFactory . getLogger ( NotebookWebSocketCreator . class ); <nl> 
mmm NonblockingServletHolder . java <nl> ppp NonblockingServletHolder . java <nl> + @ Override <nl> + public boolean equals ( Object o ) { <nl> + return ( o instanceof NonblockingServletHolder ) & & ( this . compareTo ( o ) == 0 ); <nl> + } <nl> + @ Override <nl> + public int hashCode () { <nl> + int result = super . hashCode (); <nl> 
new file <nl> ppp ONetworkAckTest . java <nl> + package com . orientechnologies . orient . distributed . impl . coordinator . network ; <nl> + import com . orientechnologies . orient . distributed . impl . coordinator . ONodeResponse ; <nl> + import com . orientechnologies . orient . distributed . impl . coordinator . ddl . ODDLQueryOperationResponse ; <nl> 
mmm PackageProgressReceiver . java <nl> ppp PackageProgressReceiver . java <nl> + import com . google . common . collect . Iterables ; <nl> - import java . util . ArrayDeque ; <nl> - import java . util . Deque ; <nl> + import java . util . LinkedHashSet ; <nl> - public synchronized void startReadPackage ( PackageIdentifier packageId ) { <nl> 
mmm ShardingEncryptor . java <nl> ppp ShardingEncryptor . java <nl> - String encode ( String plaintext ); <nl> + Object encode ( Object plaintext ); <nl> - String decode ( String ciphertext ); <nl> + Object decode ( Object ciphertext ); <nl> 
mmm ClosureException . java <nl> ppp ClosureException . java <nl> - super (" Exception thrown by call to closure : " + closure + " reaason : " + cause , cause ); <nl> + super (" Exception thrown by call to closure : " + closure + " reason : " + cause , cause ); <nl> 
mmm CallMainTest . java <nl> ppp CallMainTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore <nl> 
mmm AccessNode . java <nl> ppp AccessNode . java <nl> 
mmm ListenerFactory . java <nl> ppp ListenerFactory . java <nl> - import io . shardingsphere . core . jdbc . core . datasource . MasterSlaveDataSource ; <nl> - import io . shardingsphere . core . jdbc . core . datasource . ShardingDataSource ; <nl> - public void initShardingListeners ( final ShardingDataSource shardingDataSource ) { <nl> 
mmm Tuple . java <nl> ppp Tuple . java <nl> + import java . util . Objects ; <nl> - private int hashCode ; <nl> + @ SuppressWarnings (" unchecked ") <nl> - if ( size () != that . size ()) return false ; <nl> - for ( int i = 0 ; i < size (); i + + ) { <nl> + int size = size (); <nl> + if ( size != that . size ()) return false ; <nl> 
mmm ShardingDataSource . java <nl> ppp ShardingDataSource . java <nl> + import java . util . Collection ; <nl> + @ Override <nl> + public final void close ( final Collection < String > dataSourceNames ) throws Exception { <nl> + super . close ( dataSourceNames ); <nl> + shardingContext . close (); <nl> + } <nl> 
mmm OnDisconnectInterceptor . java <nl> ppp OnDisconnectInterceptor . java <nl> - logger . trace (" AtmosphereResource {} disconnected ", uuid ); <nl> + logger . debug (" AtmosphereResource {} disconnected ", uuid ); <nl> 
mmm Execution . java <nl> ppp Execution . java <nl> - GraphQLObjectType operationRootType = getOperationRootType ( executionContext . getGraphQLSchema (), executionContext . getOperationDefinition ()); <nl> + GraphQLObjectType operationRootType = getOperationRootType ( executionContext . getGraphQLSchema (), operationDefinition ); <nl> 
mmm ClusteredEventBusStartFailureTest . java <nl> ppp ClusteredEventBusStartFailureTest . java <nl> + import java . net . UnknownHostException ; <nl> - import java . util . concurrent . TimeUnit ; <nl> - import static org . junit . Assert . *; <nl> - public class ClusteredEventBusStartFailureTest { <nl> + public class ClusteredEventBusStartFailureTest extends AsyncTestBase { <nl> 
new file <nl> ppp GlobalBeginResponseTest . java <nl> + package com . alibaba . fescar . core . protocol . transaction ; <nl> + import com . alibaba . fescar . core . protocol . ResultCode ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import java . nio . ByteBuffer ; <nl> 
mmm Issue1814 . java <nl> ppp Issue1814 . java <nl> + final CompilationUnit compilationUnit = new CompilationUnit (); <nl> + compilationUnit . setPackageDeclaration (" java . lang "); <nl> - ClassOrInterfaceDeclaration fakeObject = new ClassOrInterfaceDeclaration (); <nl> - fakeObject . setName ( new SimpleName (" java . lang . Object ")); <nl> 
deleted file <nl> mmm Listed . java <nl> - package org . junit . experimental . runners ; <nl> - import java . util . Arrays ; <nl> - import java . util . List ; <nl> - public class Listed implements SuiteBuilder . Classes . Value { <nl> - private final Class <?>[] fClasses ; <nl> - public Listed ( Class <?> . . . classes ) { <nl> 
mmm DB2Pager . java <nl> ppp DB2Pager . java <nl> - protected String getLimitString ( Entity <?> entity ) { <nl> - return null ; <nl> + protected String getLimitString ( Entity <?> entity ) <nl> + { <nl> + String fieldName = entity . getIdentifiedField () . getColumnName (); <nl> + String tableName = entity . getViewName (); <nl> 
mmm FutureAdapter . java <nl> ppp FutureAdapter . java <nl> - private CompletableFuture < AppResponse > resultFuture ; <nl> + private CompletableFuture < AppResponse > appResponseFuture ; <nl> - this . resultFuture = future ; <nl> + this . appResponseFuture = future ; <nl> - return resultFuture . cancel ( mayInterruptIfRunning ); <nl> 
mmm StoreTest . java <nl> ppp StoreTest . java <nl> + private static final int NUMBER _ OF _ FILES = 1024 ; <nl> +  <nl> - for ( int i = 0 ; i < 2 ; + + i ) <nl> + for ( int i = 0 ; i < NUMBER _ OF _ FILES ; + + i ) <nl> 
mmm ArgumentsKey . java <nl> ppp ArgumentsKey . java <nl> + public static final String NEW _ CARD _ PROJECT = " com . kickstarter . ui . fragments . NewCardFragment . project "; <nl> 
mmm ObjectUtil . java <nl> ppp ObjectUtil . java <nl> - } else if ( parameterType . equals ( String . class )) { <nl> - method . invoke ( object , propertyValue ); <nl> - return ; <nl> 
mmm MethodConfigUtils . java <nl> ppp MethodConfigUtils . java <nl> - import org . springframework . beans . factory . config . BeanDefinition ; <nl> - import org . springframework . security . access . intercept . AfterInvocationProviderManager ; <nl> - @ SuppressWarnings (" unchecked ") <nl> - static ManagedList getRegisteredAfterInvocationProviders ( ParserContext parserContext ) { <nl> 
new file <nl> ppp ImmutableInfo . java <nl> + package com . facebook . buck . core . rules . providers . annotations ; <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + import java . lang . annotation . Target ; <nl> 
mmm PluginMetadataSummary . java <nl> ppp PluginMetadataSummary . java <nl> - static PluginMetadataSummary create ( <nl> + public static PluginMetadataSummary create ( <nl> 
mmm TestAll . java <nl> ppp TestAll . java <nl> - TestIntData . class , <nl> + TestIntData . class <nl> 
mmm MixinBlockPos . java <nl> ppp MixinBlockPos . java <nl> 
new file <nl> ppp _ 284 . java <nl> + package com . stevesun . solutions ; <nl> + import java . util . Iterator ; <nl> + import java . util . LinkedList ; <nl> + import java . util . Queue ; <nl> + public class _ 284 { <nl> + public static class PeekingIterator implements Iterator < Integer > { <nl> + private Queue < Integer > queue ; <nl> 
mmm BceProtocolDecoderTest . java <nl> ppp BceProtocolDecoderTest . java <nl> - " 2d41abfa2e4501004e02a5a0068609f96a009106260af96a00a006260af96a009106960af96a00a306a60af96a008f06b60af96a009106960cf96a00a03e0715f96affc300804000e6a23a4230ccc441001f47850200000000a0000000bd6542651a110d004b1000000000a401045a56bf4d02480000000000000000061623f96a00a0062623f96a00913ea728f96affc300804000e6a23a4230ccc441001f7f850200000000a0000000bd6542651a110d004a1000000000a401045a56bf4d02480000000000000000069639f96a00a006a639f96a00913e373cf96affc300804000e6a23a4230ccc441001f7f850200000000a0000000ad6534651a110d004a1000000000a401045a56bf4d024800000000000000003ed74ff96affc300804000e6a23a4230ccc441001f7f850200000000a0000000ad6534651a111b004a1000000000a401045a56bf4d01480000000000000000061650f96a00a0062650f96a00913e6763f96affc300804000e6a23a4230ccc441001f7f850200000000a0000000ad6534651a110d004a1000000000a401045a56bf4d01480000000000000000069666f96a00a006a666f96a00913e0777f96affc300804000e6a23a4230ccc441001f7f850200000000a0000000ad6534651a110d004a1000000000a401045a56bf4d0148000000000000000006067df96a00a006167df96a0091063687f96a00a3064687f96a008f065687f96a0091063689f96a00a03e978af96affc300804000e6a23a4230ccc441001f87850200000000a0000000ad6527651a110d004a1000000000a401045a56bf4d024800000000000000000e "))));*/ <nl> 
mmm NoUnsanitizedJSPExpressionRule . java <nl> ppp NoUnsanitizedJSPExpressionRule . java <nl> - private ASTElement lastNode ; <nl> - @ Override <nl> - public Object visit ( ASTElement node , Object data ) { <nl> - lastNode = node ; <nl> - return super . visit ( node , data ); <nl> - } <nl> - @ Override <nl> - public Object visit ( ASTElExpression node , Object data ) { <nl> 
new file <nl> ppp ConfigureTimeouts . java <nl> + package com . squareup . okhttp . recipes ; <nl> + import com . squareup . okhttp . OkHttpClient ; <nl> + import com . squareup . okhttp . Request ; <nl> + import com . squareup . okhttp . Response ; <nl> + import java . util . concurrent . TimeUnit ; <nl> + public final class ConfigureTimeouts { <nl> 
mmm TikaProcessor . java <nl> ppp TikaProcessor . java <nl> + import io . quarkus . deployment . builditem . JniBuildItem ; <nl> + @ BuildStep <nl> + void setupJni ( BuildProducer < JniBuildItem > jniProducer ) { <nl> + jniProducer . produce ( new JniBuildItem ()); <nl> + } <nl> 
new file <nl> ppp TestRandomUniqueId . java <nl> + package net . opentsdb . uid ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + import net . opentsdb . core . TSDB ; <nl> + import org . hbase . async . Bytes ; <nl> + import org . junit . Test ; <nl> + public final class TestRandomUniqueId { <nl> 
mmm Application . java <nl> ppp Application . java <nl> - import org . springframework . boot . autoconfigure . EnableAutoConfiguration ; <nl> + import org . springframework . boot . autoconfigure . SpringBootApplication ; <nl> - import org . springframework . context . annotation . ComponentScan ; <nl> - import org . springframework . context . annotation . Configuration ; <nl> 
mmm ServiceEntry . java <nl> ppp ServiceEntry . java <nl> - return "{ " + virtualHost + ", " + pathMapping + ", " + service + " }"; <nl> + return "{ " + virtualHost . hostnamePattern () + ", " + pathMapping + ", " + service + " }"; <nl> 
mmm InsertCommaFilter . java <nl> ppp InsertCommaFilter . java <nl> + List < AnalyzedTokenReadings > tags3 = tagger . tag ( Collections . singletonList ( parts [ 2 ])); <nl> + } else if ( tags1 . stream () . anyMatch ( k - > k . hasPosTagStartingWith (" VER :")) & & tags2 . stream () . anyMatch ( k - > k . hasPosTagStartingWith (" ADV :")) & & <nl> 
mmm Callback . java <nl> ppp Callback . java <nl> + boolean success = false ; <nl> - context . startService ( intent ); <nl> - return true ; <nl> + try { <nl> + context . startService ( intent ); <nl> + success = true ; <nl> + } catch ( Exception e ) { <nl> + LogManager . e ( <nl> + TAG , <nl> + " Failed attempting to start service : " + intent . getComponent () . flattenToString (), <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> - . description (" Operations about user ")); <nl> + . description (" Access to Petstore orders ")); <nl> - . description (" Access to Petstore orders ") <nl> + . description (" Operations about user ") <nl> 
mmm BaseParameter . java <nl> ppp BaseParameter . java <nl> 
mmm BtcCoinSelector . java <nl> ppp BtcCoinSelector . java <nl> - log . warn (" transactionOutput . getScriptPubKey () not isSentToAddress or isPayToScriptHash "); <nl> + log . warn (" transactionOutput . getScriptPubKey () is not P2PKH nor P2SH nor P2WH "); <nl> 
mmm AllConfusionRulesEvaluator . java <nl> ppp AllConfusionRulesEvaluator . java <nl> - String summary = eval . run ( inputsFiles , word1 , word2 , confusionSet . getFactor (), MAX _ SENTENCES ); <nl> + String summary = eval . run ( inputsFiles , word1 , word2 , MAX _ SENTENCES , Arrays . asList ( confusionSet . getFactor ())); <nl> 
mmm RunSearch . java <nl> ppp RunSearch . java <nl> - Collections . sort ( runs , new Comparator < BlueRun >() { <nl> - @ Override <nl> - public int compare ( BlueRun o1 , BlueRun o2 ) { <nl> - return o2 . getStartTime () . compareTo ( o1 . getStartTime ()); <nl> - } <nl> - }); <nl> 
mmm WebSocketBase . java <nl> ppp WebSocketBase . java <nl> - @ VertxGen <nl> + @ VertxGen ( concrete = false ) <nl> 
mmm GeneratePresignedPutUrl . java <nl> ppp GeneratePresignedPutUrl . java <nl> 
mmm Hooks . java <nl> ppp Hooks . java <nl> - SharedPreferences prefs = PreferenceManager . getDefaultSharedPreferences ( context . getApplicationContext ()); <nl> 
deleted file <nl> mmm EasyRulesTestSuite . java <nl> - package org . jeasy . rules ; <nl> - import junit . framework . TestSuite ; <nl> - import org . jeasy . rules . core . *; <nl> - import org . junit . runner . RunWith ; <nl> - import org . junit . runners . Suite ; <nl> - @ RunWith ( Suite . class ) <nl> 
new file <nl> ppp InsertColumnsPlaceholder . java <nl> + package org . apache . shardingsphere . core . rewrite . placeholder ; <nl> + import com . google . common . base . Joiner ; <nl> + import lombok . Getter ; <nl> + import lombok . RequiredArgsConstructor ; <nl> + import java . util . LinkedList ; <nl> 
mmm SQLServerDataSourceMetaDataTest . java <nl> ppp SQLServerDataSourceMetaDataTest . java <nl> - } <nl> + } <nl> 
new file <nl> ppp MainClass . java <nl> + package com . baeldung . gradle . exec ; <nl> + public class MainClass { <nl> + public static void main ( String [] args ) { <nl> + System . out . println (" Goodbye cruel world . . . "); <nl> + } <nl> + } <nl> 
mmm AbstractShardingJDBCDatabaseAndTableTest . java <nl> ppp AbstractShardingJDBCDatabaseAndTableTest . java <nl> - orderItemTableRuleConfig . setKeyGeneratorColumnName (" item _ id "); <nl> + keyGeneratorConfiguration . setColumn (" item _ id "); <nl> 
mmm Constructor . java <nl> ppp Constructor . java <nl> + import org . apache . commons . lang . ClassUtils ; <nl> + private java . lang . reflect . Constructor < D > javaConstructor ; <nl> + @ SuppressWarnings (" unchecked ") <nl> + public java . lang . reflect . Constructor < D > getJavaConstructor (){ <nl> 
mmm EnglishWordTokenizerTest . java <nl> ppp EnglishWordTokenizerTest . java <nl> - package org . languagetool . tokenizers ; <nl> + package org . languagetool . tokenizers . en ; <nl> 
mmm ThemedActivity . java <nl> ppp ThemedActivity . java <nl> + import android . os . Build ; <nl> + import org . shadowice . flocke . andotp . R ; <nl> + import org . shadowice . flocke . andotp . Utilities . Tools ; <nl> + if ( Build . VERSION . SDK _ INT >= Build . VERSION _ CODES . LOLLIPOP ) { <nl> + getWindow () . setNavigationBarColor ( Tools . getThemeColor ( this , R . attr . navigationBarColor )); <nl> 
mmm EmailAnnotationPlugin . java <nl> ppp EmailAnnotationPlugin . java <nl> + import springfox . documentation . builders . StringElementFacetBuilder ; <nl> - context . getBuilder () . pattern ( email . get () . regexp ()); <nl> - context . getBuilder () . example (" email @ email . com "); <nl> + context . getSpecificationBuilder () . facetBuilder ( StringElementFacetBuilder . class ) <nl> 
mmm NodeImpl . java <nl> ppp NodeImpl . java <nl> - return new DateTime ((( Integer ) fields . get (" last _ seen ")) * 1000L , DateTimeZone . UTC ); <nl> + return new DateTime ((( Integer ) fields . getOrDefault (" last _ seen ", 0 )) * 1000L , DateTimeZone . UTC ); <nl> 
mmm TargetPanel . java <nl> ppp TargetPanel . java <nl> - return Double . parseDouble ( sValue ); <nl> + double value = 0 ; <nl> + try { <nl> + value = Double . parseDouble ( sValue ); <nl> + } catch ( NumberFormatException e ) { <nl> + } <nl> + return value ; <nl> 
mmm FlowScopedBeanTest . java <nl> ppp FlowScopedBeanTest . java <nl> - import com . meterware . httpunit . GetMethodWebRequest ; <nl> - import com . meterware . httpunit . WebConversation ; <nl> + import com . gargoylesoftware . htmlunit . WebClient ; <nl> + import com . gargoylesoftware . htmlunit . html . HtmlPage ; <nl> 
mmm CombineTest . java <nl> ppp CombineTest . java <nl> + import org . apache . beam . sdk . transforms . Combine ; <nl> - import org . junit . Ignore ; <nl> + @ Test <nl> + public void testCombineGloballyPreservesWindowing () { <nl> + PCollection < Integer > input = p . apply ( Create . timestamped ( <nl> 
mmm LeaseManagerMessageBroker . java <nl> ppp LeaseManagerMessageBroker . java <nl> - log . debug (" register " + info . getAppName () + ", vip " + info . getVIPAddress () <nl> - + ", leaseDuration " + leaseDuration + ", isReplication " + isReplication ); <nl> + if ( log . isDebugEnabled ()) { <nl> + log . debug (" register " + info . getAppName () + ", vip " + info . getVIPAddress () <nl> 
mmm ExecuteEventListener . java <nl> ppp ExecuteEventListener . java <nl> 
mmm InfinispanCacheAdapterLockStoreTest . java <nl> ppp InfinispanCacheAdapterLockStoreTest . java <nl> - @ Override <nl> - public void testMultiIDAcquisition () {} <nl> 
mmm RotationBundleDemo . java <nl> ppp RotationBundleDemo . java <nl> - outState . putString (" contact ", contact . toString ()); <nl> + outState . putParcelable (" contact ", contact ); <nl> - String contactUri = state . getString (" contact "); <nl> - if ( contactUri != null ) { <nl> - contact = Uri . parse ( contactUri ); <nl> 
mmm Slf4jLogConsumer . java <nl> ppp Slf4jLogConsumer . java <nl> - logger . info ("{}{}: {}", prefix , outputFrame . getType (), outputFrame . getUtf8String ()); <nl> + logger . info ("{}{}: {}", prefix , outputFrame . getType (), outputFrame . getUtf8String () . trim ()); <nl> 
mmm State . java <nl> ppp State . java <nl> 
new file <nl> ppp LocalShardingMasterSlaveConfigurationRange . java <nl> + package io . shardingsphere . example . jdbc . orche . config . local ; <nl> + import com . google . common . collect . Lists ; <nl> + import io . shardingsphere . api . config . MasterSlaveRuleConfiguration ; <nl> + import io . shardingsphere . api . config . ShardingRuleConfiguration ; <nl> 
mmm FacebookSdkVersion . java <nl> ppp FacebookSdkVersion . java <nl> - public static final String BUILD = " 5 . 11 . 2 "; <nl> + public static final String BUILD = " 5 . 12 . 0 "; <nl> 
mmm ChangeLogSerializerFactoryTest . java <nl> ppp ChangeLogSerializerFactoryTest . java <nl> - assertEquals ( 5 , serializers . size ()); <nl> + assertEquals ( 6 , serializers . size ()); <nl> - } <nl> + } <nl> 
mmm NacosRule . java <nl> ppp NacosRule . java <nl> - String group = this . nacosDiscoveryProperties . getGroup (); <nl> - List < Instance > instances = namingService . selectInstances ( name , group , true ); <nl> + List < Instance > instances = namingService . selectInstances ( name , true ); <nl> 
mmm JenkinsJSExtensionsTest . java <nl> ppp JenkinsJSExtensionsTest . java <nl> - Assert . assertEquals ( 3 , ext . size ()); <nl> + Assert . assertEquals ( 4 , ext . size ()); <nl> 
mmm SubscriptionsAdapter . java <nl> ppp SubscriptionsAdapter . java <nl> + import jp . shts . android . library . TriangleLabelView ; <nl> 
new file <nl> ppp StringToIntTest . java <nl> + package com . baeldung ; <nl> + import com . google . common . primitives . Ints ; <nl> + import org . junit . Test ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> + public class StringToIntTest { <nl> + @ Test <nl> + public void givenString _ shouldConvertToInt1 () throws Exception { <nl> 
mmm EspressoTest . java <nl> ppp EspressoTest . java <nl> + @ Test <nl> + @ UiThreadTest <nl> + public void typeText () throws Exception { <nl> + EspressoActivity activity = activityRule . getActivity (); <nl> + EditText editText = activity . findViewById ( R . id . text ); <nl> + editText . setText (" new text "); <nl> 
mmm ParameterizedTest . java <nl> ppp ParameterizedTest . java <nl> - * < li >{@ code { index }}: the current invocation index ( 1 - based )</ li > <nl> - * < li >{@ code { arguments }}: the complete , comma - separated arguments list </ li > <nl> - * < li >{@ code { 0 }}, {@ code { 1 }}, etc . : an individual argument </ li > <nl> 
deleted file <nl> mmm MonoBridges . java <nl> - package reactor . core . publisher ; <nl> - import java . util . function . Function ; <nl> - import org . reactivestreams . Publisher ; <nl> - final class MonoBridges { <nl> - static < R > Mono < R > zip ( Function <? super Object [], ? extends R > combinator , Mono <?>[] monos ) { <nl> 
mmm NetUtilTest . java <nl> ppp NetUtilTest . java <nl> - System . out . println ( NetUtil . getLocalHostName ()); <nl> + Assert . assertNotNull ( NetUtil . getLocalHostName ()); <nl> 
mmm LottieTest . java <nl> ppp LottieTest . java <nl> + TestRobot . testLinearAnimation ( activity , " Hello World . json "); <nl> 
mmm ShiroConfig . java <nl> ppp ShiroConfig . java <nl> + filterChainDefinitionMap . put ("/ swagger - ui . html ", " anon "); <nl> + filterChainDefinitionMap . put ("/ swagger - resources ", " anon "); <nl> + filterChainDefinitionMap . put ("/ swagger - resources / configuration / security ", " anon "); <nl> 
mmm DataTypeBarometer . java <nl> ppp DataTypeBarometer . java <nl> - return new DecimalType ( value * 33 . 86 ); <nl> + return new DecimalType ( value * 0 . 0338638 ); <nl> 
mmm VERSION . java <nl> ppp VERSION . java <nl> - public final static int RevisionVersion = 18 ; <nl> + public final static int RevisionVersion = 19 ; <nl> 
mmm SignalServiceNetworkAccess . java <nl> ppp SignalServiceNetworkAccess . java <nl> + put (" + 98 ", new SignalServiceUrl [] { baseAndroid , baseGoogle }); <nl> 
mmm Document . java <nl> ppp Document . java <nl> - private List < Definition > definitions ; <nl> + private List < Definition > definitions = new ArrayList <>(); <nl> 
mmm TestRefWithQuote . java <nl> ppp TestRefWithQuote . java <nl> - Map < String , TestRefWithQuote . X > origin = new HashMap <>(); <nl> + Map < String , TestRefWithQuote . X > origin = new HashMap < String , X >(); <nl> 
new file <nl> ppp ShellSubmission . java <nl> + package org . apache . storm . command ; <nl> + import org . apache . commons . lang . ArrayUtils ; <nl> + import org . apache . storm . StormSubmitter ; <nl> + import org . apache . storm . generated . NimbusSummary ; <nl> + import org . apache . storm . utils . ConfigUtils ; <nl> 
deleted file <nl> mmm SpringContextTest . java <nl> - package org . baeldung ; <nl> - import org . baeldung . custom . config . MvcConfig ; <nl> - import org . baeldung . custom . config . PersistenceDerbyJPAConfig ; <nl> - import org . baeldung . custom . config . SecSecurityConfig ; <nl> - import org . junit . Test ; <nl> 
mmm SwaggerPlugin . java <nl> ppp SwaggerPlugin . java <nl> - dependencies . add ( project . getDependencies () . create (" io . swagger . core . v3 : swagger - jaxrs2 : 2 . 0 . 10 ")); <nl> + dependencies . add ( project . getDependencies () . create (" io . swagger . core . v3 : swagger - jaxrs2 : 2 . 0 . 11 - SNAPSHOT ")); <nl> 
mmm UserServlet . java <nl> ppp UserServlet . java <nl> - Context . getPermissionsManager () . checkUser ( getUserId ( req ), user . getId ()); <nl> + if ( user . getAdmin ()) { <nl> + Context . getPermissionsManager () . checkAdmin ( getUserId ( req )); <nl> + } else { <nl> + Context . getPermissionsManager () . checkUser ( getUserId ( req ), user . getId ()); <nl> 
mmm CordovaWebViewTestActivity . java <nl> ppp CordovaWebViewTestActivity . java <nl> + parser . parse ( this ); <nl> 
mmm DateTimeBucketer . java <nl> ppp DateTimeBucketer . java <nl> - import org . apache . flink . streaming . connectors . fs . SystemClock ; <nl> 
mmm PersonSessionBean . java <nl> ppp PersonSessionBean . java <nl> - client . set ( person . getName (), person ); <nl> + client . set ( person . getName (), new Person ( person . getName (), person . getAge ())); <nl> 
mmm RealmVersionChecker . java <nl> ppp RealmVersionChecker . java <nl> 
mmm LogicSchema . java <nl> ppp LogicSchema . java <nl> - return new ShardingMetaData ( getDataSourceURLs ( getDataSources ()), shardingRule , DatabaseType . MySQL , <nl> - BackendExecutorContext . getInstance () . getExecuteEngine (), new ProxyTableMetaDataConnectionManager ( getBackendDataSource ()), GlobalRegistry . getInstance () . getMaxConnectionsSizePerQuery ()); <nl> 
mmm DataSource . java <nl> ppp DataSource . java <nl> - return toDataSource ( mediaDataSource . toString ()); <nl> + return toDataSource (" MediaDataSource "); <nl> 
mmm UpdateEncryptAssistedItemPlaceholder . java <nl> ppp UpdateEncryptAssistedItemPlaceholder . java <nl> 
deleted file <nl> mmm DiscoveryActivity . java <nl> - package com . polidea . rxandroidble . sample . connect ; <nl> - import android . os . Bundle ; <nl> - import android . support . v7 . widget . SwitchCompat ; <nl> - import android . widget . Button ; <nl> - import android . widget . TextView ; <nl> - import com . polidea . rxandroidble . RxBleClient ; <nl> 
mmm CronHelper . java <nl> ppp CronHelper . java <nl> - import org . apache . camel . NoFactoryAvailableException ; <nl> - import org . apache . camel . RuntimeCamelException ; <nl> 
new file <nl> ppp DeleteAllProjectsCommand . java <nl> + package com . google . refine . commands . project ; <nl> + import java . io . IOException ; <nl> + import javax . servlet . ServletException ; <nl> + import javax . servlet . http . HttpServletRequest ; <nl> + import javax . servlet . http . HttpServletResponse ; <nl> 
new file <nl> ppp ConditionExtractResult . java <nl> + package io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result ; <nl> + import io . shardingsphere . core . parsing . parser . context . condition . OrCondition ; <nl> + import lombok . Getter ; <nl> + import lombok . RequiredArgsConstructor ; <nl> 
new file <nl> ppp PathUtilsTest . java <nl> + package io . swagger ; <nl> + import static org . testng . Assert . assertEquals ; <nl> + import io . swagger . jaxrs . utils . PathUtils ; <nl> + import org . testng . annotations . Test ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> 
mmm ShardingSphereAlgorithmFixtureNamespaceHandler . java <nl> ppp ShardingSphereAlgorithmFixtureNamespaceHandler . java <nl> - public final class AlgorithmFixtureNamespaceHandler extends NamespaceHandlerSupport { <nl> + public final class ShardingSphereAlgorithmFixtureNamespaceHandler extends NamespaceHandlerSupport { <nl> 
mmm AnimationCookBookActivity . java <nl> ppp AnimationCookBookActivity . java <nl> - lithoView . performIncrementalMount (); <nl> 
mmm AbstractBottomUpTraversal . java <nl> ppp AbstractBottomUpTraversal . java <nl> - import com . google . common . base . Preconditions ; <nl> - import com . google . common . collect . Iterables ; <nl> - import com . google . common . collect . Lists ; <nl> - import com . google . common . collect . Maps ; <nl> 
mmm WindowsWebDavMounter . java <nl> ppp WindowsWebDavMounter . java <nl> - this . mount ( warmUpUri , " WarmUpMount "); <nl> + final Script proxyBypassCmd = fromLines (" reg add \" HKCU \\ Software \\ Microsoft \\ Windows \\ CurrentVersion \\ Internet Settings \" / v \" ProxyOverride \" / d \"< local >; 0 - - 1 . ipv6 - literal . net \" / f "); <nl> 
mmm DependencyParseAnnotator . java <nl> ppp DependencyParseAnnotator . java <nl> + private static final long DEFAULT _ MAXTIME = Long . MAX _ VALUE ; <nl> - private static final long DEFAULT _ MAXTIME = Long . MAX _ VALUE ; <nl> - StringBuilder os = new StringBuilder (); <nl> - os . append ( annotatorName ) . append (" . extradependencies :"); <nl> 
new file <nl> ppp TimeSpeedConverter . java <nl> + package de . danoeh . antennapod . core . util ; <nl> + import de . danoeh . antennapod . core . preferences . UserPreferences ; <nl> + public class TimeSpeedConverter { <nl> + private TimeSpeedConverter () { <nl> + } <nl> + public static int convert ( int time ) { <nl> 
mmm WordRepeatRule . java <nl> ppp WordRepeatRule . java <nl> - return " Avoid repeating of words ( e . g . \" the the \")"; <nl> + return " Word repetition ( e . g . \" the the \")"; <nl> - String msg = " Don ' t repeat a word "; <nl> + String msg = " Possible typo : you repeated a word "; <nl> 
mmm TransformationMainDemoFragment . java <nl> ppp TransformationMainDemoFragment . java <nl> - import androidx . appcompat . app . AppCompatActivity ; <nl> - import androidx . appcompat . widget . Toolbar ; <nl> - Toolbar toolbar = view . findViewById ( R . id . toolbar ); <nl> - (( AppCompatActivity ) getActivity ()) . setSupportActionBar ( toolbar ); <nl> 
mmm PopupMenuShowInHistory . java <nl> ppp PopupMenuShowInHistory . java <nl> + case SPIDER _ PANEL : <nl> + @ Override <nl> + protected boolean isButtonEnabledForHistoryReference ( HistoryReference historyReference ) { <nl> + switch ( historyReference . getHistoryType ()) { <nl> + case HistoryReference . TYPE _ ZAP _ USER : <nl> 
deleted file <nl> mmm MainActivity . java <nl> - package master . flame . danmaku . ui . activity ; <nl> - import android . app . Activity ; <nl> - import android . media . MediaPlayer ; <nl> - import android . os . Bundle ; <nl> - import android . os . Environment ; <nl> - import android . view . *; <nl> - import android . widget . PopupWindow ; <nl> 
mmm ExecutionRequest . java <nl> ppp ExecutionRequest . java <nl> + public Map < String , Object > getAttributes () { <nl> + return this . attributes ; <nl> + } <nl> 
mmm BaseService . java <nl> ppp BaseService . java <nl> - import android . app . Service ; <nl> + import androidx . lifecycle . LifecycleService ; <nl> - public abstract class BaseService extends Service { <nl> + public abstract class BaseService extends LifecycleService { <nl> + super . onBind ( intent ); <nl> 
mmm Async . java <nl> ppp Async . java <nl> 
mmm RecipientRepository . java <nl> ppp RecipientRepository . java <nl> - @ Query ("{ $ and : [ { scheduledNotifications . BACKUP . active : true }, { $ where : ' this . scheduledNotifications . BACKUP . lastNotified < " + <nl> + @ Query ("{ $ and : [ {' scheduledNotifications . BACKUP . active ': true }, { $ where : ' this . scheduledNotifications . BACKUP . lastNotified < " + <nl> 
mmm BuildDetailPageVelocityTemplateTest . java <nl> ppp BuildDetailPageVelocityTemplateTest . java <nl> - view . setupAdditionalRealTemplate (" shared / _ page _ intro _ top . vm "); <nl> - view . setupAdditionalRealTemplate (" shared / _ page _ intro _ bottom . vm "); <nl> 
mmm Lane . java <nl> ppp Lane . java <nl> + import org . codehaus . jackson . annotate . JsonBackReference ; <nl> + @ JsonBackReference <nl> 
mmm SpanishTest . java <nl> ppp SpanishTest . java <nl> - Arrays . asList (" AFRENTAR _ DIFICULTADES ", " PRON _ HABER _ PARTICIPIO ", " MORFOLOGIK _ RULE _ ES ", " Y _ E ", " GROSSO _ MODO ") <nl> + Arrays . asList (" AFRENTAR _ DIFICULTADES ", " PRON _ HABER _ PARTICIPIO ", " MORFOLOGIK _ RULE _ ES ", " Y _ E _ O _ U ", " GROSSO _ MODO ") <nl> 
mmm NacosDiscoveryAutoConfiguration . java <nl> ppp NacosDiscoveryAutoConfiguration . java <nl> - import org . springframework . boot . ApplicationRunner ; <nl> - import org . springframework . boot . autoconfigure . condition . ConditionalOnNotWebApplication ; <nl> - @ Bean <nl> - public ApplicationRunner applicationRunner ( <nl> 

mmm WidgetResultCache . java <nl> ppp WidgetResultCache . java <nl> + import com . codahale . metrics . Counter ; <nl> + import static com . codahale . metrics . MetricRegistry . name ; <nl> + private final Counter counter ; <nl> + this . counter = metricRegistry . counter ( name ( getClass (), " cacheEntries ")); <nl> 
new file <nl> ppp ParseErrorTest _ 12 . java <nl> + package com . alibaba . json . bvt . parser . error ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONException ; <nl> + import junit . framework . TestCase ; <nl> + public class ParseErrorTest _ 12 extends TestCase { <nl> 
new file <nl> ppp MyResourceTest . java <nl> + package org . javaee7 . jaxrs . beanvalidation ; <nl> + import javax . ws . rs . BadRequestException ; <nl> + import javax . ws . rs . client . Client ; <nl> + import javax . ws . rs . client . ClientBuilder ; <nl> + import javax . ws . rs . client . Entity ; <nl> 
mmm PicassoProvider . java <nl> ppp PicassoProvider . java <nl> + import android . annotation . SuppressLint ; <nl> - static Context context ; <nl> + @ SuppressLint (" StaticFieldLeak ") static Context context ; <nl> 
mmm EggDropping . java <nl> ppp EggDropping . java <nl> - public class EggDropping <nl> - { <nl> -  <nl> -  <nl> - private static int minTrials ( int n , int m ) <nl> - { <nl> -  <nl> - int eggFloor [][] = new int [ n + 1 ][ m + 1 ]; <nl> - int result , x ; <nl> -  <nl> - for ( int i = 1 ; i <= n ; i + + ) <nl> - { <nl> 
mmm ConcurrentLinkedHashMapTest . java <nl> ppp ConcurrentLinkedHashMapTest . java <nl> + import java . util . concurrent . CountDownLatch ; <nl> - import static org . junit . Assert . assertNull ; <nl> + @ Test <nl> + public void computeIfAbsentConcurrently () throws InterruptedException { <nl> + final ConcurrentLinkedHashMap m = new ConcurrentLinkedHashMap . Builder <>() <nl> 
new file <nl> ppp ArgumentListExpression . java <nl> + package org . codehaus . groovy . ast ; <nl> + import java . util . List ; <nl> + public class ArgumentListExpression extends TupleExpression { <nl> + public ArgumentListExpression () { <nl> + } <nl> + public ArgumentListExpression ( List expressions ) { <nl> 
mmm Groovydoc . java <nl> ppp Groovydoc . java <nl> 
mmm SplashScreen . java <nl> ppp SplashScreen . java <nl> - import android . support . v7 . app . AppCompatActivity ; <nl> + import android . widget . RelativeLayout ; <nl> + import com . leafpic . app . Views . ThemedActivity ; <nl> - public class SplashScreen extends AppCompatActivity { <nl> + public class SplashScreen extends ThemedActivity { <nl> 
mmm Java8SortUnitTest . java <nl> ppp Java8SortUnitTest . java <nl> - Collections . sort ( humans , ( final Human h1 , final Human h2 ) - > h1 . getName () . compareTo ( h2 . getName ())); <nl> + humans . sort (( final Human h1 , final Human h2 ) - > h1 . getName () . compareTo ( h2 . getName ())); <nl> 
mmm ReactorNettyDetector . java <nl> ppp ReactorNettyDetector . java <nl> - private static final String DEFAULT _ EXPECTED _ MAIN _ CLASS = ""; <nl> + private static final String DEFAULT _ EXPECTED _ MAIN _ CLASS = " reactor . netty . http . server . HttpServer "; <nl> 
mmm DateTimeUtilsTest . java <nl> ppp DateTimeUtilsTest . java <nl> + @ Test <nl> + public void testRelativeDate _ withExplainFalse () { <nl> + final Context context = context (); <nl> + final KSString ksString = ksString (); <nl> + final DateTime dateTime = DateTime . parse (" 2015 - 12 - 17T18 : 35 : 05Z "); <nl> 
deleted file <nl> mmm YamlRootEncryptRuleConfiguration . java <nl> - package org . apache . shardingsphere . core . yaml . config . encrypt ; <nl> - import lombok . Getter ; <nl> - import lombok . Setter ; <nl> - import org . apache . shardingsphere . core . yaml . config . YamlConfiguration ; <nl> - import javax . sql . DataSource ; <nl> 
mmm MongoDbConfiguration . java <nl> ppp MongoDbConfiguration . java <nl> - import static com . google . common . base . Preconditions . checkArgument ; <nl> 
mmm ToastTest . java <nl> ppp ToastTest . java <nl> - public void shouldSetTextCorrectly () throws Exception { <nl> + public void shouldMakeTextCorrectly () throws Exception { <nl> - public void shouldMakeTextCorrectly () throws Exception { <nl> + public void shouldSetTextCorrectly () throws Exception { <nl> 
mmm PathBase . java <nl> ppp PathBase . java <nl> - public PathBase cutoffAtLoadedChunks ( Object bsi0 ) { <nl> 
new file <nl> ppp ForwardingImmutableSet _ CustomFieldSerializer . java <nl> + package com . google . common . collect ; <nl> + public final class ForwardingImmutableSet _ CustomFieldSerializer {} <nl> 

mmm ThreadListener . java <nl> ppp ThreadListener . java <nl> - import org . apache . jmeter . engine . event . LoopIterationListener ; <nl> 
mmm DataSourceServiceTest . java <nl> ppp DataSourceServiceTest . java <nl> + import static org . mockito . Mockito . verify ; <nl> - public void testPersistDataSourcesNode () { <nl> + public void assertPersistDataSourcesNode () { <nl> + dataSourceService . persistDataSourcesNode (); <nl> + verify ( regCenter ) . persist ("/ test / datasources ", ""); <nl> 
mmm OracleModifyColumnExtractHandler . java <nl> ppp OracleModifyColumnExtractHandler . java <nl> + import org . antlr . v4 . runtime . ParserRuleContext ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . ASTExtractHandler1 ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . ColumnDefinitionExtractResult ; <nl> 
mmm GdbRunner . java <nl> ppp GdbRunner . java <nl> + import com . goide . debugger . gdb . Gdb ; <nl> + import com . intellij . openapi . util . SystemInfo ; <nl> + public static final String SET _ AUTO _ LOAD _ SAFE _ PATH = " set auto - load safe - path "; <nl> - protected RunContentDescriptor doExecute ( Project project , RunProfileState state , RunContentDescriptor contentToReuse , ExecutionEnvironment env ) throws ExecutionException { <nl> 
mmm Server . java <nl> ppp Server . java <nl> - final PebbleTemplateEngine engine = PebbleTemplateEngine . create (); <nl> + final PebbleTemplateEngine engine = PebbleTemplateEngine . create ( vertx ); <nl> 
mmm MessageViewInfo . java <nl> ppp MessageViewInfo . java <nl> + import com . fsck . k9 . mail . Body ; <nl> + import com . fsck . k9 . mail . MessagingException ; <nl> + import com . fsck . k9 . mail . internet . MimeBodyPart ; <nl> + import com . fsck . k9 . mail . internet . TextBody ; <nl> - return new MessageViewInfo ( message , isMessageIncomplete , null , null , false , null , null , null , null , null , null ); <nl> 
mmm ApacheDSEmbeddedLdifTests . java <nl> ppp ApacheDSEmbeddedLdifTests . java <nl> - import static org . junit . Assert . assertTrue ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> - private static final String LDAP _ ROOT = " ou = ssattributes , dc = springframework , dc = org "; <nl> 
mmm DiscoveryPresenter . java <nl> ppp DiscoveryPresenter . java <nl> - import android . content . Intent ; <nl> - import com . kickstarter . R ; <nl> - import com . kickstarter . ui . activities . ProjectDetailActivity ; <nl> - import com . kickstarter . ui . view _ holders . ProjectListViewHolder ; <nl> 
mmm MergingInconsistencyResolver . java <nl> ppp MergingInconsistencyResolver . java <nl> - public class MergingInconsitencyResolver < T > implements InconsistencyResolver < Versioned < T >> { <nl> + public class MergingInconsistencyResolver < T > implements InconsistencyResolver < Versioned < T >> { <nl> 
mmm MyApplication . java <nl> ppp MyApplication . java <nl> - " main2 "),"/"); <nl> + " main "),"/"); <nl> 
mmm NotificatorTelegram . java <nl> ppp NotificatorTelegram . java <nl> - chatId = Context . getConfig () . getString (" notificator . Telegram . chatid "); <nl> + chatId = Context . getConfig () . getString (" notificator . telegram . chatId "); <nl> 
mmm ThreadPoolConfig . java <nl> ppp ThreadPoolConfig . java <nl> - @ ConfigItem ( defaultValue = " PT1S ") <nl> + @ ConfigItem ( defaultValue = " PT30S ") <nl> 
mmm TableSegment . java <nl> ppp TableSegment . java <nl> + private final int stopIndex ; <nl> - public TableSegment ( final int startIndex , final String name ) { <nl> - this ( startIndex , name , QuoteCharacter . getQuoteCharacter ( name )); <nl> + public TableSegment ( final int startIndex , final int stopIndex , final String name ) { <nl> 
mmm MllpEndpointTest . java <nl> ppp MllpEndpointTest . java <nl> 
new file <nl> ppp HlsMediaPlaylistSegmentIterator . java <nl> + package com . google . android . exoplayer2 . source . hls . playlist ; <nl> + import android . net . Uri ; <nl> + import com . google . android . exoplayer2 . source . chunk . BaseMediaChunkIterator ; <nl> + import com . google . android . exoplayer2 . source . chunk . MediaChunkIterator ; <nl> 
mmm AESTest . java <nl> ppp AESTest . java <nl> - @ Test <nl> - public void encryptTest () { <nl> - AES aes = new AES ( Mode . CBC , Padding . PKCS5Padding , <nl> - " 1234567890123456 " . getBytes (), " 1234567890123456 " . getBytes ()); <nl> - String encryptHex = aes . encryptHex (" 123456 "); <nl> - Assert . assertEquals (" d637735ae9e21ba50cb686b74fab8d2c ", encryptHex ); <nl> 
mmm H02ProtocolDecoderTest . java <nl> ppp H02ProtocolDecoderTest . java <nl> + verify ( decoder . decode ( null , null , ChannelBuffers . copiedBuffer ( <nl> + "* HQ , 356823035368767 , V1 , 083618 , A , 0955 . 6392 , N , 07809 . 0796 , E , 0 . 00 , 0 , 070414 , FFFBFFFF , 194 , 3b5 , 71 , c9a9 # ", Charset . defaultCharset ()))); <nl> 
mmm ShadowIcon . java <nl> ppp ShadowIcon . java <nl> + import android . os . Build ; <nl> + import static android . os . Build . VERSION _ CODES . M ; <nl> - @ Implements ( Icon . class ) <nl> + @ Implements ( value = Icon . class , minSdk = M ) <nl> 
mmm ClassPathHacker . java <nl> ppp ClassPathHacker . java <nl> - import com . google . security . zynamics . binnavi . Log . NaviLogger ; <nl> - NaviLogger . info (" Dynamically added " + u . toString () + " to classLoader "); <nl> 
mmm ArmoredConveyor . java <nl> ppp ArmoredConveyor . java <nl> - return otherblock . outputsItems () & & ( Point2 . equals ( tile . x + Geometry . d4 ( rotation ) . x , tile . y + Geometry . d4 ( rotation ) . y , otherx , othery ) <nl> + return otherblock . outputsItems () & & otherblock instanceof Conveyor & & ( Point2 . equals ( tile . x + Geometry . d4 ( rotation ) . x , tile . y + Geometry . d4 ( rotation ) . y , otherx , othery ) <nl> 
mmm AtmosphereResourceListenerService . java <nl> ppp AtmosphereResourceListenerService . java <nl> 
mmm Aws2S3BaseTest . java <nl> ppp Aws2S3BaseTest . java <nl> + import software . amazon . awssdk . auth . credentials . AwsBasicCredentials ; <nl> + import software . amazon . awssdk . auth . credentials . StaticCredentialsProvider ; <nl> + . credentialsProvider ( StaticCredentialsProvider . create ( AwsBasicCredentials . create (" xxx ", " yyy "))) <nl> 
mmm LimitRowCountPlaceholder . java <nl> ppp LimitRowCountPlaceholder . java <nl> 
mmm CodeStyleRulesTest . java <nl> ppp CodeStyleRulesTest . java <nl> - addRule ( RULESET , " OneDeclarationPerStatement "); <nl> + addRule ( RULESET , " OneDeclarationPerLine "); <nl> 
mmm TypingNotificationEvent . java <nl> ppp TypingNotificationEvent . java <nl> + public String toString () <nl> + { <nl> + return new StringBuffer (" TypingNotificationEvent [ from =") <nl> + . append ( getSourceContact () . getDisplayName ()) <nl> + . append (" state =" + getTypingState ()) . toString (); <nl> 
mmm InodeDirectoryIdGenerator . java <nl> ppp InodeDirectoryIdGenerator . java <nl> + import alluxio . master . journal . NoopJournalContext ; <nl> - return getNewDirectoryId ( null ); <nl> + return getNewDirectoryId ( NoopJournalContext . INSTANCE ); <nl> 
mmm MainTest . java <nl> ppp MainTest . java <nl> + String testString2 = " To jest „ nowy problem ” . A to inny jeszcze ( „ problem . Co jest „?"; <nl> + paRes = prog . doProofreading (" 1 ", testString2 , plLoc , 0 , testString2 . length (), prop ); <nl> + assertEquals (" 1 ", paRes . aDocumentIdentifier ); <nl> 
mmm UpdateStatement . java <nl> ppp UpdateStatement . java <nl> - throw new ShardingException (" Can not find column value by % s . ", column ); <nl> + throw new ShardingException (" Can not find column value by % s . ", column ); <nl> 
mmm SimpleService . java <nl> ppp SimpleService . java <nl> + import retrofit . GsonConverterFactory ; <nl> + . addConverterFactory ( GsonConverterFactory . create ()) <nl> 
mmm FindFunctionTests . java <nl> ppp FindFunctionTests . java <nl> + @ Test <nl> + public void findFunctionFindLiteralTest () throws Exception { <nl> + String [] matches = ( String []) invoke (" find ", " This is a test string for testing find . ", " . test "); <nl> + Assert . assertEquals ( matches . length , 0 ); <nl> 
mmm JarArchiveDependencySupplier . java <nl> ppp JarArchiveDependencySupplier . java <nl> + import java . lang . ref . SoftReference ; <nl> - private ImmutableSortedSet < SourcePath > archiveMembers ; <nl> + private SoftReference < ImmutableSortedSet < SourcePath >> archiveMembers ; <nl> + ImmutableSortedSet < SourcePath > members ; <nl> 
mmm PhantomNodeLogic . java <nl> ppp PhantomNodeLogic . java <nl> - import com . github . javaparser . ast . Node ; <nl> - import com . github . javaparser . ast . observer . AstObserver ; <nl> - import com . github . javaparser . ast . observer . AstObserverAdapter ; <nl> - import com . github . javaparser . ast . type . UnknownType ; <nl> 
new file <nl> ppp MediaScanner . java <nl> + package cn . finalteam . rxgalleryfinal . utils ; <nl> + import android . content . Context ; <nl> + import android . media . MediaScannerConnection ; <nl> + import android . net . Uri ; <nl> + public class MediaScanner { <nl> + private MediaScannerConnection mediaScanConn = null ; <nl> 
mmm SpringContextTest . java <nl> ppp SpringContextTest . java <nl> - package org . baeldung ; <nl> + package com . baeldung ; <nl> 
mmm WebSocketServerHandshakerFactory . java <nl> ppp WebSocketServerHandshakerFactory . java <nl> 
deleted file <nl> mmm TestBug2638 . java <nl> - package com . alibaba . json . bvt . issue _ 2600 ; <nl> - import com . alibaba . fastjson . JSON ; <nl> - import com . alibaba . fastjson . JSONException ; <nl> - import org . junit . Test ; <nl> - import java . io . Serializable ; <nl> - import static org . junit . Assert . assertNotNull ; <nl> 
mmm GermanConfusionProbabilityRule . java <nl> ppp GermanConfusionProbabilityRule . java <nl> 
mmm ProvidesIntoMap . java <nl> ppp ProvidesIntoMap . java <nl> - * Plugin provideFooUrl ( FooManager fm ) { returm fm . getPlugin (); } <nl> + * Plugin provideFooUrl ( FooManager fm ) { return fm . getPlugin (); } <nl> 
mmm FhirIOLROIT . java <nl> ppp FhirIOLROIT . java <nl> - this . deidFhirStoreId = " FHIR _ store _ " + testTime + " _ " + ( new SecureRandom () . nextInt ( 32 )); <nl> + this . deidFhirStoreId = fhirStoreId + " _ deid "; <nl> 
new file <nl> ppp MainActivity . java <nl> + package com . squareup . flow ; <nl> + import android . app . Activity ; <nl> + import android . os . Bundle ; <nl> + public class MainActivity extends Activity { <nl> + @ Override <nl> + protected void onCreate ( Bundle savedInstanceState ) { <nl> + super . onCreate ( savedInstanceState ); <nl> 
deleted file <nl> mmm NonPrexFieldNamingStrategy . java <nl> - package com . dianping . cat . report . page ; <nl> - import com . google . gson . FieldNamingStrategy ; <nl> - public class NonPrexFieldNamingStrategy implements FieldNamingStrategy { <nl> - @ Override <nl> - public String translateName ( java . lang . reflect . Field f ) { <nl> 
mmm CompilingClassLoader . java <nl> ppp CompilingClassLoader . java <nl> + if ( javaCompiler == null ) { <nl> + throw new RuntimeException (" Unable to detect java compiler , make sure JAVA _ HOME is set correctly "); <nl> + } <nl> 
mmm Hook . java <nl> ppp Hook . java <nl> - public String runFilter ( String txt ) { <nl> - return txt ; <nl> - } <nl> 
mmm CannonSpots . java <nl> ppp CannonSpots . java <nl> - BLACK _ DEMONS ( new WorldPoint ( 2859 , 9778 , 0 ), new WorldPoint ( 2841 , 9791 , 0 )), <nl> + BLACK _ DEMONS ( new WorldPoint ( 2859 , 9778 , 0 ), new WorldPoint ( 2841 , 9791 , 0 ), new WorldPoint ( 1421 , 10089 , 1 )), <nl> 
mmm BailErrorStrategy . java <nl> ppp BailErrorStrategy . java <nl> 
mmm BinaryDistributionIT . java <nl> ppp BinaryDistributionIT . java <nl> - result . assertPMDExecutionResult ( 1 , " apex , ecmascript , java , jsp , plsql , pom , vm , wsdl , xml , xsl "); <nl> + result . assertPMDExecutionResult ( 1 , " apex , vf , ecmascript , java , jsp , plsql , pom , vm , wsdl , xml , xsl "); <nl> 
mmm InstrumentedResourceMethodDispatchAdapter . java <nl> ppp InstrumentedResourceMethodDispatchAdapter . java <nl> 
mmm HelloClientSpec . java <nl> ppp HelloClientSpec . java <nl> + import io . micronaut . context . annotation . Property ; <nl> + import org . junit . jupiter . api . Test ; <nl> + @ Property ( name = " spec . name ", value = " HelloControllerSpec ") <nl> + @ Test <nl> 
mmm GradleMissingEngineTests . java <nl> ppp GradleMissingEngineTests . java <nl> - import de . sormuras . bartholdy . tool . Gradle ; <nl> - import org . junit . jupiter . api . condition . EnabledOnJre ; <nl> - import org . junit . jupiter . api . condition . JRE ; <nl> 
mmm AndroidLibExample . java <nl> ppp AndroidLibExample . java <nl> 
mmm HelloWorldExample . java <nl> ppp HelloWorldExample . java <nl> 
mmm ShellProcess . java <nl> ppp ShellProcess . java <nl> - public void writeString ( String string ) throws IOException { <nl> - processIn . writeBytes ( string + "\ nend \ n "); <nl> - processIn . flush (); <nl> + public void writeString ( String str ) throws IOException { <nl> + byte [] strBytes = str . getBytes (" UTF - 8 "); <nl> 
mmm SpringBootApolloRefreshConfig . java <nl> ppp SpringBootApolloRefreshConfig . java <nl> - @ ApolloConfigChangeListener ({ ConfigConsts . NAMESPACE _ APPLICATION , " TEST1 . apollo ", " application . yaml "}) <nl> + @ ApolloConfigChangeListener ( value = { ConfigConsts . NAMESPACE _ APPLICATION , " TEST1 . apollo ", " application . yaml "}, <nl> 
mmm AccountLoginPane . java <nl> ppp AccountLoginPane . java <nl> + import java . util . logging . Level ; <nl> + import static org . jackhuang . hmcl . util . Logging . LOG ; <nl> + LOG . log ( Level . INFO , " Failed to login with password : " + oldAccount , e ); <nl> 
mmm LocalFileOffsetStoreTest . java <nl> ppp LocalFileOffsetStoreTest . java <nl> + import java . util . Map ; <nl> + @ Test <nl> + public void testCloneOffset () throws Exception { <nl> + OffsetStore offsetStore = new LocalFileOffsetStore ( mQClientFactory , group ); <nl> + MessageQueue messageQueue = new MessageQueue ( topic , brokerName , 3 ); <nl> 
mmm DiscoveryOnboardingViewHolder . java <nl> ppp DiscoveryOnboardingViewHolder . java <nl> + import android . support . annotation . Nullable ; <nl> - public void onBind ( final @ NonNull Object datum ) {} <nl> + @ Override <nl> + public void bindData ( final @ Nullable Object data ) throws Exception {} <nl> 
mmm PulsarConcurrentConsumerInTest . java <nl> ppp PulsarConcurrentConsumerInTest . java <nl> - return new ClientBuilderImpl () . serviceUrl ( getPulsarBrokerUrl ()) . ioThreads ( 2 ) . listenerThreads ( 5 ) . build (); <nl> + return new ClientBuilderImpl () . serviceUrl ( getPulsarBrokerUrl ()) . ioThreads ( 5 ) . listenerThreads ( 5 ) . build (); <nl> 
mmm Const . java <nl> ppp Const . java <nl> - static final short FLAG _ BITS = 4 ; <nl> + public static final short FLAG _ BITS = 4 ; <nl> + public static final short MS _ FLAG _ BITS = 6 ; <nl> - static final short FLAG _ FLOAT = 0x8 ; <nl> + public static final short FLAG _ FLOAT = 0x8 ; <nl> - static final short LENGTH _ MASK = 0x7 ; <nl> 
new file <nl> ppp Utils . java <nl> + package com . loopj . android . http ; <nl> + class Utils { <nl> + private Utils () { <nl> + } <nl> + public static void asserts ( final boolean expression , final String failedMessage ) { <nl> + if (! expression ) { <nl> + throw new AssertionError ( failedMessage ); <nl> 
mmm ProxyDeleteRequestBuilder . java <nl> ppp ProxyDeleteRequestBuilder . java <nl> - import org . elasticsearch . ElasticsearchException ; <nl> - public DeleteResponse get () throws ElasticsearchException { <nl> + public DeleteResponse get () { <nl> - public DeleteResponse get ( TimeValue timeout ) throws ElasticsearchException { <nl> 
mmm AppShortcutLauncherActivity . java <nl> ppp AppShortcutLauncherActivity . java <nl> - import android . widget . Toast ; <nl> - import com . kabouzeid . gramophone . R ; <nl> - case NONE : <nl> - shortcutError (); <nl> - break ; <nl> - default : <nl> - shortcutError (); <nl> - break ; <nl> - private void shortcutError () { <nl> 
mmm PalindromePartition . java <nl> ppp PalindromePartition . java <nl> - public int minCuts ( char [] str ){ <nl> -  <nl> - int T [][] = new int [ str . length ][ str . length ]; <nl> - boolean P [][] = new boolean [ str . length ][ str . length ]; <nl> -  <nl> - for ( int i = 0 ; i < P . length ; i + + ){ <nl> 
mmm RestAccessLogFilter . java <nl> ppp RestAccessLogFilter . java <nl> - import org . apache . shiro . SecurityUtils ; <nl> - import org . apache . shiro . subject . Subject ; <nl> - import org . apache . shiro . mgt . DefaultSecurityManager ; <nl> - private String getUsernameFromSession ( String sessionID ) { <nl> 
mmm TestConfig . java <nl> ppp TestConfig . java <nl> + @ ConfigItem ( defaultValue = " test ") <nl> + String profile ; <nl> 
mmm PalindromeList . java <nl> ppp PalindromeList . java <nl> 
mmm SqlSessionFactoryBuilder . java <nl> ppp SqlSessionFactoryBuilder . java <nl> - return build ( reader , environment , props , null ); <nl> + return build ( reader , environment , props , new Configuration ()); <nl> 
mmm RectangleBitmapTextureAtlasSourceDecoratorShape . java <nl> ppp RectangleBitmapTextureAtlasSourceDecoratorShape . java <nl> - }; <nl> + } <nl> 
mmm ArchivingMediaDriver . java <nl> ppp ArchivingMediaDriver . java <nl> - final MediaDriver . Context driverCtx = new MediaDriver . Context () <nl> - . useConcurrentCounterManager ( Configuration . THREADING _ MODE _ DEFAULT != ThreadingMode . INVOKER ); <nl> - final MediaDriver mediaDriver = MediaDriver . launch ( driverCtx ); <nl> 
new file <nl> ppp ShardingXAConnectionTest . java <nl> + package io . shardingsphere . transaction . xa . jta . connection ; <nl> + import io . shardingsphere . transaction . xa . jta . ShardingXAResource ; <nl> + import lombok . SneakyThrows ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> 
new file <nl> ppp GroupUtilsTest . java <nl> + package com . xwray . groupie ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . mockito . junit . MockitoJUnitRunner ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import static org . junit . Assert . assertEquals ; <nl> 
mmm RegistryTestSuite . java <nl> ppp RegistryTestSuite . java <nl> - @ Suite . SuiteClasses ({ VanillaRegistryTests . class , FreezingTests . class , SubstitutionRemoveRestoreTest . class , SubstitutionInjectionTest . class }) <nl> + @ Suite . SuiteClasses ({ VanillaRegistryTests . class , FreezingTests . class , SubstitutionRemoveRestoreTest . class , SubstitutionInjectionTest . class , DummyBlockReplacementTest . class }) <nl> 
mmm SimpleConfidentialRedirectTestCase . java <nl> ppp SimpleConfidentialRedirectTestCase . java <nl> + import org . junit . BeforeClass ; <nl> + import io . undertow . testutils . ProxyIgnore ; <nl> - @ Test <nl> - public void simpleRedirectTestCase () throws IOException , GeneralSecurityException { <nl> 
mmm UnusedLocalVariableRule . java <nl> ppp UnusedLocalVariableRule . java <nl> - addViolation ( data , node . getNameDeclaration () . getNode (), node . getNameDeclaration () . getImage ()); <nl> + addViolation ( data , node , node . getNameDeclaration () . getImage ()); <nl> 
deleted file <nl> mmm MetaProject . java <nl> - package com . kylinolap . kylin . jdbc . stub ; <nl> - import com . kylinolap . kylin . jdbc . KylinMetaImpl . MetaCatalog ; <nl> - import com . kylinolap . kylin . jdbc . KylinMetaImpl . MetaColumn ; <nl> - import com . kylinolap . kylin . jdbc . KylinMetaImpl . MetaSchema ; <nl> 
mmm _ 129 . java <nl> ppp _ 129 . java <nl> - public class SumRootToLeafNumbers { <nl> + public class _ 129 { <nl> 
mmm BranchPersisterImplTest . java <nl> ppp BranchPersisterImplTest . java <nl> - analysisMetadataHolder . setProject ( Project . copyOf ( dto )); <nl> + analysisMetadataHolder . setProject ( new Project ( dto . uuid (), dto . getKey (), dto . name (), dto . description ())); <nl> 
mmm S3BucketOps . java <nl> ppp S3BucketOps . java <nl> - listBucketsResponse . buckets () . stream () . forEach ( x - > System . out . println ( x . name ())); <nl> + listBucketsResponse . buckets () . stream () . forEach ( x - > System . out . println ( x . name ())); <nl> 
mmm _ 438 . java <nl> ppp _ 438 . java <nl> - for ( int i = 0 ; i <= s . length () - p . length (); i + + ){ <nl> - if ( isAnagram ( s . substring ( i , i + p . length ()), p )) result . add ( i ); <nl> + for ( int i = 0 ; i <= s . length () - p . length (); i + + ) { <nl> + if ( isAnagram ( s . substring ( i , i + p . length ()), p )) result . add ( i ); <nl> 
mmm ChatAtmosphereHandler . java <nl> ppp ChatAtmosphereHandler . java <nl> - import org . atmosphere . websocket . WebSocketEventListenerAdapter ; <nl> - import org . codehaus . jackson . map . ObjectMapper ; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - import java . util . Date ; <nl> 
new file <nl> ppp SimpleTableViewListener . java <nl> + package com . evrencoskun . tableview . listener ; <nl> + import androidx . annotation . NonNull ; <nl> + import androidx . recyclerview . widget . RecyclerView ; <nl> + public abstract class SimpleTableViewListener implements ITableViewListener { <nl> 
mmm AddFeedFragment . java <nl> ppp AddFeedFragment . java <nl> + @ Override <nl> + public void onCreate ( Bundle savedInstanceState ) { <nl> + super . onCreate ( savedInstanceState ); <nl> + setRetainInstance ( true ); <nl> + setHasOptionsMenu ( true ); <nl> + } <nl> 
mmm FuriganaFilters . java <nl> ppp FuriganaFilters . java <nl> - private static final String RUBY = AnkiDroidApp . SDK _ VERSION >= 11 ? "< ruby >$ 1 < rt >$ 2 </ rt ></ ruby >" <nl> + private static final String RUBY = AnkiDroidApp . SDK _ VERSION >= 11 ? "< ruby >< rb >$ 1 </ rb >< rt >$ 2 </ rt ></ ruby >" <nl> 
mmm CSVRowParserTests . java <nl> ppp CSVRowParserTests . java <nl> - @ Test <nl> - @ Test <nl> - @ Test <nl> 
mmm YamlKeyGeneratorConfigurationTest . java <nl> ppp YamlKeyGeneratorConfigurationTest . java <nl> + import io . shardingsphere . core . keygen . generator . SnowflakeKeyGenerator ; <nl> + private Properties props = new Properties (); <nl> - Properties props = new Properties (); <nl> + public void getKeyGeneratorConfiguration () { <nl> 
mmm TaskScheduler . java <nl> ppp TaskScheduler . java <nl> - @ Scheduled ( cron = "*/ 15 * * * *") <nl> + @ Scheduled ( cron = "*/ 15 * * * * *") <nl> - } <nl> + } <nl> 
deleted file <nl> mmm OpenPgpUtilsTest . java <nl> - package com . fsck . k9 . crypto ; <nl> - import android . support . test . runner . AndroidJUnit4 ; <nl> - import org . junit . Test ; <nl> - import org . junit . runner . RunWith ; <nl> - import org . openintents . openpgp . util . OpenPgpUtils ; <nl> - import static junit . framework . Assert . assertEquals ; <nl> 
deleted file <nl> mmm CallerSensitive . java <nl> - package sun . reflect ; <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Retention ; <nl> - import java . lang . annotation . RetentionPolicy ; <nl> - import java . lang . annotation . Target ; <nl> - @ Retention ( RetentionPolicy . RUNTIME ) <nl> 
new file <nl> ppp PlacePickerActivity . java <nl> + package org . microg . gms . ui ; <nl> + import android . content . Intent ; <nl> + import android . os . Build ; <nl> + import android . os . Bundle ; <nl> + import android . support . v7 . app . AppCompatActivity ; <nl> + import android . support . v7 . widget . Toolbar ; <nl> 
mmm DropDefaultValueGenerator . java <nl> ppp DropDefaultValueGenerator . java <nl> - import liquibase . exception . UnexpectedLiquibaseException ; <nl> - String productVersion = null ; <nl> - try { <nl> - productVersion = database . getDatabaseProductVersion (); <nl> - } catch ( DatabaseException e ) { <nl> 
mmm InvisibleActivityBase . java <nl> ppp InvisibleActivityBase . java <nl> + import android . view . ContextThemeWrapper ; <nl> + import android . view . Gravity ; <nl> + import android . view . ViewGroup ; <nl> + import android . widget . FrameLayout ; <nl> - setContentView ( R . layout . fui _ activity _ kickoff ); <nl> 
mmm NettyBodyBody . java <nl> ppp NettyBodyBody . java <nl> - import org . asynchttpclient . request . body . generator . SimpleFeedableBodyGenerator ; <nl> + import org . asynchttpclient . request . body . generator . FeedableBodyGenerator ; <nl> + import org . asynchttpclient . request . body . generator . ReactiveStreamsBodyGenerator ; <nl> 
new file <nl> ppp TestNamingContextListener . java <nl> + package org . apache . catalina . core ; <nl> + import javax . naming . InitialContext ; <nl> + import javax . naming . NamingException ; <nl> + import javax . servlet . ServletContextEvent ; <nl> + import javax . servlet . ServletContextListener ; <nl> 
mmm RenderScriptBlur . java <nl> ppp RenderScriptBlur . java <nl> - private RenderScript renderScript ; <nl> - private ScriptIntrinsicBlur blurScript ; <nl> + private final RenderScript renderScript ; <nl> + private final ScriptIntrinsicBlur blurScript ; <nl> - private boolean canModifyBitmap ; <nl> + private final boolean canModifyBitmap ; <nl> 
mmm LogLevelRecorder . java <nl> ppp LogLevelRecorder . java <nl> - Level level = determineThresholdLevel ( threshold ); <nl> - if ( level . toInt () < Level . WARN . toInt () ) <nl> - { <nl> - throw new IllegalArgumentException ( " Logging severity thresholds can only be set to WARN or ERROR " ); <nl> - } <nl> 
mmm PostHandler . java <nl> ppp PostHandler . java <nl> + import java . util . Collections ; <nl> + import org . androidannotations . handler . AnnotationHandler ; <nl> + import org . androidannotations . handler . BaseAnnotationHandler ; <nl> + import org . androidannotations . handler . HasParameterHandlers ; <nl> 
mmm TomcatMetricsConfiguration . java <nl> ppp TomcatMetricsConfiguration . java <nl> + @ ConditionalOnClass ( name =" org . apache . catalina . startup . Tomcat ") <nl> - @ ConditionalOnClass ( name =" org . apache . catalina . startup . Tomcat ") <nl> 
mmm OkHttpFileUploadingLiveTest . java <nl> ppp OkHttpFileUploadingLiveTest . java <nl> - ProgressRequestWrapper . ProgressListener listener = new ProgressRequestWrapper . ProgressListener () { <nl> + ProgressRequestWrapper . ProgressListener listener = ( bytesWritten , contentLength ) - > { <nl> - public void onRequestProgress ( long bytesWritten , long contentLength ) { <nl> 
mmm DurationDsl . java <nl> ppp DurationDsl . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger LOGGER = LoggerFactory . getLogger ( DurationDsl . class ); <nl> - String [] parts = text . split (" "); <nl> - final String unit = parts [ 1 ] . toUpperCase (); <nl> 
mmm PropertyResolver . java <nl> ppp PropertyResolver . java <nl> + import jodd . util . ReflectUtil ; <nl> + import java . util . Collection ; <nl> + if ( ReflectUtil . isSubclass ( field . getType (), Collection . class )) { <nl> + continue ; <nl> + } <nl> 
mmm CorsResponseFilter . java <nl> ppp CorsResponseFilter . java <nl> - if ( allowed == null ) { <nl> + if ( allowed == null || origin == null ) { <nl> 
mmm ApexUnitRulesTest . java <nl> ppp ApexUnitRulesTest . java <nl> + addRule ( RULESET , " ApexUnitTestClassShouldHaveAsserts "); <nl> 
mmm BaseTask . java <nl> ppp BaseTask . java <nl> - public abstract class BaseTask extends AsyncTask < Void , Void , Void > <nl> + public abstract class BaseTask extends AsyncTask < Void , Integer , Void > <nl> 
mmm EmbeddedProfileServiceRestTest . java <nl> ppp EmbeddedProfileServiceRestTest . java <nl> + import hudson . model . User ; <nl> + import hudson . tasks . Mailer ; <nl> + User system = j . jenkins . getUser (" SYSTEM "); <nl> - RestAssured . given () . log () . all () . get ("/ users /" + j . jenkins . getUser (" SYSTEM ") . getId ()) <nl> 
new file <nl> ppp ActivitiRuntimeBundle . java <nl> + package org . activiti . configuration ; <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + import java . lang . annotation . Target ; <nl> 
mmm OrchestrationShardingDataSource . java <nl> ppp OrchestrationShardingDataSource . java <nl> - shardingDataSource . getDataSourceMap () . keySet ())); <nl> + shardingDataSource . getDataSourceMap () . keySet ()), ConfigMapContext . getInstance () . getShardingConfig (), shardingDataSource . getShardingProperties () . getProps ()); <nl> 
mmm AtmosphereInterceptorService . java <nl> ppp AtmosphereInterceptorService . java <nl> 
mmm CpuProfileServlet . java <nl> ppp CpuProfileServlet . java <nl> 
mmm FieldInjectionHandler . java <nl> ppp FieldInjectionHandler . java <nl> + import javax . ws . rs . WebApplicationException ; <nl> - Object result = extractor . extractParameter ( requestContext ); <nl> - if ( result instanceof ParameterExtractor . ParameterCallback ) { <nl> - requestContext . suspend (); <nl> 
mmm Test . java <nl> ppp Test . java <nl> - ArrayMemberValue blankMemberValueArray = new ArrayMemberValue ( new AnnotationMemberValue ( constPool ), constPool ); <nl> - blankMemberValueArray . setValue ( new MemberValue [ 0 ]); <nl> - annotation . addMemberValue (" uniqueConstraints ", blankMemberValueArray ); <nl> 
mmm JavacJavaUtilListSetSingularizer . java <nl> ppp JavacJavaUtilListSetSingularizer . java <nl> - ListBuffer < JCStatement > statements = new ListBuffer < JCStatement >(); <nl> - statements . append ( generateSingularMethodAddStatement ( maker , builderType , data . getSingularName (), data . getPluralName () . toString ())); <nl> 
mmm ApolloConfigNotification . java <nl> ppp ApolloConfigNotification . java <nl> + public void setNamespaceName ( String namespaceName ) { <nl> + this . namespaceName = namespaceName ; <nl> + } <nl> + public void setNotificationId ( long notificationId ) { <nl> + this . notificationId = notificationId ; <nl> 
deleted file <nl> mmm Spike . java <nl> - package net . orfjackal . retrolambda ; <nl> - import java . lang . invoke . *; <nl> - import java . lang . reflect . *; <nl> - public class Spike { <nl> - public static void main ( String [] args ) throws Exception { <nl> - Class <?> targetClass = Dummy . class ; <nl> 
mmm ControllerExternalViewChangeListener . java <nl> ppp ControllerExternalViewChangeListener . java <nl> - if ( nReplicas <= 1 ){ <nl> + if ( nReplicas < 1 ) { <nl> - LOGGER . warn (" Partition {} of table {} only has {} replicas ", partitionName , tableName , nReplicas ); <nl> 
new file <nl> ppp ThrowableProxy . java <nl> + package org . jboss . shamrock . runtime . graal . logback ; <nl> + import com . oracle . svm . core . annotate . Substitute ; <nl> + import com . oracle . svm . core . annotate . TargetClass ; <nl> + @ TargetClass ( className = " ch . qos . logback . classic . spi . ThrowableProxy ") <nl> 
mmm ViewPledgeActivity . java <nl> ppp ViewPledgeActivity . java <nl> - @ OnClick ( R . id . nav _ back _ button ) <nl> - @ Override <nl> - public void onBackPressed () { <nl> - super . onBackPressed (); <nl> - overridePendingTransition ( R . anim . fade _ in _ slide _ in _ left , R . anim . slide _ out _ right ); <nl> 
mmm V680ProtocolDecoderTest . java <nl> ppp V680ProtocolDecoderTest . java <nl> + assertNotNull ( decoder . decode ( null , null , <nl> + " # 356823031166908 # 13001190527 # 0 # 0000 # AUT # 4 # V # 07136 . 4070 , W , 1040 . 0575 , N , 000 . 35 , 257 # 280813 # 142836 # V # 07136 . 4088 , W , 1040 . 0580 , N , 000 . 49 , 288 # 280813 # 142846 # V # 07136 . 4098 , W , 1040 . 0590 , N , 000 . 59 , 264 # 280813 # 142856 # V # 07136 . 4093 , W , 1040 . 0605 , N , 000 . 30 , 264 # 280813 # 142906 # # ")); <nl> 
mmm HashFunctions . java <nl> ppp HashFunctions . java <nl> + import java . util . function . Supplier ; <nl> - MD5 ( MessageDigests . md5 ()), <nl> - SHA1 ( MessageDigests . sha1 ()); <nl> + MD5 ( MessageDigests :: md5 ), <nl> + SHA1 ( MessageDigests :: sha1 ); <nl> - private final MessageDigest messageDigest ; <nl> 
mmm ApexTokenizer . java <nl> ppp ApexTokenizer . java <nl> - token . getCharPositionInLine () + 1 + tokenText . length ()); <nl> + token . getCharPositionInLine () + tokenText . length ()); <nl> 
mmm GeofenceResource . java <nl> ppp GeofenceResource . java <nl> - @ QueryParam (" deviceId ") long deviceId ) throws SQLException { <nl> + @ QueryParam (" deviceId ") long deviceId , @ QueryParam (" refresh ") boolean refresh ) throws SQLException { <nl> + if ( refresh ) { <nl> + geofenceManager . refreshGeofences (); <nl> 
mmm AdaptiveActionsToolbar . java <nl> ppp AdaptiveActionsToolbar . java <nl> - int menuSize = menu . size (); <nl> + int menuSize = 0 ; <nl> + for ( int i = 0 ; i < menu . size (); i + + ) { <nl> + if ( menu . getItem ( i ) . isVisible ()) { <nl> + menuSize + + ; <nl> + } <nl> + } <nl> 
new file <nl> ppp JSONObjectTest7 . java <nl> + package com . alibaba . json . bvt ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import junit . framework . TestCase ; <nl> + public class JSONObjectTest7 extends TestCase { <nl> + public void test () throws Exception { <nl> 
mmm ConcurrentHashMapDeserializerTest . java <nl> ppp ConcurrentHashMapDeserializerTest . java <nl> + import java . util . concurrent . ConcurrentMap ; <nl> - ConcurrentHashMap map = JSON . parseObject (" null ", ConcurrentHashMap . class ); <nl> - Assert . assertEquals ( null , map ); <nl> + ConcurrentHashMap map = JSON . parseObject ("{}", ConcurrentHashMap . class ); <nl> 
mmm Function . java <nl> ppp Function . java <nl> - if ( info != null ? ! info . equals ( function . info ) : function . info != null ) <nl> - return false ; <nl> - return !( arguments != null ? ! arguments . equals ( function . arguments ) : function . arguments != null ); <nl> + if (! arguments . equals ( function . arguments )) return false ; <nl> 
mmm AccelListener . java <nl> ppp AccelListener . java <nl> - mAppView . loadUrl (" javascript : navigator . accelerometer . gotAccel (" + mKey + "," + x + "," + y + "," + z + ")"); <nl> + mAppView . loadUrl (" javascript : navigator . accelerometer . gotCurrentAcceleration (" + mKey + "," + x + "," + y + "," + z + ")"); <nl> 
mmm ForEachMapTest . java <nl> ppp ForEachMapTest . java <nl> - int count = sqlSession . selectOne (" sel _ key _ cols ", mapParam ); <nl> - Assert . assertEquals ( 1 , count ); <nl> + Integer count = sqlSession . selectOne (" sel _ key _ cols ", mapParam ); <nl> + Assert . assertEquals ( Integer . valueOf ( 1 ), count ); <nl> 
mmm UtilsTest . java <nl> ppp UtilsTest . java <nl> - import java . util . Properties ; <nl> + import com . puppycrawl . tools . checkstyle . api . Utils ; <nl> - import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> - import com . puppycrawl . tools . checkstyle . api . Utils ; <nl> 
mmm JsonProcessingExceptionMapper . java <nl> ppp JsonProcessingExceptionMapper . java <nl> + private final boolean showDetails ; <nl> + public JsonProcessingExceptionMapper () { <nl> + this ( false ); <nl> + } <nl> + public JsonProcessingExceptionMapper ( boolean showDetails ) { <nl> + this . showDetails = showDetails ; <nl> 
mmm CountPrimes . java <nl> ppp CountPrimes . java <nl> - int sqRt = new Double ( Math . sqrt ( n )) . intValue (); <nl> + int sqRt = ( int ) Math . sqrt ( n ); <nl> 
mmm NpmMojo . java <nl> ppp NpmMojo . java <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> - @ Parameter ( defaultValue = " install ", property = " command ", required = false ) <nl> - private String command ; <nl> + @ Parameter ( defaultValue = " install ", property = " arguments ", required = false ) <nl> 
mmm LocalShardingTablesConfiguration . java <nl> ppp LocalShardingTablesConfiguration . java <nl> - result . getShardingAlgorithms () . put (" standard _ test _ tbl ", new ShardingSphereAlgorithmConfiguration (" STANDARD _ TEST _ TBL ", new Properties ())); <nl> + result . getShardingAlgorithms () . put (" standard _ test _ tbl ", new ShardingSphereAlgorithmConfiguration (" STANDARD _ TEST _ TBL ", new Properties ())); <nl> 
new file <nl> ppp CustomAdapt . java <nl> + package me . jessyan . autosize . internal ; <nl> + public interface CustomAdapt { <nl> + boolean isBaseOnWidth (); <nl> + int getSizeInDp (); <nl> + } <nl> 
mmm ParserAtnManager . java <nl> ppp ParserAtnManager . java <nl> + import org . antlr . v4 . runtime . atn . StarLoopEntryState ; <nl> + import static org . apache . groovy . parser . antlr4 . GroovyParser . RULE _ nls ; <nl> + static { <nl> + GroovyLangParser . _ ATN . states . stream () <nl> + . filter ( e - > ( e instanceof StarLoopEntryState ) & & ( RULE _ nls == (( StarLoopEntryState ) e ) . ruleIndex )) <nl> 
mmm RmiRemoteInvocation . java <nl> ppp RmiRemoteInvocation . java <nl> 
mmm Shared . java <nl> ppp Shared . java <nl> - sharingEnabled = isSharingEnabledImpl (); <nl> + nonBootSharingEnabled = isNonBootSharingEnabledImpl (); <nl> - private static native boolean isSharingEnabledImpl (); <nl> + private static native boolean isNonBootSharingEnabledImpl (); <nl> - return sharingEnabled ; <nl> 
mmm InsertValuesTokenAssert . java <nl> ppp InsertValuesTokenAssert . java <nl> + import org . apache . shardingsphere . core . parsing . parser . token . InsertValuesToken . InsertColumnValue ; <nl> + assertThat ( assertMessage . getFullAssertMessage (" Insert values column size assertion error : "), actual . getColumnValues () . size (), is ( expected . getInsertColumns () . size ())); <nl> 
new file <nl> ppp URLEncodedUtils . java <nl> + package com . kylinolap . jdbc . util ; <nl> + import java . io . UnsupportedEncodingException ; <nl> + import java . net . URLDecoder ; <nl> + import java . util . Properties ; <nl> + import java . util . StringTokenizer ; <nl> + import com . kylinolap . jdbc . Driver ; <nl> 

mmm PetController . java <nl> ppp PetController . java <nl> - @ RequestMapping ( method = RequestMethod . GET ) <nl> + @ RequestMapping ( value ="/ owners /{ ownerId }/ pets / new ", method = RequestMethod . GET ) <nl> 
mmm AdminApplicationTest . java <nl> ppp AdminApplicationTest . java <nl> - import org . springframework . test . context . junit4 . SpringJUnit4ClassRunner ; <nl> + import org . springframework . test . context . junit4 . SpringRunner ; <nl> - @ RunWith ( SpringJUnit4ClassRunner . class ) <nl> + @ RunWith ( SpringRunner . class ) <nl> 
mmm SimpleReplaceRuleTest . java <nl> ppp SimpleReplaceRuleTest . java <nl> - public void testRule () throws IOException { <nl> - SimpleReplaceRule rule = new SimpleReplaceRule ( TestTools . getMessages (" ro ")); <nl> + private SimpleReplaceRule rule ; <nl> + private JLanguageTool langTool ; <nl> - RuleMatch [] matches ; <nl> 
mmm SCCSRepositoryTest . java <nl> ppp SCCSRepositoryTest . java <nl> - private void testIsRepositoryFor ( final String fileName ) throws IOException { <nl> + private void testIsRepositoryFor ( final String fileName , boolean shouldPass ) throws IOException { <nl> - SCCSRepository instance = new SCCSRepository (); <nl> 
mmm TestUEncoder . java <nl> ppp TestUEncoder . java <nl> - import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . assertTrue ; <nl> 
deleted file <nl> mmm CamelServletlistenerTest . java <nl> - package org . apache . camel . itest . springboot ; <nl> - import org . apache . camel . itest . springboot . util . ArquillianPackager ; <nl> - import org . jboss . arquillian . container . test . api . Deployment ; <nl> - import org . jboss . arquillian . junit . Arquillian ; <nl> 
mmm EntityFlags . java <nl> ppp EntityFlags . java <nl> + public static final int SYNC _ ENABLED = 2 ; <nl> - public static final String [] names = { " USE _ NO _ ARG _ CONSTRUCTOR ", }; <nl> + public static final String [] names = { " USE _ NO _ ARG _ CONSTRUCTOR ", " SYNC _ ENABLED ", }; <nl> 
mmm ReminderView . java <nl> ppp ReminderView . java <nl> - container = ViewUtil . findById ( this , R . id . container ); <nl> + container = ViewUtil . findById ( this , R . id . container ); <nl> 
new file <nl> ppp BaselineTextInputLayout . java <nl> + package com . firebase . ui . auth . util . ui ; <nl> + import android . content . Context ; <nl> + import android . support . annotation . RestrictTo ; <nl> + import android . support . design . widget . TextInputLayout ; <nl> + import android . util . AttributeSet ; <nl> 
mmm PropertiesOrchestrationListenerTest . java <nl> ppp PropertiesOrchestrationListenerTest . java <nl> + propertiesOrchestrationListener = new PropertiesOrchestrationListener (" test ", regCenter ); <nl> 
mmm SocketEvent . java <nl> ppp SocketEvent . java <nl> 
new file <nl> ppp RoleMapperTest . java <nl> + package org . sonar . core . user ; <nl> + import org . apache . ibatis . session . SqlSession ; <nl> + import org . junit . After ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import org . sonar . core . persistence . AbstractDaoTestCase ; <nl> 
mmm GetPropertyTest . java <nl> ppp GetPropertyTest . java <nl> - assertEquals (" name property ", null , value ); <nl> + assertEquals (" name property ", " James ", value ); <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 7 . 1 "); <nl> + public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 7 . 2 "); <nl> 
mmm SingleRowSource . java <nl> ppp SingleRowSource . java <nl> + assert ! collectPhase . whereClause () . hasQuery () <nl> + : " WhereClause should have been normalized to either MATCH _ ALL or NO _ MATCH "; <nl> 
mmm ProjectGeneratorSetupExampleTests . java <nl> ppp ProjectGeneratorSetupExampleTests . java <nl> + import io . spring . initializr . generator . test . InitializrMetadataTestBuilder ; <nl> - import io . spring . initializr . metadata . InitializrMetadataBuilder ; <nl> - import io . spring . initializr . metadata . InitializrProperties ; <nl> 
mmm SpecialComponentList . java <nl> ppp SpecialComponentList . java <nl> + private static String PROTECT _ ACTION _ PREFIX = " _ VA _ protected _ "; <nl> - private static final Map < String , String > PROTECTED _ ACTION _ MAP = new HashMap <>(); <nl> - private static final HashSet < String > WHITE _ PERMISSION = new HashSet <>(); <nl> 
mmm EmptyConfiguration . java <nl> ppp EmptyConfiguration . java <nl> - super ( false ); <nl> + super ( true ); <nl> + this . clear (); <nl> 
mmm DcorefBenchmarkSlowITest . java <nl> ppp DcorefBenchmarkSlowITest . java <nl> - public void testDcoref () throws Exception { <nl> + public static String runCorefTest ( boolean deleteOnExit ) throws Exception { <nl> - WORK _ DIR _ FILE . deleteOnExit (); <nl> + if ( deleteOnExit ) { <nl> + WORK _ DIR _ FILE . deleteOnExit (); <nl> 
new file <nl> ppp EnumDeclarationTransformationsTest . java <nl> + package com . github . javaparser . printer . lexicalpreservation ; <nl> + import com . github . javaparser . ast . Modifier ; <nl> + import com . github . javaparser . ast . NodeList ; <nl> + import com . github . javaparser . ast . body . ClassOrInterfaceDeclaration ; <nl> 
new file <nl> ppp RuleAnalysisContext . java <nl> + package com . facebook . buck . core . rules . analysis ; <nl> + import com . facebook . buck . core . rules . actions . ActionAnalysisDataRegistry ; <nl> + import com . facebook . buck . core . rules . providers . ProviderInfoCollection ; <nl> + import com . google . common . collect . ImmutableMap ; <nl> 
mmm PercentileEvaluator . java <nl> ppp PercentileEvaluator . java <nl> - import java . text . DecimalFormat ; <nl> - import java . text . NumberFormat ; <nl> 
new file <nl> ppp SerializeDeserializeBinaryTree . java <nl> + package com . interview . tree ; <nl> + public class SerializeDeserializeBinaryTree { <nl> + public String serialize ( Node root ) { <nl> + StringBuffer buff = new StringBuffer (); <nl> + serializeUtil ( root , buff ); <nl> + return buff . toString (); <nl> 
mmm DocCollectorExpression . java <nl> ppp DocCollectorExpression . java <nl> + import io . crate . execution . engine . collect . collectors . CollectorFieldsVisitor ; <nl> - import io . crate . execution . engine . collect . collectors . CollectorFieldsVisitor ; <nl> + import io . crate . types . DataType ; <nl> 
mmm ContactPhotoLabel . java <nl> ppp ContactPhotoLabel . java <nl> + this . setAlignmentX ( CENTER _ ALIGNMENT ); <nl> + this . setAlignmentY ( CENTER _ ALIGNMENT ); <nl> 
mmm SemgrexPatternITest . java <nl> ppp SemgrexPatternITest . java <nl> - String sentence = " John lives in Washington . "; <nl> + String sentence = " John lives in California . "; <nl> - String patStr = "({ word :/ lives /} >/ prep _ in / { word :/\\ QCalifornia \\ E |\\ QWashington \\ E /} > nsubj { ner : PERSON })"; <nl> 
mmm ProfileIntroductionLayout . java <nl> ppp ProfileIntroductionLayout . java <nl> - introduction = introduction . trim (); <nl> + introduction = introduction <nl> + . replaceAll ("\\ A (\\ h *\ n )*", "") <nl> + . replaceAll ("(\ n \\ h *)*\ n ?\\ Z ", ""); <nl> 
new file <nl> ppp DefaultHttpRequestRetryHandlerModifierTest . java <nl> + package com . nhn . pinpoint . profiler . modifier . connector . httpclient4 ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + import java . io . IOException ; <nl> 
mmm TitanGraphSONModule . java <nl> ppp TitanGraphSONModule . java <nl> + import com . fasterxml . jackson . core . JsonParser ; <nl> + import com . fasterxml . jackson . databind . DeserializationContext ; <nl> + import com . fasterxml . jackson . databind . deser . std . StdDeserializer ; <nl> + import com . fasterxml . jackson . databind . jsontype . TypeDeserializer ; <nl> 
deleted file <nl> mmm EncryptorRuleConfigurationYamlSwapperTest . java <nl> - package org . apache . shardingsphere . core . yaml . swapper . impl ; <nl> - import org . apache . shardingsphere . api . config . encrypt . EncryptorRuleConfiguration ; <nl> - import org . apache . shardingsphere . core . yaml . config . encrypt . YamlEncryptorRuleConfiguration ; <nl> 
mmm ASTFileLookupValue . java <nl> ppp ASTFileLookupValue . java <nl> - abstract class ASTFileLookupValue implements SkyValue { <nl> + public abstract class ASTFileLookupValue implements SkyValue { <nl> - static SkyKey key ( Label astFileLabel ) { <nl> + public static SkyKey key ( Label astFileLabel ) { <nl> 
mmm _ 396 . java <nl> ppp _ 396 . java <nl> - public class RotateFunction { <nl> + public class _ 396 { <nl> - RotateFunction test = new RotateFunction (); <nl> + _ 396 test = new _ 396 (); <nl> 
mmm ShadowWifiConfiguration . java <nl> ppp ShadowWifiConfiguration . java <nl> - @ Implementation <nl> - public void _ _ constructor _ _ () { <nl> - realObject . networkId = - 1 ; <nl> - realObject . SSID = null ; <nl> - realObject . BSSID = null ; <nl> - realObject . priority = 0 ; <nl> - realObject . hiddenSSID = false ; <nl> 
new file <nl> ppp ChainTest . java <nl> + package io . quarkus . smallrye . reactivemessaging ; <nl> + import static org . awaitility . Awaitility . await ; <nl> + import java . util . List ; <nl> + import java . util . concurrent . CopyOnWriteArrayList ; <nl> + import javax . enterprise . context . ApplicationScoped ; <nl> 
mmm StatGraphProperties . java <nl> ppp StatGraphProperties . java <nl> - import java . util . LinkedHashMap ; <nl> + public static final String [] strokeWidth = { " 1 . 0f ", " 1 . 5f ", " 2 . 0f ", " 2 . 5f ", " 3 . 0f ", " 3 . 5f ", " 4 . 0f ", " 4 . 5f ", " 5 . 0f ", " 5 . 5f ", " 6 . 0f ", " 6 . 5f "}; <nl> 
mmm HostNameProvider . java <nl> ppp HostNameProvider . java <nl> + import org . springframework . core . SpringVersion ; <nl> - import static org . springframework . util . StringUtils . *; <nl> - import static org . springframework . web . servlet . support . ServletUriComponentsBuilder . *; <nl> + import static org . springframework . util . StringUtils . hasText ; <nl> 
mmm CreateInjectedPlanItemInstanceCmd . java <nl> ppp CreateInjectedPlanItemInstanceCmd . java <nl> 
mmm KoalaTrackingClient . java <nl> ppp KoalaTrackingClient . java <nl> + put (" user _ logged _ in ", loggedInUser != null ); <nl> 
mmm ClipboardManager . java <nl> ppp ClipboardManager . java <nl> - protected Context mContext ; <nl> + private Context context ; <nl> - protected ClipboardManager ( Context context ) { <nl> - mContext = context ; <nl> + private ClipboardManager ( Context context ) { <nl> + this . context = context ; <nl> - ( android . content . ClipboardManager ) mContext . getSystemService ( Context . CLIPBOARD _ SERVICE ); <nl> 
mmm ArrayUtilsTest . java <nl> ppp ArrayUtilsTest . java <nl> - import junit . framework . Assert ; <nl> - import junit . framework . TestCase ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> - public class ArrayUtilsTest extends TestCase { <nl> + public class ArrayUtilsTest { <nl> 
mmm StreamObserver . java <nl> ppp StreamObserver . java <nl> - * stream messages . For outgoing messages , a {@ code StreamObserver } is provided by the GRPC library <nl> - * to the application . For incoming messages , the application implements the {@ code StreamObserver } <nl> - * and passes it to the GRPC library for receiving . <nl> 
mmm MainActivity . java <nl> ppp MainActivity . java <nl> - * {@ link MainActivity } 是 以 屏幕 宽度 为 基准 进行 适配 的 , 不 懂 什么 叫 基准 的话 , 请 看 {@ link AutoSizeConfig # isBaseOnWidth }) 的 注释 <nl> - * AndroidAutoSize 默认 全局 以 屏幕 宽度 为 基准 进行 适配 <nl> + * {@ link MainActivity } 是 以 屏幕 宽度 为 基准 进行 适配 的 , 并且 使用 的 是 在 AndroidManifest 中 填写 的 全局 设计 设计图 尺寸 360 * 640 <nl> 
mmm StreamRuleSummaryResponse . java <nl> ppp StreamRuleSummaryResponse . java <nl> + import javax . annotation . Nullable ; <nl> + @ Nullable <nl> 
mmm OpenTracingServerFilter . java <nl> ppp OpenTracingServerFilter . java <nl> - import io . micronaut . http . filter . OncePerRequestHttpServerFilter ; <nl> - import io . opentracing . Scope ; <nl> - import io . reactivex . Flowable ; <nl> - import io . reactivex . functions . Action ; <nl> - import java . util . Optional ; <nl> 
mmm ConfigInitializerTestCase . java <nl> ppp ConfigInitializerTestCase . java <nl> - Assert . assertEquals (" Test , Test1 ", ClusterConfig . Cluster . Current . roles ); <nl> + Assert . assertEquals (" WorkersListener ", ClusterConfig . Cluster . Current . roles ); <nl> 
new file <nl> ppp ModelPropertyDefaultValueTest . java <nl> + package springfox . documentation . builders ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import springfox . documentation . schema . ModelProperty ; <nl> + import static org . junit . Assert . assertEquals ; <nl> 
new file <nl> ppp StdioTest . java <nl> + package org . lwjgl . system . libc ; <nl> + import org . lwjgl . system . MemoryStack ; <nl> + import org . testng . annotations . BeforeClass ; <nl> + import org . testng . annotations . Test ; <nl> + import java . nio . ByteBuffer ; <nl> + import java . nio . IntBuffer ; <nl> 
mmm ContentPanel . java <nl> ppp ContentPanel . java <nl> - item . add ( new WebMarkupContainer (" itemMenu ")); <nl> + item . add ( new WebMarkupContainer (" itemMenu ") . setVisible ( false )); <nl> 
new file <nl> ppp BooksController . java <nl> + package io . micronaut . docs . respondingnotfound ; <nl> + import io . micronaut . context . annotation . Requires ; <nl> + import io . micronaut . http . MediaType ; <nl> + import io . micronaut . http . annotation . Controller ; <nl> + import io . micronaut . http . annotation . Get ; <nl> 
mmm ShadowParcelFileDescriptorTest . java <nl> ppp ShadowParcelFileDescriptorTest . java <nl> + private File readOnlyFile ; <nl> + readOnlyFile = new File ( RuntimeEnvironment . application . getFilesDir (), " test _ readonly "); <nl> + os = new FileOutputStream ( readOnlyFile ); <nl> + os . close (); <nl> 
mmm InsertParserFactory . java <nl> ppp InsertParserFactory . java <nl> + * @ param sql sql <nl> - public static AbstractInsertParser newInstance ( final DatabaseType dbType , final ShardingRule shardingRule , final LexerEngine lexerEngine , final ShardingTableMetaData shardingTableMetaData ) { <nl> + public static AbstractInsertParser newInstance ( <nl> 
mmm BaseSQLRewriter . java <nl> ppp BaseSQLRewriter . java <nl> - sqlBuilder . appendLiterals ( sqlStatement . getLogicSQL () . substring ( 0 , sqlStatement . getSQLTokens () . get ( 0 ) . getStartIndex ())); <nl> + sqlBuilder . appendLiterals ( sqlStatement . getLogicSQL ()); <nl> + public void rewriteInitialLiteral ( final SQLBuilder sqlBuilder ) { <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm ThanksViewModelTest . java <nl> ppp ThanksViewModelTest . java <nl> + import android . util . Pair ; <nl> + import java . util . List ; <nl> + @ Test <nl> + public void testThanksViewModel _ showRecommendations () { <nl> + final ThanksViewModel vm = new ThanksViewModel ( environment ()); <nl> + final Project project = ProjectFactory . project (); <nl> 
new file <nl> ppp NoteTest . java <nl> + package com . example . sugartest ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . robolectric . RobolectricTestRunner ; <nl> + import org . robolectric . annotation . Config ; <nl> + import com . example . models . Note ; <nl> 
new file <nl> ppp JarExample . java <nl> + package com . baeldung . jar ; <nl> + public class JarExample { <nl> + public static void main ( String [] args ) { <nl> + System . out . println (" Hello Baeldung Reader !"); <nl> + } <nl> + } <nl> 
mmm WordCount . java <nl> ppp WordCount . java <nl> + import org . apache . spark . SparkConf ; <nl> - String master = args [ 0 ]; <nl> - String inputFile = args [ 1 ]; <nl> - String outputFile = args [ 2 ]; <nl> + String inputFile = args [ 0 ]; <nl> + String outputFile = args [ 1 ]; <nl> - JavaSparkContext sc = new JavaSparkContext ( <nl> 
mmm TestLocalFSCloudBackupRestore . java <nl> ppp TestLocalFSCloudBackupRestore . java <nl> + import org . apache . lucene . util . Constants ; <nl> 
new file <nl> ppp TestWebappVersions . java <nl> + package net . bull . javamelody . internal . model ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . util . Random ; <nl> + import org . junit . Before ; <nl> 
new file <nl> ppp GoogleAppEngineIcons . java <nl> + package com . intellij . appengine ; <nl> + import com . intellij . openapi . util . IconLoader ; <nl> + import javax . swing . *; <nl> + public class GoogleAppEngineIcons { <nl> + public static final Icon AppEngine = IconLoader . findIcon ("/ icons / appEngine . png "); <nl> 

mmm SearchRotatedSortedArray . java <nl> ppp SearchRotatedSortedArray . java <nl> - int mid = ( low + high ) / 2 ; <nl> + int mid = ( low + high ) >>> 1 ; <nl> 
mmm ProtoUtil . java <nl> ppp ProtoUtil . java <nl> - if ( result == null ) <nl> + if ( result == null ) { <nl> + } <nl> 
mmm Enhanced . java <nl> ppp Enhanced . java <nl> - * Supported annotations in @ EViewGroup : <nl> - * <nl> - * < ul > <nl> - * < li > ViewById </ li > <nl> - * < li > AfterViews </ li > <nl> - * < li > Click </ li > <nl> - * < li > ItemClick </ li > <nl> - * < li > ItemLongClick </ li > <nl> - * < li > ItemSelected </ li > <nl> 
mmm AvoidHardcodingIdRule . java <nl> ppp AvoidHardcodingIdRule . java <nl> + import java . util . Collections ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> - private static final Pattern PATTERN = Pattern . compile ("^[ a - zA - Z0 - 9 ]{ 5 }[ 0 ][ a - zA - Z0 - 9 ]{ 9 , 12 }$", Pattern . CASE _ INSENSITIVE ); <nl> 

mmm FlyCamAppState . java <nl> ppp FlyCamAppState . java <nl> - flyCam . unregisterInput (); <nl> + if ( app . getInputManager () != null ) { <nl> + flyCam . unregisterInput (); <nl> + } <nl> 
new file <nl> ppp TestSingleImplementor . java <nl> + package jdk . vm . ci . runtime . test ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import jdk . vm . ci . meta . ResolvedJavaType ; <nl> + public class TestSingleImplementor extends TypeUniverse { <nl> + static int SideEffect ; <nl> 
mmm GoTestSignaturesInspection . java <nl> ppp GoTestSignaturesInspection . java <nl> - import com . intellij . psi . PsiFile ; <nl> + import com . intellij . util . ObjectUtils ; <nl> + import org . jetbrains . annotations . Nullable ; <nl> - private static String getTestingAlias ( GoImportSpec testingImportSpec ) { <nl> 
new file <nl> ppp VariableResolutionTest . java <nl> + package com . github . javaparser . symbolsolver . resolution ; <nl> + import com . github . javaparser . ast . CompilationUnit ; <nl> + import com . github . javaparser . ast . body . ClassOrInterfaceDeclaration ; <nl> + import com . github . javaparser . ast . body . MethodDeclaration ; <nl> 
mmm NumberUtil . java <nl> ppp NumberUtil . java <nl> + try { <nl> + return getBigInteger ( value , radix ); <nl> + } catch ( final NumberFormatException ex ) { <nl> + return new BigDecimal ( value ); <nl> + } <nl> + } <nl> + private static Number getBigInteger ( final String value , final int radix ) { <nl> 
mmm Portuguese . java <nl> ppp Portuguese . java <nl> - private String name =" Portuguese "; <nl> + private String name = " Portuguese "; <nl> 
mmm ProfileManager . java <nl> ppp ProfileManager . java <nl> - * - The QUARKUS _ PROFILE environment entry <nl> + * - The QUARKUS _ PROFILE environment entry <nl> - String profile = System . getenv ( QUARKUS _ PROFILE _ ENV ); <nl> + String profile = System . getProperty ( QUARKUS _ PROFILE _ PROP ); <nl> 
mmm NamingPolicyTest . java <nl> ppp NamingPolicyTest . java <nl> - ClassWithDuplicateFields target = new ClassWithDuplicateFields (); <nl> - target . a = 10 ; <nl> + ClassWithDuplicateFields target = new ClassWithDuplicateFields ( 10 ); <nl> - target . a = null ; <nl> - target . b = 3 . 0D ; <nl> + target = new ClassWithDuplicateFields ( 3 . 0D ); <nl> 
mmm MasterClientContextBuilder . java <nl> ppp MasterClientContextBuilder . java <nl> - mContext = Preconditions . checkNotNull ( ctx ); <nl> + mContext = Preconditions . checkNotNull ( ctx , " ctx "); <nl> 
new file <nl> ppp FailSafeTransaction . java <nl> + package net . java . sip . communicator . service . fileaccess ; <nl> + import java . io . *; <nl> + public interface FailSafeTransaction { <nl> + public void restoreFile () <nl> + throws IllegalStateException , IOException ; <nl> + public void beginTransaction () <nl> 
mmm ConfiguredGZipEncoder . java <nl> ppp ConfiguredGZipEncoder . java <nl> - import java . io . IOException ; <nl> - import java . util . zip . GZIPOutputStream ; <nl> + import javax . ws . rs . client . ClientRequestContext ; <nl> + import javax . ws . rs . client . ClientRequestFilter ; <nl> + import java . io . IOException ; <nl> 
deleted file <nl> mmm DateHelperTest . java <nl> - package views . helpers ; <nl> - import org . joda . time . DateTime ; <nl> - import org . joda . time . DateTimeUtils ; <nl> - import org . joda . time . DateTimeZone ; <nl> - import org . joda . time . Duration ; <nl> - import org . junit . AfterClass ; <nl> 
mmm InstrumentedHttpRequestExecutor . java <nl> ppp InstrumentedHttpRequestExecutor . java <nl> + if ( wrapper . getTarget () != null ) { <nl> + } <nl> 
mmm AdbMonitorTest . java <nl> ppp AdbMonitorTest . java <nl> - AdbMonitor monitor = new AdbMonitor (( serial ) - > { <nl> - pSerial [ 0 ] = serial ; <nl> - }); <nl> + AdbMonitor monitor = new AdbMonitor (( serial ) - > pSerial [ 0 ] = serial ); <nl> - AdbMonitor monitor = new AdbMonitor (( serial ) - > { <nl> 
mmm ORecordSaveThreadLocal . java <nl> ppp ORecordSaveThreadLocal . java <nl> - System . out . println (" GET LAST " + INSTANCE . get ()); <nl> - System . out . println (" SET LAST " + document ); <nl> - System . out . println (" REMOVE LAST "); <nl> 
mmm DesktopLauncher . java <nl> ppp DesktopLauncher . java <nl> + import io . anuke . ucore . util . Strings ; <nl> + import javax . swing . *; <nl> + import java . io . File ; <nl> + import java . nio . file . Files ; <nl> + import java . nio . file . Paths ; <nl> -  <nl> - new Lwjgl3Application ( new Mindustry (), config ); <nl> 
mmm ServiceOutageDetectionJob . java <nl> ppp ServiceOutageDetectionJob . java <nl> + Log . i ( TAG , " Received outage check address : " + address . getHostAddress ()); <nl> - Log . w ( TAG , " Service is available . "); <nl> + Log . i ( TAG , " Service is available . "); <nl> - Log . w ( TAG , " Service status check returned an unrecognized IP address . Assuming outage . "); <nl> 
mmm PacketizerTest . java <nl> ppp PacketizerTest . java <nl> - public void testPacketizeChunksFromChannel () throws IOException { <nl> + public void testPacketizeChunks () throws IOException { <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final int MAX _ REFERENCE _ VERSION = 12688 * 1000 ; <nl> + public static final int MAX _ REFERENCE _ VERSION = 12879 * 1000 ; <nl> 
mmm GraphQlStreamObserver . java <nl> ppp GraphQlStreamObserver . java <nl> - . getFieldTypeInfo () <nl> + . getExecutionStepInfo () <nl> 
mmm AvoidConcatenatingNonLiteralsInStringBuffer . java <nl> ppp AvoidConcatenatingNonLiteralsInStringBuffer . java <nl> + if ( s == null ) { <nl> + return false ; <nl> + } <nl> + if ( ao == null ) { <nl> + return false ; <nl> + } <nl> 
mmm Configs . java <nl> ppp Configs . java <nl> + import static com . google . common . base . Preconditions . checkNotNull ; <nl> + checkNotNull ( items , " config items should not be null "); <nl> 
new file <nl> ppp MinimumSquareSum . java <nl> + package algo . dp ; <nl> + public class MinimumSquareSum { <nl> +  <nl> + static int sumDPSol ( int n ) <nl> + { <nl> + int dp [] = new int [ n + 1 ]; <nl> + dp [ 0 ] = 0 ; <nl> + dp [ 1 ] = 1 ; <nl> + dp [ 2 ] = 2 ; <nl> + dp [ 3 ] = 3 ; <nl> + for ( int i = 4 ; i <= n ; i + + ) <nl> 
mmm IOTools . java <nl> ppp IOTools . java <nl> 
mmm DataKeyTest . java <nl> ppp DataKeyTest . java <nl> - import org . junit . Test ; <nl> + import org . junit . jupiter . api . Test ; <nl> + import static org . junit . jupiter . api . Assertions . assertThrows ; <nl> - public class DataKeyTest { <nl> - public static final DataKey < String > ABC = new DataKey < String >() { <nl> 
mmm BsqParserTest . java <nl> ppp BsqParserTest . java <nl> - List < TxInput > inputs = new ArrayList < TxInput >(); <nl> + List < TxInput > inputs = new ArrayList <>(); <nl> - List < TxOutput > outputs = new ArrayList < TxOutput >(); <nl> + List < TxOutput > outputs = new ArrayList <>(); <nl> 
mmm Version . java <nl> ppp Version . java <nl> - public static final String VERSION _ NAME = " Build - 742 - 01 "; <nl> + public static final String VERSION _ NAME = " Build - 745 - 02 "; <nl> - public static final int VERSION _ CODE = 7420001 ; <nl> + public static final int VERSION _ CODE = 7450002 ; <nl> 
new file <nl> ppp BestMeetingPoint . java <nl> + package stevesun . algorithms ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + public class BestMeetingPoint { <nl> + public int minTotalDistance ( int [][] grid ) { <nl> + int m = grid . length ; <nl> 
mmm MapWidgetMetaData . java <nl> ppp MapWidgetMetaData . java <nl> - return new Version ( 1 , 0 , 0 ); <nl> + return new Version ( 2 , 0 , 0 ); <nl> 
mmm OrchestrationMasterSlaveDataSourceTest . java <nl> ppp OrchestrationMasterSlaveDataSourceTest . java <nl> - public void testRenew () { <nl> + public void assertRenewRule () { <nl> - public void testRenew1 () { <nl> + public void assertRenewDataSource () { <nl> - public void testRenew2 () { <nl> + public void assertRenewProperties () { <nl> 
deleted file <nl> mmm RxUtils . java <nl> - package com . kickstarter . libs . utils ; <nl> - public class RxUtils { <nl> - private RxUtils () { <nl> - throw new AssertionError (); <nl> - } <nl> - } <nl> 
new file <nl> ppp JobUtilsTest . java <nl> + package org . dataportabilityproject . job ; <nl> + import static com . google . common . truth . Truth . assertThat ; <nl> + import org . dataportabilityproject . shared . auth . AuthData ; <nl> + import org . dataportabilityproject . shared . auth . PasswordAuthData ; <nl> 
mmm Loader . java <nl> ppp Loader . java <nl> - import java . lang . reflect . Constructor ; <nl> - import java . lang . reflect . InvocationTargetException ; <nl> + import java . lang . reflect . AccessibleObject ; <nl> - Constructor <?> constructor = generatedClass . getDeclaredConstructor (); <nl> - constructor . setAccessible ( true ); <nl> 
mmm AuthorizationFilter . java <nl> ppp AuthorizationFilter . java <nl> + long processTime = System . currentTimeMillis (); <nl> - LOGGER . log ( Level . SEVERE , " access denied for uri : { 0 }", httpReq . getRequestURI ()); <nl> + LOGGER . log ( Level . INFO , " access denied for uri : { 0 }", httpReq . getRequestURI ()); <nl> 
mmm ServiceUtil . java <nl> ppp ServiceUtil . java <nl> + import java . net . URLConnection ; <nl> - try ( InputStream is = url . openStream ()) { <nl> + URLConnection con = url . openConnection (); <nl> + con . setUseCaches ( false ); <nl> + try ( InputStream is = con . getInputStream ()) { <nl> + } catch ( IOException e ) { <nl> 
mmm SampleXxlJob . java <nl> ppp SampleXxlJob . java <nl> - XxlJobLogger . log (" 222 "); <nl> + XxlJobLogger . log (" hello world . "); <nl> - XxlJobLogger . log (" 333 "); <nl> + XxlJobLogger . log (" hello world . "); <nl> 
mmm EchoAnnotation . java <nl> ppp EchoAnnotation . java <nl> + import javax . websocket . PongMessage ; <nl> + @ WebSocketMessage <nl> + public void echoPongMessage ( PongMessage pm ) { <nl> + } <nl> 
mmm ReactivePgReloadTest . java <nl> ppp ReactivePgReloadTest . java <nl> - . body ( Matchers . endsWith (": 2345 ")); <nl> + . body ( Matchers . allOf ( Matchers . startsWith (" Connection refused "), Matchers . endsWith (": 2345 "))); <nl> - . body ( Matchers . endsWith (": 5234 ")); <nl> + . body ( Matchers . allOf ( Matchers . startsWith (" Connection refused "), Matchers . endsWith (": 5234 "))); <nl> 
mmm ClusterJournalResource . java <nl> ppp ClusterJournalResource . java <nl> + import javax . ws . rs . WebApplicationException ; <nl> - LOG . warn (" Unable to get message journal information on node " + nodeId + ": " + response . message ()); <nl> + LOG . warn (" Unable to get message journal information on node {}: {}", nodeId , response . message ()); <nl> 
mmm KSToolbar . java <nl> ppp KSToolbar . java <nl> + import android . graphics . Canvas ; <nl> + import android . graphics . Paint ; <nl> + import android . support . v4 . content . ContextCompat ; <nl> + import com . kickstarter . libs . qualifiers . WebEndpoint ; <nl> + import com . kickstarter . libs . utils . Secrets ; <nl> 
mmm TableRuleConfiguration . java <nl> ppp TableRuleConfiguration . java <nl> - public final class TableRuleConfiguration { <nl> + public final class TableRuleConfiguration implements RuleConfiguration { <nl> 
mmm SearchTypeError . java <nl> ppp SearchTypeError . java <nl> - import org . graylog . plugins . views . search . Query ; <nl> + import java . util . regex . Matcher ; <nl> + import java . util . regex . Pattern ; <nl> + private final Integer resultWindowLimit ; <nl> + this . resultWindowLimit = parseResultLimit ( throwable ); <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm UniversalGeolocationProvider . java <nl> ppp UniversalGeolocationProvider . java <nl> + import javax . ws . rs . core . HttpHeaders ; <nl> + import javax . ws . rs . core . MediaType ; <nl> - Context . getAsyncHttpClient () . preparePost ( url ) . setBody ( request ) . execute ( new AsyncCompletionHandler () { <nl> 
mmm ActivityMain . java <nl> ppp ActivityMain . java <nl> - import androidx . annotation . NonNull ; <nl> - private static final int REQUEST _ CAMERA = 1 ; <nl> - switch ( v . getId ()) { <nl> + if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . CAMERA ) <nl> + == PackageManager . PERMISSION _ DENIED ) { <nl> 
mmm HttpTraceHandler . java <nl> ppp HttpTraceHandler . java <nl> + exchange . getResponseSender () . send ( body . toString ()); <nl> 
mmm CmdReceiver . java <nl> ppp CmdReceiver . java <nl> + private static final String KEY _ UID = " uid "; <nl> - LoadingActivity . launch ( context , pkg , 0 ); <nl> + String uid = intent . getStringExtra ( KEY _ UID ); <nl> + int userId = 0 ; <nl> + if (! TextUtils . isEmpty ( uid )){ <nl> + try { <nl> + userId = Integer . parseInt ( uid ); <nl> 
mmm ModelTest . java <nl> ppp ModelTest . java <nl> + import android . os . Build ; <nl> + import androidx . test . ext . junit . runners . AndroidJUnit4 ; <nl> - import static org . hamcrest . Matchers . is ; <nl> + import static org . junit . Assume . assumeTrue ; <nl> - @ SuppressWarnings (" deprecation ") <nl> 
new file <nl> ppp ClusterHostTest . java <nl> + package io . vertx . core . eventbus ; <nl> + import io . vertx . core . VertxOptions ; <nl> + import io . vertx . test . core . VertxTestBase ; <nl> + import io . vertx . test . fakecluster . FakeClusterManager ; <nl> + import org . apache . commons . lang . SystemUtils ; <nl> 
new file <nl> ppp Person . java <nl> + package org . apache . maven . it0001 ; <nl> + public class Person <nl> + { <nl> + private String name ; <nl> + public void setName ( String name ) <nl> + { <nl> + this . name = name ; <nl> + assert true ; <nl> + } <nl> + public String getName () <nl> + { <nl> + return name ; <nl> 
mmm PrecedenceTest . java <nl> ppp PrecedenceTest . java <nl> + import org . graylog . plugins . pipelineprocessor . functions . conversion . StringConversion ; <nl> + import org . graylog2 . plugin . Message ; <nl> + import org . graylog2 . plugin . Tools ; <nl> + functions . put ( StringConversion . NAME , new StringConversion ()); <nl> 
mmm OnDisconnectInterceptor . java <nl> ppp OnDisconnectInterceptor . java <nl> - p = AsynchronousProcessor . class . cast ( config . framework () . getAsyncSupport ()); <nl> + if ( AsynchronousProcessor . class . isAssignableFrom ( config . framework () . getAsyncSupport () . getClass ())) { <nl> + p = AsynchronousProcessor . class . cast ( config . framework () . getAsyncSupport ()); <nl> 
new file <nl> ppp CollectionJavaPartitionUnitTest . java <nl> + package org . baeldung . java ; <nl> + import static org . hamcrest . Matchers . equalTo ; <nl> + import static org . junit . Assert . assertThat ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> 
deleted file <nl> mmm Now . java <nl> - package com . commonsware . android . skeleton ; <nl> - import android . app . Activity ; <nl> - import android . os . Bundle ; <nl> - import android . view . View ; <nl> - import android . widget . Button ; <nl> - import java . util . Date ; <nl> - public class Now extends Activity implements View . OnClickListener { <nl> 
mmm I88 . java <nl> ppp I88 . java <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + public static void main ( String . . . args ) { <nl> + A a = I88 . class . getAnnotation ( A . class ); <nl> + System . out . println ( a . a ()); <nl> + } <nl> 
mmm ZWaveSceneConverter . java <nl> ppp ZWaveSceneConverter . java <nl> + if ( arguments . get (" scene ")== null ) <nl> + return ; <nl> +  <nl> 
mmm TextFormatFileTransportTest . java <nl> ppp TextFormatFileTransportTest . java <nl> - Joiner . on ( System . lineSeparator ()) . join ( Files . readLines ( output , StandardCharsets . UTF _ 8 )); <nl> - assertThat ( contents ) . contains ( TextFormat . printToString ( started )); <nl> - assertThat ( contents ) . contains ( TextFormat . printToString ( progress )); <nl> 
mmm DefaultLocalServerChannelFactory . java <nl> ppp DefaultLocalServerChannelFactory . java <nl> 
mmm ItemStackTransformer . java <nl> ppp ItemStackTransformer . java <nl> - if ( m . name . equals (" func _ 190923 _ F ") || m . name . equals (" func _ 190926 _ b ")) continue ; <nl> + if ( m . name . equals (" forgeInit ") || m . name . equals (" func _ 190926 _ b ")) continue ; <nl> 
mmm SplashScreen . java <nl> ppp SplashScreen . java <nl> - import android . support . v4 . app . ActivityCompat ; <nl> - import com . leafpic . app . utils . StringUtils ; <nl> 
mmm DIHPropertiesWriter . java <nl> ppp DIHPropertiesWriter . java <nl> - import java . io . File ; <nl> 
mmm BaseApplication . java <nl> ppp BaseApplication . java <nl> - * 记得 在 App 启动 启动时 初始 初始化 AndroidAutoSize <nl> + * AndroidAutoSize 会 在 APP 启动 启动时 自动 完成 初始 初始化 , 如果 您 想 设置 自定 自定义 定义 参数 可以 在 {@ link Application # onCreate ()} 中 设置 <nl> - AutoSizeConfig . getInstance () <nl> - . setLog ( true ) <nl> - . init ( this ) <nl> 
mmm GeckoWebDriver . java <nl> ppp GeckoWebDriver . java <nl> - } <nl> + } <nl> + @ Override <nl> + public void quit () { <nl> + open = false ; <nl> + super . quit (); <nl> + } <nl> 
mmm Text . java <nl> ppp Text . java <nl> + public static String standardize ( String str ) <nl> + { <nl> + return Text . removeTags ( str ) . replace ('\ u00A0 ', ' ') . trim () . toLowerCase (); <nl> + } <nl> 
mmm Issue1254 . java <nl> ppp Issue1254 . java <nl> - } <nl> + } <nl> 

mmm WrongFileAlertController . java <nl> ppp WrongFileAlertController . java <nl> + import javafx . application . Application ; <nl> + import javafx . beans . property . StringProperty ; <nl> + import javafx . fxml . FXML ; <nl> + private Application app ; <nl> - public WrongFileAlertController (@ WrongFileAlertWindow Stage window ) { <nl> 
mmm KarmaRunMojo . java <nl> ppp KarmaRunMojo . java <nl> - @ Parameter ( property = " maven - frontend - plugin . testFailureIgnore ", required = false , defaultValue = " false ") <nl> + @ Parameter ( property = " testFailureIgnore ", required = false , defaultValue = " false ") <nl> 
new file <nl> ppp ConnectionPageWithAuth . java <nl> + package org . jkiss . dbeaver . ui . dialogs . connection ; <nl> + import org . jkiss . dbeaver . model . DBPDataSourceContainer ; <nl> + public abstract class ConnectionPageWithAuth extends ConnectionPageAbstract { <nl> + @ Override <nl> + public void loadSettings () { <nl> 
mmm ListenableFutureTask . java <nl> ppp ListenableFutureTask . java <nl> - public final class ListenableFutureTask < V > extends FutureTask < V > <nl> + public class ListenableFutureTask < V > extends FutureTask < V > <nl> - private ListenableFutureTask ( Callable < V > callable ) { <nl> + ListenableFutureTask ( Callable < V > callable ) { <nl> 
mmm Arthas . java <nl> ppp Arthas . java <nl> - AnsiLog . warn (" Target VM JAVA _ HOME is {}, try to set the same JAVA _ HOME . ", <nl> - targetSystemProperties . getProperty (" java . home ")); <nl> + AnsiLog . warn (" Target VM JAVA _ HOME is {}, arthas - boot JAVA _ HOME is {}, try to set the same JAVA _ HOME . ", <nl> 
mmm GreenLightningParticleDispatcher . java <nl> ppp GreenLightningParticleDispatcher . java <nl> - import org . particleframework . web . router . RouteMatch ; <nl> + import org . particleframework . http . HttpStatus ; <nl> - routeMatch . ifPresent (( RouteMatch route ) - > { <nl> + if ( routeMatch . isPresent ()) { <nl> 
mmm StoreWriteBehindServiceConfigurator . java <nl> ppp StoreWriteBehindServiceConfigurator . java <nl> + . enable () <nl> 
mmm SearchTermViewHolder . java <nl> ppp SearchTermViewHolder . java <nl> - @ Bind ( R . id . search _ icon _ text _ view ) IconTextView iconTextView ; <nl> - iconTextView . setVisibility ( View . VISIBLE ); <nl> - iconTextView . setVisibility ( View . GONE ); <nl> 
new file <nl> ppp CLITest . java <nl> + package net . sourceforge . pmd . cli ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . fail ; <nl> + import java . io . File ; <nl> + import java . io . FileNotFoundException ; <nl> + import java . io . FileOutputStream ; <nl> 
mmm StreamsTest . java <nl> ppp StreamsTest . java <nl> - assertTrue (" Login failed ", r . isSuccess ()); <nl> - Thread . sleep ( 5000 ); <nl> + Thread . sleep ( 120000 ); <nl> + assertTrue (" Login failed ", r . isSuccess ()); <nl> 
mmm Behavior . java <nl> ppp Behavior . java <nl> 
mmm EReceiverHolder . java <nl> ppp EReceiverHolder . java <nl> + import com . sun . codemodel . JInvocation ; <nl> + private JBlock onReceiveBody ; <nl> + private JVar onReceiveIntentAction ; <nl> + private JVar onReceiveIntent ; <nl> + private JMethod onReceiveMethod ; <nl> - JMethod onReceive = generatedClass . method ( PUBLIC , codeModel () . VOID , " onReceive "); <nl> 
mmm PeerFilterProvider . java <nl> ppp PeerFilterProvider . java <nl> 
mmm Secured . java <nl> ppp Secured . java <nl> 
mmm Trimmer . java <nl> ppp Trimmer . java <nl> - new Thread () { <nl> + new AsyncTask < Void , Void , Void >() { <nl> - public void run () { <nl> + protected Void doInBackground ( Void . . . params ) { <nl> + return null ; <nl> - } . start (); <nl> + } . execute (); <nl> 
mmm GetAllAcknowledgeResponse . java <nl> ppp GetAllAcknowledgeResponse . java <nl> - logger . trace (" Response received from " + response . getNode () . getId () + " for " <nl> - + pipeline . getOperation () . getSimpleName ()); <nl> + logger . trace (" Response received from node " + response . getNode () . getId () <nl> 
mmm ScoreAugmenter . java <nl> ppp ScoreAugmenter . java <nl> 
mmm DiffTask . java <nl> ppp DiffTask . java <nl> + import android . support . annotation . Nullable ; <nl> + private Exception backgroundException = null ; <nl> + @ Nullable <nl> - return DiffUtil . calculateDiff ( diffCallback ); <nl> + try { <nl> + return DiffUtil . calculateDiff ( diffCallback ); <nl> + } catch ( Exception e ) { <nl> 
mmm ShadowValueAnimator . java <nl> ppp ShadowValueAnimator . java <nl> + import org . robolectric . annotation . RealObject ; <nl> + @ RealObject <nl> + private ValueAnimator realObject ; <nl> + @ Implementation <nl> + public void start () { <nl> + realObject . end (); <nl> + } <nl> 
mmm RuleChainManager . java <nl> ppp RuleChainManager . java <nl> - if ( entity . isRoot ()) { <nl> + if ( entity != null & & entity . isRoot ()) { <nl> 
mmm ExecutionInfoProvider . java <nl> ppp ExecutionInfoProvider . java <nl> 
mmm CityLoader . java <nl> ppp CityLoader . java <nl> - import java . io . File ; <nl> - import java . util . Arrays ; <nl> - File writablePath = context . getFilesDir (); <nl> - for ( File file : Arrays . asList ( <nl> - new File ( writablePath , Realm . DEFAULT _ REALM _ NAME ), <nl> - new File ( writablePath , Realm . DEFAULT _ REALM _ NAME + " . lock "))) { <nl> 
mmm XJComponent . java <nl> ppp XJComponent . java <nl> 
mmm MemoryUtils . java <nl> ppp MemoryUtils . java <nl> - final byte [] bytes = new byte [ 8 ]; <nl> - final long value = 0x12345678900abdefL ; <nl> - UNSAFE . putLong ( bytes , ( long ) UNSAFE . arrayBaseOffset ( byte [] . class ), value ); <nl> -  <nl> - final int lower = bytes [ 0 ] & 0xff ; <nl> - final int higher = bytes [ 7 ] & 0xff ; <nl> 
mmm UseDatabaseBackendHandlerTest . java <nl> ppp UseDatabaseBackendHandlerTest . java <nl> + import org . apache . shardingsphere . core . rule . Authentication ; <nl> + import org . apache . shardingsphere . core . rule . User ; <nl> + import org . apache . shardingsphere . shardingproxy . context . ShardingProxyContext ; <nl> 
mmm AddPrimaryKeyExtractHandler . java <nl> ppp AddPrimaryKeyExtractHandler . java <nl> + import org . antlr . v4 . runtime . ParserRuleContext ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . AddPrimaryKeyExtractResult ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . ExtractResult ; <nl> 
new file <nl> ppp CustomFragment3 . java <nl> + package me . jessyan . autosize . demo ; <nl> + import android . os . Bundle ; <nl> + import android . support . annotation . NonNull ; <nl> + import android . support . annotation . Nullable ; <nl> + import android . support . v4 . app . Fragment ; <nl> + import android . view . LayoutInflater ; <nl> 
mmm SimpleSuspendableClassifier . java <nl> ppp SimpleSuspendableClassifier . java <nl> - try ( InputStream is = new FileInputStream ( new File ( file . toURI ())); <nl> + try ( InputStream is = file . openStream (); <nl> - } catch ( URISyntaxException e ) { <nl> - throw new AssertionError ( e ); <nl> 
mmm MemoryResourceDefinition . java <nl> ppp MemoryResourceDefinition . java <nl> + import org . jboss . as . clustering . controller . ResourceServiceConfigurator ; <nl> + import org . jboss . as . clustering . controller . ResourceServiceConfiguratorFactory ; <nl> + import org . jboss . as . controller . PathAddress ; <nl> 
mmm DistinctSelectItem . java <nl> ppp DistinctSelectItem . java <nl> - private Collection < String > getDistinctColumnLabels ( final String alias ) { <nl> - if ( 1 == distinctColumnNames . size ()) { <nl> - return Collections . singletonList ( alias ); <nl> - } <nl> - List < String > result = new LinkedList <>( distinctColumnNames ); <nl> 
mmm TestRegistryCenter . java <nl> ppp TestRegistryCenter . java <nl> + @ Override <nl> + public void persistEphemeral ( final String key , final String value ) { <nl> + } <nl> 
mmm SlidingWindowReservoir . java <nl> ppp SlidingWindowReservoir . java <nl> - final int n = ( int ) ( index . getAndIncrement () % measurements . length ()); <nl> - measurements . set ( n , value ); <nl> - count . incrementAndGet (); <nl> + final long n = index . getAndIncrement (); <nl> + final int idx = ( int ) ( n % measurements . length ()); <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> - System . setProperty (" smart - socket . server . pageSize ", ( 512 * 1024 ) + ""); <nl> - System . setProperty (" smart - socket . bufferPool . pageNum ", 512 + ""); <nl> + System . setProperty (" smart - socket . server . pageSize ", ( 8 * 1024 * 1024 ) + ""); <nl> 
new file <nl> ppp EntityUpdateBlockedTest . java <nl> + package net . minecraftforge . test ; <nl> + import net . minecraft . command . CommandBase ; <nl> + import net . minecraft . command . CommandException ; <nl> + import net . minecraft . command . ICommandSender ; <nl> + import net . minecraft . entity . Entity ; <nl> 
mmm ChartRenderer . java <nl> ppp ChartRenderer . java <nl> + g2d . setPaint ( getLinePaint ()); <nl> 
mmm VisibleForTesting . java <nl> ppp VisibleForTesting . java <nl> - * < p /> <nl> 
mmm GraphiteMetricsExportAutoConfiguration . java <nl> ppp GraphiteMetricsExportAutoConfiguration . java <nl> - import io . micrometer . graphite . GraphiteHierarchicalNameMapper ; <nl> - @ Bean <nl> - @ ConditionalOnMissingBean <nl> - public HierarchicalNameMapper graphiteHierarchicalNameMapper ( GraphiteConfig config ) { <nl> 
mmm EurekaHealthCheckTests . java <nl> ppp EurekaHealthCheckTests . java <nl> 
mmm WireMockStaticRule . java <nl> ppp WireMockStaticRule . java <nl> + @ Deprecated <nl> 
mmm ShardingContext . java <nl> ppp ShardingContext . java <nl> - private final int maxConnectionsSizePerQuery ; <nl> - this . showSQL = showSQL ; <nl> 
mmm ControlOverrides . java <nl> ppp ControlOverrides . java <nl> - if ( proxyHost == null || proxyHost . length () == 0 ) { <nl> + if ( proxyHost != null & & proxyHost . length () == 0 ) { <nl> 
mmm POSTaggerBenchmarkITest . java <nl> ppp POSTaggerBenchmarkITest . java <nl> - 97 . 24 ); <nl> + 97 . 21 ); <nl> - 97 . 57 ); <nl> + 97 . 56 ); <nl> 
mmm ShardingDataSourceBeanDefinitionParserTag . java <nl> ppp ShardingDataSourceBeanDefinitionParserTag . java <nl> - public static final String REG _ REF _ TAG = " reg - ref "; <nl> + public static final String REG _ REF _ TAG = " registry - center - ref "; <nl> 
mmm RSASha1SignatureServiceTest . java <nl> ppp RSASha1SignatureServiceTest . java <nl> - RSASha1SignatureService service = new RSASha1SignatureService ( getPrivateKey ()); <nl> + private RSASha1SignatureService service = new RSASha1SignatureService ( getPrivateKey ()); <nl> 
mmm JPAFunctionalityTest . java <nl> ppp JPAFunctionalityTest . java <nl> 
mmm StatFilterAfterResetTest . java <nl> ppp StatFilterAfterResetTest . java <nl> + { <nl> + Histogram histogram = sqlStat . getExecuteAndResultHoldTimeHistogram (); <nl> + Assert . assertEquals ( 0 , histogram . getValue ( 0 ) + histogram . getValue ( 1 ) + histogram . getValue ( 2 )); <nl> + } <nl> + sqlStat = dataSource . getDataSourceStat () . getSqlStat ( sql ); <nl> 
new file <nl> ppp ShardingConfigurationEventBusInstance . java <nl> + package io . shardingsphere . jdbc . orchestration . internal . eventbus . jdbc . config ; <nl> + import com . google . common . eventbus . EventBus ; <nl> + import lombok . AccessLevel ; <nl> + import lombok . NoArgsConstructor ; <nl> + @ NoArgsConstructor ( access = AccessLevel . PRIVATE ) <nl> 
mmm Http2CIntegrationTest . java <nl> ppp Http2CIntegrationTest . java <nl> + import com . google . common . net . HttpHeaders ; <nl> + import org . glassfish . jersey . client . JerseyClient ; <nl> + import org . glassfish . jersey . client . JerseyClientBuilder ; <nl> + import javax . ws . rs . core . MediaType ; <nl> 
mmm Defn . java <nl> ppp Defn . java <nl> + private Defn () <nl> + { <nl> + } <nl> 
mmm LuceneDocIdCollector . java <nl> ppp LuceneDocIdCollector . java <nl> - _ docIds . add ( _ docIdTranslator . getPinotDocId ( doc )); <nl> + _ docIds . add ( _ docIdTranslator . getPinotDocId ( context . docBase + doc )); <nl> 
mmm WildFlyCustomJtaPlatform . java <nl> ppp WildFlyCustomJtaPlatform . java <nl> - return curTsr != null ? curTsr : ( TransactionSynchronizationRegistry ) jndiService () . locate ( TSR _ NAME ); <nl> + if ( curTsr != null ) { <nl> + return curTsr ; <nl> + } <nl> + synchronized ( WildFlyCustomJtaPlatform . class ) { <nl> 
mmm ReportModule . java <nl> ppp ReportModule . java <nl> - @ ModuleMeta ( name = " r ", defaultInboundAction = " top ", defaultTransition = " default ", defaultErrorAction = " default ") <nl> + @ ModuleMeta ( name = " r ", defaultInboundAction = " home ", defaultTransition = " default ", defaultErrorAction = " default ") <nl> 
new file <nl> ppp App . java <nl> + package com . mycompany . app ; <nl> + import com . amazonaws . auth . profile . ProfileCredentialsProvider ; <nl> + import com . amazonaws . services . s3 . AmazonS3 ; <nl> + import com . amazonaws . services . s3 . AmazonS3ClientBuilder ; <nl> + import com . amazonaws . services . s3 . model . AmazonS3Exception ; <nl> 
mmm ArtifactCacheConnectEvent . java <nl> ppp ArtifactCacheConnectEvent . java <nl> - if (!( event instanceof ArtifactCacheEvent )) { <nl> + if (!( event instanceof ArtifactCacheConnectEvent )) { <nl> 
mmm Funnel . java <nl> ppp Funnel . java <nl> 
mmm GermanSentenceTokenizerTest . java <nl> ppp GermanSentenceTokenizerTest . java <nl> - private GermanSentenceTokenizer stokenizer = new GermanSentenceTokenizer (); <nl> + private GermanSentenceTokenizer sTokenizer = new GermanSentenceTokenizer (); <nl> - private GermanSentenceTokenizer stokenizer3 = new GermanSentenceTokenizer ( new String []{" foo "}); <nl> 
mmm MultiProperty . java <nl> ppp MultiProperty . java <nl> - log . debug (" merging in " + prop . getClass ()); <nl> + log . debug (" merging in {}", prop . getClass ()); <nl> 
mmm AbstractCustomCommandLine . java <nl> ppp AbstractCustomCommandLine . java <nl> - * @ return Effective configuration with the overriden configuration settings <nl> + * @ return Effective configuration with the overridden configuration settings <nl> 
mmm SentimentTrainingITest . java <nl> ppp SentimentTrainingITest . java <nl> 
mmm Main . java <nl> ppp Main . java <nl> + final Set < Class <? extends Runnable >> journalCommands = ImmutableSet . < Class <? extends Runnable >> of ( <nl> + JournalShow . class , <nl> + JournalTruncate . class , <nl> + JournalDecode . class <nl> + ); <nl> - . withCommands ( JournalShow . class , JournalTruncate . class , JournalDecode . class ); <nl> 
mmm JapaneseTagger . java <nl> ppp JapaneseTagger . java <nl> - if ( word . indexOf (" ") < 0 ) { <nl> + if (! word . contains (" ")) { <nl> 
mmm StubPendingService . java <nl> ppp StubPendingService . java <nl> + import com . lody . virtual . client . ipc . VActivityManager ; <nl> - startService ( intent ); <nl> + if ( intent != null ) { <nl> + Intent realIntent = intent . getParcelableExtra (" _ VA _ | _ intent _ "); <nl> + int userId = intent . getIntExtra (" _ VA _ | _ user _ id _ ", 0 ); <nl> 
mmm CachingStoreClientFactoryTest . java <nl> ppp CachingStoreClientFactoryTest . java <nl> - verify ( spyFactory , times ( 1 )) . getStoreClient (" foo "); <nl> - verify ( spyFactory , times ( 2 )) . getStoreClient (" foo ", resolver ); <nl> + verify ( spyFactory , times ( 1 )) . getStoreClient (" foo ", resolver ); <nl> 
mmm SharedLibraryTest . java <nl> ppp SharedLibraryTest . java <nl> + OS . rmdir ( sTmpDir ); <nl> 
mmm OptionalStringMatcher . java <nl> ppp OptionalStringMatcher . java <nl> - interface NullableTemplate < R > extends OptionalStringMatcher < R >, WithMatcher < R , Self >, NotMatcher < R , Self >, Projection < String >, Aggregation . ComparableTemplate < String > {} <nl> 
mmm Application . java <nl> ppp Application . java <nl> - return tpe . getQueue () . size () < maxConnections * MAX _ QUERIES _ PER _ REQUEST ; <nl> + return tpe . getQueue () . size () <= 1024 ; <nl> - public static F . Promise < Result > db ( final Integer queries ) { <nl> - final Random random = ThreadLocalRandom . current (); <nl> 
mmm Query . java <nl> ppp Query . java <nl> + import org . mongojack . ObjectId ; <nl> + @ ObjectId <nl> - . map ( searchType - > searchType . withId ( new UUID () . toString ())) <nl> + . map ( searchType - > { <nl> + if ( searchType . id () == null ) { <nl> + return searchType . withId ( new UUID () . toString ()); <nl> 
mmm Preconditions . java <nl> ppp Preconditions . java <nl> - public final class Preconditions { <nl> + final class Preconditions { <nl> 
new file <nl> ppp SmartNullsGenericBugTest . java <nl> + package org . mockitousage . stubbing ; <nl> + import org . assertj . core . api . Assertions ; <nl> + import org . assertj . core . api . ThrowableAssert ; <nl> + import org . junit . Test ; <nl> + import org . mockito . Answers ; <nl> + import static org . mockito . Mockito . mock ; <nl> 
mmm MetricsWsTest . java <nl> ppp MetricsWsTest . java <nl> + import org . junit . Before ; <nl> + import org . sonar . server . db . DbClient ; <nl> + import org . sonar . server . user . UserSession ; <nl> + import static org . mockito . Mockito . mock ; <nl> - WsTester tester = new WsTester ( new MetricsWs ()); <nl> 
mmm HiddenConversions . java <nl> ppp HiddenConversions . java <nl> + public static void registerAppUsageLimitObserver ( <nl> + UsageStatsManager receiver , <nl> + int observerId , <nl> + String [] observedEntities , <nl> + j $ . time . Duration timeLimit , <nl> + j $ . time . Duration timeUsed , <nl> + PendingIntent callbackIntent ) { <nl> 
new file <nl> ppp Factory . java <nl> + package smile . math . matrix ; <nl> + import java . lang . reflect . Constructor ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + class Factory { <nl> + private static final Logger logger = LoggerFactory . getLogger ( Factory . class ); <nl> 
mmm Transformer . java <nl> ppp Transformer . java <nl> - T transform ( final Function < U , U > transformer ); <nl> + T transform ( Function < U , U > transformer ); <nl> 
mmm RecyclableArrayListBenchmark . java <nl> ppp RecyclableArrayListBenchmark . java <nl> - public void recycleSameThread () { <nl> + public boolean recycleSameThread () { <nl> - list . recycle (); <nl> + return list . recycle (); <nl> 
mmm OptaPlannerJsonbConfigCustomizer . java <nl> ppp OptaPlannerJsonbConfigCustomizer . java <nl> - import org . optaplanner . persistence . jsonb . api . score . buildin . bendable . BendableScoreJsonbAdapter ; <nl> - import org . optaplanner . persistence . jsonb . api . score . buildin . bendablebigdecimal . BendableBigDecimalScoreJsonbAdapter ; <nl> 
mmm Adaptive . java <nl> ppp Adaptive . java <nl> - * For examples , given < code > String [] {" key1 ", " key2 "}</ code >: <nl> + * For example , given < code > String [] {" key1 ", " key2 "}</ code >: <nl> - * < li > use default extension if ' key2 ' doesn ' t appear either </ li > <nl> + * < li > use default extension if ' key2 ' doesn ' t exist either </ li > <nl> 
new file <nl> ppp SpanishUnknownWordModelTest . java <nl> + package edu . stanford . nlp . parser . lexparser ; <nl> + import edu . stanford . nlp . stats . ClassicCounter ; <nl> + import edu . stanford . nlp . util . HashIndex ; <nl> + import edu . stanford . nlp . util . Index ; <nl> + import junit . framework . TestCase ; <nl> 
mmm AeronStat . java <nl> ppp AeronStat . java <nl> + private final AtomicBuffer valuesBuffer ; <nl> + private final CountersManager countersManager ; <nl> - private final File cncFile ; <nl> - private final AtomicBuffer labelsBuffer ; <nl> - private final AtomicBuffer valuesBuffer ; <nl> + public AeronStat () <nl> 
mmm IPath . java <nl> ppp IPath . java <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import java . util . Collection ; <nl> + import java . util . List ; <nl> + List < BlockPos > positions (); <nl> + BlockPos getSrc (); <nl> + BlockPos getDest (); <nl> + Collection < BlockPos > getBlocksToMine (); <nl> 
mmm ElasticsearchSizeLimitTest . java <nl> ppp ElasticsearchSizeLimitTest . java <nl> + import java . util . concurrent . TimeUnit ; <nl> + import org . awaitility . Awaitility ; <nl> - SearchHits searchWithSizeTwo = template . requestBody (" direct : searchWithSizeTwo ", query , SearchHits . class ); <nl> 
mmm CachingStoreClientFactoryTest . java <nl> ppp CachingStoreClientFactoryTest . java <nl> + @ Test <nl> + public void testBootstrapAll () { <nl> + StoreClientFactory inner = new MockStoreClientFactory ( new StringSerializer (), <nl> + new StringSerializer (), <nl> + null ); <nl> + DefaultStoreClient < Object , Object > aStoreClient = spy (( DefaultStoreClient < Object , Object >) inner . getStoreClient (" test1 ")); <nl> 
new file <nl> ppp BaseTickTupleAwareRichBolt . java <nl> + package org . apache . storm . topology . base ; <nl> + import org . apache . storm . tuple . Tuple ; <nl> + import org . apache . storm . utils . TupleUtils ; <nl> + public abstract class BaseTickTupleAwareRichBolt extends BaseRichBolt { <nl> + private static final long serialVersionUID = 7695579564456673450L ; <nl> 
mmm generate . java <nl> ppp generate . java <nl> - import com . tightdb . example . generated . StockaTable ; <nl> + import com . tightdb . example . StockaTable ; <nl> 
mmm JWTAuthContextInfoGroup . java <nl> ppp JWTAuthContextInfoGroup . java <nl> - @ ConfigRoot ( name = " smallrye - jwt ") <nl> + @ ConfigRoot ( phase = ConfigPhase . RUN _ TIME _ STATIC , name = " jwt ") <nl> 
mmm SQLAnalyzer . java <nl> ppp SQLAnalyzer . java <nl> + xref . setDefs ( defs ); <nl> 
mmm ExpandableWidget . java <nl> ppp ExpandableWidget . java <nl> + boolean isExpanded (); <nl> - boolean isExpanded (); <nl> + @ IdRes <nl> + int getExpandedComponentIdHint (); <nl> - @ IdRes <nl> - int getExpandedComponentIdHint (); <nl> 
mmm ExampleMod . java <nl> ppp ExampleMod . java <nl> - System . out . println (" DIRT BLOCK >> " + Blocks . dirt . func _ 149739 _ a ()); <nl> + System . out . println (" DIRT BLOCK >> " + Blocks . dirt . getUnlocalizedName ()); <nl> 
mmm ZookeeperSaver . java <nl> ppp ZookeeperSaver . java <nl> - marshaller ( server , " server . xml "); <nl> + marshaller ( server , " server "); <nl> - Path path = Paths . get ( getClass () . getResource ("/") . getFile (), fileName ); <nl> + marshaller . setProperty (" com . sun . xml . internal . bind . xmlHeaders ", <nl> 
new file <nl> ppp MovieService . java <nl> + package com . baeldung . validation . listvalidation . service ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + import org . springframework . stereotype . Service ; <nl> 
mmm TitanConstants . java <nl> ppp TitanConstants . java <nl> + import com . google . common . base . Preconditions ; <nl> + import java . io . InputStream ; <nl> + Package p = TitanConstants . class . getPackage (); <nl> + Preconditions . checkNotNull ( p , " Unable to load package containing class " + TitanConstants . class ); <nl> 
mmm JsonParserTest . java <nl> ppp JsonParserTest . java <nl> + public void testParseMixedArray () { <nl> + String json = "[{}, 13 ,\" stringValue \"]"; <nl> + JsonElement e = parser . parse ( json ); <nl> + assertTrue ( e . isJsonArray ()); <nl> + JsonArray array = e . getAsJsonArray (); <nl> + assertEquals ("{}", array . get ( 0 ) . toString ()); <nl> 

mmm BlockMasterIntegrationTest . java <nl> ppp BlockMasterIntegrationTest . java <nl> - BlockMaster blockMaster = mCluster . getLocalAlluxioMaster () . getMasterProcess () . getMaster ( BlockMaster . class ); <nl> + BlockMaster blockMaster = <nl> + mCluster . getLocalAlluxioMaster () . getMasterProcess () . getMaster ( BlockMaster . class ); <nl> 
deleted file <nl> mmm LockingBackgroundTask . java <nl> - package ai . grakn . engine . tasks . storage ; <nl> - import ai . grakn . engine . lock . LockProvider ; <nl> - import ai . grakn . engine . tasks . BackgroundTask ; <nl> - import ai . grakn . engine . tasks . TaskCheckpoint ; <nl> - import ai . grakn . engine . tasks . TaskConfiguration ; <nl> 
mmm AgentRegistrationResourceTest . java <nl> ppp AgentRegistrationResourceTest . java <nl> - final AgentRegistrationRequest input = AgentRegistrationRequest . create (" foobar ", " nodeId ", AgentNodeDetails . create (" DummyOS 1 . 0 ")); <nl> + final AgentRegistrationRequest input = AgentRegistrationRequest . create (" agentId ", " nodeId ", AgentNodeDetails . create (" DummyOS 1 . 0 ")); <nl> 
mmm AnimatedDrawableBackendImplTest . java <nl> ppp AnimatedDrawableBackendImplTest . java <nl> + @ Mock public Rect mRect ; <nl> - mAnimatedDrawableUtil , mAnimatedImageResult , new Rect (), true ); <nl> + mAnimatedDrawableUtil , mAnimatedImageResult , mRect , true ); <nl> 
mmm AddUniqueConstraintGenerator . java <nl> ppp AddUniqueConstraintGenerator . java <nl> - if ( database instanceof OracleDatabase ) { <nl> - sql + = ! statement . shouldValidate () ? " ENABLE NOVALIDATE " : ""; <nl> - } <nl> + if ( database instanceof OracleDatabase ) { <nl> + sql + = ! statement . shouldValidate () ? " ENABLE NOVALIDATE " : ""; <nl> 
new file <nl> ppp StsAssumeRoleLocalstackTest . java <nl> + package org . apache . camel . component . aws2 . sts . localstack ; <nl> + import org . apache . camel . EndpointInject ; <nl> + import org . apache . camel . Exchange ; <nl> + import org . apache . camel . Processor ; <nl> + import org . apache . camel . ProducerTemplate ; <nl> 
new file <nl> ppp ConvertBSTToGreaterTree . java <nl> + package interviewquestions . medium ; <nl> + import interviewquestions . utils . TreeNode ; <nl> + public class ConvertBSTToGreaterTree { <nl> + public TreeNode convertBST ( TreeNode root ) { <nl> + if ( root == null ) return null ; <nl> + f ( root , 0 ); <nl> 
mmm KickstarterWebView . java <nl> ppp KickstarterWebView . java <nl> 
mmm SerializedName . java <nl> ppp SerializedName . java <nl> 
mmm ThreadSafeHMAC . java <nl> ppp ThreadSafeHMAC . java <nl> + import com . ning . http . util . UTF8UrlEncoder ; <nl> - byte [] keyBytes = UTF8Codec . toUTF8 ( consumerAuth . getSecret () + " & " + userAuth . getSecret ()); <nl> + byte [] keyBytes = UTF8Codec . toUTF8 ( UTF8UrlEncoder . encode ( consumerAuth . getSecret ()) + " & " + UTF8UrlEncoder . encode ( userAuth . getSecret ())); <nl> 
mmm Viewer . java <nl> ppp Viewer . java <nl> + import net . sourceforge . pmd . jaxen . RegexpFunction ; <nl> + import org . jaxen . SimpleFunctionContext ; <nl> + import org . jaxen . XPathFunctionContext ; <nl> + (( SimpleFunctionContext ) XPathFunctionContext . getInstance ()) . registerFunction ( null , " regexp ", new RegexpFunction ()); <nl> 
mmm DateHandlerTestCase . java <nl> ppp DateHandlerTestCase . java <nl> - Assert . assertTrue ( System . currentTimeMillis () > firstDate ); <nl> + Assert . assertTrue ( System . currentTimeMillis () >= firstDate ); <nl> 
mmm StateStore . java <nl> ppp StateStore . java <nl> 
new file <nl> ppp BuildDebug . java <nl> + package io . micronaut . docs . aop . scheduled ; <nl> + import io . micronaut . scheduling . annotation . Scheduled ; <nl> + import javax . inject . Singleton ; <nl> + import java . lang . management . ManagementFactory ; <nl> + import java . lang . management . ThreadInfo ; <nl> 
mmm SearchPresenter . java <nl> ppp SearchPresenter . java <nl> - import com . kickstarter . libs . RxUtils ; <nl> + import com . kickstarter . libs . utils . RxUtils ; <nl> - import timber . log . Timber ; <nl> 
mmm Processor . java <nl> ppp Processor . java <nl> + import com . google . common . collect . ImmutableSet ; <nl> + private static final String GRADLE _ INCREMENTAL = " immutables . gradle . incremental "; <nl> + @ Override <nl> + public Set < String > getSupportedOptions () { <nl> + ImmutableSet . Builder < String > options = ImmutableSet . builder (); <nl> 
mmm ProtectedDataStoreService . java <nl> ppp ProtectedDataStoreService . java <nl> - public ProtectedStorageEntry putIfAbsent ( P2PDataStorage . ByteArray hash , ProtectedStorageEntry entry ) { <nl> - Map < P2PDataStorage . ByteArray , ProtectedStorageEntry > map = getMap (); <nl> - if (! map . containsKey ( hash )) { <nl> 
mmm BasicConfiguration . java <nl> ppp BasicConfiguration . java <nl> - log . info (" Ignored configuration entry for {} since it does not map to an option ", key ); <nl> + log . info (" Ignored configuration entry for {} since it does not map to an option ", key , e ); <nl> 
new file <nl> ppp ContentProvider . java <nl> + package net . java . sip . communicator . impl . protocol . jabber . extensions . jingle ; <nl> + import org . jivesoftware . smack . provider . *; <nl> + import org . xmlpull . v1 . *; <nl> + public class ContentProvider implements PacketExtensionProvider <nl> 
mmm ResetPasswordViewModelTest . java <nl> ppp ResetPasswordViewModelTest . java <nl> - test . assertNoValues (); <nl> - test . assertNoValues (); <nl> - test . assertNoValues (); <nl> 
mmm UberTestCase . java <nl> ppp UberTestCase . java <nl> - import junit . framework . *; <nl> - import groovy . ExecuteTest _ LinuxSolaris ; <nl> + import junit . framework . Test ; <nl> + import junit . framework . TestCase ; <nl> + import junit . framework . TestSuite ; <nl> - public static Test suite () { <nl> 
mmm TestJNDI . java <nl> ppp TestJNDI . java <nl> 
mmm TransactionListItemFactory . java <nl> ppp TransactionListItemFactory . java <nl> + import io . bisq . core . dao . blockchain . parse . BsqBlockChain ; <nl> + private final BsqBlockChain bsqBlockChain ; <nl> - BSFormatter formatter ) { <nl> + BsqBlockChain bsqBlockChain , BSFormatter formatter ) { <nl> 
mmm Terminate . java <nl> ppp Terminate . java <nl> - " workflowOutput ": "${ workflow . input }" <nl> + " workflowOutput ": "${ task0 . output }" <nl> 
mmm InfinispanModel . java <nl> ppp InfinispanModel . java <nl> - static final InfinispanModel CURRENT = VERSION _ 10 _ 0 _ 0 ; <nl> + static final InfinispanModel CURRENT = VERSION _ 11 _ 0 _ 0 ; <nl> 
new file <nl> ppp CSharpModelTest . java <nl> + package io . swagger . codegen . csharp ; <nl> + import io . swagger . codegen . CodegenModel ; <nl> + import io . swagger . codegen . CodegenProperty ; <nl> + import io . swagger . codegen . DefaultCodegen ; <nl> + import io . swagger . codegen . languages . CSharpClientCodegen ; <nl> 
mmm CamelSolrTest . java <nl> ppp CamelSolrTest . java <nl> - import org . junit . Ignore ; <nl> - @ Ignore <nl> 
mmm RunWith . java <nl> ppp RunWith . java <nl> - * & # 064 ; SuiteClasses ( ATest . class , BTest . class , CTest . class ) <nl> + * & # 064 ; SuiteClasses ({ ATest . class , BTest . class , CTest . class }) <nl> 
mmm Encryption . java <nl> ppp Encryption . java <nl> + import net . runelite . deob . attributes . code . Instruction ; <nl> - pci . setConstant ( new net . runelite . deob . pool . Integer ( value )); <nl> + Instruction oldi = ( Instruction ) pci ; <nl> + Instruction newi = pci . setConstant ( new net . runelite . deob . pool . Integer ( value )); <nl> 
mmm Person . java <nl> ppp Person . java <nl> - ), <nl> - @ NamedQuery ( <nl> - name = " com . example . helloworld . core . Person . findById ", <nl> - query = " SELECT p FROM Person p WHERE p . id = : id " <nl> 
mmm PartAuthority . java <nl> ppp PartAuthority . java <nl> - switch ( match ) { <nl> + try { <nl> + switch ( match ) { <nl> + } <nl> + } catch ( SecurityException se ) { <nl> + throw new IOException ( se ); <nl> 
new file <nl> ppp ProfileApplicationInicationInitializer . java <nl> + package com . navercorp . pinpoint . common . server . profile ; <nl> + import org . springframework . web . WebApplicationInitializer ; <nl> + import javax . servlet . ServletContext ; <nl> + import javax . servlet . ServletException ; <nl> 
mmm AssumptionViolatedException . java <nl> ppp AssumptionViolatedException . java <nl> - public < T > AssumptionViolatedException ( String message , T expected , Matcher < T > matcher ) { <nl> - super ( message , expected , matcher ); <nl> + public < T > AssumptionViolatedException ( String message , T actual , Matcher < T > matcher ) { <nl> 
mmm Dates . java <nl> ppp Dates . java <nl> + import java . util . Date ; <nl> - import java . util . Date ; <nl> + @ Override <nl> + public int hashCode () { <nl> + final int prime = 31 ; <nl> + int result = 1 ; <nl> + result = prime * result + (( id == null ) ? 0 : id . hashCode ()); <nl> + return result ; <nl> 
mmm RGBLuminanceSourceTestCase . java <nl> ppp RGBLuminanceSourceTestCase . java <nl> + LuminanceSource croppedFullWidth = SOURCE . crop ( 0 , 1 , 3 , 2 ); <nl> + assertArrayEquals ( new byte [] { 0x3F , 0x7F , 0x3F , 0x3F , 0x7F , 0x3F }, <nl> + croppedFullWidth . getMatrix ()); <nl> + LuminanceSource croppedCorner = SOURCE . crop ( 1 , 1 , 2 , 2 ); <nl> 
mmm NpmMojo . java <nl> ppp NpmMojo . java <nl> - logger . info (" new NpmRunner ( logger , " + Platform . guess () . toString () + ", " + workingDirectory + ") . execute (" + arguments + ")"); <nl> 
mmm IntegrationUtils . java <nl> ppp IntegrationUtils . java <nl> + import spark . Spark ; <nl> + Spark . stop (); <nl> + Thread . sleep ( 5000 ); <nl> - MindmapsEngineServer . start (); <nl> - sleep ( 5000 ); <nl> + Thread . sleep ( 5000 ); <nl> + MindmapsEngineServer . start (); <nl> + sleep ( 5000 ); <nl> 
mmm BuildCellRelativePath . java <nl> ppp BuildCellRelativePath . java <nl> - import com . facebook . buck . core . util . immutables . BuckStyleTuple ; <nl> + import com . facebook . buck . core . util . immutables . BuckStyleValue ; <nl> - import org . immutables . value . Value ; <nl> - @ BuckStyleTuple <nl> 

new file <nl> ppp ConfigValue . java <nl> + package org . apache . storm . command ; <nl> + import java . util . Map ; <nl> + import org . apache . storm . utils . ConfigUtils ; <nl> + public class ConfigValue { <nl> + public static void main ( String [] args ) { <nl> + String name = args [ 0 ]; <nl> + Map < String , Object > conf = ConfigUtils . readStormConfig (); <nl> 
mmm StormSubmitter . java <nl> ppp StormSubmitter . java <nl> - if ( localJar == null ) { <nl> - throw new RuntimeException (" Must submit topologies using the ' storm ' client script so that StormSubmitter knows which jar to upload . "); <nl> - } <nl> 
mmm OrchestrationProxyConfiguration . java <nl> ppp OrchestrationProxyConfiguration . java <nl> + import io . shardingsphere . core . orche . config . ProxyBasicRule ; <nl> - import io . shardingsphere . core . rule . ProxyAuthority ; <nl> - import io . shardingsphere . core . yaml . masterslave . YamlMasterSlaveRuleConfiguration ; <nl> 
mmm IntegrateSupportedSQLParsingTest . java <nl> ppp IntegrateSupportedSQLParsingTest . java <nl> + import java . util . ArrayList ; <nl> - return sqlCasesLoader . getSupportedSQLTestParameters ( Arrays . < Enum > asList ( DatabaseType . values ()), DatabaseType . class ); <nl> + Collection < Object []> result = sqlCasesLoader . getSupportedSQLTestParameters ( Arrays . < Enum > asList ( DatabaseType . values ()), DatabaseType . class ); <nl> 
mmm JwtAuthenticationTokenFilter . java <nl> ppp JwtAuthenticationTokenFilter . java <nl> - if (! StringUtils . isEmpty ( jwt . trim ()) & & SecurityContextHolder . getContext () . getAuthentication () == null ) { <nl> + if ( jwt != null & & !"" . equals ( jwt . trim ()) & & SecurityContextHolder . getContext () . getAuthentication () == null ) { <nl> 
mmm Pt502ProtocolDecoderTest . java <nl> ppp Pt502ProtocolDecoderTest . java <nl> - verifyPosition ( decoder , text ( <nl> + verifyNothing ( decoder , text ( <nl> 
mmm ViewModel . java <nl> ppp ViewModel . java <nl> - import com . kickstarter . KSApplication ; <nl> 
mmm RegTestParams . java <nl> ppp RegTestParams . java <nl> - interval = 10000 ; <nl> + interval = Integer . MAX _ VALUE ; <nl> 
new file <nl> ppp UserManagerResource . java <nl> + package azkaban . restli ; <nl> + import java . util . UUID ; <nl> + import javax . servlet . ServletException ; <nl> + import javax . servlet . http . HttpServletRequest ; <nl> + import azkaban . restli . user . User ; <nl> + import azkaban . user . UserManager ; <nl> 
mmm LoggingResourceProcessor . java <nl> ppp LoggingResourceProcessor . java <nl> - import java . nio . charset . StandardCharsets ; <nl> - import java . util . stream . Collectors ; <nl> - import io . quarkus . deployment . builditem . GeneratedResourceBuildItem ; <nl> 
mmm ResourcePoolTest . java <nl> ppp ResourcePoolTest . java <nl> - public final class ResourcePoolTest { <nl> + public class ResourcePoolTest { <nl> 
mmm CloneRulesTest . java <nl> ppp CloneRulesTest . java <nl> + addRule ( RULESET , " CloneMethodMustBePublic "); <nl> 
mmm SeataHandlerInterceptor . java <nl> ppp SeataHandlerInterceptor . java <nl> -  <nl> - public static final String BIND _ XID = " BIND _ XID "; <nl> - public static final String UNBIND _ XID = " UNBIND _ XID "; <nl> + private static final String BIND _ XID = " BIND _ XID "; <nl> + private static final String UNBIND _ XID = " UNBIND _ XID "; <nl> 
mmm RobolectricPackageManager . java <nl> ppp RobolectricPackageManager . java <nl> - void setPackagesForCallingUid ( String [] packagesForCallingUid ); <nl> + void setPackagesForCallingUid ( String . . . packagesForCallingUid ); <nl> - void setPackagesForUid ( int uid , String [] packagesForCallingUid ); <nl> 
mmm BoxingTest . java <nl> ppp BoxingTest . java <nl> - import static org . hamcrest . Matchers . equalTo ; <nl> + import static org . hamcrest . Matchers . greaterThan ; <nl> - ai . set ( 2 ); <nl> + ai . set ( 3 ); <nl> - await () . until (() - > new Integer ( ai . get ()), equalTo ( 2 )); <nl> + await () . until (() - > new Integer ( ai . get ()), greaterThan ( 2 )); <nl> 
mmm Launcher . java <nl> ppp Launcher . java <nl> + import java . util . logging . Logger ; <nl> + private static final Logger LOG = Logger . getLogger ( Launcher . class . getName ()); <nl> + LOG . info (" Discovering tests in enginge " + testEngine . getId ()); <nl> 
mmm AnalysisResult . java <nl> ppp AnalysisResult . java <nl> - return 0 ; <nl> + return System . currentTimeMillis (); <nl> 
mmm UseUtilityClassRule . java <nl> ppp UseUtilityClassRule . java <nl> - Node n = p . jjtGetChild ( 0 ); <nl> - if ( n instanceof ASTAnnotation ) { <nl> - n = p . jjtGetChild ( 1 ); <nl> - } <nl> + Node n = skipAnnotations ( p ); <nl> + private Node skipAnnotations ( Node p ) { <nl> + int index = 0 ; <nl> + Node n = p . jjtGetChild ( index + + ); <nl> 
mmm KmlPolygonTest . java <nl> ppp KmlPolygonTest . java <nl> + import java . util . List ; <nl> - ArrayList < LatLng > outerCoordinates = new ArrayList < LatLng >(); <nl> + List < LatLng > outerCoordinates = new ArrayList < LatLng >(); <nl> - ArrayList < ArrayList < LatLng >> innerCoordinates = new ArrayList < ArrayList < LatLng >>(); <nl> 
new file <nl> ppp JSONCreatorTest2 . java <nl> + package com . alibaba . json . bvt . parser ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . annotation . JSONCreator ; <nl> + import com . alibaba . fastjson . annotation . JSONField ; <nl> 
mmm SQLExecuteCallback . java <nl> ppp SQLExecuteCallback . java <nl> + import java . util . Map ; <nl> 
mmm Shared . java <nl> ppp Shared . java <nl> - nonBootSharingEnabled = isNonBootSharingEnabledImpl (); <nl> + sharingEnabled = isSharingEnabledImpl (); <nl> - private static native boolean isNonBootSharingEnabledImpl (); <nl> + private static native boolean isSharingEnabledImpl (); <nl> - return nonBootSharingEnabled ; <nl> 
new file <nl> ppp ByteArrayBodyGenerator . java <nl> + package com . ning . http . client . generators ; <nl> + import com . ning . http . client . Body ; <nl> + import com . ning . http . client . BodyGenerator ; <nl> + import java . io . IOException ; <nl> + import java . nio . ByteBuffer ; <nl> + public class ByteArrayBodyGenerator implements BodyGenerator { <nl> 

mmm Mask . java <nl> ppp Mask . java <nl> - boolean closed = json . getBoolean (" cl "); <nl> + boolean closed = false ; <nl> + if ( json . has (" cl ")) { <nl> + closed = json . getBoolean (" cl "); <nl> + } <nl> 
mmm BtcAverageProvider . java <nl> ppp BtcAverageProvider . java <nl> - ( double ) data . get (" last "), <nl> + Double . valueOf (( String ) data . get (" last ")), <nl> 
mmm Version . java <nl> ppp Version . java <nl> - public static final String versionName = " GreatVoyage - v4 . 0 . 1 - 1 - g6cd6ed5fb "; <nl> - public static final String versionCode = " 13213 "; <nl> - private static final String version = " 4 . 1 . 0 "; <nl> + public static final String versionName = " GreatVoyage - v4 . 1 . 0 - 1 - g635526cc6 "; <nl> 
mmm AbstractOrchestrationDataSource . java <nl> ppp AbstractOrchestrationDataSource . java <nl> - import com . google . common . eventbus . EventBus ; <nl> - @ Getter ( AccessLevel . PROTECTED ) <nl> - private final EventBus eventBus = ShardingOrchestrationEventBus . getInstance (); <nl> + @ Getter ( AccessLevel . PROTECTED ) <nl> 
mmm CaseInsensitiveWorkarounds . java <nl> ppp CaseInsensitiveWorkarounds . java <nl> - final char firstLo = Character . toLowerCase ( localDest . charAt ( 0 )); <nl> - final char firstUp = Character . toUpperCase ( localDest . charAt ( 0 )); <nl> - for ( int i = localSrc . length () - localDest . length (); i >= 0 ; i - - ) { <nl> 
mmm FontAwesome5Icon . java <nl> ppp FontAwesome5Icon . java <nl> 
mmm VertexIndexTest . java <nl> ppp VertexIndexTest . java <nl> + graph . drop (); <nl> 
mmm AbstractShardingJDBCDatabaseAndTableTest . java <nl> ppp AbstractShardingJDBCDatabaseAndTableTest . java <nl> - protected final void importDataSet () { <nl> + private void importDataSet () { <nl> - Map < DatabaseType , Map < String , DataSource >> dataSourceMap = createDataSourceMap (); <nl> + Map < DatabaseType , Map < String , DataSource >> dataSourceMap = createDataSourceMap ( Arrays . asList (" jdbc _ 0 ", " jdbc _ 1 ")); <nl> 
mmm ClassAttributeCache . java <nl> ppp ClassAttributeCache . java <nl> + import java . util . stream . Collectors ; <nl> - fields . addAll ( Arrays . asList ( klass . getDeclaredFields ())); <nl> + fields . addAll ( Arrays . stream ( klass . getDeclaredFields ()) . filter ( field - > ! field . isSynthetic ()) . collect ( Collectors . toList ())); <nl> 
new file <nl> ppp LegacyProviderRuleAnalysisResult . java <nl> + package com . facebook . buck . core . rules . analysis . impl ; <nl> + import com . facebook . buck . core . model . BuildTarget ; <nl> + import com . facebook . buck . core . rules . analysis . RuleAnalysisResult ; <nl> + import com . facebook . buck . core . rules . analysis . action . ActionAnalysisData ; <nl> 
mmm MySQLStringLenencBinaryProtocolValueTest . java <nl> ppp MySQLStringLenencBinaryProtocolValueTest . java <nl> - public void assertReadStringLenenc () { <nl> + public void assertRead () { <nl> - public void assertWriteStringLenenc () { <nl> + public void assertWriteString () { <nl> + @ Test <nl> + public void assertWriteByteArray () { <nl> 
mmm RedissonCacheStatisticsAutoConfiguration . java <nl> ppp RedissonCacheStatisticsAutoConfiguration . java <nl> + import org . springframework . boot . actuate . cache . CacheStatisticsProvider ; <nl> + import org . springframework . boot . autoconfigure . condition . ConditionalOnClass ; <nl> + @ ConditionalOnClass ( CacheStatisticsProvider . class ) <nl> 
new file <nl> ppp SQLite _ SelectTest _ 2 . java <nl> + package com . alibaba . druid . bvt . sql . sqlite ; <nl> + import com . alibaba . druid . sql . MysqlTest ; <nl> + import com . alibaba . druid . sql . SQLUtils ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> + import com . alibaba . druid . sql . dialect . mysql . visitor . MySqlSchemaStatVisitor ; <nl> 
mmm GuiceContextListener . java <nl> ppp GuiceContextListener . java <nl> - import com . sun . jersey . guice . spi . container . servlet . GuiceContainer ; <nl> + import org . atmosphere . guice . GuiceContainer ; <nl> 
mmm VerbPrefixes . java <nl> ppp VerbPrefixes . java <nl> - " durch ", "ü ber ", " unter ", " um ", " wider ", " wieder ", <nl> + " durch ", "ü ber ", " unter ", " um ", " wider ", " wieder ", " r ü ber ", <nl> 
mmm RelaxNGRouteTest . java <nl> ppp RelaxNGRouteTest . java <nl> - import org . apache . camel . test . spring . CamelSpringTestSupport ; <nl> - import org . junit . Test ; <nl> + import org . apache . camel . test . spring . junit5 . CamelSpringTestSupport ; <nl> + import org . junit . jupiter . api . Test ; <nl> 
mmm SpringBootAdminApplication . java <nl> ppp SpringBootAdminApplication . java <nl> 
mmm ElasticsearchBackendSearchTypeOverridesTest . java <nl> ppp ElasticsearchBackendSearchTypeOverridesTest . java <nl> + import org . graylog . plugins . views . search . DerivedTimeRange ; <nl> - . timerange ( AbsoluteRange . create (" 2019 - 09 - 11T10 : 31 : 52 . 819Z ", " 2019 - 09 - 11T10 : 36 : 52 . 823Z ")) <nl> 
new file <nl> ppp PlaintextService . java <nl> + package hello ; <nl> + import javax . ws . rs . GET ; <nl> + import javax . ws . rs . Path ; <nl> + import javax . ws . rs . Produces ; <nl> + import javax . ws . rs . core . MediaType ; <nl> + @ Path (" plaintext ") <nl> + public class PlaintextService { <nl> 
new file <nl> ppp PGSelectTest31 . java <nl> + package com . alibaba . druid . bvt . sql . postgresql ; <nl> + import com . alibaba . druid . sql . PGTest ; <nl> + import com . alibaba . druid . sql . SQLUtils ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> + import com . alibaba . druid . sql . dialect . postgresql . parser . PGSQLStatementParser ; <nl> 
mmm CustomSynopsisNonPosix . java <nl> ppp CustomSynopsisNonPosix . java <nl> - import picocli . CommandLine . Help . Ansi . Text ; <nl> - import picocli . CommandLine . Model . ArgSpec ; <nl> - import java . util . ArrayList ; <nl> - import java . util . Collection ; <nl> - import java . util . Collections ; <nl> 
mmm ServerConfigController . java <nl> ppp ServerConfigController . java <nl> 
mmm SingletonCodec . java <nl> ppp SingletonCodec . java <nl> 
deleted file <nl> mmm OpenAPIFilter . java <nl> - package io . swagger . oas . web ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl> - import io . swagger . oas . models . Operation ; <nl> - import io . swagger . oas . models . media . Schema ; <nl> - import io . swagger . oas . models . parameters . Parameter ; <nl> 
mmm CollectionMaxDataTimeCacheLoader . java <nl> ppp CollectionMaxDataTimeCacheLoader . java <nl> + import org . apache . commons . lang3 . StringUtils ; <nl> + import org . joda . time . DateTime ; <nl> + import org . joda . time . format . DateTimeFormat ; <nl> + import org . joda . time . format . DateTimeFormatter ; <nl> 
mmm SenderUdpChannelTransport . java <nl> ppp SenderUdpChannelTransport . java <nl> - import uk . co . real _ logic . aeron . common . event . EventCode ; <nl> 
deleted file <nl> mmm AmazonComprehendServiceIntegrationTest . java <nl> - import com . example . comprehend . *; <nl> - import org . junit . jupiter . api . *; <nl> - import static org . junit . jupiter . api . Assertions . assertNotNull ; <nl> - import software . amazon . awssdk . regions . Region ; <nl> 
mmm Server . java <nl> ppp Server . java <nl> - XID . setIpAddress ( NetUtil . getLocalIp ()); <nl> + if ( args . length > 2 ) { <nl> + XID . setIpAddress ( args [ 2 ]); <nl> + } else { <nl> + XID . setIpAddress ( NetUtil . getLocalIp ()); <nl> + } <nl> 
new file <nl> ppp _ 1608 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . Arrays ; <nl> + public class _ 1608 { <nl> + public static class Solution1 { <nl> + public int specialArray ( int [] nums ) { <nl> + Arrays . sort ( nums ); <nl> + int max = nums [ nums . length - 1 ]; <nl> 
mmm EncryptInsertOptimizeEngine . java <nl> ppp EncryptInsertOptimizeEngine . java <nl> - int derivedColumnsCount = encryptRule . getEncryptEngine () . getAssistedQueryColumnCount ( sqlStatement . getTable () . getTableName ()); <nl> + int derivedColumnsCount = encryptRule . getEncryptEngine () . getAssistedQueryAndPlainColumnCount ( sqlStatement . getTable () . getTableName ()); <nl> 
mmm VaultListManager . java <nl> ppp VaultListManager . java <nl> - if (! CryptoFileSystemProvider . containsVault ( pathToVault , MASTERKEY _ FILENAME )) { <nl> - throw new NoSuchFileException ( pathToVault . toString (), null , " Not a vault directory "); <nl> + Path normalizedPathToVault = pathToVault . normalize () . toAbsolutePath (); <nl> 
new file <nl> ppp CreateContainer . java <nl> + package com . example . mediastore ; <nl> + import software . amazon . awssdk . services . mediastore . MediaStoreClient ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . mediastore . model . CreateContainerRequest ; <nl> 
mmm BackgroundPowerSaver . java <nl> ppp BackgroundPowerSaver . java <nl> - this ( context ); <nl> + if ( android . os . Build . VERSION . SDK _ INT < 18 ) { <nl> + LogManager . w ( TAG , " BackgroundPowerSaver requires API 18 or higher . "); <nl> + return ; <nl> + } <nl> + if ( context instanceof Application ) { <nl> 
mmm ContextTest . java <nl> ppp ContextTest . java <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + assertThat ( context . getFilesDir () . listFiles () . length , is ( 0 )); <nl> + assertThat ( context . getCacheDir () . listFiles () . length , is ( 0 )); <nl> - File file = null ; <nl> - try { <nl> 
mmm AntiDragPlugin . java <nl> ppp AntiDragPlugin . java <nl> + import com . google . common . eventbus . Subscribe ; <nl> + import net . runelite . api . events . FocusChanged ; <nl> + @ Subscribe <nl> + public void onFocusChanged ( FocusChanged focusChanged ) <nl> + { <nl> + if (! focusChanged . isFocused ()) <nl> 
mmm EncryptRuleConfiguration . java <nl> ppp EncryptRuleConfiguration . java <nl> + private EncryptorConfiguration defaultEncryptorConfig ; <nl> 
mmm ConfigBackupTask . java <nl> ppp ConfigBackupTask . java <nl> - private static final String BASE _ DIR _ PATH = " src / main / resources / config / backup /"; <nl> + private static final String BASE _ DIR _ PATH = " src / main / resources / config /"; <nl> 
mmm ProgressBarComponent . java <nl> ppp ProgressBarComponent . java <nl> - private static final DecimalFormat DECIMAL _ FORMAT2 = new DecimalFormat (" # 0 "); <nl> + private static final DecimalFormat DECIMAL _ FORMAT _ ABS = new DecimalFormat (" # 0 "); <nl> - textToWrite = DECIMAL _ FORMAT . format ( Math . floor ( pc * 100d )) + " % "; <nl> 
mmm RawResponseWriter . java <nl> ppp RawResponseWriter . java <nl> - ContentStream content = ( ContentStream ) obj ; <nl> - return content . getContentType (); <nl> + return (( ContentStream ) obj ) . getContentType (); <nl> 
mmm AESShardingEncryptor . java <nl> ppp AESShardingEncryptor . java <nl> + import org . apache . commons . codec . binary . Base64 ; <nl> - import java . security . MessageDigest ; <nl> - byte [] result = cipher . doFinal ( String . valueOf ( plaintext ) . getBytes (" UTF8 ")); <nl> - return org . apache . commons . codec . binary . Base64 . encodeBase64String ( result ); <nl> 
mmm _ 387 . java <nl> ppp _ 387 . java <nl> 
mmm AbstractGenerator . java <nl> ppp AbstractGenerator . java <nl> - if ( packageName . startsWith (" java . ")) { <nl> + if ( packageName . isEmpty () || packageName . startsWith (" java . ")) { <nl> 
mmm FallbackPhoto80dp . java <nl> ppp FallbackPhoto80dp . java <nl> - Drawable background = DrawableCompat . wrap ( Objects . requireNonNull ( AppCompatResources . getDrawable ( context , R . drawable . circle _ tintable ))); <nl> + Drawable background = DrawableCompat . wrap ( Objects . requireNonNull ( AppCompatResources . getDrawable ( context , R . drawable . circle _ tintable ))) . mutate (); <nl> 
new file <nl> ppp PrebuiltDotnetLibraryRuleDescription . java <nl> + package com . facebook . buck . features . dotnet ; <nl> + import com . facebook . buck . core . artifact . Artifact ; <nl> + import com . facebook . buck . core . description . RuleDescription ; <nl> + import com . facebook . buck . core . model . BuildTarget ; <nl> 
mmm InfinispanModel . java <nl> ppp InfinispanModel . java <nl> - static final InfinispanModel CURRENT = VERSION _ 12 _ 0 _ 0 ; <nl> + static final InfinispanModel CURRENT = VERSION _ 13 _ 0 _ 0 ; <nl> 
mmm ODOMeterHandler . java <nl> ppp ODOMeterHandler . java <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> + System . setProperty (" sun . nio . ch . maxCompletionHandlersOnStack ", " 32 "); <nl> 
mmm BubblingConfigurationResolver . java <nl> ppp BubblingConfigurationResolver . java <nl> - List < ListModification > listModifications = null ; <nl> + List < List < ListModification >> listModificationsList = null ; <nl> - if ( listModifications == null ) { <nl> - listModifications = new ArrayList < ListModification >(( List < ListModification >) result . getValue ()); <nl> 
mmm LanguageIdentifierTools . java <nl> ppp LanguageIdentifierTools . java <nl> - final LanguageProfile profile = new LanguageProfile (); <nl> - final String languageFilePath = JLanguageTool . getDataBroker () . getResourceDir () + <nl> - "/" + language + "/" + language + PROFILE _ SUFFIX ; <nl> + final LanguageProfile profile = new LanguageProfile (); <nl> 
mmm DoublePunctuationRule . java <nl> ppp DoublePunctuationRule . java <nl> - if ( dotCount == 2 & & ! nextToken . equals (" . ")) { <nl> + if ( dotCount == 2 & & !" . " . equals ( nextToken )) { <nl> + @ SuppressWarnings (" null ") <nl> - } else if ( commaCount == 2 & & ! nextToken . equals (",")) { <nl> 
mmm Response . java <nl> ppp Response . java <nl> + @ Deprecated <nl> + public Response ( int status , String reason , List < Header > headers , TypedInput body ) { <nl> + if ( status < 200 ) { <nl> + throw new IllegalArgumentException (" Invalid status code : " + status ); <nl> + } <nl> + if ( reason == null ) { <nl> 
new file <nl> ppp CounterService . java <nl> + package org . particleframework . cache ; <nl> + import org . particleframework . cache . annotation . CacheConfig ; <nl> + import org . particleframework . cache . annotation . CacheInvalidate ; <nl> + import org . particleframework . cache . annotation . CachePut ; <nl> 
mmm VertxCoreProcessor . java <nl> ppp VertxCoreProcessor . java <nl> - import javax . enterprise . context . ApplicationScoped ; <nl> + import javax . inject . Singleton ; <nl> - . scope ( ApplicationScoped . class ) <nl> + . scope ( Singleton . class ) <nl> 
mmm EnclosingMethod . java <nl> ppp EnclosingMethod . java <nl> - private int classIndex ; <nl> - private int methodIndex ; <nl> - public EnclosingMethod ( int nameIndex , int len , DataInputStream dis , ConstantPool cpool ) throws IOException { <nl> - this ( nameIndex , len , dis . readUnsignedShort (), dis . readUnsignedShort (), cpool ); <nl> 
mmm ReferenceConfigTest . java <nl> ppp ReferenceConfigTest . java <nl> + import org . junit . jupiter . api . AfterAll ; <nl> + import org . junit . jupiter . api . BeforeAll ; <nl> - @ Before <nl> + @ BeforeAll <nl> - @ After <nl> + @ AfterAll <nl> 
mmm _ 94 . java <nl> ppp _ 94 . java <nl> 
mmm CrossOperatorBase . java <nl> ppp CrossOperatorBase . java <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import org . apache . flink . api . common . functions . RuntimeContext ; <nl> + import org . apache . flink . api . common . functions . util . FunctionUtils ; <nl> 
mmm TCPSupport . java <nl> ppp TCPSupport . java <nl> - public interface TCPSupport < T > extends NetworkSupport { <nl> + public interface TCPSupport < T > extends NetworkSupport < T > { <nl> 
mmm JBangIntegration . java <nl> ppp JBangIntegration . java <nl> - if ( name . startsWith (" org . ") & & !( name . startsWith (" org . xml . ") || name . startsWith (" org . w3c . "))) { <nl> + if ( name . startsWith (" org . ") & & !( name . startsWith (" org . xml . ") || name . startsWith (" org . w3c . ") <nl> 
mmm SeataAutoConfiguration . java <nl> ppp SeataAutoConfiguration . java <nl> - @ ConditionalOnProperty ( prefix = StarterConstants . SEATA _ PREFIX , name = " enableAutoDataSourceProxy ", havingValue = " true ", matchIfMissing = true ) <nl> + @ ConditionalOnProperty ( prefix = StarterConstants . SEATA _ PREFIX , name = {" enableAutoDataSourceProxy ", " enable - auto - data - source - proxy "}, havingValue = " true ", matchIfMissing = true ) <nl> 
mmm AbsorptionCounter . java <nl> ppp AbsorptionCounter . java <nl> +  <nl> + @ Override <nl> + public String getTooltip () <nl> + { <nl> + return " Absorption : " + absorption ; <nl> + } <nl> 
mmm CharSequence . java <nl> ppp CharSequence . java <nl> 
mmm DefaultRuleFinder . java <nl> ppp DefaultRuleFinder . java <nl> - ), <nl> + ), <nl> - ), <nl> + ), <nl> 
mmm HighlightingTest . java <nl> ppp HighlightingTest . java <nl> - perfRule . assertDurationAround ( Long . valueOf ( prof . getProperty (" Xoo Highlighting Sensor ")), 9700L ); <nl> + perfRule . assertDurationAround ( Long . valueOf ( prof . getProperty (" Xoo Highlighting Sensor ")), 8900L ); <nl> 
mmm FileContentsHolder . java <nl> ppp FileContentsHolder . java <nl> 
mmm LdapShaPasswordEncoderTests . java <nl> ppp LdapShaPasswordEncoderTests . java <nl> + public void testInvalidPasswordFails () { <nl> + assertFalse ( sha . isPasswordValid ("{ SHA } ddSFGmjXYPbZC + NXR2kCzBRjqiE =", " wrongpassword ", null )); <nl> + } <nl> + public void testNonByteArraySaltThrowsException () { <nl> 
mmm NotificationResourceHandlerTest . java <nl> ppp NotificationResourceHandlerTest . java <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> - import static org . assertj . core . api . Assertions . assertThat ; <nl> - assertThat ( ctx . notificationId ()) . isEqualTo (" 1234 "); <nl> 
mmm CaffeineCacheMetrics . java <nl> ppp CaffeineCacheMetrics . java <nl> + import com . github . benmanes . caffeine . cache . AsyncLoadingCache ; <nl> + public CaffeineCacheMetrics ( String name , AsyncLoadingCache <?, ?> cache ) { <nl> + this . name = name ; <nl> + this . cache = cache . synchronous (); <nl> 
mmm BasicCrawler . java <nl> ppp BasicCrawler . java <nl> - return ! FILTERS . matcher ( href ) . matches () & & href . startsWith ( DOMAIN ); <nl> 
mmm SolrJettyTestBase . java <nl> ppp SolrJettyTestBase . java <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> 
mmm TestVersion . java <nl> ppp TestVersion . java <nl> + import java . lang . annotation . Annotation ; <nl> - for ( int i = 0 ; i < values . length - 2 ; i + + ) { <nl> - assertNotNull ( values [ i ] . name () + " should be deprecated ", <nl> - Version . class . getField ( values [ i ] . name ()) . getAnnotation ( Deprecated . class )); <nl> 
mmm ClassRule . java <nl> ppp ClassRule . java <nl> - * & # 064 ; ClassRule <nl> + * & # 064 ; Rule <nl> - } <nl> + } <nl> 
new file <nl> ppp ImportMigrationTask . java <nl> + package com . example . migrationhub ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . migrationhub . MigrationHubClient ; <nl> + import software . amazon . awssdk . services . migrationhub . model . CreateProgressUpdateStreamRequest ; <nl> 
mmm AeronStat . java <nl> ppp AeronStat . java <nl> + final long clientLiveness = metaDataBuffer . getLong ( CncFileDescriptor . clientLivenessTimeoutOffset ( 0 )); <nl> - System . out . format (" % 1 $ tH : % 1 $ tM : % 1 $ tS - Aeron Stat \ n ", new Date ()); <nl> + System . out . format (" % 1 $ tH : % 1 $ tM : % 1 $ tS - Aeron Stat ", new Date ()); <nl> 
mmm AbstractLinuxProcess . java <nl> ppp AbstractLinuxProcess . java <nl> - throw new IllegalStateException ( bitcoindDatadir + " cannot be found or read "); <nl> + throw new IllegalStateException ( bitcoindDatadir + "/ bitcoin . conf cannot be found or read "); <nl> - throw new IllegalStateException ( bitcoindDatadir + " cannot be found or executed "); <nl> 
mmm SimpleUpdatePasswordDistributedIT . java <nl> ppp SimpleUpdatePasswordDistributedIT . java <nl> + import com . orientechnologies . orient . setup . TestSetup ; <nl> + import com . orientechnologies . orient . setup . TestSetupUtil ; <nl> + import com . orientechnologies . orient . setup . configs . SimpleDServerConfig ; <nl> 
deleted file <nl> mmm ResourceReferenceResolver . java <nl> - package com . xtremelabs . robolectric . res ; <nl> - import java . util . ArrayList ; <nl> - import java . util . HashMap ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl> - class ResourceReferenceResolver < T > { <nl> - private Map < String , T > attributeNamesToValues = new HashMap < String , T >(); <nl> 
new file <nl> ppp Issue1095 . java <nl> + package com . alibaba . json . bvt . issue _ 1000 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import com . alibaba . fastjson . parser . Feature ; <nl> + import junit . framework . TestCase ; <nl> + import java . util . Date ; <nl> 
mmm ExasolTableObjectType . java <nl> ppp ExasolTableObjectType . java <nl> + SCHEMA (" TABLE "), <nl> 
mmm EntityAssociationsExtractor . java <nl> ppp EntityAssociationsExtractor . java <nl> - import com . google . common . base . Function ; <nl> - import com . google . common . collect . FluentIterable ; <nl> - import org . springframework . data . mapping . Association ; <nl> - import org . springframework . data . mapping . PersistentEntity ; <nl> 
new file <nl> ppp LambdaInvokeFunction . java <nl> + package com . example . lambda ; <nl> + import com . amazonaws . auth . profile . ProfileCredentialsProvider ; <nl> + import com . amazonaws . regions . Regions ; <nl> + import com . amazonaws . services . lambda . AWSLambda ; <nl> + import com . amazonaws . services . lambda . AWSLambdaClientBuilder ; <nl> 
mmm Accounts . java <nl> ppp Accounts . java <nl> - if ( account instanceof OfflineAccount ) return OFFLINE _ ACCOUNT _ KEY ; <nl> - else if ( account instanceof AuthlibInjectorAccount ) return AUTHLIB _ INJECTOR _ ACCOUNT _ KEY ; <nl> - else if ( account instanceof YggdrasilAccount ) return YGGDRASIL _ ACCOUNT _ KEY ; <nl> 
mmm CrashCaptureMainFragment . java <nl> ppp CrashCaptureMainFragment . java <nl> - SettingItemAdapter mSettingItemAdapter = new SettingItemAdapter ( getContext ()); <nl> + final SettingItemAdapter mSettingItemAdapter = new SettingItemAdapter ( getContext ()); <nl> + data . rightDesc = Formatter . formatFileSize ( getContext (), FileUtil . getDirectorySize ( CrashCaptureManager . getInstance () . getCrashCacheDir ())); <nl> 
mmm Nested . java <nl> ppp Nested . java <nl> + import org . junit . jupiter . api . TestInstance . Lifecycle ; <nl> 
mmm Issue2346 . java <nl> ppp Issue2346 . java <nl> + @ JSONType ( builder = TestEntity2 . TestEntity2Builder . class ) <nl> + @ Getter <nl> + public static class TestEntity2 { <nl> + private String name ; <nl> + private int age ; <nl> + @ JSONPOJOBuilder ( withPrefix = " www ") <nl> + public static class TestEntity2Builder { <nl> 
mmm RlpEncoderTest . java <nl> ppp RlpEncoderTest . java <nl> 
new file <nl> ppp User . java <nl> + package org . traccar . model ; <nl> + public class User { <nl> + private long id ; <nl> + private String email ; <nl> + private String password ; <nl> + private boolean readonly ; <nl> + private boolean admin ; <nl> + private String map ; <nl> + private String language ; <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 8 . 0 "; <nl> + public static final String VERSION = " 2 . 8 . 1 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 8 . 0 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 8 . 1 "; <nl> 
mmm OrchestrationNamespaceHandler . java <nl> ppp OrchestrationNamespaceHandler . java <nl> + import io . shardingsphere . jdbc . orchestration . spring . namespace . constants . EtcdRegistryCenterBeanDefinitionParserTag ; <nl> + import io . shardingsphere . jdbc . orchestration . spring . namespace . constants . ZookeeperRegistryCenterBeanDefinitionParserTag ; <nl> 
mmm CatalogTypes . java <nl> ppp CatalogTypes . java <nl> 
new file <nl> ppp gomsdi002 . java <nl> + package com . ibm . jvmti . tests . getOwnedMonitorStackDepthInfo ; <nl> + public class gomsdi002 <nl> + { <nl> + static Object lock = new Object (); <nl> + static boolean running = false ; <nl> + static volatile boolean stop = false ; <nl> +  <nl> + native static void callGet ( Thread t ); <nl> 
mmm Utils . java <nl> ppp Utils . java <nl> - . getCanonicalName () <nl> + . getName () <nl> - Map < String , Metric > submetrics = sortedMetrics . get ( scopedName ); <nl> - if ( submetrics == null ) { <nl> - submetrics = new TreeMap < String , Metric >(); <nl> - sortedMetrics . put ( scopedName , submetrics ); <nl> 
mmm ShareDialogTest . java <nl> ppp ShareDialogTest . java <nl> - import androidx . test . espresso . Espresso ; <nl> - import androidx . test . espresso . contrib . RecyclerViewActions ; <nl> + import org . hamcrest . Matcher ; <nl> + import org . hamcrest . Matchers ; <nl> + import org . junit . Before ; <nl> 
mmm MyJUnitTest . java <nl> ppp MyJUnitTest . java <nl> - resp . bodyHandler ( body - > context . assertEquals (" foo ", body . toString ())); <nl> - client . close (); <nl> - async . complete (); <nl> + resp . bodyHandler ( body - > { <nl> + context . assertEquals (" foo ", body . toString ()); <nl> + client . close (); <nl> 
deleted file <nl> mmm gomsdi002 . java <nl> - package com . ibm . jvmti . tests . getOwnedMonitorStackDepthInfo ; <nl> - public class gomsdi002 <nl> - { <nl> - static Object lock = new Object (); <nl> - static boolean running = false ; <nl> - static volatile boolean stop = false ; <nl> -  <nl> - native static void callGet ( Thread t ); <nl> 
new file <nl> ppp ConcurrentCloseConnectionTest . java <nl> + package com . zaxxer . hikari . pool ; <nl> + import com . zaxxer . hikari . HikariConfig ; <nl> + import org . junit . Test ; <nl> + import com . zaxxer . hikari . HikariDataSource ; <nl> + import java . sql . Connection ; <nl> + import java . sql . PreparedStatement ; <nl> 
mmm DynamicLanguage . java <nl> ppp DynamicLanguage . java <nl> + import android . text . TextUtils ; <nl> - if (! currentLocale . getLanguage () . equalsIgnoreCase ( getSelectedLocale ( activity ) . getLanguage ())) { <nl> + if (! currentLocale . equals ( getSelectedLocale ( activity ))) { <nl> - if (! configuration . locale . getLanguage () . equalsIgnoreCase ( selectedLocale . getLanguage ())) { <nl> 
deleted file <nl> mmm JSONPrettifier . java <nl> - package org . neo4j . server . rest ; <nl> - import com . fasterxml . jackson . databind . ObjectMapper ; <nl> - import com . fasterxml . jackson . databind . ObjectWriter ; <nl> - import com . google . gson . Gson ; <nl> - import com . google . gson . GsonBuilder ; <nl> 
mmm DefaultNameGenerator . java <nl> ppp DefaultNameGenerator . java <nl> + import io . micronaut . inject . ProxyBeanDefinition ; <nl> - Class type = beanDefinition . getBeanType (); <nl> + final Class type ; <nl> + if ( beanDefinition instanceof ProxyBeanDefinition ) { <nl> + type = (( ProxyBeanDefinition <?>) beanDefinition ) . getTargetType (); <nl> 
mmm TestOptions . java <nl> ppp TestOptions . java <nl> - System . out . println (" Timing tests will be disabled as requested . "); <nl> + if (! ENABLED ) { <nl> + System . err . println (" Timing tests will be disabled as requested . "); <nl> + } <nl> 
mmm BeanToArrayTest . java <nl> ppp BeanToArrayTest . java <nl> + import com . alibaba . fastjson . serializer . SerializerFeature ; <nl> - @ JSONType ( parseFeatures = Feature . SupportArrayToBean ) <nl> + @ JSONType ( parseFeatures = Feature . SupportArrayToBean , serialzeFeatures = SerializerFeature . BeanToArray ) <nl> 
mmm FragmentCollectionApi . java <nl> ppp FragmentCollectionApi . java <nl> - " Possible fields are " <nl> - + "< a href =\" android . html \"> android </ a >, < a href =\" apple . html \"> apple </ a >, " <nl> - + "< a href =\" cpp . html \"> cpp </ a >, < a href =\" java . html \"> java </ a >, " <nl> - + "< a href =\" jvm . html \"> jvm </ a >, and < a href =\" objc . html \"> objc </ a > . " <nl> 
mmm CounterTest . java <nl> ppp CounterTest . java <nl> + @ Test <nl> + public void incrementByNegativeDelta () throws Exception { <nl> + counter . inc ( - 12 ); <nl> + assertThat ( counter . getCount ()) <nl> + . isEqualTo ( - 12 ); <nl> + } <nl> + @ Test <nl> + public void decrementByNegativeDelta () throws Exception { <nl> 
new file <nl> ppp XmlReportDataTests . java <nl> + package org . junit . gen5 . console . tasks ; <nl> + import static java . util . Collections . singleton ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> + import static org . junit . gen5 . engine . TestExecutionResult . failed ; <nl> 
mmm ResourceLoader . java <nl> ppp ResourceLoader . java <nl> - import android . content . res . Resources ; <nl> 
new file <nl> ppp MediaUtilsTest . java <nl> + package com . facebook . common . media ; <nl> + import android . webkit . MimeTypeMap ; <nl> + import com . facebook . testing . robolectric . v2 . WithTestDefaultsRunner ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> 
mmm TaggedMulticastFlowControlTest . java <nl> ppp TaggedMulticastFlowControlTest . java <nl> - " aeron : udp ? endpoint = 224 . 20 . 30 . 39 : 54326 | interface = localhost | fc = tagged , g :", <nl> - " aeron : udp ? endpoint = 224 . 20 . 30 . 39 : 54326 | interface = localhost | fc = tagged , g : 100 /", <nl> 
mmm GenericBsonTest . java <nl> ppp GenericBsonTest . java <nl> + import category . Slow ; <nl> + import org . junit . experimental . categories . Category ; <nl> + @ Category ( Slow . class ) <nl> 
mmm ViewProcessor . java <nl> ppp ViewProcessor . java <nl> - if ( index > - 1 & & re == null & & err == null ) { <nl> + if ( index > - 1 & & re == null & & err == null & & !( view instanceof ViewZone )) { <nl> 
mmm AtrackProtocolDecoderTest . java <nl> ppp AtrackProtocolDecoderTest . java <nl> + verifyPositions ( decoder , buffer ( <nl> + "@ P , FD34 , 720 , 12256 , 357520076794151 , 1535445349 , 1535445354 , 1535500603 , 106784149 , - 6283086 , 105 , 2 , 138 , 0 , 3 , 0 , 0 , 0 ,, 2000 , 2000 ,, % CI % TR % MV % BV % AT % SA % ET % GQ % GS % PC % RP % OD % AV1 % XS % VS , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1011677 , 0 , 138 , 0 , 0 , 0 \ r \ n ", <nl> 
mmm Parser . java <nl> ppp Parser . java <nl> + @ Override <nl> + @ Override <nl> + @ Override <nl> 
mmm SearchTypeError . java <nl> ppp SearchTypeError . java <nl> + import java . util . Locale ; <nl> - if ( description . toLowerCase () . contains (" result window is too large ")) { <nl> + if ( description . toLowerCase ( Locale . US ) . contains (" result window is too large ")) { <nl> 
new file <nl> ppp PropertyKeyDescGenerator . java <nl> + package alluxio . cli ; <nl> + public class PropertyKeyDescGenerator { <nl> + } <nl> 
mmm GTestWrapper . java <nl> ppp GTestWrapper . java <nl> 
mmm LegacyColorMapper . java <nl> ppp LegacyColorMapper . java <nl> - map (" 00ff00 ", Blocks . stone , 0 ); <nl> - map (" 323232 ", Blocks . stone , 0 ); <nl> - map (" 646464 ", Blocks . stone , 1 ); <nl> - map (" 506eb4 ", Blocks . water , 0 ); <nl> - map (" 465a96 ", Blocks . deepwater , 0 ); <nl> - map (" 988a67 ", Blocks . sand , 0 ); <nl> 
mmm Main . java <nl> ppp Main . java <nl> + import com . google . common . collect . ImmutableSet ; <nl> + import java . util . Set ; <nl> - public static void main ( String [] argv ) { <nl> - CliBuilder < Runnable > builder = Cli . < Runnable > builder (" graylog2 ") <nl> + public static void main ( String [] args ) { <nl> 
mmm AbstractResumablePositionManagerTest . java <nl> ppp AbstractResumablePositionManagerTest . java <nl> - private final String inventoryPosition = "{\" unfinished \":{\" ds1 . t _ order _ 1 # 0 \":[ 0 , 200 ],\" ds0 . t _ order _ 1 # 0 \":[ 0 , 100 ]},\" finished \":[\" ds0 . t _ order _ 1 # 1 \"]}"; <nl> 
mmm ToolchainInfoApi . java <nl> ppp ToolchainInfoApi . java <nl> - " Provider which allows rule - specific toolchains to communicate data back to the actual " <nl> - + " rule implementation . Read more about < a " <nl> - + " href =' . . / . . / toolchains . $ DOC _ EXT '> toolchains </ a > for more information . ", <nl> 
new file <nl> ppp JDBCSqlTransport . java <nl> + package io . shardingsphere . core . transport ; <nl> + import io . shardingsphere . core . jdbc . core . connection . ShardingConnection ; <nl> + import io . shardingsphere . transaction . manager . base . servicecomb . AbstractSQLTransport ; <nl> + import lombok . Setter ; <nl> 
mmm BasicConfiguration . java <nl> ppp BasicConfiguration . java <nl> - log . info (" Ignored configuration entry for {} since it does not map to an option ", key ); <nl> + log . info (" Ignored configuration entry for {} since it does not map to an option ", key , e ); <nl> 
mmm SkaffoldInitMojoTest . java <nl> ppp SkaffoldInitMojoTest . java <nl> - Assert . assertEquals (" name - service ", skaffoldInitOutput . getProject ()); <nl> + Assert . assertEquals (" simple - service ", skaffoldInitOutput . getProject ()); <nl> - Assert . assertEquals (" service ", skaffoldInitOutput . getProject ()); <nl> 
mmm ByteBuddyAgentInstallationTest . java <nl> ppp ByteBuddyAgentInstallationTest . java <nl> - import java . net . URL ; <nl> 
mmm Sort . java <nl> ppp Sort . java <nl> - Table sorted = tableEnv . sqlQuery (" select eventTime from zhisheng order by eventTime desc "); <nl> + Table sorted = tableEnv . sqlQuery (" select eventTime from zhisheng order by eventTime "); <nl> 
mmm CacheKeyFactory . java <nl> ppp CacheKeyFactory . java <nl> 
mmm SimpleHttpResponseFactory . java <nl> ppp SimpleHttpResponseFactory . java <nl> - return new SimpleHttpResponse <>(); <nl> + return new SimpleHttpResponse < T >() . body ( body ); <nl> 
mmm ProguardTextOutput . java <nl> ppp ProguardTextOutput . java <nl> + buildableContext . recordArtifact ( getOutputPath ()); <nl> 
mmm RoleHierarchy . java <nl> ppp RoleHierarchy . java <nl> - * Role hierarchy : ROLE _ A & gt ; ROLE _ B and ROLE _ B & gt ; ROLE _ C . < br > <nl> + * Role hierarchy : ROLE _ A & gt ; ROLE _ B & gt ; ROLE _ C . < br > <nl> 
mmm UITemplateManagementService . java <nl> ppp UITemplateManagementService . java <nl> + import java . util . Collections ; <nl> + import java . util . Comparator ; <nl> - . provider () <nl> - . getService ( UITemplateManagementDAO . class ); <nl> + . provider () <nl> + . getService ( UITemplateManagementDAO . class ); <nl> 
mmm Version . java <nl> ppp Version . java <nl> - public static final String id ="$ Id $"; <nl> + public static final String revisionDate ="$ Date $"; <nl> 
mmm Checker . java <nl> ppp Checker . java <nl> 
new file <nl> ppp GermanOldSpellingFinder . java <nl> + package org . languagetool . dev ; <nl> + import org . languagetool . AnalyzedToken ; <nl> + import org . languagetool . language . GermanyGerman ; <nl> + import org . languagetool . synthesis . Synthesizer ; <nl> + import java . io . IOException ; <nl> 
mmm BsonReader . java <nl> ppp BsonReader . java <nl> - System . out . println (" Real class : " + obj . getClass ()); <nl> 
mmm Servlets . java <nl> ppp Servlets . java <nl> - final StringBuilder url = new StringBuilder ( 100 ) . append ( request . getRequestURI ()); <nl> - if ( request . getQueryString () != null ) { <nl> - url . append ('?') . append ( request . getQueryString ()); <nl> + if ( request . getQueryString () == null ) { <nl> 
mmm SwaggerLoader . java <nl> ppp SwaggerLoader . java <nl> - e . printStackTrace (); <nl> + System . out . println ( e . getMessage ()); <nl> 

mmm OldSpellingRuleTest . java <nl> ppp OldSpellingRuleTest . java <nl> + assertThat ( rule . match ( lt . getAnalyzedSentence (" Asse ")) . length , is ( 0 )); <nl> 
mmm RestSettingBuilders . java <nl> ppp RestSettingBuilders . java <nl> - protected abstract RestSetting createSetting ( final Optional < RequestMatcher > matcher , final ResponseHandler handler ); <nl> + protected abstract RestSetting createSetting ( Optional < RequestMatcher > matcher , ResponseHandler handler ); <nl> 
mmm TestFileHandlerNonRotatable . java <nl> ppp TestFileHandlerNonRotatable . java <nl> + LoggingBaseTest . setUpPerTestClass (); <nl> 
mmm SparkleActivator . java <nl> ppp SparkleActivator . java <nl> - public native static void initSparkle ( String pathToSparkleFramework ); <nl> + public native static void initSparkle ( String pathToSparkleFramework , <nl> + boolean updateAtStartup , <nl> + int checkInterval ); <nl> + private boolean updateAtStartup = true ; <nl> 
mmm DefaultInetAddressTypeAdapterTest . java <nl> ppp DefaultInetAddressTypeAdapterTest . java <nl> - InetAddress localhost = InetAddress . getLocalHost (); <nl> - String localInetAddress = gson . toJson ( localhost ); <nl> - assertEquals ("\"" + localhost . getHostAddress () + "\"", localInetAddress ); <nl> 
mmm ColumnMetaData . java <nl> ppp ColumnMetaData . java <nl> + import lombok . ToString ; <nl> 
mmm ApiUtilsTest . java <nl> ppp ApiUtilsTest . java <nl> - String fieldList [] = {" A ", " B ", " C "}; <nl> + String [] fieldList = {" A ", " B ", " C "}; <nl> - String output [] = Utils . splitFields ( fieldList ); <nl> + String [] output = Utils . splitFields ( fieldList ); <nl> 
mmm TramigoProtocolDecoderTest . java <nl> ppp TramigoProtocolDecoderTest . java <nl> + import java . nio . ByteOrder ; <nl> - import org . traccar . helper . TestIdentityManager ; <nl> - import java . nio . ByteOrder ; <nl> - import static org . junit . Assert . assertNull ; <nl> + verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ByteOrder . LITTLE _ ENDIAN , ChannelBufferTools . convertHexString ( <nl> 
mmm SystemToolProvider . java <nl> ppp SystemToolProvider . java <nl> + import com . facebook . buck . core . artifact . Artifact ; <nl> + import com . facebook . buck . core . rules . actions . lib . args . CommandLineArgsFactory ; <nl> + import com . facebook . buck . core . rules . analysis . context . DependencyOnlyRuleAnalysisContext ; <nl> 
new file <nl> ppp UpdateEncryptAssistedItemPlaceholder . java <nl> + package org . apache . shardingsphere . core . rewrite . placeholder ; <nl> + import com . google . common . base . Strings ; <nl> + import lombok . Getter ; <nl> + import lombok . RequiredArgsConstructor ; <nl> + @ RequiredArgsConstructor <nl> 
mmm SampleMybatisApplication . java <nl> ppp SampleMybatisApplication . java <nl> - import org . mybatis . spring . annotation . MapperScan ; <nl> - @ MapperScan (" sample . mybatis . mapper ") <nl> 
mmm ScaledThumbnailMaker . java <nl> ppp ScaledThumbnailMaker . java <nl> - BufferedImage thumbnail = new ScaledThumbnailMaker () . scale ( 0 . 25 ) . make ( img ); <nl> + BufferedImage thumbnail = new ScaledThumbnailMaker () <nl> + . scale ( 0 . 25 ) <nl> + . make ( img ); <nl> -  <nl> 
mmm ShardedJedisPool . java <nl> ppp ShardedJedisPool . java <nl> + public void returnBrokenResource ( final ShardedJedis resource ) { <nl> + returnBrokenResourceObject ( resource ); <nl> + } <nl> 
mmm Identifier . java <nl> ppp Identifier . java <nl> + import com . google . devtools . build . lib . syntax . compiler . DebugInfo ; <nl> + import com . google . devtools . build . lib . syntax . compiler . Variable . SkylarkVariable ; <nl> + import com . google . devtools . build . lib . syntax . compiler . VariableScope ; <nl> 
mmm BlockingChannel . java <nl> ppp BlockingChannel . java <nl> - package uk . co . real _ logic . aeron ; <nl> + package uk . co . real _ logic . aeron . examples ; <nl> + import uk . co . real _ logic . aeron . BufferExhaustedException ; <nl> + import uk . co . real _ logic . aeron . Channel ; <nl> 
new file <nl> ppp CreateMessage . java <nl> + package twitter4j . examples . directmessage ; <nl> + import twitter4j . *; <nl> + public final class CreateMessage { <nl> + public static void main ( String [] args ) { <nl> + if ( args . length < 2 ) { <nl> + System . out . println (" Usage : java twitter4j . examples . directmessage . CreateMessage [ recipient user id ] [ message ]"); <nl> 
mmm ApiCredential . java <nl> ppp ApiCredential . java <nl> + import android . os . Environment ; <nl> + import java . io . File ; <nl> + import java . io . FileInputStream ; <nl> + import java . io . IOException ; <nl> + import me . zhanghai . android . douya . util . IoUtils ; <nl> + import me . zhanghai . android . douya . util . LogUtils ; <nl> 
mmm ItemSelect . java <nl> ppp ItemSelect . java <nl> - * public void itemSelectedOnMyList () { <nl> + * public void itemSelectedOnMyList ( boolean selected ) { <nl> - * public void myListItemPositionSelected ( int position ) { <nl> + * public void myListItemPositionSelected ( boolean selected , int position ) { <nl> 
mmm Downloader . java <nl> ppp Downloader . java <nl> + private final CrawlConfig config = new CrawlConfig (); <nl> - CrawlConfig config = new CrawlConfig (); <nl> + config . setFollowRedirects ( true ); <nl> - fetchResult . fetchContent ( page , pageFetcher . getConfig () . getMaxDownloadSize ()); <nl> + fetchResult . fetchContent ( page , config . getMaxDownloadSize ()); <nl> 
mmm BaseRefactorAction . java <nl> ppp BaseRefactorAction . java <nl> + import org . jetbrains . annotations . NotNull ; <nl> 
new file <nl> ppp ZippingReceivePort . java <nl> + package co . paralleluniverse . strands . channels ; <nl> + import co . paralleluniverse . fibers . SuspendExecution ; <nl> + import java . util . Arrays ; <nl> + import java . util . concurrent . TimeUnit ; <nl> + public abstract class ZippingReceivePort < Message > implements ReceivePort < Message > { <nl> 
mmm URLEncodingParamITest . java <nl> ppp URLEncodingParamITest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore (" Server is down atm ") <nl> 
mmm POSElement . java <nl> ppp POSElement . java <nl> 
new file <nl> ppp DialogsTest . java <nl> + package de . test . antennapod . ui ; <nl> + import android . content . Intent ; <nl> + import android . view . View ; <nl> + import androidx . test . espresso . Espresso ; <nl> + import androidx . test . espresso . contrib . RecyclerViewActions ; <nl> + import androidx . test . espresso . intent . rule . IntentsTestRule ; <nl> 
mmm NumberOfWaysToScorePoints . java <nl> ppp NumberOfWaysToScorePoints . java <nl> - public int version1 ( int score [], int total ){ <nl> - int T [] = new int [ total + 1 ]; <nl> - T [ 0 ] = 1 ; <nl> - for ( int i = 0 ; i < score . length ; i + + ){ <nl> - for ( int j = 1 ; j <= total ; j + + ){ <nl> - if ( score [ i ] <= j ){ <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 10 . 5 "; <nl> + public static final String VERSION = " 2 . 10 . 6 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 10 . 5 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 10 . 6 "; <nl> 
mmm ChatAtmosphereHandler . java <nl> ppp ChatAtmosphereHandler . java <nl> 
mmm MonitorFactory . java <nl> ppp MonitorFactory . java <nl> - import com . github . dreamhead . moco . runner . *; <nl> - import com . google . common . collect . Iterables ; <nl> + import com . github . dreamhead . moco . runner . FileRunner ; <nl> + import com . github . dreamhead . moco . runner . MonitorRunner ; <nl> 
deleted file <nl> mmm WeightedSurfacePattern . java <nl> - package edu . stanford . nlp . patterns . surface ; <nl> - import java . text . DecimalFormat ; <nl> - public class WeightedSurfacePattern extends SurfacePattern { <nl> - private static final long serialVersionUID = 1L ; <nl> - double [] prevContextWts ; <nl> 
mmm BootService . java <nl> ppp BootService . java <nl> + if (! CollectionHelper . hasStorageAccessPermission ( this )) { <nl> + return ; <nl> + } <nl> 
mmm ShardingSchema . java <nl> ppp ShardingSchema . java <nl> - public final class ShardingSchema { <nl> - private final String name ; <nl> - private final Map < String , DataSourceParameter > dataSources ; <nl> + public final class ShardingSchema extends LogicSchema { <nl> - private final MasterSlaveRule masterSlaveRule ; <nl> 
mmm RestSqlAction . java <nl> ppp RestSqlAction . java <nl> - final String sql = request . param (" sql "); <nl> -  <nl> - SearchDao searchDao = new SearchDao ( client ) ; <nl> + String sql = request . param (" sql "); <nl> + if ( sql == null ) { <nl> + sql = request . content () . toUtf8 (); <nl> + } <nl> + SearchDao searchDao = new SearchDao ( client ); <nl> 
mmm PatternKeywordMarkerFilter . java <nl> ppp PatternKeywordMarkerFilter . java <nl> - protected PatternKeywordMarkerFilter ( TokenStream in , Pattern pattern ) { <nl> + public PatternKeywordMarkerFilter ( TokenStream in , Pattern pattern ) { <nl> 
mmm AboutView . java <nl> ppp AboutView . java <nl> - GridPane . setColumnSpan ( hyperlinkWithIcon , 2 ); <nl> 
mmm InlineScriptExecutor . java <nl> ppp InlineScriptExecutor . java <nl> - System . out . println (" arg1 : Faunus graph configuration file ( optional ): defaults to bin / faunus . properties "); <nl> + System . out . println (" arg1 : Faunus graph configuration file ( optional ): defaults to bin / titan - hadoop . properties "); <nl> 
mmm CodeResultGenerator . java <nl> ppp CodeResultGenerator . java <nl> - import org . spockframework . util . GroovyRuntimeUtil ; <nl> + import groovy . lang . GroovyObject ; <nl> + import groovy . lang . MetaClass ; <nl> + import org . spockframework . runtime . GroovyRuntimeUtil ; <nl> + import org . spockframework . util . ObjectUtil ; <nl> 
mmm MainApplication . java <nl> ppp MainApplication . java <nl> - import com . brentvatne . react . ReactVideoPackage ; <nl> + import com . brentvatne . react . ReactVideoPackage ; <nl> - new ReactVideoPackage () <nl> - ); <nl> + new ReactVideoPackage () <nl> + ); <nl> 
new file <nl> ppp ASGCTBaseTest . java <nl> + package MyPackage ; <nl> + public class ASGCTBaseTest { <nl> + static { <nl> + try { <nl> + System . loadLibrary (" AsyncGetCallTraceTest "); <nl> + } catch ( UnsatisfiedLinkError ule ) { <nl> + System . err . println (" Could not load AsyncGetCallTrace library "); <nl> 
mmm ByteUtils . java <nl> ppp ByteUtils . java <nl> + * an ArrayOutOfBoundsException if invalid UTF8 is passed ) . Explicit checks for valid UTF8 are not performed . <nl> + * The char [] out should probably have enough room to hold the worst case of each byte becoming a Java char . <nl> + */ <nl> 
mmm ArnaviProtocolDecoderTest . java <nl> ppp ArnaviProtocolDecoderTest . java <nl> + verifyNull ( decoder , text ( <nl> + "$ AV , V3DI , 85164 , 20707 , - 1 , 19 , 0008C56A , 000879AC , 0C000002 , 863071013041618 , 89997077111301204297 ,* 0B ")); <nl> + verifyNull ( decoder , text ( <nl> + "$ AV , V6SD , 85164 , 20708 , - 1 , 3 , 6 , 37 , 33 ,* 52 ")); <nl> 
mmm TestHbaseClient . java <nl> ppp TestHbaseClient . java <nl> - conf . set (" hbase . zookeeper . quorum ", " yadesk00 . corp . ebay . com "); <nl> + conf . set (" hbase . zookeeper . quorum ", " hbase _ host "); <nl> 
mmm SpannedCacheStuffer . java <nl> ppp SpannedCacheStuffer . java <nl> - staticLayout = new StaticLayout ( danmaku . text , paint , ( int ) StaticLayout . getDesiredWidth ( danmaku . text , paint ), Layout . Alignment . ALIGN _ NORMAL , 1 . 0f , 0 . 0f , true ); <nl> + staticLayout = new StaticLayout ( danmaku . text , paint , ( int ) danmaku . paintWidth , Layout . Alignment . ALIGN _ NORMAL , 1 . 0f , 0 . 0f , true ); <nl> 
new file <nl> ppp TestOpenSSL . java <nl> + package org . openj9 . test . openssl ; <nl> + import org . testng . Assert ; <nl> + import org . testng . annotations . Test ; <nl> + @ Test ( groups ={ " level . sanity " }) <nl> + public class TestOpenSSL { <nl> + @ Test ( expectedExceptions = UnsatisfiedLinkError . class ) <nl> 
mmm ResourceNotFoundException . java <nl> ppp ResourceNotFoundException . java <nl> - public ResourceNotFoundException () { <nl> - super (); <nl> - } <nl> - public ResourceNotFoundException ( String message ) { <nl> - super ( message ); <nl> - } <nl> - public ResourceNotFoundException ( String message , Throwable cause ) { <nl> 
mmm CasConfigurationServerWebApplication . java <nl> ppp CasConfigurationServerWebApplication . java <nl> + import lombok . val ; <nl> + import org . springframework . beans . factory . annotation . Autowired ; <nl> + import org . springframework . boot . autoconfigure . web . ServerProperties ; <nl> + import org . springframework . context . annotation . Bean ; <nl> 
mmm ImageProcessorUnitTest . java <nl> ppp ImageProcessorUnitTest . java <nl> - import com . baeldung . dependencyinjection . imagefileeditors . GifFileEditor ; <nl> - import com . baeldung . dependencyinjection . imagefileeditors . JpgFileEditor ; <nl> - import com . baeldung . dependencyinjection . imagefileeditors . PngFileEditor ; <nl> 
new file <nl> ppp GPUImageFalseColorFilter . java <nl> + package jp . co . cyberagent . android . gpuimage ; <nl> + import android . opengl . GLES20 ; <nl> + public class GPUImageFalseColorFilter extends GPUImageFilter { <nl> + public static final String FALSECOLOR _ FRAGMENT _ SHADER = "" + <nl> +  <nl> + " precision lowp float ;\ n " + <nl> 
mmm TestConstants . java <nl> ppp TestConstants . java <nl> - " process - wrapper "); <nl> + " process - wrapper ", <nl> + " xcode - locator "); <nl> 
new file <nl> ppp SuspiciousConstantFieldNameTest . java <nl> + package test . net . sourceforge . pmd . rules ; <nl> + import net . sourceforge . pmd . PMD ; <nl> + import net . sourceforge . pmd . Rule ; <nl> + import net . sourceforge . pmd . RuleSetNotFoundException ; <nl> + import test . net . sourceforge . pmd . testframework . SimpleAggregatorTst ; <nl> 
mmm KeycloakRecorder . java <nl> ppp KeycloakRecorder . java <nl> + if ( config == null ) { <nl> + throw new IllegalStateException ( <nl> + " Keycloak configuration not found , please refer to the Quarkus documentation to learn how to configure your application "); <nl> + } <nl> 
mmm OrchestrationSpringShardingDataSource . java <nl> ppp OrchestrationSpringShardingDataSource . java <nl> + import io . shardingjdbc . core . api . config . MasterSlaveRuleConfiguration ; <nl> + import io . shardingjdbc . core . jdbc . core . datasource . MasterSlaveDataSource ; <nl> + import java . util . HashMap ; <nl> 

mmm SystemPropertiesTest . java <nl> ppp SystemPropertiesTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore <nl> 
mmm FileConfig . java <nl> ppp FileConfig . java <nl> 
new file <nl> ppp H2DataSourcePropertyParser . java <nl> + package io . shardingsphere . core . property . dialect ; <nl> + import io . shardingsphere . core . constant . DatabaseType ; <nl> + import io . shardingsphere . core . exception . ShardingException ; <nl> + import io . shardingsphere . core . property . DataSourceProperty ; <nl> 
new file <nl> ppp ThreadPoolTaskExecutorUnitTest . java <nl> + package com . baeldung . threading ; <nl> + import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . ThreadLocalRandom ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import org . springframework . scheduling . concurrent . ThreadPoolTaskExecutor ; <nl> 
mmm RxSupport . java <nl> ppp RxSupport . java <nl> - } catch ( Exception e ) { <nl> - throw new RuntimeException ( e ); <nl> 
mmm OkHttpClientProvider . java <nl> ppp OkHttpClientProvider . java <nl> + @ Inject <nl> - @ Inject <nl> 
mmm Version . java <nl> ppp Version . java <nl> - public static final String VERSION = " 1 . 0 . 4 - SNAPSHOT "; <nl> + public static final String VERSION = " 1 . 1 . 0 - SNAPSHOT "; <nl> 
mmm HoverBroadcastExample . java <nl> ppp HoverBroadcastExample . java <nl> - import tech . tablesaw . plotly . components . Figure ; <nl> + import tech . tablesaw . plotly . components . Figure . FigureBuilder ; <nl> - Plot . show ( new Figure ( layout , heh , trace0 , trace1 )); <nl> + Plot . show ( <nl> 
mmm TCPUtils . java <nl> ppp TCPUtils . java <nl> - import java . text . SimpleDateFormat ; <nl> - import java . time . format . DateTimeFormatter ; <nl> - import org . apache . commons . lang3 . StringUtils ; <nl> + import org . apache . commons . lang3 . StringUtils ; <nl> + import org . apache . commons . lang3 . time . DateFormatUtils ; <nl> 
mmm TitanGraphConfiguration . java <nl> ppp TitanGraphConfiguration . java <nl> + import com . tinkerpop . rexster . config . GraphConfigurationContext ; <nl> + import java . util . Properties ; <nl> 
mmm Toast . java <nl> ppp Toast . java <nl> - String durationType = call . getString (" durationType ", " short "); <nl> + String durationType = call . getString (" duration ", " short "); <nl> 
mmm UndocumentedApi . java <nl> ppp UndocumentedApi . java <nl> + this . key = key ; <nl> + } <nl> + } <nl> + public void run2 () { <nl> + } <nl> 
mmm PowerConnectionReceiver . java <nl> ppp PowerConnectionReceiver . java <nl> - MonitorService . getInstance () . alert ( EventTrigger . POWER , context . getString ( R . string . status _ charging ) + isCharging + " USB :" + usbCharge + " AC :" + acCharge ); <nl> + if ( MonitorService . getInstance () != null ) { <nl> 
new file <nl> ppp RequiredArrayIT . java <nl> + package org . jsonschema2pojo . integration ; <nl> + import com . thoughtworks . qdox . JavaDocBuilder ; <nl> + import com . thoughtworks . qdox . model . JavaClass ; <nl> + import com . thoughtworks . qdox . model . JavaField ; <nl> + import com . thoughtworks . qdox . model . JavaMethod ; <nl> 
mmm NutSessionListener . java <nl> ppp NutSessionListener . java <nl> -  <nl> - private static final Log log = Logs . get (); <nl> -  <nl> - public static boolean isSessionScopeEnable = false ; <nl> - public NutSessionListener () { <nl> - isSessionScopeEnable = true ; <nl> - log . info (" NutIoc SessionScope is Enable . "); <nl> 
mmm ExpectNewDemoDefect . java <nl> ppp ExpectNewDemoDefect . java <nl> - import java . io . DataInputStream ; <nl> 
new file <nl> ppp CamelRestletJacksonTest . java <nl> + package org . apache . camel . itest . karaf ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . ops4j . pax . exam . junit . PaxExam ; <nl> + @ RunWith ( PaxExam . class ) <nl> + public class CamelRestletJacksonTest extends BaseKarafTest { <nl> 
mmm TernarySearch . java <nl> ppp TernarySearch . java <nl> - System . out . println (" Enter the elements of the array "); <nl> + System . out . println (" Enter the elements of the Sorted array "); <nl> - System . out . println (" The element is present at the position " + ans ); <nl> + System . out . println (" The element is present at the position " + ( ans + 1 )); <nl> 
mmm ActivityPlugin . java <nl> ppp ActivityPlugin . java <nl> - import org . apache . cordova . api . Plugin ; <nl> + import org . apache . cordova . api . CordovaPlugin ; <nl> - public class ActivityPlugin extends Plugin { <nl> + public class ActivityPlugin extends CordovaPlugin { <nl> 
mmm FlinkIntegrationTest . java <nl> ppp FlinkIntegrationTest . java <nl> - interpreterSettingManager . setInterpreterBinding (" user1 ", " note1 ", interpreterSettingManager . getInterpreterSettingIds ()); <nl> - Interpreter flinkInterpreter = interpreterFactory . getInterpreter (" user1 ", " note1 ", " flink "); <nl> 
mmm SQLServerInsertParser . java <nl> ppp SQLServerInsertParser . java <nl> - public SQLServerInsertParser ( final ShardingRule shardingRule , final LexerEngine lexerEngine , final ShardingTableMetaData shardingTableMetaData ) { <nl> - super ( shardingRule , shardingTableMetaData , lexerEngine , new SQLServerInsertClauseParserFacade ( shardingRule , lexerEngine )); <nl> 
mmm _ 390 . java <nl> ppp _ 390 . java <nl> - public class EliminationGame { <nl> + 6 <nl> + */ <nl> + public class _ 390 { <nl> 
mmm NegraPennTreeReaderFactory . java <nl> ppp NegraPennTreeReaderFactory . java <nl> + import edu . stanford . nlp . io . IOUtils ; <nl> + public NegraPennTreeReaderFactory () { <nl> + this ( 2 , false , false , new NegraPennLanguagePack ()); <nl> + } <nl> + @ Override <nl> - System . out . printf (" Usage : java % s tree _ file \ n ", NegraPennTreeReaderFactory . class . getName ()); <nl> 
mmm TestIssue1341 . java <nl> ppp TestIssue1341 . java <nl> - book . setBookId ( 2 ); <nl> + book . setBookId ( 0 ); <nl> + @ GET <nl> + @ Path ("/ 2 /{ id }") <nl> + @ Produces ({" application / javascript ", " application / json "}) <nl> + public Book getBookById2 (@ PathParam (" id ") Long id ) { <nl> + Book book = new Book (); <nl> 
mmm CoreJavaCollectionsUnitTest . java <nl> ppp CoreJavaCollectionsUnitTest . java <nl> - final ImmutableList < Object > unmodifiableList = ImmutableList . builder () . addAll ( list ) . build (); <nl> + final ImmutableList < String > unmodifiableList = ImmutableList . < String > builder () . addAll ( list ) . build (); <nl> 
mmm TimeoutRetryTest . java <nl> ppp TimeoutRetryTest . java <nl> - public class TimeoutRetryTest { <nl> + public final class TimeoutRetryTest { <nl> 
new file <nl> ppp Bug _ for _ issue _ 545 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + public class Bug _ for _ issue _ 545 extends TestCase { <nl> + public void test _ for _ issue () throws Exception { <nl> 
mmm ShardingTokenGenerateEngine . java <nl> ppp ShardingTokenGenerateEngine . java <nl> - import org . apache . shardingsphere . core . rewrite . token . generator . RemoveTokenGenerator ; <nl> - import org . apache . shardingsphere . core . rewrite . token . generator . TableTokenGenerator ; <nl> - SQL _ TOKEN _ GENERATORS . add ( new TableTokenGenerator ()); <nl> 
mmm CustomTypefaceSpan . java <nl> ppp CustomTypefaceSpan . java <nl> - int oldStyle ; <nl> - Typeface old = paint . getTypeface (); <nl> - oldStyle = old == null ? 0 : old . getStyle (); <nl> - int fake = oldStyle & ~ tf . getStyle (); <nl> - if (( fake & Typeface . BOLD ) != 0 ) { <nl> - paint . setFakeBoldText ( true ); <nl> 
mmm ShardingRuleConfiguration . java <nl> ppp ShardingRuleConfiguration . java <nl> - public final class ShardingRuleConfiguration { <nl> + public final class ShardingRuleConfiguration implements RuleConfiguration { <nl> 
mmm TaskPropertiesResource . java <nl> ppp TaskPropertiesResource . java <nl> - propertyJSON . put (" value ", property . getValue ()); <nl> + if ( property . getValue () != null ) { <nl> + propertyJSON . put (" value ", property . getValue ()); <nl> + } else { <nl> + propertyJSON . put (" value ", " null "); <nl> 
mmm Struts2GuicePluginModule . java <nl> ppp Struts2GuicePluginModule . java <nl> - @ Override <nl> - protected void configure () { <nl> - requestStaticInjection ( Struts2Factory . class ); <nl> - } <nl> + @ Override <nl> + protected void configure () { <nl> + requestStaticInjection ( Struts2Factory . class ); <nl> 
mmm MachineName . java <nl> ppp MachineName . java <nl> - private static final int PARAMETER _ COUNT = 1 ; <nl> - String varName = (( CompoundVariable ) values [ values . length - 1 ]) . execute (); <nl> - vars . put ( varName , machineName ); <nl> + String varName = (( CompoundVariable ) values [ 0 ]) . execute (); <nl> 
mmm SelectItemExtractor . java <nl> ppp SelectItemExtractor . java <nl> - result = subqueryExtractor . extract ( expressionNode , placeholderIndexes ); <nl> + result = expressionSelectItemExtractor . extract ( expressionNode , placeholderIndexes ); <nl> - return expressionSelectItemExtractor . extract ( expressionNode , placeholderIndexes ); <nl> 
mmm AmazonLambdaContextTest . java <nl> ppp AmazonLambdaContextTest . java <nl> - import static org . junit . Assert . *; <nl> + import static org . junit . jupiter . api . Assertions . assertTrue ; <nl> - import org . junit . Test ; <nl> + import org . junit . jupiter . api . Test ; <nl> - assertTrue (" The remaining time in millis should not be negative ", amazonLambdaContext . getRemainingTimeInMillis () > 0 ); <nl> 
mmm AtmosphereInitializer . java <nl> ppp AtmosphereInitializer . java <nl> + import org . atmosphere . util . Utils ; <nl> - if ( framework . getAtmosphereConfig () . isSupportSession () & & r . getHeader (" Upgrade ") != null ) { <nl> + if ( framework . getAtmosphereConfig () . isSupportSession () & & Utils . webSocketEnabled ( r )) { <nl> 
deleted file <nl> mmm YamlEncryptRuleConfiguration . java <nl> - package org . apache . shardingsphere . core . yaml . config . encrypt ; <nl> - import lombok . Getter ; <nl> - import lombok . Setter ; <nl> - import org . apache . shardingsphere . core . yaml . config . YamlConfiguration ; <nl> - import java . util . LinkedHashMap ; <nl> 
mmm AboutDialog . java <nl> ppp AboutDialog . java <nl> - getActivity () . getResources () . getText ( R . string . credits _ 2 ), <nl> + " ", <nl> + getActivity () . getResources () . getText ( R . string . karim _ abou _ zeid ), <nl> + " . \ n ", <nl> + getActivity () . getResources () . getText ( R . string . karim _ abou _ zeid _ links ), <nl> 
mmm TripletMap . java <nl> ppp TripletMap . java <nl> - final Long2ObjectHashMap < Long2ObjectHashMap < Long2ObjectHashMap < V >>> map = <nl> - new Long2ObjectHashMap <>(); <nl> + private final Long2ObjectHashMap < Long2ObjectHashMap < Long2ObjectHashMap < V >>> map = new Long2ObjectHashMap <>(); <nl> 
mmm VaultSettingsJsonAdapterTest . java <nl> ppp VaultSettingsJsonAdapterTest . java <nl> - String json = "{\" id \": \" foo \", \" path \": \"/ foo / bar \", \" mountName \": \" test \", \" winDriveLetter \": \" X \", \" shouldBeIgnored \": true , \" individualMountPath \": \"/ home / test / crypto \", \" mountFlags \":\" - - foo - - bar \"}"; <nl> 
deleted file <nl> mmm SQLSubQuery . java <nl> - package com . mysema . query . jpa ; <nl> - import com . mysema . query . QueryMetadata ; <nl> - import com . mysema . query . sql . Configuration ; <nl> - public class SQLSubQuery extends AbstractSQLSubQuery < SQLSubQuery > { <nl> - public SQLSubQuery () { <nl> 
new file <nl> ppp CamelLoadRoutesFromXMLTest . java <nl> + package org . apache . camel . spring ; <nl> + import java . io . InputStream ; <nl> + import org . apache . camel . ProducerTemplate ; <nl> + import org . apache . camel . component . mock . MockEndpoint ; <nl> + import org . apache . camel . model . RoutesDefinition ; <nl> 
deleted file <nl> mmm TransitionMode . java <nl> - package com . google . devtools . build . lib . analysis ; <nl> - public enum TransitionMode { <nl> - TARGET , <nl> - HOST , <nl> - DATA , <nl> - SPLIT , <nl> - DONT _ CHECK <nl> - } <nl> 
mmm OnlinePredictExample . java <nl> ppp OnlinePredictExample . java <nl> - FPGBDTPredictor predictor = new FPGBDTPredictor (); <nl> + GBDTPredictor predictor = new GBDTPredictor (); <nl> 
new file <nl> ppp ValidatorTest . java <nl> + package org . springframework . samples . petclinic . model ; <nl> + import java . util . Set ; <nl> + import javax . validation . ConstraintViolation ; <nl> + import javax . validation . Validator ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> 
mmm PostgreSQLDALVisitor . java <nl> ppp PostgreSQLDALVisitor . java <nl> - variable . setStartIndex ( ctx . identifier ( 0 ) . start . getStartIndex ()); <nl> - variable . setStopIndex ( ctx . identifier ( 0 ) . stop . getStopIndex ()); <nl> - variable . setVariable ( ctx . identifier ( 0 ) . getText ()); <nl> 
mmm ChainedUpdateProcessorFactory . java <nl> ppp ChainedUpdateProcessorFactory . java <nl> + public UpdateRequestProcessorFactory [] getFactories () { <nl> + return factory ; <nl> + } <nl> 
mmm TestScriptEval . java <nl> ppp TestScriptEval . java <nl> - payload . clear (); <nl> - assertTrue ( ScriptEvaluator . evalBool ( script3 , payload )); <nl> 
mmm ReminderController . java <nl> ppp ReminderController . java <nl> + import static org . isoron . uhabits . utils . DateUtils . *; <nl> - long now = DateUtils . getLocalTime (); <nl> + long now = applyTimezone ( getLocalTime ()); <nl> 
mmm ShadowValueAnimator . java <nl> ppp ShadowValueAnimator . java <nl> - import org . robolectric . annotation . RealObject ; <nl> + ReflectionHelpers . setStaticField ( ValueAnimator . class , " sAnimationHandler ", new ThreadLocal <>()); <nl> 
new file <nl> ppp JMXExporterTest . java <nl> + package com . alibaba . druid . bvt . jmx ; <nl> + import java . lang . management . ManagementFactory ; <nl> + import javax . management . ObjectName ; <nl> + import junit . framework . Assert ; <nl> + import junit . framework . TestCase ; <nl> + import org . springframework . context . support . ClassPathXmlApplicationContext ; <nl> 
mmm HelloWebServer . java <nl> ppp HelloWebServer . java <nl> - import java . net . InetAddress ; <nl> - import java . net . InetSocketAddress ; <nl> - import java . util . HashMap ; <nl> + import java . util . Collections ; <nl> - import io . undertow . UndertowOptions ; <nl> - import io . undertow . io . IoCallback ; <nl> 
mmm ApiV2 . java <nl> ppp ApiV2 . java <nl> - } else if ( path . equals (" log ")) { <nl> - String message = parameters . get (" message "); <nl> - if ( message . length () > 250 ) { <nl> - message = message . substring ( 0 , 250 ) + " . . . "; <nl> - } <nl> - ServerTools . print (" Log message from client : " + message + " - User - Agent : " + httpExchange . getRequestHeaders () . get (" User - Agent ")); <nl> 
mmm ExternalAuthenticationMechanism . java <nl> ppp ExternalAuthenticationMechanism . java <nl> - return null ; <nl> + return AuthenticationMechanismOutcome . AUTHENTICATED ; <nl> 
new file <nl> ppp MockMakerTest . java <nl> + import static org . mockito . Mockito . when ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . junit . runners . JUnit4 ; <nl> + import org . mockito . Mockito ; <nl> + @ RunWith ( JUnit4 . class ) <nl> 
mmm FileRunner . java <nl> ppp FileRunner . java <nl> - protected FileRunner () { <nl> + private FileRunner () { <nl> 
new file <nl> ppp FlippinganImage . java <nl> + package problems . easy ; <nl> + public class FlippinganImage { <nl> + public int [][] flipAndInvertImage ( int [][] a ) { <nl> + if ( a == null || a . length == 0 ) <nl> + return a ; <nl> + for ( int i = 0 ; i < a . length ; i + + ) { <nl> + rinvert ( a , i ); <nl> 
mmm AllocatorFactoryTest . java <nl> ppp AllocatorFactoryTest . java <nl> + import static org . junit . Assert . assertTrue ; <nl> - import org . junit . Assert ; <nl> - Assert . assertTrue ( allocator instanceof GreedyAllocator ); <nl> + assertTrue ( allocator instanceof GreedyAllocator ); <nl> 
new file <nl> ppp TestConfig . java <nl> + package com . baeldung . htmlunit ; <nl> + import org . springframework . context . annotation . Bean ; <nl> + import org . springframework . context . annotation . ComponentScan ; <nl> + import org . springframework . context . annotation . Configuration ; <nl> + import org . springframework . web . servlet . ViewResolver ; <nl> 
mmm FileLikePart . java <nl> ppp FileLikePart . java <nl> - private long stalledTime = - 1L ; <nl> 
mmm AttackIndicatorOverlay . java <nl> ppp AttackIndicatorOverlay . java <nl> + import java . awt . Color ; <nl> + panelComponent . setTitleColor ( plugin . isWarnedSkillSelected () ? Color . RED : Color . WHITE ); <nl> 
mmm AutomaticActivityInstanceHandler . java <nl> ppp AutomaticActivityInstanceHandler . java <nl> - @ Override <nl> 
new file <nl> ppp MultipleDDLStatementsTest . java <nl> + package net . sourceforge . pmd . lang . plsql . ast ; <nl> + import java . nio . charset . StandardCharsets ; <nl> + import java . util . List ; <nl> + import org . apache . commons . io . IOUtils ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> 
mmm EnhancedClass . java <nl> ppp EnhancedClass . java <nl> - import com . googlecode . androidannotations . annotations . sharedpreferences . Pref ; <nl> - import com . googlecode . androidannotations . test15 . prefs . SomePrefs _ ; <nl> 
mmm NegativeNumberOptions . java <nl> ppp NegativeNumberOptions . java <nl> 
mmm TestVerifySubSet . java <nl> ppp TestVerifySubSet . java <nl> - output . shouldContain (" MetaspaceAux "); <nl> + output . shouldContain (" MetaspaceUtils "); <nl> - output . shouldNotContain (" MetaspaceAux "); <nl> + output . shouldNotContain (" MetaspaceUtils "); <nl> 
mmm GidGenerator . java <nl> ppp GidGenerator . java <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + private final Map < String , Integer > pbxClassNameCounterMap ; <nl> + pbxClassNameCounterMap = new HashMap <>(); <nl> - int counter = 0 ; <nl> + int counter = hash == 0 ? pbxClassNameCounterMap . getOrDefault ( pbxClassName , 0 ) : 0 ; <nl> 
mmm DocumentReaderAndWriter . java <nl> ppp DocumentReaderAndWriter . java <nl> 
mmm TitanGraphConfiguration . java <nl> ppp TitanGraphConfiguration . java <nl> + import com . tinkerpop . rexster . config . GraphConfigurationContext ; <nl> + import java . util . Properties ; <nl> 
mmm LogUtil . java <nl> ppp LogUtil . java <nl> - import org . json . simple . JSONObject ; <nl> + import com . google . gson . Gson ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> - static String createLogPatternLayoutJsonString ( Props props , String jobId ) { <nl> - final JSONObject layout = new JSONObject (); <nl> 
mmm ColumnEvaluator . java <nl> ppp ColumnEvaluator . java <nl> - System . out . println (" # # # # # # Field :" + fieldName ); <nl> 
new file <nl> ppp DruidStatServiceTest . java <nl> + package com . alibaba . druid . bvt . stat ; <nl> + import java . sql . Connection ; <nl> + import java . sql . PreparedStatement ; <nl> + import java . sql . ResultSet ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import junit . framework . Assert ; <nl> 
mmm _ 104 . java <nl> ppp _ 104 . java <nl> - if ( root == null ) return 0 ; <nl> - int leftDepth = maxDepth ( root . left ) + 1 ; <nl> - int rightDepth = maxDepth ( root . right ) + 1 ; <nl> - return Math . max ( 1 , Math . max ( leftDepth , rightDepth )); <nl> - } <nl> - public int maxDepth _ shorter _ version ( TreeNode root ) { <nl> 
new file <nl> ppp TestMarkStackSizes . java <nl> + package gc . g1 ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> + import jdk . test . lib . process . OutputAnalyzer ; <nl> + import jdk . test . lib . process . ProcessTools ; <nl> + public class TestMarkStackSizes { <nl> 
mmm Restore . java <nl> ppp Restore . java <nl> - import java . util . Date ; <nl> - Date now = new Date (); <nl> - if ( now . after ( new Date ( args . optLong (" date ") * 1000 ))) { <nl> - args . put (" date ", ( now . getTime () / 1000 )); <nl> - } <nl> 
mmm FilterBasedLdapUserSearchTests . java <nl> ppp FilterBasedLdapUserSearchTests . java <nl> - public void testBasicSearch () throws Exception { <nl> + public void testBasicSearch () { <nl> - LdapUserDetails bob = locator . searchForUser (" bob "); <nl> + locator . setDerefLinkFlag ( false ); <nl> + LdapUserDetails bob = locator . searchForUser (" bob "); <nl> 
mmm ServletMetricsHandlerTestCase . java <nl> ppp ServletMetricsHandlerTestCase . java <nl> + import io . undertow . util . CompletionLatchHandler ; <nl> + private static CompletionLatchHandler completionLatchHandler ; <nl> - DefaultServer . setRootHandler ( root ); <nl> + DefaultServer . setRootHandler ( completionLatchHandler = new CompletionLatchHandler ( root )); <nl> 
mmm VideoData . java <nl> ppp VideoData . java <nl> + private String name ; <nl> + public String getName () { <nl> + return name ; <nl> + } <nl> + public void setName ( String name ) { <nl> + this . name = name ; <nl> + } <nl> 
mmm PersistenceManagerTest . java <nl> ppp PersistenceManagerTest . java <nl> - expectNew ( File . class ) . andReturn ( mFileMock ); <nl> + expectNew ( File . class , path ) . andReturn ( mFileMock ); <nl> 
mmm IndexPlaceholder . java <nl> ppp IndexPlaceholder . java <nl> + import com . google . common . base . Strings ; <nl> + import org . apache . shardingsphere . core . route . type . TableUnit ; <nl> + import java . util . Map ; <nl> 
mmm Sys . java <nl> ppp Sys . java <nl> - private static final String JNI _ LIBRARY _ NAME = " lwjgl "; <nl> + private static final String JNI _ LIBRARY _ NAME = System . getProperty (" org . lwjgl . libname ", " lwjgl "); <nl> 
mmm TextEnterer . java <nl> ppp TextEnterer . java <nl> - } catch ( Throwable e ){ <nl> + } catch ( SecurityException e ){ <nl> - } catch ( Throwable e ){ <nl> + } catch ( SecurityException e ){ <nl> - } catch ( Throwable e ){ <nl> + } catch ( SecurityException e ){ <nl> 
mmm IpRetriever . java <nl> ppp IpRetriever . java <nl> 
mmm CertificateAuthority . java <nl> ppp CertificateAuthority . java <nl> - PrivateKey signingKey = key ; <nl> - X509Certificate signed = createSignedCertificate ( certificate , signingChain [ 0 ], signingKey ); <nl> + X509Certificate signed = sign ( certificate ); <nl> - private static X509Certificate createSignedCertificate ( X509Certificate certificate , X509Certificate issuerCertificate , PrivateKey issuerPrivateKey ) { <nl> 
mmm StatFilterContext . java <nl> ppp StatFilterContext . java <nl> + for ( int i = 0 ; i < listeners . size (); + + i ) { <nl> + StatFilterContextListener listener = listeners . get ( i ); <nl> + listener . executeBefore ( sql , inTransaction ); <nl> + } <nl> + for ( int i = 0 ; i < listeners . size (); + + i ) { <nl> 
mmm OrchestrationMasterSlaveDataSource . java <nl> ppp OrchestrationMasterSlaveDataSource . java <nl> 
mmm ImplementationMethodDescriptor . java <nl> ppp ImplementationMethodDescriptor . java <nl> - abstract Builder passedParameters ( Iterable < Parameter > passedParameters ); <nl> - abstract Builder isVarArgs ( boolean isVarargs ); <nl> - abstract ImplementationMethodDescriptor build (); <nl> - Builder publicMethod () { <nl> 
mmm ClangClCompiler . java <nl> ppp ClangClCompiler . java <nl> + import com . facebook . buck . util . ProcessExecutor ; <nl> + import java . util . Optional ; <nl> + @ Override <nl> + public Optional < String > getStderr ( ProcessExecutor . Result result ) { <nl> + return result . getStderr (); <nl> + } <nl> 
mmm SysShardMinLuceneVersionTest . java <nl> ppp SysShardMinLuceneVersionTest . java <nl> - execute (" select count (*), min _ lucene _ version from sys . shards " + <nl> - " where table _ name IN " + <nl> - "(' test _ upgrade _ required ', ' test _ upgrade _ required _ parted ', ' test _ blob _ upgrade _ required ') " + <nl> 
mmm DanmakuUtils . java <nl> ppp DanmakuUtils . java <nl> - if ( d1 . isTimeOut ()) { <nl> + if ( d1 . isTimeOut () || d2 . isTimeOut ()) { <nl> 
mmm NanoUtils . java <nl> ppp NanoUtils . java <nl> - import static com . google . common . base . Preconditions . checkNotNull ; <nl> - import java . io . ByteArrayOutputStream ; <nl> + import io . grpc . internal . IoUtils ; <nl> - import java . io . OutputStream ; <nl> 

mmm AllInternalTests . java <nl> ppp AllInternalTests . java <nl> + import io . shardingsphere . orchestration . internal . rule . AllRuleTests ; <nl> + import io . shardingsphere . orchestration . internal . state . AllStateTests ; <nl> - AllConfigTests . class <nl> + AllConfigTests . class , <nl> + AllStateTests . class , <nl> 
deleted file <nl> mmm SpringInjector . java <nl> - package org . atmosphere . spring ; <nl> - import org . atmosphere . di . Injector ; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - import org . springframework . web . context . support . SpringBeanAutowiringSupport ; <nl> 
mmm RowCountException . java <nl> ppp RowCountException . java <nl> - this . actual = expected ; <nl> + this . actual = actual ; <nl> 
new file <nl> ppp Issue1558 . java <nl> + package com . alibaba . json . bvt . issue _ 1500 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . annotation . JSONType ; <nl> + import junit . framework . TestCase ; <nl> + import java . io . Serializable ; <nl> + public class Issue1558 extends TestCase { <nl> 
mmm MustacheViewRenderer . java <nl> ppp MustacheViewRenderer . java <nl> + import java . util . Optional ; <nl> + private boolean useCache ; <nl> - return new DefaultMustacheFactory ( new PerClassMustacheResolver ( key )); <nl> + return createNewMustacheFactory ( key ); <nl> - final Mustache template = factories . get ( view . getClass ()) <nl> 
mmm BeforeTestExecutionCallback . java <nl> ppp BeforeTestExecutionCallback . java <nl> 
new file <nl> ppp GoSuppressionFixTest . java <nl> + package com . goide . inspections . suppression ; <nl> + import com . goide . GoCodeInsightFixtureTestCase ; <nl> + import com . goide . inspections . GoUnresolvedReferenceInspection ; <nl> + public class GoSuppressionFixTest extends GoCodeInsightFixtureTestCase { <nl> 
mmm CreateIssueModel . java <nl> ppp CreateIssueModel . java <nl> - private long milestone ; <nl> + private Long milestone ; <nl> 
mmm PositionResource . java <nl> ppp PositionResource . java <nl> - Context . getPermissionsManager () . checkDevice ( getUserId (), deviceId ); <nl> - return Context . getDataManager () . getPositions ( <nl> - deviceId , JsonConverter . parseDate ( from ), JsonConverter . parseDate ( to )); <nl> + if ( deviceId == 0 ) { <nl> 
mmm Logger . java <nl> ppp Logger . java <nl> - info ( message , null , args ); <nl> - } <nl> - public void info ( String message , Element element , Object . . . args ) { <nl> - log ( Level . INFO , message , element , null , null , args ); <nl> + log ( Level . INFO , message , null , null , null , args ); <nl> 
mmm MTRootPaneUI . java <nl> ppp MTRootPaneUI . java <nl> 
mmm OrderByPlaceholder . java <nl> ppp OrderByPlaceholder . java <nl> - import lombok . RequiredArgsConstructor ; <nl> + import java . util . LinkedList ; <nl> - @ RequiredArgsConstructor <nl> - private final List < String > columnLabels ; <nl> + private final List < String > columnLabels = new LinkedList <>(); <nl> 
mmm Http2Server . java <nl> ppp Http2Server . java <nl> + import java . io . FileInputStream ; <nl> - final InputStream stream = Http2Server . class . getResourceAsStream ( name ); <nl> + String storeLoc = System . getProperty ( name ); <nl> + final InputStream stream ; <nl> + if ( storeLoc == null ) { <nl> 
mmm Product . java <nl> ppp Product . java <nl> - @ Indexed ( name =" id ", type = " string ") <nl> + @ Indexed ( name = " id ", type = " string ") <nl> - @ Indexed ( name =" name ", type = " string ") <nl> + @ Indexed ( name = " name ", type = " string ") <nl> - @ Indexed ( name =" category ", type = " string ") <nl> 
mmm Example . java <nl> ppp Example . java <nl> - package com . mangofactory . swagger . readers . operation ; <nl> + package com . mangofactory . swagger . dummy . models ; <nl> - import com . wordnik . swagger . annotations . ApiParam ; <nl> + import com . wordnik . swagger . annotations . ApiParam ; <nl> 
mmm CustomAdapt . java <nl> ppp CustomAdapt . java <nl> + import android . app . Activity ; <nl> 
new file <nl> ppp StackTracingBenchmark . java <nl> + package com . linecorp . armeria . common . thrift . text ; <nl> + import java . security . Permission ; <nl> + import java . util . function . Supplier ; <nl> + import org . openjdk . jmh . annotations . Benchmark ; <nl> + import org . openjdk . jmh . annotations . Scope ; <nl> 
mmm OrchestrationInstance . java <nl> ppp OrchestrationInstance . java <nl> - import org . apache . shardingsphere . orchestration . core . registrycenter . util . IpUtils ; <nl> + import org . apache . shardingsphere . orchestration . core . registrycenter . util . IpUtils ; <nl> 
mmm AboutActivity . java <nl> ppp AboutActivity . java <nl> - import de . danoeh . antennapod . core . preferences . UserPreferences ; <nl> 
mmm LombokInternalAliasing . java <nl> ppp LombokInternalAliasing . java <nl> - for ( Map . Entry < String , String > e : ALIASES . entrySet ()) { <nl> - if ( in . equals ( e . getKey ())) return e . getValue (); <nl> - } <nl> - return in ; <nl> + String ret = ALIASES . get ( in ); <nl> + return ret == null ? in : ret ; <nl> 
mmm SourceTypeHandler . java <nl> ppp SourceTypeHandler . java <nl> 
deleted file <nl> mmm Keys . java <nl> - package uk . co . real _ logic . aeron . driver ; <nl> - public class Keys <nl> - { <nl> - public final String endpointKey ; <nl> - public final String interfaceKey ; <nl> - public Keys ( final String endpointKey , final String interfaceKey ) <nl> - { <nl> - this . endpointKey = endpointKey ; <nl> 
mmm AgentResource . java <nl> ppp AgentResource . java <nl> - import org . graylog2 . rest . models . agent . AgentNodeDetails ; <nl> + import org . graylog2 . agents . Agent ; <nl> + import org . graylog2 . agents . AgentService ; <nl> + import org . graylog2 . agents . Agents ; <nl> + import org . graylog2 . database . NotFoundException ; <nl> 
mmm TransformationFactory . java <nl> ppp TransformationFactory . java <nl> + import org . apache . tomcat . util . res . StringManager ; <nl> + private static final StringManager sm = StringManager . getManager ( Constants . PACKAGE _ NAME ); <nl> - throw new IllegalArgumentException (" Unsupported extension "); <nl> 
deleted file <nl> mmm BuildConfig . java <nl> - package org . schabi . newpipe ; <nl> - public final class BuildConfig { <nl> - public final static boolean DEBUG = Boolean . parseBoolean ( null ); <nl> - } <nl> 
mmm FindElementsOccurringNByKTimesTetris . java <nl> ppp FindElementsOccurringNByKTimesTetris . java <nl> 
mmm ComponentScanAspectJFilterAppIntegrationTest . java <nl> ppp ComponentScanAspectJFilterAppIntegrationTest . java <nl> - . filter ( bean - > ! bean . contains (" org . springframework ") & & ! bean . contains (" componentScanCustomFilterApp ")) <nl> + . filter ( bean - > ! bean . contains (" org . springframework ") & & ! bean . contains (" componentScanAspectJFilterApp ")) <nl> 
mmm UserManagerPatch . java <nl> ppp UserManagerPatch . java <nl> - import com . lody . virtual . client . hook . base . PatchObject ; <nl> - import com . lody . virtual . client . hook . base . ReplaceCallingPkgHook ; <nl> - import com . lody . virtual . client . hook . base . ResultStaticHook ; <nl> - import com . lody . virtual . client . hook . binders . HookUserBinder ; <nl> 
mmm CharSequence . java <nl> ppp CharSequence . java <nl> 
mmm GuiceContextListener . java <nl> ppp GuiceContextListener . java <nl> - import com . sun . jersey . guice . spi . container . servlet . GuiceContainer ; <nl> + import org . atmosphere . guice . GuiceContainer ; <nl> 
new file <nl> ppp CientificNotation . java <nl> + package com . github . pedrovgs . problem30 ; <nl> + public class CientificNotation { <nl> + } <nl> 
mmm MVPlainTempResult . java <nl> ppp MVPlainTempResult . java <nl> + private final ValueDataType valueType ; <nl> + private MVMap < ValueArray , Boolean > index ; <nl> + this . valueType = null ; <nl> - ValueDataType valueType = new ValueDataType ( db . getCompareMode (), db , new int [ expressions . length ]); <nl> 
new file <nl> ppp _ 624 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + public class _ 624 { <nl> + public int maxDistance ( int [][] arrays ) { <nl> + List < Integer > max = new ArrayList <>(); <nl> 

mmm WsIOException . java <nl> ppp WsIOException . java <nl> 
mmm SpanStorageClient . java <nl> ppp SpanStorageClient . java <nl> - Thread . currentThread () . sleep ( 1 ); <nl> + Thread . sleep ( 1 ); <nl> - Thread . currentThread () . sleep ( 1 ); <nl> + Thread . sleep ( 1 ); <nl> 
new file <nl> ppp DefaultSerial . java <nl> + package com . baeldung . deserialization ; <nl> + import java . io . IOException ; <nl> + import java . io . Serializable ; <nl> + public class DefaultSerial implements Serializable { <nl> + private String name ; <nl> + public static void main ( String [] args ) throws IOException , ClassNotFoundException { <nl> 
new file <nl> ppp ParamAsMeasureCount . java <nl> + package org . apache . kylin . measure ; <nl> + public interface ParamAsMeasureCount { <nl> + int getParamAsMeasureCount (); <nl> + } <nl> 
mmm EncryptSQLRewriter . java <nl> ppp EncryptSQLRewriter . java <nl> - import org . apache . shardingsphere . core . optimize . statement . InsertOptimizedStatement ; <nl> - import org . apache . shardingsphere . core . optimize . statement . OptimizedStatement ; <nl> - import org . apache . shardingsphere . core . optimize . statement . sharding . dml . insert . InsertOptimizeResultUnit ; <nl> 
new file <nl> ppp Pizza . java <nl> + package com . baeldung . staticclass ; <nl> + public class Pizza { <nl> + private static String cookedCount ; <nl> + private boolean isThinCrust ; <nl> + public static class PizzaSalesCounter { <nl> + private static String orderedCount ; <nl> + public static String deliveredCount ; <nl> 
mmm ConversationListLoader . java <nl> ppp ConversationListLoader . java <nl> - ThreadDatabase . ADDRESS , ThreadDatabase . SNIPPET , ThreadDatabase . READ , <nl> + ThreadDatabase . ADDRESS , ThreadDatabase . SNIPPET , ThreadDatabase . READ , ThreadDatabase . UNREAD _ COUNT , <nl> - " - 1 ", null , 1 , ThreadDatabase . DistributionTypes . INBOX _ ZERO , <nl> 
mmm EncryptColumnToken . java <nl> ppp EncryptColumnToken . java <nl> - import org . apache . shardingsphere . core . util . SQLUtil ; <nl> + import org . apache . shardingsphere . core . parsing . parser . context . condition . Column ; <nl> - @ ToString <nl> - private final String tableName ; <nl> + private final Column column ; <nl> 
deleted file <nl> mmm TopValueSource . java <nl> - package org . apache . solr . search . function ; <nl> - import org . apache . solr . search . SolrIndexReader ; <nl> - import org . apache . lucene . index . IndexReader ; <nl> - import java . io . IOException ; <nl> - import java . util . Map ; <nl> - public class TopValueSource extends ValueSource { <nl> 
mmm TaskServlet . java <nl> ppp TaskServlet . java <nl> - final Enumeration <?> names = req . getParameterNames (); <nl> + final Enumeration < String > names = req . getParameterNames (); <nl> - final String name = ( String ) names . nextElement (); <nl> + final String name = names . nextElement (); <nl> 
mmm ToolbarTitledPane . java <nl> ppp ToolbarTitledPane . java <nl> + import net . sourceforge . pmd . util . fxdesigner . util . DesignerUtil ; <nl> - * @ since 7 . 0 . 0 <nl> + * @ since 6 . 11 . 0 <nl> - toolBar . maxHeightProperty () . unbind (); <nl> - toolBar . maxHeightProperty () . bind ( titleRegion . heightProperty ()); <nl> 
mmm NodeTreeUseActivity . java <nl> ppp NodeTreeUseActivity . java <nl> - SecondNode seNode = new SecondNode ( new ArrayList < BaseNode >(), " this is Add Second Node "); <nl> - adapter . nodeAddData ( adapter . getData () . get ( 0 ), 1 , seNode ); <nl> + SecondNode seNode = new SecondNode ( new ArrayList < BaseNode >(), " Second Node ( This is added )"); <nl> 
new file <nl> ppp OnOutOfMemoryErrorTest . java <nl> + class OnOutOfMemoryErrorTest { <nl> + public static void main ( String [] args ) { <nl> + Object test = new double [ Integer . MAX _ VALUE ]; <nl> + } <nl> + } <nl> 
mmm GameAdvancedListItem . java <nl> ppp GameAdvancedListItem . java <nl> - if ( version != null ) { <nl> + if ( Profiles . getSelectedProfile () . getRepository () . hasVersion ( version )) { <nl> 
mmm JaegerDeploymentRecorder . java <nl> ppp JaegerDeploymentRecorder . java <nl> - static { <nl> - if (! GlobalTracer . isRegistered ()) { <nl> - log . debugf (" Registering tracer to GlobalTracer % s ", quarkusTracer ); <nl> - GlobalTracer . register ( quarkusTracer ); <nl> - } <nl> - } <nl> + if (! GlobalTracer . isRegistered ()) { <nl> 
mmm MapActivityTest . java <nl> ppp MapActivityTest . java <nl> - import android . app . Application ; <nl> - import com . xtremelabs . robolectric . Robolectric ; <nl> - import org . junit . Before ; <nl> - @ Before <nl> - public void setUp () throws Exception { <nl> - Robolectric . bindDefaultShadowClasses (); <nl> 
new file <nl> ppp ThreadFactoryInstrumenter . java <nl> + package io . micronaut . scheduling . instrument ; <nl> + import io . micronaut . context . event . BeanCreatedEvent ; <nl> + import io . micronaut . context . event . BeanCreatedEventListener ; <nl> + import io . micronaut . core . annotation . Internal ; <nl> 
mmm ApacheRemoteSiteTest . java <nl> ppp ApacheRemoteSiteTest . java <nl> - import com . ning . http . client . async . ResumableFileTest ; <nl> + import com . ning . http . client . async . RemoteSiteTest ; <nl> - public class ApacheResumableFileTest extends ResumableFileTest { <nl> + public class ApacheRemoteSiteTest extends RemoteSiteTest { <nl> 
mmm ObjectProperty . java <nl> ppp ObjectProperty . java <nl> + public ObjectProperty properties ( Map < String , Property > properties ) { <nl> + this . setProperties ( properties ); <nl> + return this ; <nl> + } <nl> 
mmm ParameterRequiredReader . java <nl> ppp ParameterRequiredReader . java <nl> + import org . springframework . web . bind . annotation . ValueConstants ; <nl> - requiredSet . add (! optional & & (( RequestParam ) annotation ) . required ()); <nl> + requiredSet . add (! optional & & isRequired (( RequestParam ) annotation )); <nl> 
mmm AppLinks . java <nl> ppp AppLinks . java <nl> + import android . support . annotation . RestrictTo ; <nl> + @ RestrictTo ( RestrictTo . Scope . LIBRARY _ GROUP ) <nl> 
mmm SocketAddresses . java <nl> ppp SocketAddresses . java <nl> + import java . util . Enumeration ; <nl> - loopbackIf = NetworkInterface . getNetworkInterfaces () . nextElement (); <nl> + for ( Enumeration < NetworkInterface > e = NetworkInterface . getNetworkInterfaces (); <nl> + e . hasMoreElements ();) { <nl> 
mmm BuildCompleteEvent . java <nl> ppp BuildCompleteEvent . java <nl> + . setOverallSuccess ( result . getSuccess ()) <nl> 
mmm MaximumHistogram . java <nl> ppp MaximumHistogram . java <nl> 
mmm Version . java <nl> ppp Version . java <nl> - private static final String VERSION = " 2 . 1 . 12 - SNAPSHOT "; <nl> + private static final String VERSION = " 2 . 1 . 12 "; <nl> 
mmm _ 366 . java <nl> ppp _ 366 . java <nl> - public class FindLeavesofBinaryTree { <nl> + public class _ 366 { <nl> 
mmm HasNoJsonPathTest . java <nl> ppp HasNoJsonPathTest . java <nl> + "\" none \": null ," + <nl> + @ Test <nl> + public void shouldNotMatchExplicitNull () { <nl> + assertThat ( JSON _ STRING , not ( hasNoJsonPath ("$ . none "))); <nl> + } <nl> 
deleted file <nl> mmm HttpPatch . java <nl> - package com . kickstarter . libs ; <nl> - import org . apache . http . client . methods . HttpEntityEnclosingRequestBase ; <nl> - import java . net . URI ; <nl> - public class HttpPatch extends HttpEntityEnclosingRequestBase { <nl> - public final static String METHOD _ NAME = " PATCH "; <nl> 
mmm TrainParser . java <nl> ppp TrainParser . java <nl> - System . err . println ( transitionIndex ); <nl> 
mmm ExternalProcessRunnerTest . java <nl> ppp ExternalProcessRunnerTest . java <nl> + import static org . junit . Assert . assertTrue ; <nl> - assertEquals ( runner . getErrorOutput () . toString (), " Exception in thread \" main \" java . lang . RuntimeException : HEHE , I ' m failing . \ n " + <nl> - "\ tat org . apache . flink . util . ExternalProcessRunnerTest $ Failing . main ( ExternalProcessRunnerTest . java : 94 )\ n "); <nl> 
mmm Gps103ProtocolEncoderTest . java <nl> ppp Gps103ProtocolEncoderTest . java <nl> - Assert . assertEquals ("**, imei : 123456789012345 , C , 05m ;", encoder . encodeCommand ( command )); <nl> + Assert . assertEquals ("**, imei : 123456789012345 , C , 05m ", encoder . encodeCommand ( command )); <nl> 
new file <nl> ppp ShardingDatabasesAndTablesConfigurationRange . java <nl> + package io . shardingsphere . example . jdbc . nodep . config ; <nl> + import io . shardingsphere . api . config . ShardingRuleConfiguration ; <nl> + import io . shardingsphere . api . config . TableRuleConfiguration ; <nl> + import io . shardingsphere . api . config . strategy . InlineShardingStrategyConfiguration ; <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final String EXECUTOR _ MAX _ SIZE _ INIT _ PARAM = <nl> - " org . apache . tomcat . websocket . executorMaxSize "; <nl> 
mmm BaseComponentDeclarer . java <nl> ppp BaseComponentDeclarer . java <nl> - kvBldr . setValue ( entry . getValue () == null ? null : entry . getValue () . toString ()); <nl> + kvBldr . setValue ( entry . getValue () . toString ()); <nl> 
mmm FlatClassLoaderService . java <nl> ppp FlatClassLoaderService . java <nl> - public class FlatClassLoaderService { <nl> + import java . io . InputStream ; <nl> + import java . lang . reflect . InvocationHandler ; <nl> + import java . net . URL ; <nl> + import java . util . Collection ; <nl> + import java . util . Collections ; <nl> 
new file <nl> ppp RemoveComments . java <nl> + package problems . medium ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import java . util . stream . Collectors ; <nl> + public class RemoveComments { <nl> + public static void main ( String [] args ) { <nl> 
mmm InitExceptionThrowTest . java <nl> ppp InitExceptionThrowTest . java <nl> + import junit . framework . TestCase ; <nl> - public class InitExceptionThrowTest extends TestClone { <nl> + public class InitExceptionThrowTest extends TestCase { <nl> 
deleted file <nl> mmm StormClientErrorHandler . java <nl> - package backtype . storm . messaging . netty ; <nl> - import java . net . ConnectException ; <nl> - import org . jboss . netty . channel . *; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - public class StormClientErrorHandler extends SimpleChannelUpstreamHandler { <nl> 
mmm SpringSecurityCoreVersion . java <nl> ppp SpringSecurityCoreVersion . java <nl> - public static final long SERIAL _ VERSION _ UID = 420L ; <nl> + public static final long SERIAL _ VERSION _ UID = 500L ; <nl> 
new file <nl> ppp Issue1662 . java <nl> + package com . alibaba . json . bvt . issue _ 1600 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONArray ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import com . alibaba . fastjson . annotation . JSONField ; <nl> 
mmm ISpawnHandler . java <nl> ppp ISpawnHandler . java <nl> - public void writeSpawnData ( DataOutputStream data ); <nl> + public void writeSpawnData ( DataOutputStream data ) throws IOException ; <nl> - public void readSpawnData ( DataInputStream data ); <nl> + public void readSpawnData ( DataInputStream data ) throws IOException ; <nl> 
mmm ZoteroConnectionWidget . java <nl> ppp ZoteroConnectionWidget . java <nl> - HelpLink zoteroHelp = new HelpLink (" Using Zotero ", <nl> - false , <nl> - false ); <nl> + HelpLink zoteroHelp = new HelpLink (" Using Zotero ", " visual _ markdown _ editing - zotero ", false ); <nl> 
mmm GoogleApi . java <nl> ppp GoogleApi . java <nl> + import org . scribe . model . *; <nl> + @ Override <nl> + protected Verb getAccessTokenVerb () <nl> + { <nl> + return Verb . GET ; <nl> + } <nl> + @ Override <nl> + protected Verb getRequestTokenVerb () <nl> + { <nl> + return Verb . GET ; <nl> + } <nl> 
mmm TestInternalOutputBuffer . java <nl> ppp TestInternalOutputBuffer . java <nl> - import org . junit . Ignore ; <nl> 
mmm RESTServlet . java <nl> ppp RESTServlet . java <nl> - this . pool = new HTablePool ( conf , 10 ); <nl> + int maxSize = conf . getInt (" hbase . rest . htablepool . size ", 10 ); <nl> + this . pool = new HTablePool ( conf , maxSize ); <nl> 
mmm MeteorPubSub . java <nl> ppp MeteorPubSub . java <nl> - if ( req . getHeader ( HeaderConfig . X _ ATMOSPHERE _ TRANSPORT ) . equalsIgnoreCase ( HeaderConfig . LONG _ POLLING _ TRANSPORT )) { <nl> + String header = req . getHeader ( HeaderConfig . X _ ATMOSPHERE _ TRANSPORT ); <nl> + if ( header != null & & header . equalsIgnoreCase ( HeaderConfig . LONG _ POLLING _ TRANSPORT )) { <nl> 
mmm Authority . java <nl> ppp Authority . java <nl> + import io . shardingsphere . dbtest . cases . authority . sql . SQLSet ; <nl> + import io . shardingsphere . dbtest . cases . authority . sql . SQLType ; <nl> 
mmm IntegratorServiceImpl . java <nl> ppp IntegratorServiceImpl . java <nl> - private static final CoreMessageLogger LOG = Logger . getMessageLogger ( <nl> + private static final CoreMessageLogger LOG = Logger . getMessageLogger ( <nl> 
new file <nl> ppp ResourceBundlePropagationTest . java <nl> + package picocli ; <nl> + import java . util . ResourceBundle ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import org . junit . Test ; <nl> + import picocli . CommandLine . Command ; <nl> + @ Command ( name = " leaf ", description = " I ' m a leaf ") <nl> 
new file <nl> ppp CmdUtils . java <nl> + package voldemort . utils ; <nl> + import java . util . HashSet ; <nl> + import java . util . Set ; <nl> + import joptsimple . OptionSet ; <nl> + import joptsimple . OptionSpec ; <nl> + public class CmdUtils { <nl> + public static Set < String > missing ( OptionSet options , String . . . required ) { <nl> 
mmm AutoRun . java <nl> ppp AutoRun . java <nl> + } else { <nl> + System . exit ( - 2 ); <nl> 
mmm MyListActivity . java <nl> ppp MyListActivity . java <nl> + import com . googlecode . androidannotations . annotations . Bean ; <nl> - private ListAdapter adapter ; <nl> + @ Bean <nl> + ListAdapter adapter ; <nl> 
mmm LombokIcons . java <nl> ppp LombokIcons . java <nl> + public static final Icon LOMBOK _ ICON = load ("/ icons / lombok . svg "); <nl> 
mmm BasicRulesTest . java <nl> ppp BasicRulesTest . java <nl> + addRule ( RULESET , " UnreachableCode "); <nl> 
mmm SpringContextTest . java <nl> ppp SpringContextTest . java <nl> - package org . baeldung ; <nl> + package com . baeldung ; <nl> 
mmm MpscGrowableArrayQueue . java <nl> ppp MpscGrowableArrayQueue . java <nl> - final long maxSize = maxQueueCapacity / 2 ; <nl> - if ( buffer . length == maxSize ) { <nl> - throw new IllegalStateException (); <nl> - } <nl> - final int newSize = 2 * ( buffer . length - 1 ); <nl> - if ( newSize == maxSize + 2 ) { <nl> 
new file <nl> ppp FileServer . java <nl> + package io . undertow . examples . fileserving ; <nl> + import io . undertow . Undertow ; <nl> + import io . undertow . examples . UndertowExample ; <nl> + import io . undertow . server . handlers . resource . FileResourceManager ; <nl> + import java . io . File ; <nl> 
deleted file <nl> mmm ByteBufDeframer . java <nl> - package com . google . net . stubby . newtransport . netty ; <nl> - import com . google . net . stubby . newtransport . Deframer ; <nl> - import com . google . net . stubby . newtransport . GrpcMessageListener ; <nl> - import com . google . net . stubby . newtransport . TransportFrameUtil ; <nl> 
mmm WorkerVerticle . java <nl> ppp WorkerVerticle . java <nl> - vertx . eventBus () . consumer (" sample . data ", message - > { <nl> + vertx . eventBus () . < String > consumer (" sample . data ", message - > { <nl> - String body = ( String ) message . body (); <nl> + String body = message . body (); <nl> 
mmm RenameColumnStatementTest . java <nl> ppp RenameColumnStatementTest . java <nl> - || database instanceof CacheDatabase <nl> - || database instanceof DerbyDatabase ) { <nl> + || database instanceof CacheDatabase ) { <nl> 
new file <nl> ppp PsiMethodExtractorUtilsTest . java <nl> + static class TestClass { <nl> + static void onAttached ( <nl> + com . facebook . litho . ComponentContext c , <nl> + int num , <nl> + @ com . facebook . litho . annotations . Prop Object prop ) {} <nl> + static < T , U extends java . util . List > void onDetached () {} <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 1 . 4 . 0 "; <nl> + public static final String VERSION = " 1 . 4 . 1 "; <nl> - public static final int VERSION _ INT = 001004000 ; <nl> + public static final int VERSION _ INT = 001004001 ; <nl> 
mmm TestSampleCompareTo . java <nl> ppp TestSampleCompareTo . java <nl> 
mmm SourceTest . java <nl> ppp SourceTest . java <nl> - package org . apache . beam . runners . spark . structuredstreaming ; <nl> + package org . apache . beam . runners . spark . structuredstreaming . translation . batch ; <nl> + import org . apache . beam . runners . spark . structuredstreaming . SparkPipelineOptions ; <nl> 
mmm DataSourceNotAvailableException . java <nl> ppp DataSourceNotAvailableException . java <nl> 
deleted file <nl> mmm JdbcSourceTaskTest . java <nl> - package org . apache . rocketmq . connect . jdbc . connector ; <nl> - import java . util . Collection ; <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - import javax . sql . DataSource ; <nl> - import org . junit . Test ; <nl> 
mmm ServerMain . java <nl> ppp ServerMain . java <nl> 
mmm AsyncHttpObservable . java <nl> ppp AsyncHttpObservable . java <nl> - return Observable . create ( new Observable . OnSubscribe < Response >() { <nl> + return Observable . unsafeCreate ( new Observable . OnSubscribe < Response >() { <nl> 
mmm ResteasyDotNames . java <nl> ppp ResteasyDotNames . java <nl> + DotName . createSimple (" javax . json . JsonValue "), <nl> 
new file <nl> ppp AttachDetachListener . java <nl> + package com . facebook . common . lifecycle ; <nl> + import android . view . View ; <nl> + public interface AttachDetachListener { <nl> + void onAttachToView ( View view ); <nl> + void onDetachFromView ( View view ); <nl> + } <nl> 
mmm CookieCsrfTokenRepositoryServlet3Tests . java <nl> ppp CookieCsrfTokenRepositoryServlet3Tests . java <nl> + import java . lang . reflect . Method ; <nl> + import javax . servlet . http . Cookie ; <nl> + import javax . servlet . http . HttpServletRequest ; <nl> + import javax . servlet . http . HttpServletResponse ; <nl> 
mmm StateBuilder . java <nl> ppp StateBuilder . java <nl> + import java . util . ArrayList ; <nl> - import org . unidal . tuple . Pair ; <nl> - import com . dianping . cat . configuration . ServerConfigManager ; <nl> + import com . dianping . cat . home . router . entity . DefaultServer ; <nl> + import com . dianping . cat . system . config . RouterConfigManager ; <nl> 
mmm ContainerReaper . java <nl> ppp ContainerReaper . java <nl> - LOGGER . info (" Removed container and associated volume ( s ): {}", imageName ); <nl> + LOGGER . debug (" Removed container and associated volume ( s ): {}", imageName ); <nl> 

new file <nl> ppp CopyObject . java <nl> + package aws . example . s3 ; <nl> + import com . amazonaws . AmazonServiceException ; <nl> + import com . amazonaws . regions . Regions ; <nl> + import com . amazonaws . services . s3 . AmazonS3 ; <nl> + import com . amazonaws . services . s3 . AmazonS3ClientBuilder ; <nl> 
mmm OrderRepository . java <nl> ppp OrderRepository . java <nl> + @ Override <nl> + @ Override <nl> 
mmm Version . java <nl> ppp Version . java <nl> - private static final String VERSION = " 2 . 1 . 10 - SNAPSHOT "; <nl> + private static final String VERSION = " 2 . 1 . 10 "; <nl> 
mmm V20180323150000 _ AddSidecarUser . java <nl> ppp V20180323150000 _ AddSidecarUser . java <nl> - " Sidecar Node ", <nl> - " Grants access to register and pull configurations for a Sidecar node ( built - in )", <nl> + " Sidecar System ( Internal )", <nl> + " Internal technical role . Grants access to register and pull configurations for a Sidecar node ( built - in )", <nl> 
mmm XxlJobSpringExecutor . java <nl> ppp XxlJobSpringExecutor . java <nl> - throw new RuntimeException (" xxl - job jobhandler naming conflicts . error name :" + name ); <nl> + throw new RuntimeException (" xxl - job jobhandler [" + name + "] naming conflicts . "); <nl> 
mmm SmartMatchTest _ boolean _ is . java <nl> ppp SmartMatchTest _ boolean _ is . java <nl> - public void f _ test _ 0 () throws Exception { <nl> - String text = "{\" _ id \": 1001 }"; <nl> + public void test _ 0 () throws Exception { <nl> + String text = "{\" isVisible \": true }"; <nl> - Assert . assertEquals ( 1001 , vo . getId ()); <nl> 
new file <nl> ppp ExtensionsCreator . java <nl> + package com . facebook . rendercore . extensions ; <nl> + import com . facebook . rendercore . RenderTreeHost ; <nl> + import com . facebook . rendercore . RootHost ; <nl> + public interface ExtensionsCreator { <nl> + RenderCoreExtension <?>[] create (); <nl> 
mmm MetricSchema . java <nl> ppp MetricSchema . java <nl> 
mmm EnsureContainers . java <nl> ppp EnsureContainers . java <nl> - import org . apache . curator . utils . EnsurePath ; <nl> 
mmm U2020App . java <nl> ppp U2020App . java <nl> + if ( LeakCanary . isInAnalyzerProcess ( this )) { <nl> + return ; <nl> + } <nl> 
mmm SampleSenderFactory . java <nl> ppp SampleSenderFactory . java <nl> + private SampleSenderFactory () { <nl> + } <nl> 
mmm CustomMeasuresWidget . java <nl> ppp CustomMeasuresWidget . java <nl> - @ WidgetProperty ( key = " metric1 ", type = WidgetPropertyType . STRING ), <nl> 
mmm ExampleRunner . java <nl> ppp ExampleRunner . java <nl> + import java . io . IOException ; <nl> 
deleted file <nl> mmm UIUtilsTest . java <nl> - import com . alibaba . jstorm . ui . utils . UIUtils ; <nl> - import org . junit . Assert ; <nl> - import org . junit . Test ; <nl> - public class UIUtilsTest { <nl> - @ Test <nl> - public void testParseLong (){ <nl> - long l = UIUtils . parseLong ("", 0 ); <nl> 
mmm _ 442 . java <nl> ppp _ 442 . java <nl> - public class FindAllDuplicatesinanArray { <nl> + public class _ 442 { <nl> 
mmm SimpleXmlConverterFactory . java <nl> ppp SimpleXmlConverterFactory . java <nl> + * <nl> + * @ deprecated we recommend switching to the JAXB converter . <nl> + @ Deprecated <nl> 
mmm CommonUtils . java <nl> ppp CommonUtils . java <nl> - envPath = System . getProperty (" user . home ") + File . separator + " . bash _ profile "; <nl> + envPath = "/ etc / profile "; <nl> 
mmm WebImage . java <nl> ppp WebImage . java <nl> - public WebImage ( Uri uri ) { <nl> + public WebImage ( Uri uri ) { <nl> - public Uri getUrl () <nl> - { <nl> + public Uri getUrl () { <nl> - public int getWidth () <nl> - { <nl> + public int getWidth () { <nl> - public int getHeight () <nl> - { <nl> + public int getHeight () { <nl> 
mmm Visitors . java <nl> ppp Visitors . java <nl> - return maybeCall ( expression ) . orElseThrow (() - > ERROR _ FN . apply ( expression , Path . class )); <nl> + return maybeCall ( expression ) . orElseThrow (() - > ERROR _ FN . apply ( expression , Call . class )); <nl> 
mmm Logger . java <nl> ppp Logger . java <nl> - return ! Config . getBoolean (" android . hideLogs ", false ); <nl> + return ! Config . getBoolean (" android . hideLogs ", Config . getBoolean (" hideLogs ", false )); <nl> 
mmm ProcessMessageJob . java <nl> ppp ProcessMessageJob . java <nl> + log . debug (" Passing {} to {}", message , reader ); <nl> 
deleted file <nl> mmm SecretManagerIntegrationTest . java <nl> - import com . example . secrets . *; <nl> - import software . amazon . awssdk . services . secretsmanager . SecretsManagerClient ; <nl> - import org . junit . jupiter . api . *; <nl> - import software . amazon . awssdk . regions . Region ; <nl> 
mmm ViewAdapter . java <nl> ppp ViewAdapter . java <nl> + import android . text . Editable ; <nl> + import android . text . TextWatcher ; <nl> + import me . goldze . mvvmhabit . binding . command . BindingCommand ; <nl> - @ BindingAdapter ({" requestFocus "}) <nl> + @ BindingAdapter ( value = {" requestFocus "}, requireAll = false ) <nl> 
mmm HelloTest . java <nl> ppp HelloTest . java <nl> + import static javax . xml . rpc . Call . SOAPACTION _ URI _ PROPERTY ; <nl> + import static javax . xml . rpc . Call . SOAPACTION _ USE _ PROPERTY ; <nl> + import static javax . xml . rpc . ParameterMode . IN ; <nl> + import static org . junit . Assert . assertEquals ; <nl> 
mmm PostgreSQLDataRowPacket . java <nl> ppp PostgreSQLDataRowPacket . java <nl> - payload . writeInt4 ( columnData . length ()); <nl> + payload . writeInt4 ( columnData . getBytes () . length ); <nl> 
mmm Clock . java <nl> ppp Clock . java <nl> - private static final ThreadMXBean threadMxBean = ManagementFactory . getThreadMXBean (); <nl> + private static final ThreadMXBean THREAD _ MX _ BEAN = ManagementFactory . getThreadMXBean (); <nl> - return threadMxBean . getCurrentThreadCpuTime (); <nl> + return THREAD _ MX _ BEAN . getCurrentThreadCpuTime (); <nl> 
mmm RequestLogFactory . java <nl> ppp RequestLogFactory . java <nl> + import io . dropwizard . jackson . Discoverable ; <nl> - public interface RequestLogFactory < T extends RequestLog > { <nl> + public interface RequestLogFactory < T extends RequestLog > extends Discoverable { <nl> 
mmm ConvertListeners . java <nl> ppp ConvertListeners . java <nl> - log . info (" num threads = " + (( AbstractThreadGroup ) item ) . getNumThreads ()); <nl> + log . debug (" num threads = " + (( AbstractThreadGroup ) item ) . getNumThreads ()); <nl> 
mmm WorldResource . java <nl> ppp WorldResource . java <nl> - worlds [ i ] = this . worldDAO . findById (( long )( random . nextInt ( 10000 ) + 1 )) . orNull (); <nl> + worlds [ i ] = this . worldDAO . findById (( long ) random . nextInt ( 10000 )) . orNull (); <nl> 
mmm BeamMatchRelTest . java <nl> ppp BeamMatchRelTest . java <nl> - package org . apache . beam . sdk . extensions . sql . utils ; <nl> + package org . apache . beam . sdk . extensions . sql . impl . rel ; <nl> - public class BeamSqlDslMatchTest { <nl> + public class BeamMatchRelTest { <nl> 
mmm QueryRow . java <nl> ppp QueryRow . java <nl> - import java . util . LinkedList ; <nl> 
mmm ConfigDocWriter . java <nl> ppp ConfigDocWriter . java <nl> - private String capitalize ( String title ) { <nl> - char [] chars = title . toCharArray (); <nl> - boolean capitalize = true ; <nl> - for ( int i = 0 ; i < chars . length ; i + + ) { <nl> - char c = chars [ i ]; <nl> - if ( Character . isSpaceChar ( c )) { <nl> 
mmm FragmentCollection . java <nl> ppp FragmentCollection . java <nl> - } <nl> + @ Override <nl> + public String toString () { <nl> + return getConfigurationName ( config ) + ": [ " + printKeys () + "]"; <nl> + } <nl> + } <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 11 . 2 "; <nl> + public static final String VERSION = " 2 . 11 . 3 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 11 . 2 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 11 . 3 "; <nl> 
mmm OrderByItemAssert . java <nl> ppp OrderByItemAssert . java <nl> + SQLSegmentAssert . assertIs ( assertContext , actual , expected ); <nl> + SQLSegmentAssert . assertIs ( assertContext , actual , expected ); <nl> 
mmm WebSocketPubSub . java <nl> ppp WebSocketPubSub . java <nl> + import org . atmosphere . websocket . WebSocketHandlerAdapter ; <nl> - public class WebSocketPubSub extends WebSocketHandler { <nl> + public class WebSocketPubSub extends WebSocketHandlerAdapter { <nl> - r . setBroadcaster ( b ); <nl> - r . addEventListener ( new WebSocketEventListenerAdapter ()); <nl> 
new file <nl> ppp TestGCModel . java <nl> + package com . tagtraum . perf . gcviewer . model ; <nl> + import static org . hamcrest . Matchers . closeTo ; <nl> + import static org . junit . Assert . assertThat ; <nl> + import com . tagtraum . perf . gcviewer . math . DoubleData ; <nl> + import com . tagtraum . perf . gcviewer . model . AbstractGCEvent . Type ; <nl> 
new file <nl> ppp DexRecomputeChecksum . java <nl> + package com . googlecode . dex2jar . tools ; <nl> + import com . googlecode . d2j . dex . writer . DexFileWriter ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . lang . reflect . Method ; <nl> + import java . nio . ByteBuffer ; <nl> 
mmm FeedItemlistDescriptionAdapter . java <nl> ppp FeedItemlistDescriptionAdapter . java <nl> - import de . danoeh . antennapod . R ; <nl> - import de . danoeh . antennapod . core . feed . FeedItem ; <nl> + import de . danoeh . antennapod . R ; <nl> + import de . danoeh . antennapod . core . feed . FeedItem ; <nl> 
mmm MaxwellTableCache . java <nl> ppp MaxwellTableCache . java <nl> - import java . util . HashSet ; <nl> 
mmm AdwHomeBadger . java <nl> ppp AdwHomeBadger . java <nl> + public static final String CLASSNAME = " CNAME "; <nl> + intent . putExtra ( CLASSNAME , componentName . getClassName ()); <nl> 
mmm JacksonPropertyExceptionMapper . java <nl> ppp JacksonPropertyExceptionMapper . java <nl> - StringBuilder b = new StringBuilder (); <nl> - b . append (" Unable to map property ") . append ( exception . getPropertyName ()) . append (" . \ n "); <nl> - b . append (" Known properties include : ") . append ( Joiner . on (", ") . join ( knownPropertyIds )); <nl> 
mmm EncryptWhereColumnPlaceholderTest . java <nl> ppp EncryptWhereColumnPlaceholderTest . java <nl> - encryptWhereColumnPlaceholder = new EncryptWhereColumnPlaceholder (" table _ x ", " column _ x ", indexValues , Collections . < Integer > emptyList (), ShardingOperator . EQUAL ); <nl> + encryptWhereColumnPlaceholder = new EncryptWhereColumnPlaceholder (" column _ x ", indexValues , Collections . < Integer > emptyList (), ShardingOperator . EQUAL ); <nl> 
new file <nl> ppp Euler14Test . java <nl> + package javaslang . collection . euler ; <nl> + import javaslang . Function1 ; <nl> + import javaslang . Function2 ; <nl> + import javaslang . collection . Stream ; <nl> + import org . junit . Test ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> 
mmm MaybeObserver . java <nl> ppp MaybeObserver . java <nl> - * {@ lingk onComplete } methods to provide notifications . <nl> + * {@ link # onComplete } methods to provide notifications . <nl> 
mmm Characters . java <nl> ppp Characters . java <nl> - return ( <nl> - cType == Character . START _ PUNCTUATION || <nl> + return cType == Character . START _ PUNCTUATION || <nl> - cType == Character . FINAL _ QUOTE _ PUNCTUATION ); <nl> + cType == Character . FINAL _ QUOTE _ PUNCTUATION ; <nl> + } <nl> + public static boolean isSymbol ( char c ) { <nl> 
mmm Gauge . java <nl> ppp Gauge . java <nl> - static < T > Builder builder ( String name , T obj , ToDoubleFunction < T > f ) { <nl> + static < T > Builder < T > builder ( String name , T obj , ToDoubleFunction < T > f ) { <nl> 
mmm ResourcePoolTest . java <nl> ppp ResourcePoolTest . java <nl> - import org . junit . Assert ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . mockito . Mockito . mock ; <nl> + import static org . mockito . Mockito . when ; <nl> - import org . mockito . Mockito ; <nl> 
mmm BloomFilterTest . java <nl> ppp BloomFilterTest . java <nl> - assertArrayEquals ( HEX . decode (" 03614e9b050000000000000001 "), filter . unsafeBitcoinSerialize ()); <nl> + assertEquals (" 03614e9b050000000000000001 ", HEX . encode ( filter . unsafeBitcoinSerialize ())); <nl> - assertArrayEquals ( HEX . decode (" 03ce4299050000000100008002 "), filter . unsafeBitcoinSerialize ()); <nl> 
mmm GraphicID . java <nl> ppp GraphicID . java <nl> + public static final int VENGEANCE _ OTHER = 725 ; <nl> 
mmm MojoCommon . java <nl> ppp MojoCommon . java <nl> - * @ param acceptableVersionSpec a version range or minimum version ; see {@ link VersionChecker } <nl> 
mmm ByteUtil . java <nl> ppp ByteUtil . java <nl> + public static void setFourBytes ( byte [] output , int firstByte , long value ) { <nl> + output [ firstByte ] = ( byte ) (( value & 0xFF000000 ) >> 24 ); <nl> + output [ firstByte + 1 ] = ( byte ) (( value & 0xFF0000 ) >> 16 ); <nl> + output [ firstByte + 2 ] = ( byte ) (( value & 0xFF00 ) >> 8 ); <nl> 
mmm PersistenceJPAConfig . java <nl> ppp PersistenceJPAConfig . java <nl> - hibernateProperties . setProperty (" hibernate . hbm2ddl . auto ", env . getProperty (" hibernate . hbm2ddl . auto ")); <nl> + hibernateProperties . setProperty (" hibernate . hbm2ddl . auto ", env . getProperty (" hibernate . hbm2ddl . auto ", " create - drop ")); <nl> 
deleted file <nl> mmm AllTests . java <nl> - package com . google . devtools . build . lib . query2 ; <nl> - import com . google . devtools . build . lib . testutil . ClasspathSuite ; <nl> - import org . junit . runner . RunWith ; <nl> - @ RunWith ( ClasspathSuite . class ) <nl> - public class AllTests {} <nl> 
mmm AddressWithIconAndDirection . java <nl> ppp AddressWithIconAndDirection . java <nl> - directionIcon . setLayoutY ( 3 ); <nl> - HBox . setMargin ( label , new Insets ( 8 , 0 , 0 , 0 )); <nl> + HBox . setMargin ( label , new Insets ( 5 , 0 , 0 , 0 )); <nl> - AnchorPane . setTopAnchor ( directionIcon , 6 . 0 ); <nl> 
mmm ClassNamePatternParameterConverter . java <nl> ppp ClassNamePatternParameterConverter . java <nl> - return configurationParameters . get ( key ) <nl> - . filter ( StringUtils :: isNotBlank ) <nl> - . map ( String :: trim ) <nl> - . map ( patternString - > { <nl> - if ( DEACTIVATE _ ALL _ PATTERN . equals ( patternString )) { <nl> 
mmm JavassistTypeDeclarationAdapter . java <nl> ppp JavassistTypeDeclarationAdapter . java <nl> - return new ArrayList <>(); <nl> + return Collections . emptyList (); <nl> 
mmm TestJava9AttachAPI . java <nl> ppp TestJava9AttachAPI . java <nl> - static final String ATTACH _ ENABLE _ PROPERTY = " - Dcom . ibm . tools . attach . enable = yes "; <nl> + static final String ATTACH _ ENABLE _ PROPERTY = " - Dcom . ibm . tools . attach . enable ="; <nl> 
mmm RepositoryPageTab . java <nl> ppp RepositoryPageTab . java <nl> - PULL _ REQUESTS , <nl> - WIKI , <nl> - STATISTICS <nl> + PULL _ REQUESTS <nl> 
mmm EmojiPageView . java <nl> ppp EmojiPageView . java <nl> + private EmojiVariationSelectorPopup popup ; <nl> + popup = new EmojiVariationSelectorPopup ( context , emojiSelectionListener ); <nl> - new EmojiVariationSelectorPopup ( context , emojiSelectionListener ), <nl> + popup , <nl> + @ Override <nl> + protected void onVisibilityChanged (@ NonNull View changedView , int visibility ) { <nl> 
new file <nl> ppp SecurityConfigTests . java <nl> + package org . springframework . security . samples . config ; <nl> + import static org . springframework . test . web . servlet . request . MockMvcRequestBuilders . *; <nl> + import static org . springframework . test . web . servlet . result . MockMvcResultMatchers . *; <nl> 
mmm SchemaChangedListenerTest . java <nl> ppp SchemaChangedListenerTest . java <nl> + import io . shardingsphere . orchestration . internal . registry . config . event . ShardingRuleChangedEvent ; <nl> - DataChangedEvent dataChangedEvent = new DataChangedEvent ("/ test / config / schema / sharding _ db / rule ", DATA _ SOURCE _ YAML , ChangedType . UPDATED ); <nl> 
deleted file <nl> mmm ListTransferTest . java <nl> - package io . vertx . test ; <nl> - import org . junit . Test ; <nl> - import java . util . ArrayList ; <nl> - import java . util . concurrent . atomic . AtomicInteger ; <nl> - import java . util . concurrent . atomic . AtomicReference ; <nl> - import static org . junit . Assert . *; <nl> 
mmm LogRecordListener . java <nl> ppp LogRecordListener . java <nl> + import static java . util . stream . Collectors . toList ; <nl> + import org . junit . platform . commons . JUnitException ; <nl> + public List < LogRecord > getLogRecords ( Class <?> clazz ) { <nl> + if ( clazz == null ) { <nl> + throw new JUnitException (" Class must not be null "); <nl> 
mmm SolrTestCase . java <nl> ppp SolrTestCase . java <nl> + import java . lang . invoke . MethodHandles ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger log = LoggerFactory . getLogger ( MethodHandles . lookup () . lookupClass ()); <nl> 
new file <nl> ppp SmooksIntegrationTest . java <nl> + package com . baeldung . smooks . converter ; <nl> + import com . baeldung . smooks . model . Item ; <nl> + import com . baeldung . smooks . model . Order ; <nl> + import com . baeldung . smooks . model . Status ; <nl> + import com . baeldung . smooks . model . Supplier ; <nl> 
mmm DefaultAccountManager . java <nl> ppp DefaultAccountManager . java <nl> + return currentAccount != null ; <nl> 
mmm ChipGroupDemoFragment . java <nl> ppp ChipGroupDemoFragment . java <nl> + import com . google . android . material . switchmaterial . SwitchMaterial ; <nl> - import android . widget . Switch ; <nl> - private Switch singleSelectionSwitch ; <nl> + private SwitchMaterial singleSelectionSwitch ; <nl> - ViewGroup content = view . findViewById ( R . id . content ); <nl> 
mmm SimplyPath . java <nl> ppp SimplyPath . java <nl> 
mmm TokenProvider . java <nl> ppp TokenProvider . java <nl> + import cn . hutool . core . util . ObjectUtil ; <nl> + import java . util . Collections ; <nl> + Object authoritiesStr = claims . get ( AUTHORITIES _ KEY ); <nl> - Arrays . stream ( claims . get ( AUTHORITIES _ KEY ) . toString () . split (",")) <nl> 
mmm AuthorityEnvironmentManager . java <nl> ppp AuthorityEnvironmentManager . java <nl> - import com . google . common . base . Preconditions ; <nl> 
mmm JDBCBackendDataSource . java <nl> ppp JDBCBackendDataSource . java <nl> + import io . shardingsphere . jdbc . orchestration . internal . jdbc . datasource . CircuitBreakerDataSource ; <nl> + import io . shardingsphere . proxy . config . RuleRegistry ; <nl> + import java . util . Collection ; <nl> + * @ author panjuan <nl> 
mmm DartTokenizerTest2 . java <nl> ppp DartTokenizerTest2 . java <nl> - import org . jetbrains . annotations . NotNull ; <nl> - @ NotNull <nl> + @ Override <nl> + public Tokenizer newTokenizer () { <nl> + return new DartTokenizer (); <nl> + } <nl> - @ NotNull <nl> - @ Override <nl> - public Tokenizer newTokenizer () { <nl> 
mmm TestProjectBuilderLogger . java <nl> ppp TestProjectBuilderLogger . java <nl> - import com . intellij . testFramework . UsefulTestCase ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - import static com . intellij . util . ObjectUtils . assertNotNull ; <nl> - public void assertCompiled ( String builderName , @ NotNull File [] baseDirs , String . . . paths ) { <nl> 
mmm ItemSetService . java <nl> ppp ItemSetService . java <nl> - managedItem . setDataChangeLastModifiedBy ( operator ); <nl> + entity . setDataChangeLastModifiedBy ( operator ); <nl> 
mmm QuarkusHibernateEnversProcessor . java <nl> ppp QuarkusHibernateEnversProcessor . java <nl> - public final class HibernateEnversProcessor { <nl> + public final class QuarkusHibernateEnversProcessor { <nl> 
mmm GroupByKeyTranslatorBatch . java <nl> ppp GroupByKeyTranslatorBatch . java <nl> 
mmm SugarContext . java <nl> ppp SugarContext . java <nl> - import com . google . common . collect . MapMaker ; <nl> - import java . util . concurrent . ConcurrentMap ; <nl> + import java . util . Collections ; <nl> + import java . util . Map ; <nl> + import java . util . WeakHashMap ; <nl> - private ConcurrentMap < Object , Long > entitiesMap ; <nl> 
mmm AssignableShellMetric . java <nl> ppp AssignableShellMetric . java <nl> 
new file <nl> ppp CachedDatabaseMetaDataTest . java <nl> + package org . apache . shardingsphere . kernel . context . runtime ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . mockito . Mock ; <nl> + import org . mockito . junit . MockitoJUnitRunner ; <nl> 
mmm SQLStatement . java <nl> ppp SQLStatement . java <nl> + Conditions getEncryptConditions (); <nl> 
mmm DirectoryFactoryTest . java <nl> ppp DirectoryFactoryTest . java <nl> + import org . apache . commons . exec . OS ; <nl> + import org . apache . solr . util . MockCoreContainer ; <nl> + private static boolean IS _ WINDOWS = ( OS . isFamilyDOS () || OS . isFamilyWin9x () || OS . isFamilyWindows ()); <nl> 
mmm BaseStubbing . java <nl> ppp BaseStubbing . java <nl> 
mmm DataChangeListener . java <nl> ppp DataChangeListener . java <nl> - LoggerManage . log ( LogType . ZK , " DataChangeListener : % s , % s , namespace : % s ", path , listenerPath (), client . getNamespace ()); <nl> + LoggerManage . log ( LogType . ZK , " DataChangeListener :{},{}, namespace :{}", path , listenerPath (), client . getNamespace ()); <nl> 
mmm RedissonCacheStatisticsAutoConfiguration . java <nl> ppp RedissonCacheStatisticsAutoConfiguration . java <nl> + import org . springframework . boot . actuate . metrics . cache . CacheMeterBinderProvider ; <nl> - @ ConditionalOnClass ( MeterBinder . class ) <nl> + @ ConditionalOnClass ( CacheMeterBinderProvider . class ) <nl> 
new file <nl> ppp InterleavingStrings . java <nl> + package problems . hard ; <nl> + public class InterleavingStrings { <nl> + public static void main ( String [] args ) { <nl> + System . out . println ( new InterleavingStrings () . isInterleave (" aabcc ", " dbbca ", " aadbbbaccc ")); <nl> + } <nl> + boolean found = false ; <nl> 
mmm MockJmxListener . java <nl> ppp MockJmxListener . java <nl> 
mmm ContainerTestSuite . java <nl> ppp ContainerTestSuite . java <nl> + boolean skipTailChildContainers = Boolean . valueOf ( System . getProperty (" blackBoxTests . skipTailChildContainers ")); <nl> - . withTailChildContainers ( true ) <nl> + . withTailChildContainers (! skipTailChildContainers ) <nl> 
new file <nl> ppp CustomLinearLayoutManager . java <nl> + package com . marshalchen . ultimaterecyclerview ; <nl> + import android . content . Context ; <nl> + import android . support . v7 . widget . LinearLayoutManager ; <nl> + import android . support . v7 . widget . RecyclerView ; <nl> + import android . view . View ; <nl> 
mmm ReassignAssigneeListener . java <nl> ppp ReassignAssigneeListener . java <nl> + import org . activiti . engine . task . IdentityLinkType ; <nl> + String originAssignee = task . getAssignee (); <nl> - ProcessEngines . getDefaultProcessEngine () . getTaskService () . setAssignee ( task . getId (), selectedUser ); <nl> 
mmm DevFlags . java <nl> ppp DevFlags . java <nl> - public static final boolean DEV _ MODE = STRESS _ TEST _ MODE || true ; <nl> + public static final boolean DEV _ MODE = STRESS _ TEST _ MODE || false ; <nl> 
mmm FontTextView . java <nl> ppp FontTextView . java <nl> - @ SuppressLint (" SetTextI18n ") public void setText ( CharSequence text , BufferType type ) { <nl> + @ Override public void setTextCursorDrawable (@ Nullable Drawable textCursorDrawable ) { <nl> + try { <nl> + super . setTextCursorDrawable ( textCursorDrawable ); <nl> 
mmm SQLContentFormatter . java <nl> ppp SQLContentFormatter . java <nl> - final IRegion region = ( IRegion ) context . getProperty ( FormattingContextProperties . CONTEXT _ REGION ); <nl> + IRegion region = ( IRegion ) context . getProperty ( FormattingContextProperties . CONTEXT _ REGION ); <nl> + if ( region == null ) { <nl> 
mmm JdbcPetRowMapper . java <nl> ppp JdbcPetRowMapper . java <nl> - import org . springframework . jdbc . core . BeanPropertyRowMapper ; <nl> + import org . springframework . jdbc . core . RowMapper ; <nl> - class JdbcPetRowMapper extends BeanPropertyRowMapper < JdbcPet > { <nl> + class JdbcPetRowMapper implements RowMapper < JdbcPet > { <nl> 
mmm DisplayBeforePasswordlessAuthenticationAction . java <nl> ppp DisplayBeforePasswordlessAuthenticationAction . java <nl> - communicationsManager . sms ( passwordlessProperties . getTokens () . getMail () . getFrom (), user . getPhone (), token ); <nl> + communicationsManager . sms ( passwordlessProperties . getTokens () . getSms () . getFrom (), user . getPhone (), token ); <nl> 
mmm WorkerExtensionContext . java <nl> ppp WorkerExtensionContext . java <nl> - * Create a new temp file ( e . g . Test . java ) in Intellij . <nl> - * Inside the file , enter Alt - Insert - > Copyright <nl> - * It should prompt you to select the new Copyright profile <nl> - * Test out another new test file - the copyright should be imported automatically ( note : it might be collapsed so not immediately obvious ) <nl> 
mmm ShellDisplay . java <nl> ppp ShellDisplay . java <nl> - void consoleWritePrompt ( String prompt ); <nl> 
mmm AutomapConstructor . java <nl> ppp AutomapConstructor . java <nl> - import java . lang . annotation . *; <nl> + import java . lang . annotation . Documented ; <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> 
mmm PersonInfoController . java <nl> ppp PersonInfoController . java <nl> - import com . google . gson . Gson ; <nl> - public @ ResponseBody String personInfo () { <nl> - Gson gson = new Gson (); <nl> - String person = gson . toJson ( new Person (" abir ", " Dhaka ", " Bangladesh ", 29 , " Male ")); <nl> - return person ; <nl> 
new file <nl> ppp ConfluenceWikiCodegen . java <nl> + package org . openapitools . codegen . languages ; <nl> + import org . openapitools . codegen . *; <nl> + import io . swagger . v3 . oas . models . OpenAPI ; <nl> + import io . swagger . v3 . oas . models . Operation ; <nl> + import io . swagger . v3 . oas . models . media . *; <nl> 
mmm ThirdpartyDecorator . java <nl> ppp ThirdpartyDecorator . java <nl> - import java . text . DateFormat ; <nl> - import java . text . SimpleDateFormat ; <nl> - private DateFormat m _ format = new SimpleDateFormat (" yyyyMMddHH "); <nl> - Template t = m _ configuration . getTemplate (" exceptionAlert . ftl "); <nl> 
mmm TransactionConfiguration . java <nl> ppp TransactionConfiguration . java <nl> 
mmm DefaultMavenProfilesBuilder . java <nl> ppp DefaultMavenProfilesBuilder . java <nl> + fileReader = new FileReader ( profilesXml ); <nl> 
mmm Store . java <nl> ppp Store . java <nl> + import voldemort . annotations . concurrency . Threadsafe ; <nl> + @ Threadsafe <nl> 
mmm UpdateStatement . java <nl> ppp UpdateStatement . java <nl> - if ( newValue == null ) { <nl> + if ( newValue == null || newValue . toString () . equalsIgnoreCase (" NULL ")) { <nl> 
mmm PartParser . java <nl> ppp PartParser . java <nl> - partText = new String ( body . getPart ( i ) . getData (), characterSet ); <nl> + if ( body . getPart ( i ) . getData () != null ) { <nl> + partText = new String ( body . getPart ( i ) . getData (), characterSet ); <nl> + } else { <nl> + partText = ""; <nl> 
mmm GenClassOptionsParser . java <nl> ppp GenClassOptionsParser . java <nl> + case " - - temp _ dir ": <nl> + readPath ( it ); <nl> + break ; <nl> 
mmm CustomClientFactoryTest . java <nl> ppp CustomClientFactoryTest . java <nl> - import org . apache . camel . impl . JndiRegistry ; <nl> 
new file <nl> ppp AbortRunner . java <nl> + package demo . abort ; <nl> + import com . intuit . karate . junit4 . Karate ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . runner . RunWith ; <nl> + @ RunWith ( Karate . class ) <nl> + public class AbortRunner { <nl> + @ BeforeClass <nl> + public static void beforeClass () { <nl> 
new file <nl> ppp ResponseConvertForServerIdDefinition . java <nl> + package org . hswebframework . web . service . oauth2 . client . request . definition ; <nl> + import org . hswebframework . web . service . oauth2 . client . request . ResponseConvertHandler ; <nl> + public interface ResponseConvertForServerIdDefinition extends ResponseConvertHandler { <nl> 
mmm ChannelInboundMessageHandlerAdapter . java <nl> ppp ChannelInboundMessageHandlerAdapter . java <nl> + firstMessageReceived ( ctx ); <nl> + lastMessageReceived ( ctx ); <nl> + public void firstMessageReceived ( ChannelHandlerContext ctx ) throws Exception { } <nl> + public void lastMessageReceived ( ChannelHandlerContext ctx ) throws Exception { } <nl> 
mmm HorizontalResult . java <nl> ppp HorizontalResult . java <nl> 
mmm SidecarNacosDiscoveryProperties . java <nl> ppp SidecarNacosDiscoveryProperties . java <nl> - import java . net . SocketException ; <nl> - public void init () throws SocketException { <nl> + public void init () throws Exception { <nl> 
mmm Exceptions . java <nl> ppp Exceptions . java <nl> - * < li >{@ code StackOverflowError }</ li > <nl> - if ( t instanceof StackOverflowError ) { <nl> - throw ( StackOverflowError ) t ; <nl> - } else if ( t instanceof VirtualMachineError ) { <nl> + if ( t instanceof VirtualMachineError ) { <nl> 
deleted file <nl> mmm BotNavViewHelper . java <nl> - package com . zjx . vcars . common . util ; <nl> - import android . annotation . SuppressLint ; <nl> - import android . support . design . internal . BottomNavigationItemView ; <nl> - import android . support . design . internal . BottomNavigationMenuView ; <nl> 
mmm RegistrationLockReminders . java <nl> ppp RegistrationLockReminders . java <nl> - private static Map < Long , Long > INTERVAL _ PROGRESSION = new HashMap < Long , Long >() {{ <nl> - put ( TimeUnit . HOURS . toMillis ( 6 ), TimeUnit . HOURS . toMillis ( 12 )); <nl> - put ( TimeUnit . HOURS . toMillis ( 12 ), TimeUnit . DAYS . toMillis ( 1 )); <nl> 
new file <nl> ppp AutomaticModuleNameTests . java <nl> + package org . junit ; <nl> + import static org . junit . jupiter . api . Assertions . assertEquals ; <nl> + import static org . junit . jupiter . api . Assertions . assertNotNull ; <nl> + import static org . junit . jupiter . api . Assertions . fail ; <nl> 
mmm RequestBuilderTest . java <nl> ppp RequestBuilderTest . java <nl> 
mmm PushNotificationReceiveJob . java <nl> ppp PushNotificationReceiveJob . java <nl> + . withGroupId (" _ _ notification _ received ") <nl> 
new file <nl> ppp ObjectFileScrubbersTest . java <nl> + package com . facebook . buck . cxx . toolchain . macho ; <nl> + import static org . hamcrest . Matchers . equalTo ; <nl> + import static org . junit . Assert . assertThat ; <nl> + import com . facebook . buck . cxx . toolchain . objectfile . ObjectFileScrubbers ; <nl> 
mmm Gps103ProtocolEncoderTest . java <nl> ppp Gps103ProtocolEncoderTest . java <nl> - Assert . assertEquals ("**, imei : 123456789012345 , C , 05m ", encoder . encodeCommand ( command )); <nl> + Assert . assertEquals ("**, imei : 123456789012345 , C , 05m ;", encoder . encodeCommand ( command )); <nl> 
mmm SearchTopicByNameActivity . java <nl> ppp SearchTopicByNameActivity . java <nl> + getActionBar () . setDisplayShowHomeEnabled ( false ); <nl> 
mmm JapaneseNumberFilterFactory . java <nl> ppp JapaneseNumberFilterFactory . java <nl> - * & lt ; filter class =" solr . JapaneseNumberFilter "/ & gt ; <nl> + * & lt ; filter class =" solr . JapaneseNumberFilterFactory "/ & gt ; <nl> 
new file <nl> ppp ChangeBaseParserWeight . java <nl> + package edu . stanford . nlp . parser . tools ; <nl> + import edu . stanford . nlp . parser . lexparser . LexicalizedParser ; <nl> + public class ChangeBaseParserWeight { <nl> + public static void main ( String [] args ) { <nl> + String input = null ; <nl> 
mmm BusyAnimation . java <nl> ppp BusyAnimation . java <nl> + getStyleClass () . add (" busyanimation "); <nl> 
mmm HealthBarDefinition . java <nl> ppp HealthBarDefinition . java <nl> - public int field3277 ; <nl> - public int field3278 ; <nl> - public int field3283 ; <nl> - public int field3272 ; <nl> - public int field3275 ; <nl> - public int healthBarFrontSpriteId ; <nl> - public int healthBarBackSpriteId ; <nl> - public int healthScale ; <nl> 
mmm ZeppelinIT . java <nl> ppp ZeppelinIT . java <nl> + driver . findElement ( By . linkText (" New ")) . click (); <nl> + ( new WebDriverWait ( driver , 10 )) . until ( new ExpectedCondition < Boolean >() { <nl> + public Boolean apply ( WebDriver d ) { <nl> + return d . findElement ( By . linkText (" Run ")) . isDisplayed (); <nl> 
mmm TypeReferenceContainerTest . java <nl> ppp TypeReferenceContainerTest . java <nl> - printConfiguration ( config ); <nl> 
mmm WhereClauseTest . java <nl> ppp WhereClauseTest . java <nl> + @ Test <nl> + public void testConcatenationOperator () throws Exception { <nl> + String code = IOUtils . toString ( this . getClass () . getResourceAsStream (" WhereClauseConcatenation . pls "), <nl> + StandardCharsets . UTF _ 8 ); <nl> + ASTInput input = parsePLSQL ( code ); <nl> 
mmm _ 100 . java <nl> ppp _ 100 . java <nl> - public class SameTree { <nl> + public class _ 100 { <nl> 
mmm CollectLocalCpuUsage . java <nl> ppp CollectLocalCpuUsage . java <nl> + len = Math . max ( 0 , len ); <nl> 
mmm ImplementQueueUsingStacks . java <nl> ppp ImplementQueueUsingStacks . java <nl> 
mmm Pair . java <nl> ppp Pair . java <nl> + public K _ 1 () { <nl> + return key ; <nl> + } <nl> + public V _ 2 () { <nl> + return value ; <nl> + } <nl> 
mmm AbstractCasEventRepositoryTests . java <nl> ppp AbstractCasEventRepositoryTests . java <nl> + import java . time . ZoneOffset ; <nl> + import java . time . ZonedDateTime ; <nl> + @ Test <nl> + public void verifyLoadOps () { <nl> + val dto1 = getCasEvent (); <nl> + val eventRepository = getEventRepository (); <nl> 
new file <nl> ppp _ 354 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . Arrays ; <nl> + public class _ 354 { <nl> + public int maxEnvelopes ( int [][] envelopes ) { <nl> + if ( envelopes == null || envelopes . length == 0 <nl> + || envelopes [ 0 ] . length == 0 || envelopes [ 0 ] . length != 2 ) { <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm TestParserNoStrictWhitespace . java <nl> ppp TestParserNoStrictWhitespace . java <nl> + import org . apache . catalina . core . StandardContext ; <nl> + import org . apache . catalina . core . StandardWrapper ; <nl> + StandardContext ctxt = ( StandardContext ) getTomcatInstance () . getHost () . findChild ("/ test "); <nl> 
mmm DataSourceListenerManager . java <nl> ppp DataSourceListenerManager . java <nl> - import io . shardingsphere . core . jdbc . core . datasource . MasterSlaveDataSource ; <nl> - import io . shardingsphere . core . jdbc . core . datasource . ShardingDataSource ; <nl> - public void start ( final ShardingDataSource shardingDataSource ) { <nl> 
mmm OObjectLazyMapTest . java <nl> ppp OObjectLazyMapTest . java <nl> - private OObjectDatabaseTx databaseTx ; <nl> -  <nl> - @ BeforeClass <nl> - protected void setUp () throws Exception <nl> - { <nl> - databaseTx = new OObjectDatabaseTx (" memory : OObjectLazyMapTest "); <nl> - databaseTx . create (); <nl> 
new file <nl> ppp PersonDAOTest . java <nl> + package com . example . helloworld . db ; <nl> + import com . example . helloworld . core . Person ; <nl> + import io . dropwizard . testing . junit . DAOTestRule ; <nl> + import org . hibernate . exception . ConstraintViolationException ; <nl> + import org . junit . Before ; <nl> 
mmm CatalinaClusterSF . java <nl> ppp CatalinaClusterSF . java <nl> - import org . apache . catalina . ha . deploy . FarmWarDeployer ; <nl> - if (!( clusterListener instanceof FarmWarDeployer )) { <nl> + if ( clusterListener != deployer ) { <nl> 
mmm IndexAction . java <nl> ppp IndexAction . java <nl> - json . endObject () . endArray () . close ();; <nl> + json . endObject () . endArray () . close (); <nl> 
mmm TableRow . java <nl> ppp TableRow . java <nl> - import static org . elasticsearch . common . base . Preconditions . checkNotNull ; <nl> + import static com . google . inject . internal . util . $ Preconditions . checkNotNull ; <nl> 
mmm SimpleRecordInheritanceTest . java <nl> ppp SimpleRecordInheritanceTest . java <nl> + @ Test <nl> + public void testIsInstance () { <nl> + Record < B > b = B . rt . newInstance (); <nl> + Record < A > a = A . rt . newInstance (); <nl> + assertThat ( B . rt . isInstance ( b ), is ( true )); <nl> + assertThat ( A . rt . isInstance ( b ), is ( true )); <nl> 
mmm FailFastException . java <nl> ppp FailFastException . java <nl> + import static java . util . Objects . requireNonNull ; <nl> + public FailFastException ( CircuitBreaker circuitBreaker ) { <nl> + requireNonNull ( circuitBreaker , " circuitBreaker "); <nl> 
mmm PreparedStatementExecutorWrapper . java <nl> ppp PreparedStatementExecutorWrapper . java <nl> - result . setObject ( i + 1 , parameters . get ( i )); <nl> + result . setObject ( i + 1 , sqlUnit . getParameters () . get ( i )); <nl> 
mmm UnauthorizedExceptionMapper . java <nl> ppp UnauthorizedExceptionMapper . java <nl> - import java . lang . reflect . Method ; <nl> + import javax . enterprise . inject . spi . CDI ; <nl> - import org . jboss . resteasy . core . ResteasyContext ; <nl> + import io . quarkus . vertx . http . runtime . CurrentVertxRequest ; <nl> 
mmm DiscoveryEnabledServer . java <nl> ppp DiscoveryEnabledServer . java <nl> + public DiscoveryEnabledServer ( final InstanceInfo instanceInfo , boolean useSecurePort ) { <nl> + this ( instanceInfo , useSecurePort , false ); <nl> + } <nl> 
mmm ComputeBenchmark . java <nl> ppp ComputeBenchmark . java <nl> + import java . util . concurrent . Callable ; <nl> + static final int ITEMS = SIZE / 3 ; <nl> + static final Callable < Boolean > valueLoader = () - > Boolean . TRUE ; <nl> + static final Function < Integer , Boolean > mappingFunction = any - > Boolean . TRUE ; <nl> 
mmm MatcherTest . java <nl> ppp MatcherTest . java <nl> + public void testMatchesEntireInput () { <nl> + Pattern p = Pattern . compile ("(\\ w { 2 , 9 })( foo \\$)?"); <nl> + Matcher m = p . matcher (" abcdfoo $"); <nl> + assertTrue ( m . matches ()); <nl> + assertEquals (" abcdfoo $", m . group ( 0 )); <nl> 
mmm ConfigurableTest . java <nl> ppp ConfigurableTest . java <nl> 
mmm ShardingInsertColumnsFiller . java <nl> ppp ShardingInsertColumnsFiller . java <nl> - import com . google . common . base . Optional ; <nl> - import org . apache . shardingsphere . core . parse . filler . api . ShardingRuleAwareFiller ; <nl> - import org . apache . shardingsphere . core . parse . sql . token . impl . InsertColumnsToken ; <nl> 
mmm PgEventWithDefinedDatasourceIntegrationTest . java <nl> ppp PgEventWithDefinedDatasourceIntegrationTest . java <nl> - dataSource . setDatabase ( properties . getProperty (" database ")); <nl> + dataSource . setDatabaseName ( properties . getProperty (" database ")); <nl> 
mmm MatchFunction . java <nl> ppp MatchFunction . java <nl> 
deleted file <nl> mmm QueueDispatcher . java <nl> - package okhttp3 . mockwebserver ; <nl> - import java . net . HttpURLConnection ; <nl> - import java . util . concurrent . BlockingQueue ; <nl> - import java . util . concurrent . LinkedBlockingQueue ; <nl> - import java . util . logging . Logger ; <nl> - public class QueueDispatcher extends Dispatcher { <nl> 
mmm NpmRunner . java <nl> ppp NpmRunner . java <nl> - Proxy secureProxy = proxyConfig . getSecureProxy (); <nl> - if ( secureProxy != null ){ <nl> - arguments . add (" - - https - proxy =" + secureProxy . getUri () . toString ()); <nl> - } <nl> - Proxy insecureProxy = proxyConfig . getInsecureProxy (); <nl> 
deleted file <nl> mmm DemoService . java <nl> - package io . shardingsphere . example . repository . jdbc . service ; <nl> - import io . shardingsphere . example . repository . api . entity . Order ; <nl> - import io . shardingsphere . example . repository . api . entity . OrderItem ; <nl> - import io . shardingsphere . example . repository . jdbc . repository . RawOrderItemRepository ; <nl> 
mmm Gps103ProtocolDecoderTest . java <nl> ppp Gps103ProtocolDecoderTest . java <nl> + assertNotNull ( decoder . decode ( null , null , <nl> + " imei : 359587016817564 , tracker , 1301251602 ,, F , 080251 . 000 , A , 3223 . 5832 , N , 11058 . 9449 , W , 0 . 03 ,")); <nl> 
mmm NullableParameterRule . java <nl> ppp NullableParameterRule . java <nl> + import io . micronaut . core . naming . NameUtils ; <nl> - import javax . annotation . Nullable ; <nl> - if (! p . hasAnnotation ( Nullable . class ) & & type != null & & ! type . isAssignable ( Optional . class )) { <nl> + if (! isNullable ( p ) & & type != null & & ! type . isAssignable ( Optional . class )) { <nl> 
mmm MyConverter . java <nl> ppp MyConverter . java <nl> + import javax . faces . application . FacesMessage ; <nl> + import javax . faces . convert . ConverterException ; <nl> 
mmm PolishChunkerTest . java <nl> ppp PolishChunkerTest . java <nl> - TestTools . myAssert (" To jest du ż y dom . ", "/[ null ] SENT _ START To /[ to ] conj | To /[ ten ] adj : sg : nom . acc . voc : n1 . n2 /[ null ] null jest /[ by ć] verb : fin : sg : ter : imperf /[ null ] null du ż y /[ du ż y ] adj : sg : nom : m : pneg /[ null ] null dom /[ dom ] subst : sg : nom . acc : m3 . /[ null ] SENT _ END ", tokenizer , sentenceTokenizer , tagger , disambiguator ); <nl> 
mmm JsonUtils . java <nl> ppp JsonUtils . java <nl> + public void write ( JSONSerializer serializer , Object object , Object fieldName , Type fieldType , int features ) <nl> + throws IOException { <nl> + if ( object == null ) { <nl> + serializer . writeNull (); <nl> + return ; <nl> + } <nl> + InetAddress address = ( InetAddress ) object ; <nl> 
new file <nl> ppp MySQLSelectExtractor . java <nl> + package io . shardingsphere . core . parsing . antlr . extractor . statement . type . dialect . mysql ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . ConditionExtractHandler ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . FromClauseExtractHandler ; <nl> 
mmm Launcher . java <nl> ppp Launcher . java <nl> - public class OrderSampleLauncher { <nl> + public class Launcher { <nl> 
mmm SampleRedisConfig . java <nl> ppp SampleRedisConfig . java <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . collect . Maps ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + private Map < String , String > someMap = Maps . newLinkedHashMap (); <nl> 
mmm MethodChanger _ 2 . java <nl> ppp MethodChanger _ 2 . java <nl> + import java . io . FileInputStream ; <nl> + import java . util . List ; <nl> - import java . io . FileInputStream ; <nl> - import java . util . List ; <nl> - List < TypeDeclaration > types = cu . getTypes (); <nl> - for ( TypeDeclaration type : types ) { <nl> 
mmm SpringBootVFS . java <nl> ppp SpringBootVFS . java <nl> 
mmm MovementAscend . java <nl> ppp MovementAscend . java <nl> 
mmm IMockInvocation . java <nl> ppp IMockInvocation . java <nl> 
new file <nl> ppp Issue3283 . java <nl> + package com . alibaba . json . bvt . issue _ 3200 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . serializer . SerializerFeature ; <nl> + import junit . framework . TestCase ; <nl> + public class Issue3283 extends TestCase { <nl> 
mmm SourceType . java <nl> ppp SourceType . java <nl> - JAVA ( MojoUtils . JAVA _ EXTENSION , <nl> - " src / main / java ", <nl> - " src / test / java ", <nl> - " templates / % s / pom - template . ftl ", <nl> - " templates / % s / resource - template . ftl ", <nl> - " templates / % s / test - resource - template . ftl ", <nl> 
mmm Sequence . java <nl> ppp Sequence . java <nl> 
mmm Charsets . java <nl> ppp Charsets . java <nl> 
mmm AuthenticationProcessingFilter . java <nl> ppp AuthenticationProcessingFilter . java <nl> + public static final String ACEGI _ SECURITY _ LAST _ USERNAME _ KEY = " ACEGI _ SECURITY _ LAST _ USERNAME "; <nl> + request . getSession () . setAttribute ( ACEGI _ SECURITY _ LAST _ USERNAME _ KEY , <nl> + username ); <nl> 
mmm TextLayoutModeConfigurer . java <nl> ppp TextLayoutModeConfigurer . java <nl> - return TextLayoutMode . Mode . LEGACY ; <nl> + return TextLayoutMode . Mode . REALISTIC ; <nl> 
new file <nl> ppp BinarySink . java <nl> + package com . koushikdutta . async ; <nl> + import java . nio . ByteBuffer ; <nl> + public class BinarySink extends BufferedDataSink { <nl> + public BinarySink ( DataSink datasink ) { <nl> + super ( datasink ); <nl> + } <nl> + private void writeFull ( ByteBuffer b ) { <nl> 
mmm Operation . java <nl> ppp Operation . java <nl> + import org . jboss . as . controller . AttributeDefinition ; <nl> + final AttributeDefinition [] NO _ ATTRIBUTES = new AttributeDefinition [ 0 ]; <nl> + default AttributeDefinition [] getParameters () { <nl> + return NO _ ATTRIBUTES ; <nl> + } <nl> 
mmm FMLIndexedMessageToMessageCodec . java <nl> ppp FMLIndexedMessageToMessageCodec . java <nl> + if ( clazz == null ) <nl> + { <nl> + throw new NullPointerException (" Undefined message for discriminator " + discriminator + " in channel " + msg . channel ()); <nl> + } <nl> 

mmm SeedNodeAddress . java <nl> ppp SeedNodeAddress . java <nl> - DIGITAL _ OCEAN1 (" digitalocean1 . bitsquare . io ", " 188 . 226 . 179 . 109 ", 5000 ), <nl> 
mmm YFrogUpload . java <nl> ppp YFrogUpload . java <nl> 
mmm HsqlRepository . java <nl> ppp HsqlRepository . java <nl> - String monitorDBPath = AppConfigurer . getProperties (" monitor . db . path ", Constants . USER _ HOME ) <nl> + String monitorDBPath = AppConfigurer . getProperties (" lts . admin . data . path ", Constants . USER _ HOME ) <nl> + "/ . lts / hsqldb / lts - admin "; <nl> 
new file <nl> ppp INetErrView . java <nl> + package com . zjx . vcars . common . mvp ; <nl> + public interface INetErrView { <nl> + void showNetWorkErrView (); <nl> + void hideNetWorkErrView (); <nl> + } <nl> 

mmm RecordCollector . java <nl> ppp RecordCollector . java <nl> - private final Callback callback = new Callback () { <nl> - @ Override <nl> - public void onCompletion ( RecordMetadata metadata , Exception exception ) { <nl> - if ( exception == null ) { <nl> - TopicPartition tp = new TopicPartition ( metadata . topic (), metadata . partition ()); <nl> 
mmm BeanshellMojoAdapter . java <nl> ppp BeanshellMojoAdapter . java <nl> + import org . apache . maven . plugin . MojoFailureException ; <nl> 
mmm OAuth2ClientAuthenticationProcessingFilterTests . java <nl> ppp OAuth2ClientAuthenticationProcessingFilterTests . java <nl> + import org . springframework . mock . web . MockHttpServletRequest ; <nl> - Authentication authentication = filter . attemptAuthentication ( null , null ); <nl> + Authentication authentication = filter . attemptAuthentication ( new MockHttpServletRequest (), null ); <nl> 
mmm TextPage . java <nl> ppp TextPage . java <nl> - textArea . copyAsRtf (); <nl> + textArea . copyAsStyledText (); <nl> 
mmm ModernBuildRuleStrategyConfigFromSection . java <nl> ppp ModernBuildRuleStrategyConfigFromSection . java <nl> + import java . util . Optional ; <nl> + import java . util . OptionalInt ; <nl> - int localJobs = <nl> - delegate <nl> - . getInteger ( section , " local _ jobs ") <nl> - . orElse ( delegate . getView ( BuildBuckConfig . class ) . getNumThreads ()); <nl> 
mmm CorePackageRenamer . java <nl> ppp CorePackageRenamer . java <nl> - import org . objectweb . asm . Handle ; <nl> - @ Override <nl> - public Object mapValue ( Object value ) { <nl> - if ( value instanceof Handle & & ! isRenamed ((( Handle ) value ) . getOwner ())) { <nl> - return value ; <nl> - } <nl> - return super . mapValue ( value ); <nl> 
mmm ByteCodeRewrite . java <nl> ppp ByteCodeRewrite . java <nl> - public static void apply () <nl> + public static void apply () <nl> - fixMethods ( cc ); <nl> + fixMethods ( cc , " registerJMX ", " unregisterJMX "); <nl> - fixMethods ( cc ); <nl> + fixMethods ( cc , " registerJMX ", " unregisterJMX "); <nl> 
mmm MQTTHandler . java <nl> ppp MQTTHandler . java <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - import java . util . concurrent . locks . Lock ; <nl> - import java . util . concurrent . locks . ReentrantLock ; <nl> - import org . dna . mqtt . moquette . messaging . spi . INotifier ; <nl> 
mmm UnderFileStatusTest . java <nl> ppp UnderFileStatusTest . java <nl> - import alluxio . CommonTestUtils ; <nl> 
mmm PlurkApi . java <nl> ppp PlurkApi . java <nl> - return String . format ( AUTHORIZATION _ URL , requestToken . getToken ()); <nl> + return String . format ( AUTHORIZE _ URL , requestToken . getToken ()); <nl> - public class Mobile extends PlurkApi <nl> - { <nl> - @ Override <nl> - public String getAuthorizationUrl ( Token requestToken ) <nl> 
new file <nl> ppp OrchestrationEncryptNamespaceTest . java <nl> + package org . apache . shardingsphere . shardingjdbc . orchestration . spring ; <nl> + import lombok . SneakyThrows ; <nl> + import org . apache . shardingsphere . api . config . encryptor . EncryptRuleConfiguration ; <nl> + import org . apache . shardingsphere . api . config . encryptor . EncryptorRuleConfiguration ; <nl> 
mmm LogActivity . java <nl> ppp LogActivity . java <nl> - return " png _ " + ( bitmap . getWidth () / 2 ) + " _ " + ( bitmap . getHeight () / 2 ); <nl> + return " png _ " + bitmap . getWidth () + " _ " + bitmap . getHeight (); <nl> 
mmm HttpServer . java <nl> ppp HttpServer . java <nl> + public Setting put ( RequestMatcher matcher ) { <nl> + return request ( and ( by ( method ( HttpMethod . PUT . name ())), matcher )); <nl> + } <nl> + public Setting trace ( RequestMatcher matcher ) { <nl> + return request ( and ( by ( method ( HttpMethod . TRACE . name ())), matcher )); <nl> 
mmm BasicRulesTest . java <nl> ppp BasicRulesTest . java <nl> + addRule (" basic ", " AvoidDecimalLiteralsInBigDecimalConstructor "); <nl> + addRule (" basic ", " AvoidMultipleUnaryOperators "); <nl> - addRule (" basic ", " AvoidDecimalLiteralsInBigDecimalConstructor "); <nl> 
mmm ExceptionMapping . java <nl> ppp ExceptionMapping . java <nl> + import java . io . IOException ; <nl> - log . error (" Request failed ", throwable ); <nl> + if ( throwable instanceof IOException ) { <nl> + log . debugf ( throwable , <nl> + " IOError processing HTTP request to % s failed , the client likely terminated the connection . ", <nl> 
mmm WorkloadPlugin . java <nl> ppp WorkloadPlugin . java <nl> - public WorkloadPlugin () { <nl> - } <nl> - protected VoldemortWrapper getDb () { <nl> - return db ; <nl> - } <nl> - protected void setDb ( VoldemortWrapper db ) { <nl> + public void setDb ( VoldemortWrapper db ) { <nl> 
new file <nl> ppp CopySets . java <nl> + package com . baeldung . set ; <nl> + import java . io . Serializable ; <nl> + import java . util . HashSet ; <nl> + import java . util . Set ; <nl> + import java . util . stream . Collectors ; <nl> + import org . apache . commons . lang . SerializationUtils ; <nl> + import com . google . gson . Gson ; <nl> 
mmm NewConnectionHandler . java <nl> ppp NewConnectionHandler . java <nl> - void onNewConnection ( final String channel , final int streamId , final int sessionId ); <nl> + void onNewConnection ( String channel , int streamId , int sessionId ); <nl> 
mmm CheckoutActivity . java <nl> ppp CheckoutActivity . java <nl> + import com . kickstarter . ui . toolbars . KSToolbar ; <nl> + import butterknife . BindString ; <nl> + @ Bind ( R . id . checkout _ toolbar ) KSToolbar checkoutToolbar ; <nl> - public @ Bind ( R . id . toolbar _ title ) TextView toolbarTitleTextView ; <nl> 
mmm MySqlSelectTest _ 68 _ mariadb _ cte . java <nl> ppp MySqlSelectTest _ 68 _ mariadb _ cte . java <nl> + System . out . println ( stmt ); <nl> 
new file <nl> ppp S3AsyncStreamOps . java <nl> + package com . example . s3 ; <nl> + import software . amazon . awssdk . async . AsyncResponseHandler ; <nl> + import software . amazon . awssdk . services . s3 . S3AsyncClient ; <nl> + import software . amazon . awssdk . services . s3 . model . GetObjectRequest ; <nl> 
mmm ShadowSystemClock . java <nl> ppp ShadowSystemClock . java <nl> + if ( ShadowApplication . getInstance () == null ) { <nl> + return 0 ; <nl> + } <nl> + if ( ShadowApplication . getInstance () == null ) { <nl> + return ; <nl> + } <nl> + if ( ShadowApplication . getInstance () == null ) { <nl> + return false ; <nl> 
mmm DBeaverVersionChecker . java <nl> ppp DBeaverVersionChecker . java <nl> - showUpdaterDialog ( versionDescriptor ); <nl> + showUpdaterDialog ( null ); <nl> 
mmm ConcurrentSequencedCircularArrayQueue . java <nl> ppp ConcurrentSequencedCircularArrayQueue . java <nl> - protected static final int SEQ _ BUFFER _ PAD ; <nl> - SEQ _ BUFFER _ PAD = ( PortableJvmInfo . CACHE _ LINE _ SIZE * 2 ) / scale ; <nl> - ARRAY _ BASE = UnsafeAccess . UNSAFE . arrayBaseOffset ( long [] . class ) + ( SEQ _ BUFFER _ PAD * ( long ) scale ); <nl> 
new file <nl> ppp TransactionImportValidator . java <nl> + package io . ballerina . projects . internal ; <nl> + import io . ballerina . compiler . syntax . tree . CommitActionNode ; <nl> + import io . ballerina . compiler . syntax . tree . MethodDeclarationNode ; <nl> + import io . ballerina . compiler . syntax . tree . ModulePartNode ; <nl> 
mmm TypeOfText . java <nl> ppp TypeOfText . java <nl> 
mmm Round . java <nl> ppp Round . java <nl> - return (( Number ) args [ 0 ]) . longValue (); <nl> + return Math . round ((( Number ) args [ 0 ]) . doubleValue ()); <nl> 
mmm ProjectFilterTest . java <nl> ppp ProjectFilterTest . java <nl> - public void shouldNotIncludeRoot () { <nl> + public void includingRootShouldBeOptional () { <nl> 
mmm XValueFormatter . java <nl> ppp XValueFormatter . java <nl> 
mmm TeltonikaProtocolDecoderTest . java <nl> ppp TeltonikaProtocolDecoderTest . java <nl> - verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertArray ( <nl> + assertNull ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertArray ( <nl> 
mmm AndroidDex2OatInfo . java <nl> ppp AndroidDex2OatInfo . java <nl> + import com . google . devtools . build . lib . concurrent . ThreadSafety . Immutable ; <nl> - public class AndroidDex2OatInfo extends NativeInfo { <nl> + @ Immutable <nl> + public final class AndroidDex2OatInfo extends NativeInfo { <nl> 
mmm CharFunction . java <nl> ppp CharFunction . java <nl> - long value = 0 ; <nl> - value = Long . parseLong ( numberString . substring ( 2 ), 16 ); <nl> - } else { <nl> - value = Long . parseLong ( numberString ); <nl> - } <nl> + long value = Long . decode ( numberString ) . longValue (); <nl> + char ch = ( char ) value ; <nl> 
deleted file <nl> mmm HelloWebServer . java <nl> - package hello ; <nl> - import java . net . InetAddress ; <nl> - import java . net . InetSocketAddress ; <nl> - import java . nio . ByteBuffer ; <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - import com . fasterxml . jackson . databind . ObjectMapper ; <nl> 
mmm RestClientBase . java <nl> ppp RestClientBase . java <nl> - import com . oracle . svm . core . jdk . UnsupportedFeatureError ; <nl> - } catch ( UnsupportedFeatureError e ) { <nl> - throw new IllegalArgumentException ( baseUrl + " requires SSL support but it is disabled . You probably have set shamrock . ssl . native to false . "); <nl> 
mmm MigrationType . java <nl> ppp MigrationType . java <nl> - } <nl> + } <nl> 
mmm DataFileChannelTest . java <nl> ppp DataFileChannelTest . java <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> - import org . junit . Assert ; <nl> - Assert . assertTrue ( output instanceof FileRegion ); <nl> + assertTrue ( output instanceof FileRegion ); <nl> 
mmm TitanCassandraInputFormat . java <nl> ppp TitanCassandraInputFormat . java <nl> - this . titanInputConf . set ( GraphDatabaseConfiguration . STORAGE _ READONLY , true ); <nl> 
mmm ModelDeserializer . java <nl> ppp ModelDeserializer . java <nl> - model . setChild ( new ModelImpl ()); <nl> - } <nl> - if ( allComponents . size () >= 2 ) { <nl> - model . setChild ( allComponents . get ( allComponents . size () - 1 )); <nl> - List < RefModel > interfaces = new ArrayList < RefModel >(); <nl> 
mmm BaseDanmakuParser . java <nl> ppp BaseDanmakuParser . java <nl> - public BaseDanmakuParser setTimer ( DanmakuTimer timer ){ <nl> - mTimer = timer ; <nl> - return this ; <nl> + public BaseDanmakuParser setTimer ( DanmakuTimer timer ) { <nl> + mTimer = timer ; <nl> + return this ; <nl> + } <nl> + public DanmakuTimer getTimer () { <nl> 
mmm UserListActivity . java <nl> ppp UserListActivity . java <nl> - import com . fernandocejas . android10 . sample . presentation . navigation . Navigator ; <nl> - private void initialize () { <nl> - this . navigator = new Navigator (); <nl> - } <nl> 
mmm ContactColors . java <nl> ppp ContactColors . java <nl> - MaterialColor . TAUPE , <nl> - MaterialColor . STEEL <nl> + MaterialColor . TAUPE <nl> 
new file <nl> ppp InvocationOnMock . java <nl> + package org . mockito . internal . invocation ; <nl> + import java . lang . reflect . Method ; <nl> + public interface InvocationOnMock { <nl> + Object getMock (); <nl> + Method getMethod (); <nl> + Object [] getArguments (); <nl> + } <nl> 
mmm PathTypeCoercer . java <nl> ppp PathTypeCoercer . java <nl> - final Path normalizedPath ; <nl> - try { <nl> - normalizedPath = pathRelativeToProjectRoot . resolve ( path ) . normalize (); <nl> - } catch ( RuntimeException e ) { <nl> - throw new CoerceFailedException (" invalid path ", e ); <nl> + if ( path . isEmpty ()) { <nl> 
mmm InsertProjectsAuthorizationUpdatedAtMigration . java <nl> ppp InsertProjectsAuthorizationUpdatedAtMigration . java <nl> - massUpdate . select (" SELECT p . id FROM projects p WHERE p . scope =? AND p . enabled =?") . setString ( 1 , " PRJ ") . setBoolean ( 2 , true ); <nl> + massUpdate . select (" SELECT p . id FROM projects p WHERE p . scope =? AND p . enabled =? and p . authorization _ updated _ at IS NULL ") . setString ( 1 , " PRJ ") . setBoolean ( 2 , true ); <nl> 
new file <nl> ppp EnumOrdinalTest . java <nl> + package com . alibaba . json . bvt . serializer . enum _ ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . serializer . SerializerFeature ; <nl> + import junit . framework . TestCase ; <nl> + public class EnumOrdinalTest extends TestCase { <nl> 
mmm ProductInfoRepositoryIntegrationTest . java <nl> ppp ProductInfoRepositoryIntegrationTest . java <nl> - import org . springframework . boot . test . IntegrationTest ; <nl> - import org . springframework . boot . test . SpringApplicationConfiguration ; <nl> + import org . springframework . boot . test . context . SpringBootTest ; <nl> 
mmm User . java <nl> ppp User . java <nl> + Integer id = null ; <nl> + static User currentUser ; <nl> + public Integer id () { return id ; } <nl> + public static void setCurrent ( final User user ) { <nl> + currentUser = user ; <nl> + } <nl> + public static void unsetCurrent () { <nl> + currentUser = null ; <nl> 
mmm BasicQueryCassandra . java <nl> ppp BasicQueryCassandra . java <nl> + public KeyValue () { <nl> + } <nl> 

mmm CustomMybatisMapperTest . java <nl> ppp CustomMybatisMapperTest . java <nl> - } <nl> + } <nl> - } <nl> + } <nl> - public void testFetchTaskWithSpecificVariable () { <nl> + public void testFetchTaskWithSpecificVariable () { <nl> - for ( int i = 0 ; i < 5 ; i + + ) { <nl> - Task task = taskService . newTask (); <nl> 
new file <nl> ppp BasicQueryCassandra . java <nl> + package com . oreilly . learningsparkexamples . java ; <nl> + import java . io . StringReader ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . Iterator ; <nl> + import java . lang . Iterable ; <nl> + import scala . Tuple2 ; <nl> 
mmm OrchestrationSpringBootMasterSlaveTest . java <nl> ppp OrchestrationSpringBootMasterSlaveTest . java <nl> + import io . shardingsphere . jdbc . orchestration . internal . OrchestrationMasterSlaveDataSource ; <nl> - assertTrue ( dataSource instanceof MasterSlaveDataSource ); <nl> - for ( DataSource each : (( MasterSlaveDataSource ) dataSource ) . getAllDataSources () . values ()) { <nl> 
mmm IntroActivity . java <nl> ppp IntroActivity . java <nl> - setSkipText ( getString ( R . string . action _ skip ) . toUpperCase ()); <nl> + showSkipButton ( false ); <nl> 
mmm FailureRateRestartStrategyMain . java <nl> ppp FailureRateRestartStrategyMain . java <nl> 
mmm NoWhitespaceBeforeCheck . java <nl> ppp NoWhitespaceBeforeCheck . java <nl> - final int after = aAST . getColumnNo () + aAST . getText () . length (); <nl> 
mmm Language . java <nl> ppp Language . java <nl> + Croatian ( treebankForLanguage (" Croatian ")), <nl> + OldFrench ( treebankForLanguage (" OldFrench ")), <nl> 
mmm SyncRequestExecutor . java <nl> ppp SyncRequestExecutor . java <nl> + import com . yanzhenjie . nohttp . InitializationConfig ; <nl> 
mmm PropertyType . java <nl> ppp PropertyType . java <nl> - public static final short Reference = 11 ; <nl> + public static final short Relation = 11 ; <nl> - public static final String [] names = { " Unknown ", " Bool ", " Byte ", " Short ", " Char ", " Int ", " Long ", " Float ", " Double ", " String ", " Date ", " Reference ", " Reserved1 ", " Reserved2 ", " Reserved3 ", " Reserved4 ", " Reserved5 ", " Reserved6 ", " Reserved7 ", " Reserved8 ", " Reserved9 ", " Reserved10 ", " BoolVector ", " ByteVector ", " ShortVector ", " CharVector ", " IntVector ", " LongVector ", " FloatVector ", " DoubleVector ", " StringVector ", " DateVector ", }; <nl> 
mmm ClusterTool . java <nl> ppp ClusterTool . java <nl> - private static File clusterDir ; <nl> - if ( args . length == 0 || args . length > 3 ) <nl> + if ( args . length == 0 || args . length > 2 ) <nl> - clusterDir = new File ( args [ 0 ]); <nl> + final File clusterDir = new File ( args [ 0 ]); <nl> - if ( args . length == 2 & & args [ 1 ] . equals (" describe ")) <nl> 
mmm SlowRequestFilter . java <nl> ppp SlowRequestFilter . java <nl> - import javax . servlet . *; <nl> + import javax . servlet . Filter ; <nl> + import javax . servlet . FilterChain ; <nl> + import javax . servlet . FilterConfig ; <nl> + import javax . servlet . ServletException ; <nl> + import javax . servlet . ServletRequest ; <nl> 
mmm MetricsController . java <nl> ppp MetricsController . java <nl> - metrics . putAll ( node . getMetrics (" com . graylog2 ")); <nl> 
mmm MockRequestHandler . java <nl> ppp MockRequestHandler . java <nl> - new LruCache < String , Long >((( int ) Math . max ( DataModule . DISK _ CACHE _ SIZE , Integer . MAX _ VALUE ))) { <nl> + new LruCache < String , Long >((( int ) Math . min ( DataModule . DISK _ CACHE _ SIZE , Integer . MAX _ VALUE ))) { <nl> 
mmm RetransmissionHandler . java <nl> ppp RetransmissionHandler . java <nl> - import io . netty . handler . codec . mqtt . MqttMessageType ; <nl> - import io . netty . handler . codec . mqtt . MqttQoS ; <nl> + import io . netty . handler . codec . mqtt . MqttMessageType ; <nl> - boolean isDup = this . originalMessage . fixedHeader () . isDup (); <nl> 
mmm HitchhikerMocks . java <nl> ppp HitchhikerMocks . java <nl> + import org . cratedb . action . groupby . aggregate . max . MaxAggFunction ; <nl> + put ( MaxAggFunction . NAME , new MaxAggFunction ()); <nl> 
deleted file <nl> mmm zibaseBindingProvider . java <nl> - package org . openhab . binding . zibase ; <nl> - import org . openhab . core . binding . BindingProvider ; <nl> - public interface zibaseBindingProvider extends BindingProvider { <nl> - } <nl> 
mmm StackTest . java <nl> ppp StackTest . java <nl> - MemoryStack stack = new MemoryStack (); <nl> + MemoryStack stack = MemoryStack . create (); <nl> 
mmm AbstractJUnit5TestEngineTests . java <nl> ppp AbstractJUnit5TestEngineTests . java <nl> - import static org . junit . gen5 . api . Assertions . assertEquals ; <nl> 
mmm KinesisStreamRxJavaEx . java <nl> ppp KinesisStreamRxJavaEx . java <nl> - private static final String CONSUMER _ ARN = " arn : aws : kinesis : us - east - 1 : 1234567890 : stream / stream - name / consumer / consumer - name : 1234567890 "; <nl> + private static final String CONSUMER _ ARN = " arn : aws : kinesis : us - east - 1 : 052958737983 : stream / foobar / consumer / shorea - consumer : 1525898737 "; <nl> 
new file <nl> ppp HashBenchmark . java <nl> + package org . sonar . microbenchmark ; <nl> + import net . jpountz . xxhash . XXHash32 ; <nl> + import net . jpountz . xxhash . XXHash64 ; <nl> + import net . jpountz . xxhash . XXHashFactory ; <nl> + import org . apache . commons . codec . digest . DigestUtils ; <nl> 
mmm WebInterfaceConfigurationServlet . java <nl> ppp WebInterfaceConfigurationServlet . java <nl> + import com . google . common . collect . Sets ; <nl> 
mmm Entity . java <nl> ppp Entity . java <nl> + boolean generateGettersSetters () default true ; <nl> 
mmm IntegrateDDLParsingTest . java <nl> ppp IntegrateDDLParsingTest . java <nl> - if ( DatabaseType . H2 == databaseType ) { <nl> + if ( DatabaseType . H2 == databaseType ) { <nl> 
mmm SimplifyBooleanExpressionCheck . java <nl> ppp SimplifyBooleanExpressionCheck . java <nl> + public int [] getAcceptableTokens () <nl> + { <nl> + return new int [] {}; <nl> + } <nl> + public int [] getRequiredTokens () <nl> + { <nl> + return new int [] { TokenTypes . LITERAL _ TRUE , TokenTypes . LITERAL _ FALSE }; <nl> 
mmm FuncUtils . java <nl> ppp FuncUtils . java <nl> 
mmm RequestInterceptor . java <nl> ppp RequestInterceptor . java <nl> 
mmm MetadataReport . java <nl> ppp MetadataReport . java <nl> + import org . apache . dubbo . metadata . URLRevisionResolver ; <nl> + import java . util . Collection ; <nl> + import java . util . Collections ; <nl> + import static org . apache . dubbo . rpc . model . ApplicationModel . getName ; <nl> + default boolean saveExportedURLs ( Collection < URL > exportedURLs ) { <nl> 
mmm NameHash . java <nl> ppp NameHash . java <nl> - static String normalise ( String ensName ) { <nl> + public static String normalise ( String ensName ) { <nl> 
mmm PatternRuleXmlCreatorTest . java <nl> ppp PatternRuleXmlCreatorTest . java <nl> 
mmm OkExStreamingExchange . java <nl> ppp OkExStreamingExchange . java <nl> 
mmm ITopic . java <nl> ppp ITopic . java <nl> + * See {@ link ReliableMessageListener } to better integrate with a reliable topic . <nl> 
mmm UnsynchronizedStaticFormatterRule . java <nl> ppp UnsynchronizedStaticFormatterRule . java <nl> - if ( getProperty ( ALLOW _ METHOD _ LEVEL _ SYNC )) { <nl> - ASTMethodDeclaration method = n . getFirstParentOfType ( ASTMethodDeclaration . class ); <nl> - if ( method != null & & (! method . isSynchronized () || ! method . isStatic ())) { <nl> 
mmm SharedUtil . java <nl> ppp SharedUtil . java <nl> - sEditor . putInt ( VERSION + extraKeyName , newVersion ); <nl> + sEditor . putInt ( VERSION + " _ " + extraKeyName , newVersion ); <nl> - return sPref . getInt ( VERSION + extraKeyName , 0 ); <nl> + return sPref . getInt ( VERSION + " _ " + extraKeyName , 0 ); <nl> 
mmm EspressoHelper . java <nl> ppp EspressoHelper . java <nl> - import android . widget . TextView ; <nl> + import android . widget . TextView ; <nl> - Thread . sleep ( 100 ); <nl> + Thread . sleep ( 300 ); <nl> 
mmm RocketMQConstants . java <nl> ppp RocketMQConstants . java <nl> 
mmm SimpleJNDIUnitTest . java <nl> ppp SimpleJNDIUnitTest . java <nl> + import org . junit . jupiter . api . AfterEach ; <nl> + System . setProperty (" java . naming . factory . initial ", " org . osjava . sj . SimpleContextFactory "); <nl> + System . setProperty (" org . osjava . sj . delimiter ", " . "); <nl> 
mmm OptionsProvider . java <nl> ppp OptionsProvider . java <nl> - public List < UnparsedOptionValueDescription > asListOfExplicitOptions (); <nl> + List < UnparsedOptionValueDescription > asListOfExplicitOptions (); <nl> - public List < OptionValueDescription > asListOfEffectiveOptions (); <nl> + List < OptionValueDescription > asListOfEffectiveOptions (); <nl> 
new file <nl> ppp StormConnectionStateConverter . java <nl> + package org . apache . storm . utils ; <nl> + import org . apache . storm . cluster . ConnectionState ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + public class StormConnectionStateConverter { <nl> + private static final Map < org . apache . curator . framework . state . ConnectionState , ConnectionState > mapCuratorToStorm = new HashMap <>(); <nl> 
mmm SqlRequest . java <nl> ppp SqlRequest . java <nl> + import io . metersphere . api . dto . scenario . controller . IfController ; <nl> + import io . metersphere . api . dto . scenario . timer . ConstantTimer ; <nl> + @ JSONField ( ordinal = 15 ) <nl> + private IfController controller ; <nl> + @ JSONField ( ordinal = 16 ) <nl> 
mmm JobMasterConfiguration . java <nl> ppp JobMasterConfiguration . java <nl> - private final Time slotIdleTimeout ; <nl> - Time slotIdleTimeout , <nl> - this . slotIdleTimeout = Preconditions . checkNotNull ( slotIdleTimeout ); <nl> - public Time getSlotIdleTimeout () { <nl> - return slotIdleTimeout ; <nl> 
mmm AggregationDistinctQueryMetaDataTest . java <nl> ppp AggregationDistinctQueryMetaDataTest . java <nl> + import static org . junit . Assert . assertTrue ; <nl> - public void assertGetAggregationDistinctColumnIndexes () { <nl> - Collection < Integer > actual = distinctQueryMetaData . getAggregationDistinctColumnIndexes (); <nl> 
mmm MainList . java <nl> ppp MainList . java <nl> + data . put (" LauncherActivity ", LauncherActivity . class ); <nl> 
mmm ConfusionMatrix . java <nl> ppp ConfusionMatrix . java <nl> - if ( truth . length != prediction . length ){ <nl> + if ( truth . length != prediction . length ) { <nl> - Set < Integer > ySet = new HashSet <>(); <nl> -  <nl> - for ( int i = 0 ; i < truth . length ; i + + ){ <nl> - ySet . add ( truth [ i ]); <nl> 

deleted file <nl> mmm decomp004 . java <nl> - package com . ibm . jvmti . tests . decompResolveFrame ; <nl> - public class decomp004 <nl> - { <nl> - private static native boolean triggerDecompile (); <nl> -  <nl> - public synchronized void jitMe () { <nl> - if (! triggerDecompile ()) { <nl> - throw new Error (" failed to enable single step "); <nl> 
mmm PlatformLineWriterTest . java <nl> ppp PlatformLineWriterTest . java <nl> - import groovy . text . SimpleTemplateEngine ; <nl> - import groovy . text . Template ; <nl> + import groovy . lang . Binding ; <nl> + import groovy . lang . GroovyShell ; <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> 
mmm BossaCUploader . java <nl> ppp BossaCUploader . java <nl> + port ); <nl> - commandDownloader . add (" - v "); <nl> - commandDownloader . add (" - b "); <nl> + commandDownloader . add (" - s "); <nl> + commandDownloader . add (" - l "); <nl> 
new file <nl> ppp CmpPNodeSubTest . java <nl> + package compiler . c2 ; <nl> + public class CompareKlassPointersTest { <nl> + static A a ; <nl> + public static void main ( String [] args ) { <nl> + a = new C (); <nl> + for ( int i = 0 ; i < 10 _ 000 ; i + + ) { <nl> + test (); <nl> + } <nl> + } <nl> + public static int test () { <nl> 
new file <nl> ppp AbstractNumberUnitTest . java <nl> + package com . baeldung . abstractnumber ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import org . junit . Test ; <nl> + public class AbstractNumberUnitTest { <nl> + private final static double DOUBLE _ VALUE = 9999 . 999 ; <nl> + private final static float FLOAT _ VALUE = 101 . 99F ; <nl> 
mmm PreliminaryGetDataRequest . java <nl> ppp PreliminaryGetDataRequest . java <nl> - import java . util . Optional ; <nl> - import javax . annotation . Nullable ; <nl> + import org . jetbrains . annotations . NotNull ; <nl> - @ Nullable <nl> - Set < byte []> excludedKeys ) { <nl> + @ NotNull Set < byte []> excludedKeys ) { <nl> 
mmm ExternalResources . java <nl> ppp ExternalResources . java <nl> - import java . nio . channels . FileChannel ; <nl> - try ( FileChannel source = new FileInputStream ( sourceFile ) . getChannel (); <nl> - FileChannel destination = new FileOutputStream ( destFile ) . getChannel ()){ <nl> - destination . transferFrom ( source , 0 , source . size ()); <nl> 
mmm StreamsApiController . java <nl> ppp StreamsApiController . java <nl> + public Result get ( String streamId ) throws IOException , APIException { <nl> + return ok ( Json . toJson ( streamService . get ( streamId ))); <nl> + } <nl> - @ BodyParser . Of ( BodyParser . Json . class ) <nl> - TestMatchResponse response = null ; <nl> 
mmm TermView . java <nl> ppp TermView . java <nl> - import android . util . Log ; <nl> 
mmm KeysController . java <nl> ppp KeysController . java <nl> + import java . util . ArrayList ; <nl> + if ( jwkProviders . isEmpty ()) { <nl> + return Single . just ( EMPTY _ KEYS ); <nl> + } <nl> 
mmm MuteDialog . java <nl> ppp MuteDialog . java <nl> - case 0 : muteUntil = System . currentTimeMillis () + TimeUnit . HOURS . toMillis ( 1 ); break ; <nl> - case 1 : muteUntil = System . currentTimeMillis () + TimeUnit . HOURS . toMillis ( 2 ); break ; <nl> - case 2 : muteUntil = System . currentTimeMillis () + TimeUnit . DAYS . toMillis ( 1 ); break ; <nl> 
deleted file <nl> mmm CloneableObject . java <nl> - package jodd . util ; <nl> - public interface CloneableObject extends Cloneable { <nl> - Object clone () throws CloneNotSupportedException ; <nl> - } <nl> 

new file <nl> ppp DiffEngineTest . java <nl> + package com . ichi2 . anki . utils ; <nl> + import com . ichi2 . utils . DiffEngine ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import androidx . test . ext . junit . runners . AndroidJUnit4 ; <nl> + import static org . junit . Assert . assertArrayEquals ; <nl> 
mmm DynSSLParam . java <nl> ppp DynSSLParam . java <nl> - setRootca ( getConfig () . getString ( PARAM _ ROOT _ CA , null )); <nl> + String rootcastr = getConfig () . getString ( PARAM _ ROOT _ CA , null ); <nl> + if ( rootcastr != null ) { <nl> + setRootca ( rootcastr ); <nl> + } <nl> 
mmm DeflectorResource . java <nl> ppp DeflectorResource . java <nl> - import com . google . common . collect . ImmutableMap ; <nl> - import org . graylog2 . rest . models . system . responses . TimeBasedRotationStrategyResponse ; <nl> 
mmm Testcontainers . java <nl> ppp Testcontainers . java <nl> - * < p > The test containers extension finds all fields of type <nl> - * {@ link org . testcontainers . lifecycle . Startable } that are annotated with <nl> + * < p > The test containers extension finds all fields that are annotated with <nl> 
mmm StopWatcherTest . java <nl> ppp StopWatcherTest . java <nl> - import java . util . concurrent . TimeUnit ; <nl> - import org . junit . Rule ; <nl> - import org . junit . rules . Timeout ; <nl> - @ Rule <nl> - public Timeout timeout = new Timeout ( 1000 , TimeUnit . MILLISECONDS ); <nl> - @ Test <nl> + @ Test ( timeout = 1000 ) <nl> 
mmm XPathCLI . java <nl> ppp XPathCLI . java <nl> - package net . sourceforge . pmd ; <nl> + package net . sourceforge . pmd . cli ; <nl> + import net . sourceforge . pmd . PMD ; <nl> + import net . sourceforge . pmd . PMDConfiguration ; <nl> + import net . sourceforge . pmd . Rule ; <nl> + import net . sourceforge . pmd . RuleContext ; <nl> 
mmm NotificationsAdapter . java <nl> ppp NotificationsAdapter . java <nl> + import com . fastaccess . R ; <nl> - if ( hideClear ){ <nl> - int pos = position + 1 ; <nl> - boolean hasUnread = false ; <nl> - while ( getItemViewType ( pos )!= GroupedNotificationModel . HEADER & & <nl> - pos < getItemCount () - 1 ) { <nl> 
mmm TransactionMerger . java <nl> ppp TransactionMerger . java <nl> - import com . dianping . cat . message . Event ; <nl> - Event event = Cat . getProducer () . newEvent (" Transaction ", " XML "); <nl> - event . setStatus ( Event . SUCCESS ); <nl> - event . addData ( xml ); <nl> 
mmm DoubleFormatTest . java <nl> ppp DoubleFormatTest . java <nl> - import com . sun . javafx . sg . prism . NGShape ; <nl> - import java . text . DecimalFormat ; <nl> 
mmm RecyclerViewBindingAdapter . java <nl> ppp RecyclerViewBindingAdapter . java <nl> - @ BindingAdapter ( value = {" adapter "}) <nl> - public static void setAdapter ( RecyclerView recyclerView , RecyclerView . Adapter adapter ) { <nl> - if ( recyclerView != null & & adapter != null ) { <nl> - recyclerView . setAdapter ( adapter ); <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm SenderManager . java <nl> ppp SenderManager . java <nl> - Sender sender = m _ senders . get ( channelName ); <nl> + Sender sender = m _ senders . get ( channelName ); <nl> - String type = message . getType (); <nl> - Cat . logEvent (" Channel :" + channelName , type + ":" + str , Event . SUCCESS , null ); <nl> 
mmm ShardingEncryptorStrategyTest . java <nl> ppp ShardingEncryptorStrategyTest . java <nl> - import org . apache . shardingsphere . core . exception . ShardingConfigurationException ; <nl> - EncryptorRuleConfiguration encryptorRuleConfiguration = new EncryptorRuleConfiguration (" test ", " pwd1 , pwd2 ", new Properties ()); <nl> 
mmm BaseDataSource . java <nl> ppp BaseDataSource . java <nl> + import static com . google . android . exoplayer2 . util . Util . castNonNull ; <nl> - import com . google . android . exoplayer2 . util . Assertions ; <nl> - for ( int i = 0 ; i < listeners . size (); i + + ) { <nl> + for ( int i = 0 ; i < listenerCount ; i + + ) { <nl> 
mmm OrchestrationMasterSlaveNamespaceTest . java <nl> ppp OrchestrationMasterSlaveNamespaceTest . java <nl> - MasterSlaveDataSource masterSlaveDataSource = this . applicationContext . getBean ( masterSlaveDataSourceName , MasterSlaveDataSource . class ); <nl> - return ( MasterSlaveRule ) FieldValueUtil . getFieldValue ( masterSlaveDataSource , " masterSlaveRule ", true ); <nl> 
new file <nl> ppp NodesWithNoSibling . java <nl> + package com . interview . tree ; <nl> + public class NodesWithNoSibling { <nl> + public void printNodes ( Node root ){ <nl> + if ( root == null ){ <nl> + return ; <nl> + } <nl> + if ( root . left == null || root . right == null ){ <nl> + if ( root . left != null ){ <nl> 
new file <nl> ppp EeaGasProvider . java <nl> + package org . web3j . protocol . eea . tx . gas ; <nl> + import org . web3j . tx . gas . StaticGasProvider ; <nl> + import java . math . BigInteger ; <nl> + public class EeaGasProvider extends StaticGasProvider { <nl> + public EeaGasProvider ( BigInteger gasPrice ) { <nl> 
mmm ShiroConfig . java <nl> ppp ShiroConfig . java <nl> 

mmm ThumbnailSelectionAdapter . java <nl> ppp ThumbnailSelectionAdapter . java <nl> + import android . content . res . Resources ; <nl> + import android . support . annotation . ColorInt ; <nl> + import android . util . TypedValue ; <nl> + import org . shadowice . flocke . andotp . R ; <nl> + try { <nl> + TypedValue typedValue = new TypedValue (); <nl> 
mmm ConfigRecorder . java <nl> ppp ConfigRecorder . java <nl> - throw new IllegalStateException (" Unable to load the config property type : " + className ); <nl> + throw new IllegalStateException (" Unable to load the config property type : " + className , e ); <nl> 
new file <nl> ppp HeapSort . java <nl> + public class HeapSort { <nl> + private static void heapify ( int [] arr , int root , int heapSize ) { <nl> + int leftChild = 2 * root + 1 ; <nl> + int rightChild = 2 * root + 2 ; <nl> + if ( leftChild < heapSize & & arr [ leftChild ] > arr [ root ]) <nl> + maximum = leftChild ; <nl> 
mmm CallerAccessTest . java <nl> ppp CallerAccessTest . java <nl> + * @ requires os . family != " aix " <nl> 
new file <nl> ppp SendEmail . java <nl> + package sporadic ; <nl> + import java . util . Properties ; <nl> + import javax . mail . Message ; <nl> + import javax . mail . MessagingException ; <nl> + import javax . mail . Session ; <nl> + import javax . mail . Transport ; <nl> + import javax . mail . internet . InternetAddress ; <nl> 
mmm OConstants . java <nl> ppp OConstants . java <nl> - public static final String ORIENT _ VERSION = " 1 . 7 . 7 - SNAPSHOT "; <nl> + public static final String ORIENT _ VERSION = " 1 . 7 . 7 "; <nl> 
new file <nl> ppp ProtobufJsonSerializer . java <nl> + package serializers ; <nl> + import serializers . protobuf . MediaContentHolder ; <nl> + import java . io . IOException ; <nl> + import java . nio . charset . Charset ; <nl> + import com . google . protobuf . JsonFormat ; <nl> + public class ProtobufJsonSerializer implements ObjectSerializer < MediaContentHolder . MediaContent > <nl> 
mmm LocalTopService . java <nl> ppp LocalTopService . java <nl> + import java . util . Date ; <nl> + import com . dianping . cat . helper . TimeUtil ; <nl> - report = new TopReport ( domain ); <nl> + Date start = new Date ( date ); <nl> + Date end = new Date ( date + TimeUtil . ONE _ HOUR ); <nl> + report = m _ reportSerivce . queryTopReport ( domain , start , end ); <nl> 
new file <nl> ppp DupRegisterTest . java <nl> + package com . alibaba . druid . bvt . jmx ; <nl> + import java . lang . management . ManagementFactory ; <nl> + import javax . management . MBeanServer ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . druid . pool . DruidDataSource ; <nl> + import junit . framework . TestCase ; <nl> 
new file <nl> ppp CropImageActivity . java <nl> + package com . theartofdev . edmodo . cropper ; <nl> + import android . app . ActionBar ; <nl> + import android . app . Activity ; <nl> + import android . content . Intent ; <nl> + import android . os . Bundle ; <nl> + import android . view . Menu ; <nl> + import android . view . MenuItem ; <nl> 
mmm CommandUtils . java <nl> ppp CommandUtils . java <nl> - import com . google . common . base . Throwables ; <nl> - throw Throwables . propagate ( e ); <nl> + throw new RuntimeException ( e ); <nl> 
deleted file <nl> mmm SviasProtocolEncoder . java <nl> - package org . traccar . protocol ; <nl> - import org . traccar . StringProtocolEncoder ; <nl> - import org . traccar . helper . Log ; <nl> - import org . traccar . model . Command ; <nl> - public class SviasProtocolEncoder extends StringProtocolEncoder { <nl> 
mmm EngineTestKitStatisticsDemo . java <nl> ppp EngineTestKitStatisticsDemo . java <nl> - class EngineTestKitDemo { <nl> + class EngineTestKitStatisticsDemo { <nl> 
mmm ServiceInstanceListRoundRobinLoadBalancer . java <nl> ppp ServiceInstanceListRoundRobinLoadBalancer . java <nl> - import io . micronaut . core . async . publisher . Publishers ; <nl> 
mmm SpringMockTestExecutionListener . java <nl> ppp SpringMockTestExecutionListener . java <nl> + import org . springframework . beans . factory . config . BeanDefinition ; <nl> + import org . springframework . beans . factory . support . BeanDefinitionRegistry ; <nl> + BeanDefinition beanDefinition = (( BeanDefinitionRegistry ) applicationContext ) . getBeanDefinition ( beanName ); <nl> 
mmm Bool . java <nl> ppp Bool . java <nl> + public Bool ( Boolean value ) { <nl> + this . value = value ; <nl> + } <nl> 
mmm UnsafeDetectUtil . java <nl> ppp UnsafeDetectUtil . java <nl> - return false ; <nl> - } catch ( PrivilegedActionException e ) { <nl> - return false ; <nl> - } <nl> + return false ; <nl> + } catch ( PrivilegedActionException e ) { <nl> + return false ; <nl> + } <nl> - return AccessController . doPrivileged ( new PrivilegedExceptionAction < Boolean >() { <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm TrainCRFClassifierSlowITest . java <nl> ppp TrainCRFClassifierSlowITest . java <nl> - List < String > germanTrainingResults = IOUtils . linesFromFile ( crfTrainingWorkingDir + " german - crf . results "); <nl> + List < String > germanTrainingResults = IOUtils . linesFromFile ( crfTrainingWorkingDir + "/ german - crf . results "); <nl> 
mmm HttpServletCarrier . java <nl> ppp HttpServletCarrier . java <nl> - this . it = new Iterator < Map . Entry < String , String >>() { <nl> + this . it = new Iterator <>() { <nl> - return new Map . Entry < String , String >() { <nl> + return new Map . Entry <>() { <nl> 
mmm GoBinaryDescription . java <nl> ppp GoBinaryDescription . java <nl> + import com . facebook . buck . cxx . CxxPlatform ; <nl> + import com . facebook . buck . rules . ImplicitDepsInferringDescription ; <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . collect . ImmutableList ; <nl> 
mmm FacetSortingTest . java <nl> ppp FacetSortingTest . java <nl> 
mmm CustomAdaptActivity . java <nl> ppp CustomAdaptActivity . java <nl> + import android . content . Intent ; <nl> + import android . support . v4 . app . Fragment ; <nl> + import android . view . View ; <nl> + public void goCustomAdaptFragment ( View view ) { <nl> + startActivity ( new Intent ( getApplicationContext (), FragmentHost . class )); <nl> 
mmm NettyChannelConnector . java <nl> ppp NettyChannelConnector . java <nl> + import static org . asynchttpclient . util . Assertions . assertNotNull ; <nl> - this . timeoutsHolder = timeoutsHolder ; <nl> + this . timeoutsHolder = assertNotNull ( timeoutsHolder , " timeoutsHolder "); <nl> 
mmm FileCollectSource . java <nl> ppp FileCollectSource . java <nl> + import io . crate . data . Row ; <nl> - BatchIterator fileReadingIterator = FileReadingIterator . newInstance ( <nl> + BatchIterator < Row > fileReadingIterator = FileReadingIterator . newInstance ( <nl> 
deleted file <nl> mmm Book . java <nl> - package com . hexagonal . domain ; <nl> - public class Book { <nl> - private String name ; <nl> - private String isbn ; <nl> - private String author ; <nl> - @ Override <nl> - public String toString () { <nl> - return " Book [ name =" + name + ", ISBN =" + isbn + ", author =" + author + "]"; <nl> 
mmm DataSourceUtil . java <nl> ppp DataSourceUtil . java <nl> - package io . shardingsphere . example . jdbc . fixture ; <nl> + package repository ; <nl> 
deleted file <nl> mmm DynamoDBScanItems . java <nl> - package aws . example . dynamodb ; <nl> - import com . amazonaws . services . dynamodbv2 . AmazonDynamoDB ; <nl> - import com . amazonaws . services . dynamodbv2 . AmazonDynamoDBClientBuilder ; <nl> - import com . amazonaws . services . dynamodbv2 . model . AmazonDynamoDBException ; <nl> 
new file <nl> ppp PostgreSQL81DialectTestCase . java <nl> + package org . hibernate . dialect ; <nl> + import org . junit . Test ; <nl> + import java . sql . SQLException ; <nl> + import org . hibernate . JDBCException ; <nl> + import org . hibernate . PessimisticLockException ; <nl> + import org . hibernate . exception . LockAcquisitionException ; <nl> 
mmm RestartHandlerTest . java <nl> ppp RestartHandlerTest . java <nl> - settings . setProperty (" sonar . dev ", true ); <nl> + settings . setProperty (" sonar . web . dev ", true ); <nl> - settings . setProperty (" sonar . dev ", true ); <nl> + settings . setProperty (" sonar . web . dev ", true ); <nl> 
new file <nl> ppp PsiBindDynamicValuesMethodExtractor . java <nl> + package com . facebook . litho . specmodels . processor ; <nl> + import static com . facebook . litho . specmodels . processor . PsiMethodExtractorUtils . getMethodParams ; <nl> + import com . facebook . litho . annotations . OnBindDynamicValue ; <nl> 
mmm MasterSlaveOnly . java <nl> ppp MasterSlaveOnly . java <nl> + import io . shardingsphere . example . repository . jdbc . repository . OrderItemRepository ; <nl> + import io . shardingsphere . example . repository . jdbc . repository . OrderRepository ; <nl> + import io . shardingsphere . example . repository . jdbc . service . DemoService ; <nl> 
mmm MessageMatcher . java <nl> ppp MessageMatcher . java <nl> + public String toString () { <nl> + return " ANY _ MESSAGE "; <nl> + } <nl> 
mmm TransactionBlock . java <nl> ppp TransactionBlock . java <nl> - public String discard () { <nl> - return super . discard (); <nl> - } <nl> 
mmm TestMergePolicyConfig . java <nl> ppp TestMergePolicyConfig . java <nl> - assertEquals ( 0 . 0 , tieredMP . getNoCFSRatio (), 0 . 0 ); <nl> 
mmm SessionsTest . java <nl> ppp SessionsTest . java <nl> - final DashboardPage dashboardPage = loginPage . loginAs (" admin ", " 123123123 "); <nl> + final DashboardPage dashboardPage = loginPage . loginAs (" admin ", " admin "); <nl> 
mmm URISyntaxHandler . java <nl> ppp URISyntaxHandler . java <nl> - import io . micronaut . core . convert . exceptions . ConversionErrorException ; <nl> - import io . micronaut . http . hateoas . Link ; <nl> 
new file <nl> ppp Artifact . java <nl> + package com . facebook . buck . core . rules . actions ; <nl> + import com . facebook . buck . core . sourcepath . ExplicitBuildTargetSourcePath ; <nl> + import com . facebook . buck . core . sourcepath . SourcePath ; <nl> + import org . immutables . value . Value ; <nl> 
mmm StreamObserver . java <nl> ppp StreamObserver . java <nl> 
new file <nl> ppp RateOptions . java <nl> + package net . opentsdb . core ; <nl> + public class RateOptions { <nl> + public static final long DEFAULT _ RESET _ VALUE = 0 ; <nl> + private final boolean counter ; <nl> + private final long counter _ max ; <nl> + private final long reset _ value ; <nl> + public RateOptions ( final boolean counter , final long counter _ max , <nl> 
new file <nl> ppp HelloWorld . java <nl> + public class HelloWorld { <nl> + static String hw =" Hello world "; <nl> + public static void main ( String [] args ) { <nl> + System . out . println ( hw ); <nl> + } <nl> + } <nl> 
mmm BulkLoadJob . java <nl> ppp BulkLoadJob . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + protected static final Logger log = LoggerFactory . getLogger ( BulkLoadJob . class ); <nl> + log . debug (" Start to run LoadIncrementalHFiles "); <nl> + log . debug (" End to run LoadIncrementalHFiles "); <nl> 
mmm GoDocumentationProviderTest . java <nl> ppp GoDocumentationProviderTest . java <nl> - public void testTypeTopDefinition () { doTest (); } <nl> + public void testTypeTopDefinition () { doTest (); } <nl> + String quickNavigateInfo = documentationProvider . getQuickNavigateInfo ( docElement , originalElement ); <nl> 
mmm WorkspaceController . java <nl> ppp WorkspaceController . java <nl> + import io . metersphere . service . OrganizationService ; <nl> + @ Resource <nl> + private OrganizationService organizationService ; <nl> - workspaceService . checkWorkspaceOwnerByOrgAdmin ( workspace . getId ()); <nl> + String currentOrganizationId = SessionUtils . getCurrentOrganizationId (); <nl> 
mmm CustomBarRenderer . java <nl> ppp CustomBarRenderer . java <nl> - public static final Paint [] COLORS = new Paint []{ Color . red , Color . blue , Color . green , <nl> + public static final transient Paint [] COLORS = new Paint []{ Color . red , Color . blue , Color . green , <nl> 
mmm Gps103ProtocolEncoder . java <nl> ppp Gps103ProtocolEncoder . java <nl> - return formatCommand ( command , "**, imei :{ % s }, A ", Command . KEY _ UNIQUE _ ID ); <nl> + return formatCommand ( command , "**, imei :{ % s }, A ;", Command . KEY _ UNIQUE _ ID ); <nl> - return formatCommand ( command , "**, imei :{ % s }, C ,{ % s }", Command . KEY _ UNIQUE _ ID , Command . KEY _ FREQUENCY ); <nl> 
mmm OneInputStreamTask . java <nl> ppp OneInputStreamTask . java <nl> - inputProcessor . cleanup (); <nl> + if ( inputProcessor != null ) { <nl> + inputProcessor . cleanup (); <nl> + } <nl> 
new file <nl> ppp OracleExceptionSorter _ userDefined _ 1 . java <nl> + package com . alibaba . druid . bvt . pool . exception ; <nl> + import java . sql . SQLException ; <nl> + import junit . framework . TestCase ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . druid . pool . DruidDataSource ; <nl> 
new file <nl> ppp AggregationDistinctSelectItem . java <nl> + package io . shardingsphere . core . parsing . parser . context . selectitem ; <nl> + import com . google . common . base . Optional ; <nl> + import com . google . common . base . Strings ; <nl> + import io . shardingsphere . core . parsing . lexer . token . DefaultKeyword ; <nl> 
mmm EncryptorConfigurationTest . java <nl> ppp EncryptorConfigurationTest . java <nl> + import java . util . Properties ; <nl> + private EncryptorConfiguration encryptorConfiguration ; <nl> - public void setUp () throws Exception { <nl> + public void setUp () { <nl> + Properties properties = new Properties (); <nl> 
new file <nl> ppp ObjectStoreEnvironmentBeanSubstitution . java <nl> + package io . quarkus . narayana . stm . runtime ; <nl> + import java . io . File ; <nl> + import com . oracle . svm . core . annotate . Substitute ; <nl> + import com . oracle . svm . core . annotate . TargetClass ; <nl> + @ TargetClass ( className = " com . arjuna . ats . arjuna . common . ObjectStoreEnvironmentBean ") <nl> 
mmm VtorJsonActionResult . java <nl> ppp VtorJsonActionResult . java <nl> - import jodd . madvoc . meta . Scope ; <nl> + import jodd . madvoc . meta . MadvocContext ; <nl> - import jodd . madvoc . scope . MadvocScope ; <nl> - @ In @ Scope ( MadvocScope . CONTEXT ) <nl> + @ In @ MadvocContext <nl> 
mmm AtmosphereResourceEventListenerAdapter . java <nl> ppp AtmosphereResourceEventListenerAdapter . java <nl> - logger . trace ("", event ); <nl> + logger . trace ("{}", event ); <nl> - logger . trace ("", event ); <nl> + logger . trace ("{}", event ); <nl> - logger . trace ("", event ); <nl> + logger . trace ("{}", event ); <nl> 
mmm TypeScriptAngularClientCodegen . java <nl> ppp TypeScriptAngularClientCodegen . java <nl> - return " Generates a TypeScript AngurlarJS client library . "; <nl> + return " Generates a TypeScript AngularJS client library . "; <nl> - } <nl> + } <nl> 
mmm WebMvcConfig . java <nl> ppp WebMvcConfig . java <nl> + @ EnableWebMvc <nl> 
mmm CasteljauComputator . java <nl> ppp CasteljauComputator . java <nl> - private int curveDegree = DEFAULT _ CURVE _ DEGREE ; <nl> - private int pointsNumber = ( curveDegree + 1 ) * 2 ; <nl> - private float [][] points ; <nl> + private int pointsNum = DEFAULT _ CURVE _ DEGREE + 1 ; <nl> + private int coordsNum = pointsNum * 2 ; <nl> 
mmm PatchClassLoaderUtils . java <nl> ppp PatchClassLoaderUtils . java <nl> + Thread . currentThread () . setContextClassLoader ( cl ); <nl> 
mmm DateTimeConverter . java <nl> ppp DateTimeConverter . java <nl> - import com . google . gson . JsonDeserializationContext ; <nl> - import com . google . gson . JsonDeserializer ; <nl> - import com . google . gson . JsonElement ; <nl> - import com . google . gson . JsonParseException ; <nl> - import com . google . gson . JsonPrimitive ; <nl> 
mmm WritableFileChooser . java <nl> ppp WritableFileChooser . java <nl> - switch ( result ) { <nl> - case JOptionPane . YES _ OPTION : <nl> - super . approveSelection (); <nl> - return ; <nl> - case JOptionPane . NO _ OPTION : <nl> - case JOptionPane . CLOSED _ OPTION : <nl> + if ( result == JOptionPane . NO _ OPTION || result == JOptionPane . CLOSED _ OPTION ) { <nl> 
mmm SaveTaskPayloadBuilder . java <nl> ppp SaveTaskPayloadBuilder . java <nl> - import org . activiti . api . task . model . payloads . CompleteTaskPayload ; <nl> + import org . activiti . api . task . model . payloads . SaveTaskPayload ; <nl> - private Map < String , Object > variables ; <nl> + private Map < String , Object > taskVariables ; <nl> 
mmm BinaryMemcacheEncoder . java <nl> ppp BinaryMemcacheEncoder . java <nl> - public static final int DEFAULT _ BUFFER _ SIZE = 24 ; <nl> + private static final int DEFAULT _ BUFFER _ SIZE = 24 ; <nl> 
mmm SystemPage . java <nl> ppp SystemPage . java <nl> - PROJECT (" project ", " project ", " Project ", " Project ", true ); <nl> + PROJECT (" project ", " project ", " Config ", " Project ", true ); <nl> 
mmm ConfiguredServerEndpoint . java <nl> ppp ConfiguredServerEndpoint . java <nl> - import java . util . Collections ; <nl> - import java . util . HashSet ; <nl> - import java . util . Set ; <nl> - import java . util . WeakHashMap ; <nl> + import io . undertow . servlet . api . InstanceFactory ; <nl> + import io . undertow . util . PathTemplate ; <nl> 
mmm OrchestrationMasterSlaveDataSource . java <nl> ppp OrchestrationMasterSlaveDataSource . java <nl> + import io . shardingsphere . api . config . RuleConfiguration ; <nl> + import java . util . LinkedHashMap ; <nl> + import java . util . Map ; <nl> 
new file <nl> ppp PriorityBlockingQueueUnitTest . java <nl> + package com . baeldung . concurrent . priorityblockingqueue ; <nl> + import org . assertj . core . api . Assertions ; <nl> + import org . junit . Test ; <nl> + import java . util . ArrayList ; <nl> + import java . util . concurrent . PriorityBlockingQueue ; <nl> 
new file <nl> ppp KotlinTopLevelFunctionTest . java <nl> + package org . jacoco . core . test . validation . kotlin ; <nl> + import org . jacoco . core . analysis . ICounter ; <nl> + import org . jacoco . core . test . validation . ValidationTestBase ; <nl> + import org . jacoco . core . test . validation . kotlin . targets . KotlinTopLevelFunctionTargetKt ; <nl> 
mmm EncryptUpdateItemColumnPlaceholderTest . java <nl> ppp EncryptUpdateItemColumnPlaceholderTest . java <nl> - encryptUpdateItemColumnPlaceholder = new EncryptUpdateItemColumnPlaceholder (" table _ x ", " column _ x ", " a ", " column _ assist ", " b "); <nl> - assertThat ( encryptUpdateItemColumnPlaceholder . toString (), is (" column _ x = a , column _ assist = b ")); <nl> 
new file <nl> ppp ForbiddenUrlTestCase . java <nl> + package org . jboss . as . test . integration . jsf . testurl ; <nl> + import org . apache . http . client . methods . CloseableHttpResponse ; <nl> + import org . apache . http . client . methods . HttpGet ; <nl> + import org . apache . http . client . methods . HttpUriRequest ; <nl> 
mmm JsonSyntaxException . java <nl> ppp JsonSyntaxException . java <nl> 
mmm AddColumnGeneratorDefaultClauseBeforeNotNull . java <nl> ppp AddColumnGeneratorDefaultClauseBeforeNotNull . java <nl> + || database instanceof SybaseDatabase <nl> + || database instanceof SybaseASADatabase <nl> 
mmm InstrumentedAppender . java <nl> ppp InstrumentedAppender . java <nl> + default : <nl> + break ; <nl> 
mmm AplicomProtocolDecoderTest . java <nl> ppp AplicomProtocolDecoderTest . java <nl> - import static org . traccar . helper . DecoderVerifier . verify ; <nl> + import static org . traccar . helper . DecoderVerifier . verify ; <nl> + verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertHexString ( <nl> 
mmm OAuthConstants . java <nl> ppp OAuthConstants . java <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> - System . setProperty (" smart - socket . server . pageSize ", ( 5 * 1024 * 1024 ) + ""); <nl> + System . setProperty (" smart - socket . server . pageSize ", ( 16 * 1024 * 1024 ) + ""); <nl> 
mmm SslReqHandlerLoader . java <nl> ppp SslReqHandlerLoader . java <nl> - } catch ( ClassNotFoundException e ) { <nl> - LOGGER . info (" SSL support disabled because ssl - impl enterprise module is not available . ", e ); <nl> - throw new RuntimeException (" Loading SslConfiguringHandler failed although enterprise is enabled . ", e ); <nl> 
mmm _ 4SumII . java <nl> ppp _ 4SumII . java <nl> - import java . util . Arrays ; <nl> 
mmm InputStateListener . java <nl> ppp InputStateListener . java <nl> - import javax . inject . Inject ; <nl> + import javax . inject . Inject ; <nl> + LOG . debug (" Input State of [{}/{}] changed : {} - > {}", input . getTitle (), input . getId (), event . oldState (), event . newState ()); <nl> + LOG . info (" Input [{}/{}] is now {}", input . getName (), input . getId (), event . newState ()); <nl> 
mmm ActionBarSherlockHelper . java <nl> ppp ActionBarSherlockHelper . java <nl> - return true ; <nl> + return annotationHelper . typeElementFromQualifiedName (" org . holoeverywhere . addon . AddonSherlock ") != null ; <nl> 
mmm SingletonImmutableBiMap . java <nl> ppp SingletonImmutableBiMap . java <nl> - SingletonImmutableBiMap ( Entry <? extends K , ? extends V > entry ) { <nl> - this ( entry . getKey (), entry . getValue ()); <nl> - } <nl> 
new file <nl> ppp Issue2358 . java <nl> + package com . alibaba . json . bvt . issue _ 2300 ; <nl> + import com . alibaba . fastjson . JSONException ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import junit . framework . TestCase ; <nl> + import java . util . List ; <nl> + public class Issue2358 extends TestCase { <nl> 
mmm FragmentWithAllAnnotations . java <nl> ppp FragmentWithAllAnnotations . java <nl> - public class SupportFragmentWithAllAnnotations extends Fragment { <nl> + public class FragmentWithAllAnnotations extends Fragment { <nl> - SupportFragmentWithAllAnnotationsPermissionsDispatcher . onRequestPermissionsResult ( this , requestCode , grantResults ); <nl> 
mmm DefaultBucketManager . java <nl> ppp DefaultBucketManager . java <nl> - public static class Entry { <nl> - private String m _ namespace ; <nl> - private String m _ path ; <nl> - private Class <?> m _ type ; <nl> - public Entry ( Class <?> type , String path , String namespace ) { <nl> - m _ type = type ; <nl> 
mmm SimpleChartRenderer . java <nl> ppp SimpleChartRenderer . java <nl> - public void render ( final GCModel model , String chartFilePath ) throws IOException { <nl> - final GCPreferences gcPreferences = new GCPreferences (); <nl> + public void render ( GCModel model , String chartFilePath ) throws IOException { <nl> 
mmm AmbientLightManager . java <nl> ppp AmbientLightManager . java <nl> + this . cameraManager = cameraManager ; <nl> - this . cameraManager = cameraManager ; <nl> - if ( ambientLightLux <= TOO _ DARK _ LUX ) { <nl> - cameraManager . setTorch ( true ); <nl> - } else if ( ambientLightLux >= BRIGHT _ ENOUGH _ LUX ) { <nl> 
mmm ChineseSerializationITest . java <nl> ppp ChineseSerializationITest . java <nl> + import edu . stanford . nlp . util . CoreMap ; <nl> + doc . set ( CoreAnnotations . SectionsAnnotation . class , new ArrayList < CoreMap >()); <nl> 

mmm SlotItemHandler . java <nl> ppp SlotItemHandler . java <nl> + @ Override <nl> + public boolean isSameInventory ( Slot other ) <nl> + { <nl> + return other instanceof SlotItemHandler & & (( SlotItemHandler ) other ) . getItemHandler () == this . itemHandler ; <nl> + } <nl> 
mmm FastRawTransactionManager . java <nl> ppp FastRawTransactionManager . java <nl> - public FastRawTransactionManager ( Web3j web3j , Credentials credentials , byte chainId ) { <nl> + public FastRawTransactionManager ( Web3j web3j , Credentials credentials , long chainId ) { <nl> - byte chainId , <nl> + long chainId , <nl> 
mmm TestBufferedUpdates . java <nl> ppp TestBufferedUpdates . java <nl> - import java . util . stream . IntStream ; <nl> - private static Term mayDuplicate ( int bound ) { <nl> - boolean shouldDuplicated = bound > 3 & & random () . nextBoolean (); <nl> - if ( shouldDuplicated ) { <nl> - return new Term (" myField ", String . valueOf ( random () . nextInt ( bound ))); <nl> 
mmm OMultExpression . java <nl> ppp OMultExpression . java <nl> - throw new UnsupportedOperationException (); <nl> + return super . needsAliases ( aliases ); <nl> 
deleted file <nl> mmm MovieRepository . java <nl> - package com . baeldung . validation . listvalidation . repository ; <nl> - import java . util . ArrayList ; <nl> - import java . util . Arrays ; <nl> - import java . util . List ; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> 
mmm Value . java <nl> ppp Value . java <nl> - * public @ Data ( staticConstructor = " of ") class Point { final int x , y ; } <nl> + * public @ Value ( staticConstructor = " of ") class Point { final int x , y ; } <nl> 
new file <nl> ppp DefaultPhaseExecutorTest . java <nl> + package org . sonar . batch . phases ; <nl> + import org . junit . Test ; <nl> + import org . sonar . batch . index . MeasurePersister ; <nl> + import org . sonar . batch . index . ResourcePersister ; <nl> + import org . sonar . batch . index . ScanPersister ; <nl> 
mmm MaxwellKafkaPartitioner . java <nl> ppp MaxwellKafkaPartitioner . java <nl> 
mmm MyActivity . java <nl> ppp MyActivity . java <nl> - void myButtonClicked () throws Exception { <nl> + void myButtonClicked () { <nl> 
mmm SimpleProgressDialog . java <nl> ppp SimpleProgressDialog . java <nl> + import java . util . concurrent . atomic . AtomicLong ; <nl> - public static @ NonNull DismissibleDialog showDelayed (@ NonNull Context context , int delayMs ) { <nl> + public static @ NonNull DismissibleDialog showDelayed (@ NonNull Context context , <nl> 
mmm RobolectricProcessor . java <nl> ppp RobolectricProcessor . java <nl> - @ SupportedSourceVersion ( SourceVersion . RELEASE _ 7 ) <nl> + @ Override <nl> + public SourceVersion getSupportedSourceVersion () { <nl> + return SourceVersion . latest (); <nl> + } <nl> 
mmm OutboundEnvelopeEncoderTest . java <nl> ppp OutboundEnvelopeEncoderTest . java <nl> - import org . apache . flink . runtime . io . network . netty . OutboundEnvelopeEncoder ; <nl> 
mmm GoVarDeclarationInspection . java <nl> ppp GoVarDeclarationInspection . java <nl> - if ( expressionsSize == 0 & & !( o instanceof GoShortVarDeclaration )) { <nl> - return ; <nl> - } <nl> 
mmm ShiftReduceParserITest . java <nl> ppp ShiftReduceParserITest . java <nl> - assertEquals ("( ROOT ( S ( NP ( PRP It )) ( VP ( VBD was ) ( NP ( NNP Carolina ) ( NNP Reapers ))) ( . . )))", result . toString ()); <nl> + assertEquals ("( ROOT ( S ( NP ( PRP It )) ( VP ( VBD was ) ( NP ( NNP Carolina ) ( NNPS Reapers ))) ( . . )))", result . toString ()); <nl> 
mmm WordListValidatorTest . java <nl> ppp WordListValidatorTest . java <nl> - "Œ€ūαΑβΒγɣΓδΔεΕζΖηΗθΘιΙκΚλΛμΜνΝξΞοΟπΠρΡσΣτΤυΥφΦχΧψΨωΩάΆέΈίΊήΉύΎϊϋΰΐœţł" + <nl> + "Œ€ūαΑβΒγɣΓδΔεΕζΖηΗθΘιΙκΚλΛμΜνΝξΞοΟπΠρΡσΣτΤυΥφΦχΧψΨωΩάΆέΈίΊήΉύΎϊϋΰΐœţłń" + <nl> 
mmm UnitTestNamingConventionRule . java <nl> ppp UnitTestNamingConventionRule . java <nl> - package org . baeldung . pmd ; <nl> + package com . baeldung . pmd ; <nl> 
deleted file <nl> mmm IndentingWriter . java <nl> - package brut . androlib . mod ; <nl> - import java . io . Writer ; <nl> - public class IndentingWriter extends org . jf . util . IndentingWriter { <nl> - public IndentingWriter ( Writer writer ) { <nl> - super ( writer ); <nl> - } <nl> - } <nl> 
mmm DESShardingEncryptor . java <nl> ppp DESShardingEncryptor . java <nl> - import org . apache . commons . codec . digest . DigestUtils ; <nl> + import org . apache . shardingsphere . core . exception . ShardingConfigurationException ; <nl> + import javax . crypto . spec . SecretKeySpec ; <nl> + import java . security . Key ; <nl> 
mmm BuildOptionsTest . java <nl> ppp BuildOptionsTest . java <nl> - public void testOptionSetCaching () throws Exception { <nl> + public void optionSetCaching () { <nl> - public void testCachingSpecialCases () throws Exception { <nl> + public void cachingSpecialCases () throws Exception { <nl> - public void testOptionsEquality () throws Exception { <nl> 
mmm Lucene41BinaryDocValuesConsumer . java <nl> ppp Lucene41BinaryDocValuesConsumer . java <nl> 
mmm SetTtlCommandIntegrationTest . java <nl> ppp SetTtlCommandIntegrationTest . java <nl> - public final class SetTtlCommandTest extends AbstractAlluxioShellTest { <nl> + public final class SetTtlCommandIntegrationTest extends AbstractAlluxioShellTest { <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 7 . 2 "); <nl> + public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 8 . 0 "); <nl> 
new file <nl> ppp Bug _ for _ issue _ 630 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . parser . Feature ; <nl> + import com . alibaba . fastjson . serializer . SerializerFeature ; <nl> 
mmm HostApplication . java <nl> ppp HostApplication . java <nl> 
mmm LoginToutActivity . java <nl> ppp LoginToutActivity . java <nl> + import android . view . View ; <nl> 
mmm Repeat . java <nl> ppp Repeat . java <nl> - return DSL . field (" replace ( substr ( quote ( zeroblob (({ 0 } + 1 ) / 2 )), 3 , { 0 }), ' 0 ', { 1 })", String . class , count , string ); <nl> + return DSL . field (" replace ( hex ( zeroblob ({ 0 })), ' 00 ', { 1 })", String . class , count , string ); <nl> 
new file <nl> ppp MasterSlaveSchema . java <nl> + package io . shardingsphere . shardingproxy . runtime ; <nl> + import io . shardingsphere . api . config . MasterSlaveRuleConfiguration ; <nl> + import io . shardingsphere . api . config . RuleConfiguration ; <nl> + import io . shardingsphere . api . config . ShardingRuleConfiguration ; <nl> 
mmm RandomGeoPolygonTest . java <nl> ppp RandomGeoPolygonTest . java <nl> 
new file <nl> ppp ExecutionEventLoggerTest . java <nl> + package org . apache . maven . cli . event ; <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + import java . lang . reflect . Method ; <nl> + import junit . framework . TestCase ; <nl> + public class ExecutionEventLoggerTest <nl> 
mmm DataSourceParameterRepresenter . java <nl> ppp DataSourceParameterRepresenter . java <nl> + import org . yaml . snakeyaml . nodes . ScalarNode ; <nl> + Node keyNode = tuple . getKeyNode (); <nl> + if ( keyNode instanceof ScalarNode & & (( ScalarNode ) keyNode ) . getValue () . equals (" password ")) { <nl> 
mmm DumpingClassLoader . java <nl> ppp DumpingClassLoader . java <nl> + import org . codehaus . groovy . control . SourceUnit ; <nl> - DebugCollector ( GroovyClassLoader cl , CompilationUnit unit ) { <nl> - super ( cl , unit ); <nl> + DebugCollector ( GroovyClassLoader cl , CompilationUnit unit , SourceUnit su ) { <nl> 
mmm GermanReflexiveVerbGuesser . java <nl> ppp GermanReflexiveVerbGuesser . java <nl> - System . out . println (" Anzahl Lemma | mich / uns / euch . . . | . . . mich / uns / euch | Lemma "); <nl> + System . out . println (" Durchschnitt Prozent | Anzahl Lemma | mich / uns / euch . . . | . . . mich / uns / euch | Lemma "); <nl> 
mmm ReleasePermitOnComplete . java <nl> ppp ReleasePermitOnComplete . java <nl> - public static < T > AsyncHandler < T > wrap ( final AsyncHandler < T > handler , final Semaphore available ) { <nl> - Class <?> handlerClass = handler . getClass (); <nl> - ClassLoader classLoader = handlerClass . getClassLoader (); <nl> 
deleted file <nl> mmm CamelMongodbTest . java <nl> - package org . apache . camel . itest . springboot ; <nl> - import org . apache . camel . itest . springboot . util . ArquillianPackager ; <nl> - import org . jboss . arquillian . container . test . api . Deployment ; <nl> - import org . jboss . arquillian . junit . Arquillian ; <nl> 
mmm HostApplication . java <nl> ppp HostApplication . java <nl> + import com . tencent . shadow . dynamic . host . DynamicRuntime ; <nl> + DynamicRuntime . recoveryRuntime ( this ); <nl> 
mmm ApiDescriptionBuilder . java <nl> ppp ApiDescriptionBuilder . java <nl> 
mmm BatchSliceBuilder . java <nl> ppp BatchSliceBuilder . java <nl> - Preconditions . checkArgument ( record . getShard () == shard , " record shard :" + record . getShard () + " but should be " + shard ); <nl> 
mmm App . java <nl> ppp App . java <nl> - . debug ( BuildConfig . DEBUG ) <nl> 
mmm _ 208 . java <nl> ppp _ 208 . java <nl> - class TrieNode { <nl> + public static class TrieNode { <nl> - public class Trie { <nl> + public static class Trie { <nl> 
deleted file <nl> mmm Foo . java <nl> - package net . bytebuddy ; <nl> - import org . objectweb . asm . ClassReader ; <nl> - import org . objectweb . asm . util . TraceClassVisitor ; <nl> - import java . io . PrintWriter ; <nl> - public class Foo { <nl> - public static void main ( String [] args ) throws Exception { <nl> 
mmm XmlHelper . java <nl> ppp XmlHelper . java <nl> - content = content . replaceAll ("\\ p { Cc } & & [^\ n \ r \ t ]", ""); <nl> + content = content . replaceAll ("[\\ p { Cntrl } & & [^\ n \ t \ r ]]", ""); <nl> 
mmm WebServerTest . java <nl> ppp WebServerTest . java <nl> - public class WebServerInitialContextTest { <nl> + public class WebServerTest { <nl> - public void smokeTest () throws NamingException { <nl> + public void contextTest () throws NamingException { <nl> - new Class []{ DataSource . class }, new InvocationHandler () { <nl> 
mmm IndexNameExtractHandler . java <nl> ppp IndexNameExtractHandler . java <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . ExtractResult ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . SQLTokenExtractResult ; <nl> 
mmm PathSwitchPreference . java <nl> ppp PathSwitchPreference . java <nl> - import android . util . AttributeSet ; <nl> - private Boolean shouldEnableSwitch = null ; <nl> + private boolean shouldEnable = true , enabled = true ; <nl> - public PathSwitchPreference ( Context context , AttributeSet attrs ) { <nl> 
mmm AbsoluteGraphQLError . java <nl> ppp AbsoluteGraphQLError . java <nl> - import static com . sun . tools . javac . util . Assert . checkNonNull ; <nl> + import static java . util . Objects . requireNonNull ; <nl> 
mmm TestEmbeddedSolrServerConstructors . java <nl> ppp TestEmbeddedSolrServerConstructors . java <nl> - public class TestEmbeddedSolrServer extends SolrTestCaseJ4 { <nl> + public class TestEmbeddedSolrServerConstructors extends SolrTestCaseJ4 { <nl> 
mmm SupportedLocales . java <nl> ppp SupportedLocales . java <nl> - return bundle . localize ( key ); <nl> + return String . format ( bundle . localize ( key ), format ); <nl> 
mmm SettingsProvider . java <nl> ppp SettingsProvider . java <nl> + import java . nio . file . StandardCopyOption ; <nl> - Writer writer = new OutputStreamWriter ( out , StandardCharsets . UTF _ 8 )) { <nl> + Path tmpPath = settingsPath . resolveSibling ( settingsPath . getFileName () . toString () + " . tmp "); <nl> 
new file <nl> ppp Target _ javax _ management _ JMX . java <nl> + package org . jboss . shamrock . runtime . graal ; <nl> + import javax . management . JMX ; <nl> + import javax . management . MBeanServerConnection ; <nl> + import javax . management . ObjectName ; <nl> + import com . oracle . svm . core . annotate . Substitute ; <nl> 
mmm ActivityLifecycleCallbacksImpl . java <nl> ppp ActivityLifecycleCallbacksImpl . java <nl> + import android . support . v4 . app . Fragment ; <nl> + import android . support . v4 . app . FragmentActivity ; <nl> + private FragmentLifecycleCallbacksImpl mFragmentLifecycleCallbacks ; <nl> - setAutoAdaptStrategy ( autoAdaptStrategy ); <nl> 
new file <nl> ppp Euler32Test . java <nl> + package javaslang . collection . euler ; <nl> + import org . junit . Test ; <nl> + import javaslang . Tuple ; <nl> + import javaslang . Tuple3 ; <nl> + import javaslang . collection . CharSeq ; <nl> + import javaslang . collection . List ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> 
mmm EditorTool . java <nl> ppp EditorTool . java <nl> 
new file <nl> ppp InstrumentedAppender . java <nl> + package com . yammer . metrics . logback ; <nl> + import com . yammer . metrics . Metrics ; <nl> + import com . yammer . metrics . core . MeterMetric ; <nl> + import ch . qos . logback . core . AppenderBase ; <nl> + import ch . qos . logback . classic . Level ; <nl> 
new file <nl> ppp UpdateEncryptLiteralColumnToken . java <nl> + package org . apache . shardingsphere . core . rewrite . token . pojo ; <nl> + import com . google . common . base . Joiner ; <nl> + import lombok . Getter ; <nl> + import lombok . RequiredArgsConstructor ; <nl> + import java . util . Collection ; <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm MapperProxy . java <nl> ppp MapperProxy . java <nl> - import java . lang . invoke . MethodHandles ; <nl> - import java . lang . reflect . Constructor ; <nl> - import java . lang . reflect . Modifier ; <nl> - try { <nl> - if ( Object . class . equals ( method . getDeclaringClass ())) { <nl> + if ( Object . class . equals ( method . getDeclaringClass ())) { <nl> 
mmm MapReduceFormat . java <nl> ppp MapReduceFormat . java <nl> 
mmm Condition . java <nl> ppp Condition . java <nl> + @ Override <nl> + public String toString () { <nl> + return new StringBuilder ( getClass () . getSimpleName ()) . append (" ") <nl> + . append ("[") <nl> + . append (" enabled = ") . append ( this . enabled ) . append (", ") <nl> + . append (" reason = ") . append ( this . reason ) <nl> 
mmm MockitoFramework . java <nl> ppp MockitoFramework . java <nl> 
new file <nl> ppp FindRefsInLambdasTest . java <nl> + package io . ballerina . semantic . api . test . allreferences ; <nl> + import org . testng . annotations . DataProvider ; <nl> + import org . testng . annotations . Test ; <nl> + import java . util . List ; <nl> + @ Test <nl> + public class FindRefsInLambdasTest extends FindAllReferencesTest { <nl> 
mmm ScreenUtils . java <nl> ppp ScreenUtils . java <nl> + private ScreenUtils () { <nl> + throw new IllegalStateException (" you can ' t instantiate me !"); <nl> + } <nl> 
mmm OApi . java <nl> ppp OApi . java <nl> 
mmm DiffCategory . java <nl> ppp DiffCategory . java <nl> - DIFFERENT <nl> + DIFFERENT , <nl> + DEPRECATED <nl> 
mmm DataSourceServiceTest . java <nl> ppp DataSourceServiceTest . java <nl> + @ Test <nl> + public void assertGetAvailableShardingRuleConfiguration () { <nl> + } <nl> + @ Test <nl> + public void assertGetAvailableMasterSlaveRuleConfiguration () { <nl> + } <nl> 
mmm JodaTimeSupportTest . java <nl> ppp JodaTimeSupportTest . java <nl> - public void test () throws SecurityException , NoSuchFieldException { <nl> + public void test () throws IllegalAccessException , NoSuchFieldException { <nl> + matchType ( DateMidnight . class , " dateMidnight "); <nl> + matchType ( DateTime . class , " dateTime "); <nl> 
mmm JMeterThreadMonitor . java <nl> ppp JMeterThreadMonitor . java <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm KrakenOrderBook . java <nl> ppp KrakenOrderBook . java <nl> - if ( type == KrakenOrderBookMessageType . UPDATE & & orderbook != null ) { <nl> + if ( type == KrakenOrderBookMessageType . UPDATE ) { <nl> 
mmm AuthenticationYamlSwapper . java <nl> ppp AuthenticationYamlSwapper . java <nl> - import com . google . common . base . Preconditions ; <nl> - import com . google . common . base . Strings ; <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . collect . Maps ; <nl> 
mmm VertxCommonProcessor . java <nl> ppp VertxCommonProcessor . java <nl> - @ Record ( ExecutionTime . RUNTIME _ INIT ) <nl> + @ Record ( value = ExecutionTime . RUNTIME _ INIT , optional = true ) <nl> - @ Record ( ExecutionTime . RUNTIME _ INIT ) <nl> + @ Record ( value = ExecutionTime . RUNTIME _ INIT , optional = true ) <nl> 
mmm AnnotationImpl . java <nl> ppp AnnotationImpl . java <nl> - String name = method . getName (); <nl> + String name = method . getName (); <nl> + if ( Object . class == method . getDeclaringClass ()) <nl> + { <nl> + if (" equals " . equals ( name )) <nl> + { <nl> + Object obj = args [ 0 ]; <nl> + if ( obj == null || obj instanceof Proxy == false ) <nl> 
mmm AtmosphereService . java <nl> ppp AtmosphereService . java <nl> + boolean dispatch () default true ; <nl> 
deleted file <nl> mmm URLConfigerLoaderTest . java <nl> - package com . alibaba . druid . pool ; <nl> - import junit . framework . TestCase ; <nl> - import com . alibaba . druid . pool . ha . config . URLConnectionConfigLoader ; <nl> - public class URLConfigerLoaderTest extends TestCase { <nl> - public void test _ 0 () throws Exception { <nl> 
new file <nl> ppp Bug _ for _ issue _ 236 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import java . util . Map ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . TypeReference ; <nl> + import junit . framework . TestCase ; <nl> 
mmm TestTemplateInvocationContextProvider . java <nl> ppp TestTemplateInvocationContextProvider . java <nl> - import java . util . Iterator ; <nl> - * different contexts , e . g . with different parameters , by preparing the test <nl> - * class instance differently , or multiple times without modifying the context . <nl> 
new file <nl> ppp BootReceiver . java <nl> + package com . kabouzeid . gramophone . appwidgets ; <nl> + import android . appwidget . AppWidgetManager ; <nl> + import android . content . BroadcastReceiver ; <nl> + import android . content . ComponentName ; <nl> + import android . content . Context ; <nl> + import android . content . Intent ; <nl> 
mmm ProxyBasicRule . java <nl> ppp ProxyBasicRule . java <nl> + import lombok . Setter ; <nl> 
mmm IssueResultSetIteratorTest . java <nl> ppp IssueResultSetIteratorTest . java <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . base . Functions ; <nl> + import com . google . common . collect . Maps ; <nl> + import org . apache . commons . collections . ComparatorUtils ; <nl> 
new file <nl> ppp ASMCoreModTweakWrapperGenerator . java <nl> + package cpw . mods . fml . common . launcher ; <nl> + import cpw . mods . fml . relauncher . IFMLLoadingPlugin ; <nl> + public class ASMCoreModTweakWrapperGenerator { <nl> + private IFMLLoadingPlugin coreModToWrap ; <nl> + public ASMCoreModTweakWrapperGenerator ( IFMLLoadingPlugin toWrap ) { <nl> 
mmm CheckHits . java <nl> ppp CheckHits . java <nl> - public static void printDocNrs ( Hits hits ) throws IOException { <nl> - System . out . print (" new int [] {"); <nl> - for ( int i = 0 ; i < hits . length (); i + + ) { <nl> - System . out . print ( hits . id ( i )); <nl> - if ( i != hits . length () - 1 ) <nl> 
mmm NetworkBitmapHunter . java <nl> ppp NetworkBitmapHunter . java <nl> + private static final int MARKER = 16384 ; <nl> - long mark = markStream . savePosition ( 4096 ); <nl> + long mark = markStream . savePosition ( MARKER ); <nl> 
mmm MountSpecMethodAnnotationsProvider . java <nl> ppp MountSpecMethodAnnotationsProvider . java <nl> + import com . facebook . litho . annotations . OnMeasure ; <nl> + ANNOTATION _ QUALIFIED _ NAMES . add ( OnMeasure . class . getTypeName ()); <nl> 
mmm SettingsActivity . java <nl> ppp SettingsActivity . java <nl> - finish (); <nl> + if ( getSupportFragmentManager () . getBackStackEntryCount () == 0 ) { <nl> + finish (); <nl> + } else getSupportFragmentManager () . popBackStack (); <nl> 
mmm WorldDatabaseController . java <nl> ppp WorldDatabaseController . java <nl> - final Random random = ThreadLocalRandom . current (); <nl> - return this . worldRepository . findOne ( random . nextInt ( DB _ ROWS ) + 1 ); <nl> + return this . worldRepository . findOne ( ThreadLocalRandom . current () . nextInt ( DB _ ROWS ) + 1 ); <nl> 
mmm VoovanTFB . java <nl> ppp VoovanTFB . java <nl> + Logger . setEnable ( false ); <nl> 
new file <nl> ppp S3SimpleUploadOperationLocalstackTest . java <nl> + package org . apache . camel . component . aws2 . s3 . localstack ; <nl> + import java . util . List ; <nl> + import org . apache . camel . EndpointInject ; <nl> + import org . apache . camel . Exchange ; <nl> + import org . apache . camel . Processor ; <nl> 
mmm EelinkProtocolDecoderTest . java <nl> ppp EelinkProtocolDecoderTest . java <nl> + verifyPosition ( decoder , binary ( <nl> + " 6767050020213b59c6aecdff41dce70b8b977d00000001fe000a36e30078fe010159c6aecd ")); <nl> 
mmm FacebookPowerMockTestCase . java <nl> ppp FacebookPowerMockTestCase . java <nl> - @ Config ( shadows = { ShadowLog . class }, manifest = Config . NONE ) <nl> + @ Config ( shadows = { ShadowLog . class }, manifest = Config . NONE , sdk = 21 ) <nl> 
mmm EmailHelperTest . java <nl> ppp EmailHelperTest . java <nl> + @ Test <nl> + public void getLocalPartFromEmailAddress _ withRegularEmail _ shouldReturnLocalPart () { <nl> + String result = EmailHelper . getLocalPartFromEmailAddress (" user @ domain . com "); <nl> + assertEquals (" user ", result ); <nl> 
mmm MicronautSubstitutions . java <nl> ppp MicronautSubstitutions . java <nl> - import com . oracle . svm . core . annotate . Alias ; <nl> - import com . oracle . svm . core . annotate . RecomputeFieldValue ; <nl> - @ TargetClass ( className = " io . micronaut . caffeine . cache . UnsafeRefArrayAccess ") <nl> 
mmm TestIssue99 . java <nl> ppp TestIssue99 . java <nl> - * If successful , two text labels will be visible . If unsuccessful , only the top <nl> - * one will be visible . <nl> + * If successful , two text labels will be legible . If unsuccessful , only the top <nl> + * one will be legible . <nl> 
mmm MyCheckpointAlgorithm . java <nl> ppp MyCheckpointAlgorithm . java <nl> - @ Named <nl> + @ Named <nl> 
mmm FeignInterceptorConfig . java <nl> ppp FeignInterceptorConfig . java <nl> - import org . springframework . context . annotation . Configuration ; <nl> 
new file <nl> ppp MethodDescTest . java <nl> + package com . alibaba . fescar . spring . annotation ; <nl> + import org . junit . Test ; <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + import java . lang . reflect . Method ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> 
mmm MainModule . java <nl> ppp MainModule . java <nl> - } else { <nl> - return null ; <nl> + return null ; <nl> - } else { <nl> - return null ; <nl> + return null ; <nl> 
mmm SQLQueryImpl . java <nl> ppp SQLQueryImpl . java <nl> + public SQLQueryImpl ( Connection conn , SQLTemplates templates , QueryMetadata metadata ) { <nl> + super ( conn , new Configuration ( templates ), metadata ); <nl> + } <nl> 
mmm QuitGroupHandler . java <nl> ppp QuitGroupHandler . java <nl> - ErrorCode errorCode = ErrorCode . ERROR _ CODE _ SUCCESS ; <nl> - WFCMessage . GroupInfo groupInfo = m _ messagesStore . getGroupInfo ( request . getGroupId ()); <nl> - if ( groupInfo == null ) { <nl> - errorCode = m _ messagesStore . quitGroup ( fromUser , request . getGroupId ()); <nl> 
new file <nl> ppp Bug _ for _ issue _ 490 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import java . io . IOException ; <nl> + import java . util . Map ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + import okhttp3 . OkHttpClient ; <nl> 
new file <nl> ppp PermutationsTest . java <nl> + package com . jwetherell . algorithms . mathematics . test ; <nl> + import com . jwetherell . algorithms . mathematics . Permutations ; <nl> + import static org . junit . Assert . *; <nl> + import java . util . LinkedList ; <nl> + import org . junit . Test ; <nl> 
mmm NaturalLogicAnnotations . java <nl> ppp NaturalLogicAnnotations . java <nl> 
mmm TestJava9AttachAPI . java <nl> ppp TestJava9AttachAPI . java <nl> - static final String ATTACH _ ENABLE _ PROPERTY = " - Dcom . ibm . tools . attach . enable ="; <nl> + static final String ATTACH _ ENABLE _ PROPERTY = " - Dcom . ibm . tools . attach . enable = yes "; <nl> 
mmm SSLSocketHttpConnectionProvider . java <nl> ppp SSLSocketHttpConnectionProvider . java <nl> - @ Override <nl> 
mmm OrgListDialogFragment . java <nl> ppp OrgListDialogFragment . java <nl> - . setTitle ( R . string . no _ orgs ); <nl> + . setTitle ( R . string . no _ orgs _ dialog _ title ); <nl> 
mmm ONashornScriptEngineFactory . java <nl> ppp ONashornScriptEngineFactory . java <nl> - import jdk . nashorn . api . scripting . NashornScriptEngine ; <nl> - import java . util . Set ; <nl> 
new file <nl> ppp SortedMergeMetaTest . java <nl> + package org . pentaho . di . trans . steps . sortedmerge ; <nl> + import java . util . Arrays ; <nl> + import java . util . HashMap ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import org . junit . Test ; <nl> + import org . pentaho . di . core . exception . KettleException ; <nl> 
mmm SpringBootJNDITest . java <nl> ppp SpringBootJNDITest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore <nl> 
mmm HttpConnection . java <nl> ppp HttpConnection . java <nl> + public void init () throws IOException ; <nl> 
mmm LinuxGvfsWebDavMounter . java <nl> ppp LinuxGvfsWebDavMounter . java <nl> - import org . cryptomator . ui . util . command . CommandResult ; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - public static final Logger LOG = LoggerFactory . getLogger ( LinuxGvfsWebDavMounter . class ); <nl> 
mmm Activator . java <nl> ppp Activator . java <nl> - import java . util . Hashtable ; <nl> - import net . java . sip . communicator . impl . gui . main . login . LoginWindow ; <nl> - import net . java . sip . communicator . service . protocol . AccountID ; <nl> - import net . java . sip . communicator . service . protocol . AccountManager ; <nl> 
mmm NestedContextTests . java <nl> ppp NestedContextTests . java <nl> - import org . junit . gen5 . api . Name ; <nl> - import org . junit . runner . RunWith ; <nl> 
mmm ListInterceptor . java <nl> ppp ListInterceptor . java <nl> - import com . google . common . collect . ImmutableList ; <nl> - return ImmutableList . copyOf ( res ) . stream () . map ( LogAndArguments :: getFormattedMsg ) . collect ( Collectors . toList ()); <nl> + return res . stream () . map ( LogAndArguments :: getFormattedMsg ) . collect ( Collectors . toList ()); <nl> 
mmm BufferingFlux . java <nl> ppp BufferingFlux . java <nl> + import java . util . stream . Collectors ; <nl> - . map ( lines - > { <nl> - return String . join ( delimiter , lines ) + delimiter ; <nl> - }); <nl> + . map ( lines - > lines . stream () <nl> + . filter ( line - > ! line . isEmpty ()) <nl> + . collect ( Collectors . joining ( delimiter , "", delimiter ))); <nl> 
mmm PetValidator . java <nl> ppp PetValidator . java <nl> 
mmm GrpcStubs . java <nl> ppp GrpcStubs . java <nl> - GrpcStubs init () { <nl> + public GrpcStubs init () { <nl> 
mmm SingleShareIntent . java <nl> ppp SingleShareIntent . java <nl> - } <nl> - super . open ( options ); <nl> + } else { <nl> + super . open ( options ); <nl> + } <nl> 
mmm FakeImageView . java <nl> ppp FakeImageView . java <nl> + public int alpha ; <nl> + public void setAlpha ( int alpha ) { <nl> + this . alpha = alpha ; <nl> + } <nl> 
mmm ClosureException . java <nl> ppp ClosureException . java <nl> - super (" Exception thrown by call to closure : " + closure + " reason : " + cause , cause ); <nl> + super (" Exception thrown by call to closure : " + closure + " reaason : " + cause , cause ); <nl> 
mmm CoinMarketCap . java <nl> ppp CoinMarketCap . java <nl> 
mmm PortugalPortugueseReplaceRule . java <nl> ppp PortugalPortugueseReplaceRule . java <nl> + * @ since 3 . 6 <nl> 
mmm H2DataSourceMetaData . java <nl> ppp H2DataSourceMetaData . java <nl> - throw new ShardingException (" The URL of JDBC is not supported . "); <nl> + throw new ShardingException (" The URL of JDBC is not supported . Please refer to this pattern : % s . ", pattern . pattern ()); <nl> 
new file <nl> ppp SubtractAdding . java <nl> + package com . github . pedrovgs . problem73 ; <nl> + public class SubtractAdding { <nl> + } <nl> 
mmm Aes128DataSourceTest . java <nl> ppp Aes128DataSourceTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore <nl> + @ Ignore <nl> 
mmm ShardingEncryptorFactoryTest . java <nl> ppp ShardingEncryptorFactoryTest . java <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + import static org . junit . Assert . assertThat ; <nl> + assertThat ( ShardingEncryptorFactory . newInstance (" test ") . getProperties () . getProperty (" key1 "), is (" value1 ")); <nl> 
mmm SQLTokenExtractResult . java <nl> ppp SQLTokenExtractResult . java <nl> + import io . shardingsphere . core . parsing . parser . sql . ddl . DDLStatement ; <nl> + import io . shardingsphere . core . parsing . parser . token . IndexToken ; <nl> + String tableName = ""; <nl> + if ( statement instanceof DDLStatement ) { <nl> 
deleted file <nl> mmm JSONUtils . java <nl> - package org . apache . cordova ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - import org . json . JSONArray ; <nl> - import org . json . JSONException ; <nl> - public class JSONUtils { <nl> - public static List < String > toStringList ( JSONArray array ) throws JSONException { <nl> 
mmm ParcelExperiment . java <nl> ppp ParcelExperiment . java <nl> + import android . util . Log ; <nl> 
mmm CaptorAnnotationTest . java <nl> ppp CaptorAnnotationTest . java <nl> + import samples . privateandfinal . PrivateFinal ; <nl> - import static org . powermock . api . mockito . PowerMockito . mock ; <nl> + import static org . powermock . api . mockito . PowerMockito . *; <nl> - @ PrepareForTest ( FinalDemo . class ) <nl> 
mmm AnonymousLoginStrategy . java <nl> ppp AnonymousLoginStrategy . java <nl> - return null ; <nl> + return certificateService . getSSLContext ( trustManager ); <nl> 
mmm UselessOperationOnImmutableRule . java <nl> ppp UselessOperationOnImmutableRule . java <nl> - return ( ASTVariableDeclaratorId ) node . jjtGetChild ( 1 ) . jjtGetChild ( 0 ); <nl> + return node . getFirstDescendantOfType ( ASTVariableDeclaratorId . class ); <nl> 
mmm AtnManager . java <nl> ppp AtnManager . java <nl> - private static final String CACHE _ THRESHOLD _ NAME = " groovy . antlr4 . cache . threshold "; <nl> - private static final int DEFAULT _ CACHE _ THRESHOLD = 100 ; <nl> - private static final int CACHE _ THRESHOLD ; <nl> + private static final String DFA _ CACHE _ THRESHOLD _ OPT = " groovy . antlr4 . cache . threshold "; <nl> 
mmm LZFDataFormatTest . java <nl> ppp LZFDataFormatTest . java <nl> - import org . apache . camel . test . junit4 . CamelTestSupport ; <nl> - import org . junit . Test ; <nl> + import org . apache . camel . test . junit5 . CamelTestSupport ; <nl> + import org . junit . jupiter . api . Test ; <nl> + import static org . junit . jupiter . api . Assertions . assertEquals ; <nl> 
mmm SampleMonitor . java <nl> ppp SampleMonitor . java <nl> 

mmm ScanIssues . java <nl> ppp ScanIssues . java <nl> 
mmm ExecutionContextBuilder . java <nl> ppp ExecutionContextBuilder . java <nl> - if ( operationName != null & & operationsByName . size () > 1 ) { <nl> + if ( operationName == null & & operationsByName . size () > 1 ) { <nl> 
mmm HttpProviderTest . java <nl> ppp HttpProviderTest . java <nl> - byte [] bytes = sun . misc . IOUtils . readFully ( inputStream , - 1 , true ); <nl> + byte [] bytes = org . apache . commons . io . IOUtils . toByteArray ( inputStream ); <nl> 
mmm DefaultRegisteredServiceProperty . java <nl> ppp DefaultRegisteredServiceProperty . java <nl> + import org . apereo . cas . util . spring . SpringExpressionLanguageValueResolver ; <nl> + import java . util . LinkedHashSet ; <nl> - return this . values ; <nl> + return this . values <nl> + . stream () <nl> 
mmm SpreadViewModelTest . java <nl> ppp SpreadViewModelTest . java <nl> - public void testfilterSpreadItemsForUniqueOffers () { <nl> + public void testFilterSpreadItemsForUniqueOffers () { <nl> 
mmm _ 119 . java <nl> ppp _ 119 . java <nl> - public class PascalsTriangleII { <nl> + public class _ 119 { <nl> 
mmm AllRoutingTests . java <nl> ppp AllRoutingTests . java <nl> + import io . shardingsphere . core . routing . type . hint . DatabaseHintRoutingEngineTest ; <nl> + import io . shardingsphere . core . routing . type . standard . StandardRoutingEngineTest ; <nl> - IgnoreRoutingEngineTest . class <nl> + DatabaseHintRoutingEngineTest . class , <nl> 
mmm RandomStringsUnitTest . java <nl> ppp RandomStringsUnitTest . java <nl> - package com . baeldung . randomstrings ; <nl> - import org . apache . commons . lang3 . RandomStringUtils ; <nl> - import org . junit . Test ; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - import java . nio . charset . Charset ; <nl> 
new file <nl> ppp OracleSelectTest10 . java <nl> + package com . alibaba . druid . bvt . sql . oracle ; <nl> + import java . util . List ; <nl> + import junit . framework . Assert ; <nl> + import com . alibaba . druid . sql . OracleTest ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> 
mmm LiquibaseUtil . java <nl> ppp LiquibaseUtil . java <nl> + String value = " UNKONWN "; <nl> - String value = liquibaseBuildProperties . getProperty ( propertyId ); <nl> - if ( value == null ) { <nl> - return " UNKNOWN "; <nl> + if ( liquibaseBuildProperties != null ) { <nl> + value = liquibaseBuildProperties . getProperty ( propertyId ); <nl> 
mmm AbstractTimestampProvider . java <nl> ppp AbstractTimestampProvider . java <nl> + if ( log . isDebugEnabled ()) { <nl> + log . debug (" Sleeping : now ={} targettime ={} delta ={} ( unit ={})", <nl> + new Object [] { now , time , delta , unit }); <nl> + } <nl> 
mmm AbstractConverterTest . java <nl> ppp AbstractConverterTest . java <nl> - data . add ( new LineString ( createSequence ( crs , ( Point ) data . get ( i )))); <nl> + data . add ( new LineString ( createSequence ( crs , ( Point ) data . get ( i ), ( Point ) data . get ( i )))); <nl> 
new file <nl> ppp ProxyTest2 . java <nl> + package com . alibaba . json . bvt . serializer ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + import java . lang . reflect . Proxy ; <nl> + public class ProxyTest2 extends TestCase { <nl> + public void test _ 0 () throws Exception { <nl> 
mmm NodeGenerator . java <nl> ppp NodeGenerator . java <nl> - import com . github . javaparser . utils . SourceRoot ; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> + import com . github . javaparser . utils . Log ; <nl> + import com . github . javaparser . utils . SourceRoot ; <nl> 
new file <nl> ppp DetectDocumentText . java <nl> + package com . example . textract ; <nl> + import software . amazon . awssdk . core . SdkBytes ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . textract . TextractClient ; <nl> + import software . amazon . awssdk . services . textract . model . Document ; <nl> 
