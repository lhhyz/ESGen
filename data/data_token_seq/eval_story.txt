mmm ServerCookies . java <nl> ppp ServerCookies . java <nl> - if ( serverCookies [ i ] != null ) { <nl> - serverCookies [ i ] . recycle (); <nl> - } <nl> + serverCookies [ i ] . recycle (); <nl> 
mmm JavaCcLinkParamsProviderApi . java <nl> ppp JavaCcLinkParamsProviderApi . java <nl> + " it , you will be broken when it is removed . ", <nl> - documented = true ) <nl> + documented = false ) <nl> 
mmm DirectMessage . java <nl> ppp DirectMessage . java <nl> + QuickReply [] getQuickReplies (); <nl> + String getQuickReplyResponse (); <nl> 
mmm FilterIterator . java <nl> ppp FilterIterator . java <nl> 
mmm BCryptPasswordAlgorithm . java <nl> ppp BCryptPasswordAlgorithm . java <nl> - final Splitter splitter = Splitter . on ( SALTPREFIX ); <nl> - final List < String > splitted = splitter . splitToList ( hashedPasswordAndSalt ); <nl> - final String salt = splitted . get ( 1 ); <nl> + if ( supports ( hashedPasswordAndSalt )) { <nl> 
mmm AnimatorSetCompat . java <nl> ppp AnimatorSetCompat . java <nl> + import android . support . annotation . RestrictTo ; <nl> + import android . support . annotation . RestrictTo . Scope ; <nl> + @ RestrictTo ( Scope . LIBRARY _ GROUP ) <nl> 
deleted file <nl> mmm AuthenticationYamlSwapperTest . java <nl> - package org . apache . shardingsphere . core . yaml . swapper . impl ; <nl> - import org . apache . shardingsphere . core . rule . Authentication ; <nl> - import org . apache . shardingsphere . core . yaml . config . common . YamlAuthentication ; <nl> 
mmm JsonPrinterTest . java <nl> ppp JsonPrinterTest . java <nl> - assertEquals ("{\" _ type \":\" CompilationUnit \",\" types \":[{\" _ type \":\" ClassOrInterfaceDeclaration \",\" modifiers \":[\" public \"],\" isInterface \":\" false \",\" name \":{\" _ type \":\" SimpleName \",\" identifier \":\" Test \"},\" comment \":{\" _ type \":\" BlockComment \",\" content \":\" \\ n * Some comment \\ n \"}}]}", output ); <nl> 
mmm ExtensionsClassLoader . java <nl> ppp ExtensionsClassLoader . java <nl> 
new file <nl> ppp S3AsyncStreamOps . java <nl> + package com . example . s3 ; <nl> + import software . amazon . awssdk . async . AsyncResponseHandler ; <nl> + import software . amazon . awssdk . services . s3 . S3AsyncClient ; <nl> + import software . amazon . awssdk . services . s3 . model . GetObjectRequest ; <nl> 
mmm ProviderMeta . java <nl> ppp ProviderMeta . java <nl> - public static final String CAPABILITIES _ SHARING _ SEARCH _ MIN _ LENGTH = " search _ min _ length "; <nl> 
mmm JettyMetricsAutoConfiguration . java <nl> ppp JettyMetricsAutoConfiguration . java <nl> + import org . springframework . boot . context . embedded . AnnotationConfigEmbeddedWebApplicationContext ; <nl> + @ ConditionalOnBean ( AnnotationConfigEmbeddedWebApplicationContext . class ) <nl> 
mmm BaseExceptionHandlerAdvice . java <nl> ppp BaseExceptionHandlerAdvice . java <nl> + import org . springframework . web . bind . annotation . ControllerAdvice ; <nl> + @ ControllerAdvice <nl> 
mmm ContextQuery . java <nl> ppp ContextQuery . java <nl> 
new file <nl> ppp JspConfigDescriptorImpl . java <nl> + package io . undertow . servlet . spec ; <nl> + import java . util . Collection ; <nl> + import javax . servlet . descriptor . JspConfigDescriptor ; <nl> + import javax . servlet . descriptor . JspPropertyGroupDescriptor ; <nl> + import javax . servlet . descriptor . TaglibDescriptor ; <nl> 
mmm FrenchCompoundAwareHunspellRule . java <nl> ppp FrenchCompoundAwareHunspellRule . java <nl> + @ Override <nl> + protected List < String > getAdditionalTopSuggestions ( List < String > suggestions , String word ) throws IOException { <nl> + switch ( word ) { <nl> + case " Jai ": return Collections . singletonList (" J ' ai "); <nl> 
mmm ExtensionUtils . java <nl> ppp ExtensionUtils . java <nl> - } <nl> + } <nl> 
mmm SpELActionTest . java <nl> ppp SpELActionTest . java <nl> - expectedException . expectMessage (" EL1004E : Method call : Method setBlah ( java . lang . Boolean ) cannot be found on type org . jeasy . rules . spel . Person "); <nl> - Action action = new SpELAction (" # person . setBlah ( true )"); <nl> 
mmm DashboardCollectService . java <nl> ppp DashboardCollectService . java <nl> 
mmm VertxLoggerFormatter . java <nl> ppp VertxLoggerFormatter . java <nl> - SimpleDateFormat dateFormat = new SimpleDateFormat (" HH : mm : ss , SSS "); <nl> + SimpleDateFormat dateFormat = new SimpleDateFormat (" yyyy - MM - dd ' T ' HH : mm : ss . SSSXXX "); <nl> 
mmm SimpleCancellable . java <nl> ppp SimpleCancellable . java <nl> - return cancelled || ( parent != null & & parent . isCancelled ()); <nl> + synchronized ( this ) { <nl> + return cancelled || ( parent != null & & parent . isCancelled ()); <nl> + } <nl> 
mmm JspTokenManager . java <nl> ppp JspTokenManager . java <nl> + import net . sourceforge . pmd . annotation . InternalApi ; <nl> + @ Deprecated <nl> + @ InternalApi <nl> 
mmm MorfologikDutchSpellerRule . java <nl> ppp MorfologikDutchSpellerRule . java <nl> - protected String getSpellingFileName () { <nl> + public String getSpellingFileName () { <nl> 
new file <nl> ppp CreateBranch . java <nl> + package com . example . commit ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . codecommit . CodeCommitClient ; <nl> + import software . amazon . awssdk . services . codecommit . model . CodeCommitException ; <nl> 
mmm JedisCommandTestBase . java <nl> ppp JedisCommandTestBase . java <nl> - jedis . configSet (" timeout ", " 300 "); <nl> 
mmm PersonResource . java <nl> ppp PersonResource . java <nl> - @ Path ("/ person ") <nl> + @ Path ("/ person /{ personId }") <nl> - @ Path ("{ personId }") <nl> 
mmm BitbucketApiFactory . java <nl> ppp BitbucketApiFactory . java <nl> - import org . apache . tools . ant . ExtensionPoint ; <nl> + import hudson . ExtensionPoint ; <nl> - public abstract class BitbucketApiFactory extends ExtensionPoint { <nl> + public abstract class BitbucketApiFactory implements ExtensionPoint { <nl> 
mmm QueryParameterUtils . java <nl> ppp QueryParameterUtils . java <nl> - String value = null ; <nl> + String value = ""; <nl> - queue . add ( value ); <nl> + if ( value != null ) { <nl> + queue . add ( value ); <nl> + } <nl> 
mmm Http11NioProtocol . java <nl> ppp Http11NioProtocol . java <nl> + * <nl> + * @ deprecated This setter will be removed in Tomcat 10 . <nl> + @ Deprecated <nl> + @ Deprecated <nl> 
mmm SqlPrecondition . java <nl> ppp SqlPrecondition . java <nl> - String result = oResult . toString (); <nl> - if ( result == null ) { <nl> + if ( oResult == null ) { <nl> + String result = oResult . toString (); <nl> 
mmm GraphQLSourceDirectorySet . java <nl> ppp GraphQLSourceDirectorySet . java <nl> + import java . util . List ; <nl> - public GraphQLSourceDirectorySet ( String name , FileResolver fileResolver ) { <nl> + public GraphQLSourceDirectorySet ( String name , FileResolver fileResolver , List < String > exclude ) { <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 2 . 0 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 2 . 0 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 2 . 0 . 99 "); <nl> 
mmm AuthenticatedUserRuleTest . java <nl> ppp AuthenticatedUserRuleTest . java <nl> + import org . junit . After ; <nl> + private static final String TESTCASE _ USER = " testcase - user "; <nl> + private static final String RULE _ USER = " rule - user "; <nl> + private static final String OUTSIDE _ RULE _ USER = " outside - rule - user "; <nl> 
mmm PutObject . java <nl> ppp PutObject . java <nl> - import java . io . File ; <nl> 
mmm SyrusProtocolDecoderTest . java <nl> ppp SyrusProtocolDecoderTest . java <nl> + assertNotNull ( decoder . decode ( null , null , <nl> + "> REV131756153215 + 3359479 - 0075299001031332 ; VO = 10568798 ; IO = 310 ; SV = 10 ; BL = 4190 ; CV09 = 0 ; AD = 0 ; AL = + 47 ; ID = 356612021059680 ")); <nl> 
mmm SelectItemPrefixToken . java <nl> ppp SelectItemPrefixToken . java <nl> + @ Override <nl> + public String toString () { <nl> + return " DISTINCT "; <nl> + } <nl> 
new file <nl> ppp SQLExeucteCallbackFactoryTest . java <nl> + package io . shardingsphere . core . executor ; <nl> + import io . shardingsphere . core . constant . SQLType ; <nl> + import io . shardingsphere . core . constant . transaction . TransactionType ; <nl> + import io . shardingsphere . core . executor . sql . SQLExecuteCallback ; <nl> 
mmm CachingWordListLoader . java <nl> ppp CachingWordListLoader . java <nl> 
deleted file <nl> mmm OCamlYacc . java <nl> - package com . facebook . buck . ocaml ; <nl> - import com . facebook . buck . rules . AbstractBuildRule ; <nl> - import com . facebook . buck . rules . BuildContext ; <nl> - import com . facebook . buck . rules . BuildRuleParams ; <nl> - import com . facebook . buck . rules . BuildableContext ; <nl> 
mmm InodeLockManagerTest . java <nl> ppp InodeLockManagerTest . java <nl> - CommonUtils . waitFor (" lock to be acquired by the second thread ", () - > threadFinished . get ()); <nl> + CommonUtils . waitFor (" lock to be acquired by the second thread ", threadFinished :: get ); <nl> 
mmm AuthInterceptor . java <nl> ppp AuthInterceptor . java <nl> - boolean ok = loginService . login ( request , response ); <nl> - if (! ok ) { <nl> - return false ; <nl> - } <nl> - return true ; <nl> + return loginService . login ( request , response ); <nl> 
mmm ThriftEncoder . java <nl> ppp ThriftEncoder . java <nl> + wrappedBuffer . resetWriterIndex (); <nl> 
deleted file <nl> mmm ConnectionPool . java <nl> - package okhttp3 ; <nl> - import java . util . concurrent . TimeUnit ; <nl> - import okhttp3 . internal . connection . RealConnectionPool ; <nl> - public final class ConnectionPool { <nl> - final RealConnectionPool delegate ; <nl> - public ConnectionPool () { <nl> 
mmm DisposerTest . java <nl> ppp DisposerTest . java <nl> + Long longValue = longHandle . get (); <nl> - assertEquals ( LongProducer . DISPOSED . get (), longHandle . get ()); <nl> + assertEquals ( LongProducer . DISPOSED . get (), longValue ); <nl> 
mmm InstrumentationRegistryTest . java <nl> ppp InstrumentationRegistryTest . java <nl> - assertThat ( InstrumentationRegistry . getTargetContext ()) . isEqualTo ( InstrumentationRegistry . getContext ()); <nl> + assertThat ( InstrumentationRegistry . getContext ()) . isNotNull (); <nl> + assertThat ( InstrumentationRegistry . getTargetContext () . getPackageName ()) . isEqualTo ( <nl> 
mmm BroadcastStateBootstrapFunction . java <nl> ppp BroadcastStateBootstrapFunction . java <nl> 
mmm FileOperationsTest . java <nl> ppp FileOperationsTest . java <nl> + import java . nio . channels . FileLock ; <nl> - try { <nl> - FileChannel . open ( file , StandardOpenOption . READ ) . tryLock ( 0 , Long . MAX _ VALUE , true ); <nl> - Assert . fail (" Lock attempt should have failed "); <nl> + try ( FileChannel channel = FileChannel . open ( file , StandardOpenOption . READ )) { <nl> 
new file <nl> ppp PagerUtilsTest _ Limit _ hive _ 0 . java <nl> + package com . alibaba . druid . bvt . sql ; <nl> + import com . alibaba . druid . DbType ; <nl> + import com . alibaba . druid . sql . PagerUtils ; <nl> + import com . alibaba . druid . util . JdbcUtils ; <nl> + import junit . framework . TestCase ; <nl> 
mmm DataSourceConnectionSegment . java <nl> ppp DataSourceConnectionSegment . java <nl> - private final String name ; <nl> + private String name ; <nl> - private final String hostName ; <nl> + private String hostName ; <nl> - private final String port ; <nl> + private String port ; <nl> - private final String db ; <nl> 
mmm SimpleReplaceRule . java <nl> ppp SimpleReplaceRule . java <nl> + setLocQualityIssueType (" misspelling "); <nl> 
mmm VaultOptionsModule . java <nl> ppp VaultOptionsModule . java <nl> + import javafx . scene . image . Image ; <nl> + import javax . inject . Named ; <nl> + import java . util . Optional ; <nl> - static Stage provideStage (@ MainWindow Stage owner , @ VaultOptionsWindow Vault vault , ResourceBundle resourceBundle ) { <nl> 
mmm FastJsonRedisSerializer . java <nl> ppp FastJsonRedisSerializer . java <nl> - throw new SerializationException (" Could not write JSON : " + ex . getMessage (), ex ); <nl> + throw new SerializationException (" Could not serialize : " + ex . getMessage (), ex ); <nl> - throw new SerializationException (" Could not write JSON : " + ex . getMessage (), ex ); <nl> 
mmm ServletStackTraces . java <nl> ppp ServletStackTraces . java <nl> - NONE , <nl> - LOCAL _ ONLY , <nl> - ALL <nl> + NONE (" none "), <nl> + LOCAL _ ONLY (" local - only "), <nl> + ALL (" all "); <nl> + private final String value ; <nl> + private ServletStackTraces ( String value ) { <nl> + this . value = value ; <nl> 
mmm LoggingCache . java <nl> ppp LoggingCache . java <nl> + import java . util . List ; <nl> - public interface LoggingCollection { <nl> + public interface LoggingCache { <nl> + boolean addLog ( ExternalLog log ); <nl> + boolean addLogs ( List <? extends ExternalLog > logs ); <nl> + boolean isEmpty (); <nl> 
mmm JsonPathSelectorTest . java <nl> ppp JsonPathSelectorTest . java <nl> - jsonPathSelector = new JsonPathSelector ("$ . store . book [?(@ . category == ' reference ')]"); <nl> + jsonPathSelector = new JsonPathSelector ("$ . store . book [?(@ . category == ' reference ')] . title "); <nl> - assertThat ( select ) . isEqualTo ("{\" author \":\" Nigel Rees \",\" title \":\" Sayings of the Century \",\" category \":\" reference \",\" price \": 8 . 95 }"); <nl> 
mmm DefaultPoolExecutor . java <nl> ppp DefaultPoolExecutor . java <nl> + import java . util . concurrent . ArrayBlockingQueue ; <nl> - import java . util . concurrent . SynchronousQueue ; <nl> + import java . util . concurrent . RejectedExecutionHandler ; <nl> - private static final int MAX _ THREAD _ COUNT = 20 ; <nl> 
mmm ComposerLockAnalyzerTest . java <nl> ppp ComposerLockAnalyzerTest . java <nl> + import org . owasp . dependencycheck . BaseDBTestCase ; <nl> - public class ComposerLockAnalyzerTest extends BaseTest { <nl> + public class ComposerLockAnalyzerTest extends BaseDBTestCase { <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 5 . 2 "; <nl> + public static final String VERSION = " 2 . 5 . 3 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 5 . 2 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 5 . 3 "; <nl> 
mmm RequestHandlerKey . java <nl> ppp RequestHandlerKey . java <nl> - return Sets . difference ( pathMappings , that . pathMappings ) . isEmpty () & & <nl> - Sets . difference ( supportedMethods , that . supportedMethods ) . isEmpty () & & <nl> - Sets . difference ( supportedMediaTypes , that . supportedMediaTypes ) . isEmpty () & & <nl> 
new file <nl> ppp MySqlPerfMain _ visitor . java <nl> + package com . alibaba . druid . benckmark . sql ; <nl> + import java . lang . management . ManagementFactory ; <nl> + import java . util . List ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> + import com . alibaba . druid . sql . dialect . mysql . parser . MySqlStatementParser ; <nl> 
mmm StudentResourceIntegrationTest . java <nl> ppp StudentResourceIntegrationTest . java <nl> - . resolve (" org . jetbrains . kotlin : kotlin - stdlib ") <nl> + . resolve (" org . jetbrains . kotlin : kotlin - stdlib : 1 . 3 . 41 ") <nl> 
new file <nl> ppp MethodDeclarationTransformationsTest . java <nl> + package com . github . javaparser . printer . lexicalpreservation . transformations . ast . body ; <nl> + import com . github . javaparser . ast . Modifier ; <nl> + import com . github . javaparser . ast . body . ConstructorDeclaration ; <nl> 
deleted file <nl> mmm ServerSentEventTestCAse . java <nl> - package io . undertow . server . handlers ; <nl> - public class ServerSentEventTestCAse { <nl> - } <nl> 
mmm RxJavaAutoConfiguration . java <nl> ppp RxJavaAutoConfiguration . java <nl> + import org . springframework . web . method . support . AsyncHandlerMethodReturnValueHandler ; <nl> + @ ConditionalOnWebApplication <nl> - @ Bean <nl> - public ObservableReturnValueHandler observableReturnValueHandler () { <nl> 
mmm Persian . java <nl> ppp Persian . java <nl> - @ Override <nl> - public String getCommonWordsPath () { <nl> - return null ; <nl> - } <nl> 
mmm GlobeHttpHandler . java <nl> ppp GlobeHttpHandler . java <nl> 
mmm SpringContextTest . java <nl> ppp SpringContextTest . java <nl> - package org . baeldung ; <nl> + package com . baeldung ; <nl> 
deleted file <nl> mmm DoneFuture . java <nl> - package org . h2 . util ; <nl> - import java . util . concurrent . ExecutionException ; <nl> - import java . util . concurrent . Future ; <nl> - import java . util . concurrent . TimeUnit ; <nl> - import java . util . concurrent . TimeoutException ; <nl> - public class DoneFuture < T > implements Future < T > { <nl> 
mmm ChaptersFragment . java <nl> ppp ChaptersFragment . java <nl> - if ( this . media == media || adapter == null ) { <nl> + if ( this . media == media ) { <nl> - adapter . setMedia ( media ); <nl> - adapter . notifyDataSetChanged (); <nl> - if ( media == null || media . getChapters () == null || media . getChapters () . size () == 0 ) { <nl> 
mmm BuildRules . java <nl> ppp BuildRules . java <nl> + import com . google . common . collect . ImmutableMultimap ; <nl> + import com . google . common . collect . Multimap ; <nl> + public static Multimap < String , BuildRule > buildRulesByTargetBasePath ( Iterable < BuildRule > rules ) { <nl> + ImmutableMultimap . Builder < String , BuildRule > result = ImmutableMultimap . builder (); <nl> 
mmm TrvProtocolDecoderTest . java <nl> ppp TrvProtocolDecoderTest . java <nl> + verifyAttributes ( decoder , text ( <nl> + " TRVCP01 , 100007100000001020151060011 ")); <nl> + verifyPosition ( decoder , text ( <nl> + " TRVAP01160209A2540 . 8863N05546 . 6125E005 . 6075734123 . 7910000810010000 , 424 , 030 , 3012 , 27323 ")); <nl> 
mmm FinalRClassBuilder . java <nl> ppp FinalRClassBuilder . java <nl> + import com . github . javaparser . ast . NodeList ; <nl> + import com . github . javaparser . ast . body . ClassOrInterfaceDeclaration ; <nl> + import com . github . javaparser . ast . expr . Expression ; <nl> + import java . util . Optional ; <nl> 
mmm LargestBSTInBinaryTree . java <nl> ppp LargestBSTInBinaryTree . java <nl> 
mmm ShadowResourceCursorAdapter . java <nl> ppp ShadowResourceCursorAdapter . java <nl> + public void _ _ constructor _ _ ( Context context , int layout , Cursor c , int flags ) { <nl> + super . _ _ constructor _ _ ( context , c , flags ); <nl> + mLayout = mDropDownLayout = layout ; <nl> + mInflater = ( LayoutInflater ) context . getSystemService ( Context . LAYOUT _ INFLATER _ SERVICE ); <nl> 
mmm RussianVerbConjugationRule . java <nl> ppp RussianVerbConjugationRule . java <nl> - return " Checks for coherence of personal pronouns and verbs in Russian "; <nl> + return "Согласование персональных местоимений с глаголами"; <nl> - RuleMatch ruleMatch = new RuleMatch ( this , currentReading . getStartPos (), nextReading . getEndPos (), "Неверное спряжение глагола", getShort ()); <nl> 
mmm UserTest . java <nl> ppp UserTest . java <nl> - import org . junit . Assert ; <nl> + import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> - Assert . assertEquals ( 2 , users . size ()); <nl> 
new file <nl> ppp DefaultUserFinderTest . java <nl> + package org . sonar . core . components ; <nl> + import static org . hamcrest . Matchers . is ; <nl> + import static org . hamcrest . Matchers . nullValue ; <nl> + import static org . junit . Assert . assertThat ; <nl> + import org . junit . Before ; <nl> 
mmm DateTimeType . java <nl> ppp DateTimeType . java <nl> - public DateTimeType () { <nl> - super (" DATETIME ", 0 , 1 ); <nl> - } <nl> + public DateTimeType () { <nl> + super (" DATETIME ", 0 , 1 ); <nl> + } <nl> - public DateTimeType ( String dataTypeName ) { <nl> - super ( dataTypeName , 0 , 1 ); <nl> - } <nl> 
new file <nl> ppp GrapeComponentTest . java <nl> + package org . apache . camel . component . grape ; <nl> + import static org . apache . camel . ServiceStatus . Stopped ; <nl> + import static org . apache . camel . component . grape . GrapeComponent . grapeCamelContext ; <nl> + import static org . apache . camel . component . grape . GrapeEndpoint . loadPatches ; <nl> 
mmm Application . java <nl> ppp Application . java <nl> - import akka . dispatch . Futures ; <nl> - import play . api . libs . concurrent . Promise ; <nl> - import play . libs . Akka ; <nl> - import scala . concurrent . ExecutionContext ; <nl> - private static final ObjectMapper OBJECT _ MAPPER = new ObjectMapper (); <nl> 
mmm ParameterizedFunctionalTest . java <nl> ppp ParameterizedFunctionalTest . java <nl> - if ( true ) { <nl> - return Arrays . < Platform > asList ( <nl> - new PostgresSQL (), new H2 (), new HSQL (), new Derby (), new SQLite ()); <nl> - } <nl> 
mmm ContainerTestSuite . java <nl> ppp ContainerTestSuite . java <nl> - new File (" . / . . / . . / docker / docker - compose . postgres . volumes . yml ")) <nl> + new File (" . / . . / . . / docker / docker - compose . postgres . volumes . yml "), <nl> + new File (" . / . . / . . / docker / docker - compose . kafka . yml ")) <nl> 
mmm LoadingEvent . java <nl> ppp LoadingEvent . java <nl> - public @ Nullable Throwable t ; <nl> + @ Nullable public Throwable t ; <nl> 
mmm PermutationBiggerThanNumber . java <nl> ppp PermutationBiggerThanNumber . java <nl> 
mmm BeamSqlUnparseContext . java <nl> ppp BeamSqlUnparseContext . java <nl> - if ( literal . getTypeName () . getFamily () . equals ( SqlTypeFamily . BINARY )) { <nl> - BitString bitString = BitString . createFromBytes ( literal . getValueAs ( byte [] . class )); <nl> - return new SqlByteStringLiteral ( bitString , POS ); <nl> 
mmm FMLSecurityManager . java <nl> ppp FMLSecurityManager . java <nl> + @ Override <nl> + public void checkPermission ( Permission perm , Object context ) <nl> + { <nl> + this . checkPermission ( perm ); <nl> + } <nl> 
mmm NoModelDataListener . java <nl> ppp NoModelDataListener . java <nl> 
mmm VMPluginFactory . java <nl> ppp VMPluginFactory . java <nl> - import org . codehaus . groovy . vmplugin . v4 . Java4 ; <nl> 
mmm OpmlReader . java <nl> ppp OpmlReader . java <nl> - private boolean isInBody = false ; <nl> 
mmm SecureServletTest . java <nl> ppp SecureServletTest . java <nl> - import com . meterware . httpunit . AuthorizationRequiredException ; <nl> - import com . meterware . httpunit . GetMethodWebRequest ; <nl> - import com . meterware . httpunit . WebConversation ; <nl> - import com . meterware . httpunit . WebResponse ; <nl> 
mmm TestController . java <nl> ppp TestController . java <nl> + import org . springframework . cloud . client . discovery . DiscoveryClient ; <nl> + @ Autowired <nl> + private DiscoveryClient discoveryClient ; <nl> + @ RequestMapping ( value ="/ client ", method = RequestMethod . GET ) <nl> + public Object client (){ <nl> 
new file <nl> ppp YamlEncryptTableRuleConfiguration . java <nl> + package org . apache . shardingsphere . core . yaml . config . encrypt ; <nl> + import java . util . LinkedHashMap ; <nl> + import java . util . Map ; <nl> + public final class YamlEncryptTableRuleConfiguration { <nl> + private final Map < String , YamlEncryptColumnRuleConfiguration > columns = new LinkedHashMap <>(); <nl> 
mmm App . java <nl> ppp App . java <nl> + import org . springframework . batch . core . JobParametersBuilder ; <nl> - final JobExecution execution = jobLauncher . run ( job , new JobParameters ()); <nl> + JobParameters jobParameters = new JobParametersBuilder () <nl> + . addString (" jobID ", String . valueOf ( System . currentTimeMillis ())) <nl> 
mmm GoogleCloudModule . java <nl> ppp GoogleCloudModule . java <nl> + requireBinding ( CommonSettings . class ); <nl> 
mmm Log . java <nl> ppp Log . java <nl> + import ch . qos . logback . classic . spi . ILoggingEvent ; <nl> - RollingFileAppender appender = new RollingFileAppender (); <nl> + RollingFileAppender < ILoggingEvent > appender = new RollingFileAppender <>(); <nl> - SizeBasedTriggeringPolicy triggeringPolicy = new SizeBasedTriggeringPolicy (); <nl> 
mmm LogNormalizer . java <nl> ppp LogNormalizer . java <nl> - System . out . println (" KeyValueFormat . parse ( dto . getData ()) = " + KeyValueFormat . parse ( dto . getData ())); <nl> 
mmm VApp . java <nl> ppp VApp . java <nl> + VirtualCore . get () . setComponentDelegate ( new MyComponentDelegate ()); <nl> - VirtualCore . get () . setComponentDelegate ( new MyComponentDelegate ()); <nl> 
mmm GoDescriptionProvider . java <nl> ppp GoDescriptionProvider . java <nl> + if ( o instanceof GoFieldDefinition ) return " Field "; <nl> + if ( o instanceof GoReceiver ) return " Receiver "; <nl> 
mmm RBuildFilesFunction . java <nl> ppp RBuildFilesFunction . java <nl> - import com . google . common . collect . ImmutableList ; <nl> - ImmutableList . Builder < String > fileNames = ImmutableList . builder (); <nl> - for ( Argument arg : args ) { <nl> - fileNames . add ( arg . getWord ()); <nl> - } <nl> 
mmm FxApplication . java <nl> ppp FxApplication . java <nl> - import org . cryptomator . jni . MacApplicationUiAppearance ; <nl> - macFunctions . map ( MacFunctions :: uiAppearance ) . ifPresent ( MacApplicationUiAppearance :: setToDarkAqua ); <nl> - macFunctions . map ( MacFunctions :: uiAppearance ) . ifPresent ( MacApplicationUiAppearance :: setToAqua ); <nl> 
mmm PreAuthenticatedCredentialsNotFoundException . java <nl> ppp PreAuthenticatedCredentialsNotFoundException . java <nl> + public PreAuthenticatedCredentialsNotFoundException ( String message , Throwable cause ) { <nl> + super ( message , cause ); <nl> + } <nl> 
mmm AbstractListComponentsProcessor . java <nl> ppp AbstractListComponentsProcessor . java <nl> 
mmm ResponseLoggingTest . java <nl> ppp ResponseLoggingTest . java <nl> + import org . json . JSONException ; <nl> + import org . skyscreamer . jsonassert . JSONAssert ; <nl> + import static org . hamcrest . Matchers . startsWith ; <nl> + public void <nl> + assertJsonEqualsNonStrict ( String json1 , String json2 ) { <nl> 
mmm OidcUserService . java <nl> ppp OidcUserService . java <nl> + import org . springframework . security . oauth2 . core . OAuth2Error ; <nl> + private static final String INVALID _ USER _ INFO _ RESPONSE _ ERROR _ CODE = " invalid _ user _ info _ response "; <nl> + if (! userInfo . getSubject () . equals ( oidcClientAuthentication . getIdToken () . getSubject ())) { <nl> 
mmm EngineConfig . java <nl> ppp EngineConfig . java <nl> - @ ConfigurationProperties (" my . engine ") <nl> - @ NotBlank <nl> - private String manufacturer = " Ford "; <nl> - public static class CrankShaft { <nl> - private Optional < Double > rodLength = Optional . empty (); <nl> 
mmm StopWatch . java <nl> ppp StopWatch . java <nl> + import java . util . concurrent . TimeUnit ; <nl> - start = System . currentTimeMillis (); <nl> + start = System . nanoTime (); <nl> - stop = System . currentTimeMillis (); <nl> + stop = System . nanoTime (); <nl> - return stop - start ; <nl> + return TimeUnit . NANOSECONDS . toMillis ( stop - start ); <nl> 
mmm StreamAlertService . java <nl> ppp StreamAlertService . java <nl> - import org . graylog2 . restroutes . generated . routes ; <nl> 
mmm TestRecordReader . java <nl> ppp TestRecordReader . java <nl> 
mmm CodegenOperation . java <nl> ppp CodegenOperation . java <nl> + public boolean getHasFormParams () { <nl> + return nonempty ( formParams ); <nl> + } <nl> 
new file <nl> ppp Issue199 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import junit . framework . TestCase ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + public class Issue199 extends TestCase { <nl> + public void test _ for _ issue () throws Exception { <nl> 
mmm BazelJavaPluginRule . java <nl> ppp BazelJavaPluginRule . java <nl> + . removeAttribute (" data ") <nl> 
mmm CommandLineHistory . java <nl> ppp CommandLineHistory . java <nl> - import org . rstudio . core . client . MathUtil ; <nl> - int pos = MathUtil . clamp ( getPositionAtOffset ( offset ), 0 , history _ . size () - 1 ); <nl> + int pos = getPositionAtOffset ( offset ); <nl> 
mmm BufferedImageSourceTest . java <nl> ppp BufferedImageSourceTest . java <nl> - assertEquals ( BufferedImageSource . INPUT _ FORMAT _ NAME , source . getInputFormatName ()); <nl> + assertEquals ( null , source . getInputFormatName ()); <nl> 
mmm Repositories . java <nl> ppp Repositories . java <nl> - if ( this . reference . equals ( checkNotNull ( reference ))) { <nl> + if ( reference . equals ( this . reference )) { <nl> 
mmm ConfigurationTest . java <nl> ppp ConfigurationTest . java <nl> - assertEquals ( notDirectOverriden . toUpperCase (), <nl> + assertEquals ( notDirectOverriden . toUpperCase ( Locale . getDefault ()), <nl> 
mmm Version . java <nl> ppp Version . java <nl> - VERSION _ REVISION = 0 ; <nl> + VERSION _ REVISION = 1 ; <nl> 
mmm Async0 . java <nl> ppp Async0 . java <nl> - req . getAsyncContext () . complete (); <nl> + req . getAsyncContext () . complete (); <nl> 
mmm CameraFragment . java <nl> ppp CameraFragment . java <nl> - cameraViewHolder = new Preview ( getActivity (), cameraView ); <nl> + cameraViewHolder = new Preview ( getContext () . getApplicationContext (), cameraView ); <nl> 
mmm AnnotationOutputter . java <nl> ppp AnnotationOutputter . java <nl> 
mmm HazelcastAssemblyIT . java <nl> ppp HazelcastAssemblyIT . java <nl> - testSimpleGremlinSession (" conf / titan - hazelcast . properties ", " hazelcastcache "); <nl> + testSimpleGremlinSession (" conf / titan - hazelcastcache . properties ", " hazelcastcache "); <nl> 
mmm ReadableMapUtils . java <nl> ppp ReadableMapUtils . java <nl> - import com . facebook . react . bridge . Dynamic ; <nl> 
new file <nl> ppp SbtLargeTest . java <nl> + package com . googlecode . flyway . sbt . largetest ; <nl> + import com . googlecode . flyway . core . util . FileCopyUtils ; <nl> + import org . junit . Test ; <nl> + import java . io . File ; <nl> + import java . io . InputStreamReader ; <nl> + import java . util . ArrayList ; <nl> 
mmm MySQLAddIndexExtractHandler . java <nl> ppp MySQLAddIndexExtractHandler . java <nl> - import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . ASTExtractHandler1 ; <nl> - import io . shardingsphere . core . parsing . parser . sql . SQLStatement ; <nl> - public final class MySQLAddIndexExtractHandler implements ASTExtractHandler , ASTExtractHandler1 { <nl> 
mmm StringReadChannelListener . java <nl> ppp StringReadChannelListener . java <nl> + import io . undertow . server . XnioByteBufferPool ; <nl> + import org . xnio . Pool ; <nl> 
mmm SelectionRenderer . java <nl> ppp SelectionRenderer . java <nl> - rowSnippet = rowSnippet . replace (" % item % ", w . getItem ()); <nl> - rowSnippet = rowSnippet . replace (" % cmd % ", mapping . getCmd ()); <nl> - rowSnippet = rowSnippet . replace (" % label % ", mapping . getLabel ()); <nl> - if ( mapping . getCmd () . equals ( state )) { <nl> 
mmm Utils . java <nl> ppp Utils . java <nl> + import java . util . Map ; <nl> - try { <nl> - StdSchedulerFactory . getDefaultScheduler () . shutdown (); <nl> - } catch ( final SchedulerException e ) { <nl> - throw new IllegalStateException ( e ); <nl> + if ( isQuartzSchedulerStarted ()) { <nl> + try { <nl> + StdSchedulerFactory . getDefaultScheduler () . shutdown (); <nl> 
mmm DropwizardExtensionsSupport . java <nl> ppp DropwizardExtensionsSupport . java <nl> - import java . lang . reflect . Field ; <nl> - import java . lang . reflect . Modifier ; <nl> - import java . util . Arrays ; <nl> - import java . util . List ; <nl> - import java . util . stream . Collectors ; <nl> + import java . lang . reflect . Field ; <nl> 
mmm GpsmtaProtocolDecoder . java <nl> ppp GpsmtaProtocolDecoder . java <nl> - import java . util . regex . Matcher ; <nl> 
new file <nl> ppp ConnectionStatusTest . java <nl> + package org . apache . shardingsphere . proxy . backend . communication . jdbc . connection ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import java . lang . reflect . Field ; <nl> + import java . util . concurrent . CountDownLatch ; <nl> 
mmm EchoAsyncAnnotation . java <nl> ppp EchoAsyncAnnotation . java <nl> + import javax . websocket . server . ServerEndpoint ; <nl> + @ ServerEndpoint ("/ websocket / echoAsyncAnnotation ") <nl> 
mmm TestBeanBeanInfo . java <nl> ppp TestBeanBeanInfo . java <nl> + * </ ol > <nl> 
mmm UserItemHolder . java <nl> ppp UserItemHolder . java <nl> 
mmm LatestArtifactTransformation . java <nl> ppp LatestArtifactTransformation . java <nl> 
mmm FileUrlJar . java <nl> ppp FileUrlJar . java <nl> + jarConn . setUseCaches ( false ); <nl> 
mmm Region . java <nl> ppp Region . java <nl> + public static final Region EU _ CENTRAL _ 1 = new Region (" eu - central - 1 ", " EUC1 "); <nl> + regionsByShortName . put ( EU _ CENTRAL _ 1 . shortName , EU _ CENTRAL _ 1 ); <nl> + regionsByName . put ( EU _ CENTRAL _ 1 . name , EU _ CENTRAL _ 1 ); <nl> 
new file <nl> ppp Issue3281 . java <nl> + package com . alibaba . json . bvt . issue _ 3200 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + import lombok . AllArgsConstructor ; <nl> + import lombok . Builder ; <nl> + import lombok . Data ; <nl> + import org . junit . Assert ; <nl> 
new file <nl> ppp FastjsonSockJsMessageCodec . java <nl> + package com . alibaba . fastjson . support . spring ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + import org . springframework . web . socket . sockjs . frame . AbstractSockJsMessageCodec ; <nl> + import com . alibaba . fastjson . JSON ; <nl> 
mmm SolrJmxReporterCloudTest . java <nl> ppp SolrJmxReporterCloudTest . java <nl> - import javax . management . MBeanServerFactory ; <nl> - import org . junit . AfterClass ; <nl> 
mmm LruCache . java <nl> ppp LruCache . java <nl> 
mmm MockPolicy . java <nl> ppp MockPolicy . java <nl> 
mmm ModeAwareThreadPoolTaskScheduler . java <nl> ppp ModeAwareThreadPoolTaskScheduler . java <nl> - public ScheduledFuture schedule ( Runnable task , Trigger trigger ) { <nl> + public ScheduledFuture <?> schedule ( Runnable task , Trigger trigger ) { <nl> - public ScheduledFuture schedule ( Runnable task , Date startTime ) { <nl> 
new file <nl> ppp QueryRowTest . java <nl> + package io . shardingsphere . core . executor . sql . execute . row ; <nl> + import org . junit . Test ; <nl> + public class QueryRowTest { <nl> + @ Test <nl> + public void testGetColumnValue () { <nl> + } <nl> + @ Test <nl> + public void testEquals () { <nl> + } <nl> 
mmm Immutable2DSumRangeQuery . java <nl> ppp Immutable2DSumRangeQuery . java <nl> - * Given a 2D array find the sum in given range . <nl> + * Given a 2D array find the sum in given range defining a rectangle . <nl> - for ( int i = 1 ; i < T . length ; i + + ) { <nl> - for ( int j = 1 ; j < T [ 0 ] . length ; j + + ) { <nl> 
mmm RootToLeafToSum . java <nl> ppp RootToLeafToSum . java <nl> - public void printPath ( Node root , int sum ){ <nl> - List < Node > path = new ArrayList < Node >(); <nl> - printPath ( root , path , sum ); <nl> - } <nl> - private void printPath ( Node root , List < Node > path , int sum ){ <nl> + public boolean printPath ( Node root , int sum , List < Node > path ){ <nl> 
mmm ExpandableUseActivity . java <nl> ppp ExpandableUseActivity . java <nl> + import android . support . v7 . widget . GridLayoutManager ; <nl> - mRecyclerView . setLayoutManager ( new LinearLayoutManager ( this )); <nl> + final GridLayoutManager manager = new GridLayoutManager ( this , 3 ); <nl> + manager . setSpanSizeLookup ( new GridLayoutManager . SpanSizeLookup () { <nl> 
mmm Extra . java <nl> ppp Extra . java <nl> - String value (); <nl> + String value (); <nl> 
new file <nl> ppp SwitchPreferenceCompat . java <nl> + package org . thoughtcrime . securesms . components ; <nl> + import android . annotation . TargetApi ; <nl> + import android . content . Context ; <nl> + import android . os . Build ; <nl> + import android . preference . CheckBoxPreference ; <nl> + import android . util . AttributeSet ; <nl> 
deleted file <nl> mmm MatrixIdentityTest . java <nl> - package com . jwetherell . algorithms . mathematics . test ; <nl> - import static org . junit . Assert . *; <nl> - import org . junit . Test ; <nl> - import com . jwetherell . algorithms . mathematics . MatrixIdentity ; <nl> - public class MatrixIdentityTest { <nl> 
mmm GoDeferInLoop . java <nl> ppp GoDeferInLoop . java <nl> - holder . registerProblem ( o . getDefer (), " Possible resource leak , \" defer \" is called in a for loop . ", <nl> + holder . registerProblem ( o . getDefer (), " Possible resource leak , ' defer ' is called in a for loop . ", <nl> 
mmm UserDeserializer . java <nl> ppp UserDeserializer . java <nl> -  <nl> 
mmm CheckpointFailureReason . java <nl> ppp CheckpointFailureReason . java <nl> - private final boolean isPreFlight ; <nl> + private final boolean preFlight ; <nl> - this . isPreFlight = isPreFlight ; <nl> + this . preFlight = isPreFlight ; <nl> - return isPreFlight ; <nl> + return preFlight ; <nl> 
new file <nl> ppp RxVsStreamPerf . java <nl> + package io . reactivex ; <nl> + import java . util . *; <nl> + import java . util . concurrent . TimeUnit ; <nl> + import org . openjdk . jmh . annotations . *; <nl> + import org . openjdk . jmh . infra . Blackhole ; <nl> + @ BenchmarkMode ( Mode . Throughput ) <nl> 
mmm DatabaseProperties . java <nl> ppp DatabaseProperties . java <nl> - int MAX _ TEXT _ SIZE = 16777215 ; <nl> - @ Deprecated <nl> - String PROP _ USER _ DEPRECATED = " sonar . jdbc . user "; <nl> - String PROP _ DIALECT = " sonar . jdbc . dialect "; <nl> 
mmm AboutFragment . java <nl> ppp AboutFragment . java <nl> - TextView tv = ( TextView ) v . findViewById ( R . id . aimsicd _ poc _ link ); <nl> + tv = ( TextView ) v . findViewById ( R . id . aimsicd _ poc _ link ); <nl> 
mmm WeldDeploymentTemplate . java <nl> ppp WeldDeploymentTemplate . java <nl> + import java . lang . reflect . Field ; <nl> + import java . util . HashSet ; <nl> + import java . util . Iterator ; <nl> + import java . util . Map ; <nl> + import java . util . jar . JarFile ; <nl> + Class <?> clazz = Class . forName (" sun . net . www . protocol . jar . JarFileFactory "); <nl> 
mmm Server . java <nl> ppp Server . java <nl> - import org . glassfish . grizzly . Grizzly ; <nl> + import org . glassfish . grizzly . filterchain . FilterChainBuilder ; <nl> + import org . glassfish . grizzly . http . server . AddOn ; <nl> + import org . glassfish . grizzly . http . server . FileCacheFilter ; <nl> 
new file <nl> ppp UpdateEncryptParameterColumnTokenTest . java <nl> + package org . apache . shardingsphere . core . rewrite . token . pojo ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + import static org . junit . Assert . assertThat ; <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 9 . 5 "; <nl> + public static final String VERSION = " 2 . 9 . 6 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 9 . 5 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 9 . 6 "; <nl> 
mmm TimeTextView . java <nl> ppp TimeTextView . java <nl> + @ Override <nl> + protected void onAttachedToWindow () { <nl> + super . onAttachedToWindow (); <nl> + if ( mTime != null ) { <nl> + updateTimeText (); <nl> + } <nl> + } <nl> + @ Override <nl> + protected void onDetachedFromWindow () { <nl> + super . onDetachedFromWindow (); <nl> 
mmm MyResourceTest . java <nl> ppp MyResourceTest . java <nl> + import java . io . IOException ; <nl> - import org . junit . After ; <nl> - import org . junit . AfterClass ; <nl> - import org . junit . Before ; <nl> - import static org . junit . Assert . *; <nl> + import org . custommonkey . xmlunit . XMLAssert ; <nl> 
mmm ScriptLoader . java <nl> ppp ScriptLoader . java <nl> - in . setOffset ( in . getLength () - 12 ); <nl> + in . setOffset ( in . getLength () - 2 ); <nl> + int scriptEndOffset = in . readUnsignedShort (); <nl> + int endIdx = in . getLength () - 2 - scriptEndOffset - 12 ; <nl> + in . setOffset ( endIdx ); <nl> 
mmm FileNameGenerator . java <nl> ppp FileNameGenerator . java <nl> - return builder . toString (); <nl> + return builder . toString () . replaceFirst (" *$",""); <nl> 
mmm SsDownloadHelper . java <nl> ppp SsDownloadHelper . java <nl> + import com . google . android . exoplayer2 . source . smoothstreaming . manifest . SsUtil ; <nl> - return ParsingLoadable . load ( dataSource , new SsManifestParser (), uri , C . DATA _ TYPE _ MANIFEST ); <nl> + Uri fixedUri = SsUtil . fixManifestUri ( uri ); <nl> 
mmm App . java <nl> ppp App . java <nl> 
mmm TrackMessageSizeFilter . java <nl> ppp TrackMessageSizeFilter . java <nl> + * NOTE : The broadcasted message MUST BE a String . If your application is broadcasting another object , you need to <nl> + * write your own Filter . <nl> + * <nl> 
mmm MicrometerCollector . java <nl> ppp MicrometerCollector . java <nl> + import java . util . concurrent . CopyOnWriteArrayList ; <nl> - private final List < Child > children = new ArrayList <>(); <nl> + private final List < Child > children = new CopyOnWriteArrayList <>(); <nl> 

new file <nl> ppp PercentileTest . java <nl> + package org . graylog . plugins . views . search . searchtypes . pivot . series ; <nl> + import org . junit . Test ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> + public class PercentileTest { <nl> + @ Test <nl> + public void testLiteral () { <nl> 
mmm ViewProcessor . java <nl> ppp ViewProcessor . java <nl> - if ( params [ i ] . isAssignableFrom ( ViewModel . class )) { <nl> + if ( ViewModel . class . isAssignableFrom ( params [ i ])) { <nl> 
new file <nl> ppp DeathRattleExceptionHandlerTest . java <nl> + package com . yammer . metrics . util . tests ; <nl> + import com . yammer . metrics . core . Counter ; <nl> + import com . yammer . metrics . util . DeathRattleExceptionHandler ; <nl> + import org . junit . Test ; <nl> + import static org . mockito . Mockito . mock ; <nl> 
mmm Relay . java <nl> ppp Relay . java <nl> - if ( now >= nextCleaningDeadline ) { <nl> + if ( now >= nextCleaningDeadline || selectedKeys . isEmpty ()) { <nl> - } else if ( selectedKeys . isEmpty ()) { <nl> - throw new AssertionError (" selector . select () returned without any event , an invalid SelectionKey was probably been registered "); <nl> 
mmm DataSourceUtil . java <nl> ppp DataSourceUtil . java <nl> + result . setTransactionIsolation (" TRANSACTION _ READ _ COMMITTED "); <nl> 
mmm PreconditionViolationException . java <nl> ppp PreconditionViolationException . java <nl> - public PreconditionViolationException ( String message , Throwable cause ) { <nl> - super ( message , cause ); <nl> - } <nl> 
mmm GuavaListenableFutureSupport . java <nl> ppp GuavaListenableFutureSupport . java <nl> + import com . google . common . util . concurrent . FutureCallback ; <nl> + import com . google . common . util . concurrent . Futures ; <nl> + import com . google . common . util . concurrent . MoreExecutors ; <nl> 
mmm RowCountToken . java <nl> ppp RowCountToken . java <nl> + @ Override <nl> + public String toString () { <nl> + return String . valueOf ( revisedRowCount ); <nl> + } <nl> 
new file <nl> ppp TestOAuth2ErrorHandler . java <nl> + package org . springframework . security . oauth2 . consumer . client ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + import org . junit . Rule ; <nl> + import org . junit . Test ; <nl> + import org . junit . rules . ExpectedException ; <nl> 
new file <nl> ppp GetMetricData . java <nl> + package com . example . cloudwatch ; <nl> + import software . amazon . awssdk . services . cloudwatch . CloudWatchClient ; <nl> + import software . amazon . awssdk . services . cloudwatch . model . GetMetricDataResponse ; <nl> + import software . amazon . awssdk . services . cloudwatch . model . Metric ; <nl> 
mmm StringArray . java <nl> ppp StringArray . java <nl> - original [ si ] = returnWide ? new WString ( s ) : s ; <nl> + original [ si ] = returnWide ? new WString ( s ) : ( Object ) s ; <nl> 
mmm MemoryBackwardsCompatibilityUtils . java <nl> ppp MemoryBackwardsCompatibilityUtils . java <nl> - return getLegacyTaskManagerHeapMemoryIfExplicitlyConfigured ( configuration ) <nl> + return getLegacyHeapMemoryIfExplicitlyConfigured ( configuration ) <nl> - private Optional < MemorySize > getLegacyTaskManagerHeapMemoryIfExplicitlyConfigured ( Configuration configuration ) { <nl> 

mmm Matisse . java <nl> ppp Matisse . java <nl> - mContext = new WeakReference <>( activity ); <nl> - mFragment = null ; <nl> + this ( activity , null ); <nl> 
mmm CookieAuthenticator . java <nl> ppp CookieAuthenticator . java <nl> - import static java . nio . charset . StandardCharsets . UTF _ 8 ; <nl> - String cookie = new String ( encryptor . decrypt ( ciphertext ), UTF _ 8 ); <nl> - cookieData = mapper . readValue ( cookie , UserCookieData . class ); <nl> + cookieData = mapper . readValue ( encryptor . decrypt ( ciphertext ), UserCookieData . class ); <nl> 
mmm PermissionCheck . java <nl> ppp PermissionCheck . java <nl> - * does not have the given permission , otherwise {@ code false } <nl> + * does not have the given permission , otherwise {@ code true } <nl> 
new file <nl> ppp SelectExprExtractResult . java <nl> + package io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result ; <nl> + import java . util . LinkedHashMap ; <nl> + import java . util . Map ; <nl> + import io . shardingsphere . core . parsing . parser . sql . SQLStatement ; <nl> 
mmm HttpClientFactory . java <nl> ppp HttpClientFactory . java <nl> + import com . linecorp . armeria . common . HttpHeaderNames ; <nl> - . successfulResponseLogLevel ( LogLevel . INFO ); <nl> + . successfulResponseLogLevel ( LogLevel . INFO ) <nl> + . requestHeadersSanitizer ( headers - > { <nl> + if (! headers . contains ( HttpHeaderNames . AUTHORIZATION )) { <nl> 
mmm ScopeAnnotationAbuseTest . java <nl> ppp ScopeAnnotationAbuseTest . java <nl> - import static dagger . tests . integration . ProcessorTestUtils . daggerProcessors ; <nl> + import static dagger . tests . integration . ProcessorTestUtils . daggerProcessors ; <nl> - public class ScopeAnnotationOnAbstractTypesTest { <nl> 
mmm Crc32c . java <nl> ppp Crc32c . java <nl> 
mmm SpringContextTest . java <nl> ppp SpringContextTest . java <nl> - package org . baeldung ; <nl> + package com . baeldung ; <nl> 
mmm ExtractingRecognition . java <nl> ppp ExtractingRecognition . java <nl> - List < Term > newList = new ArrayList <>( terms . size () - len ); <nl> + List < Term > newList = new ArrayList <>(); <nl> 
mmm ElasticSchedulerTest . java <nl> ppp ElasticSchedulerTest . java <nl> - while ((( ElasticScheduler ) s ) . cache . peek () == null ); <nl> + while ((( ElasticScheduler ) s ) . cache . peek () == null ){ <nl> + Thread . sleep ( 100 ); <nl> + } <nl> + Thread . sleep ( 100 ); <nl> 
new file <nl> ppp _ 1217 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 1217 { <nl> + public static class Solution1 { <nl> + public int minCostToMoveChips ( int [] chips ) { <nl> + return - 1 ; <nl> + } <nl> + } <nl> + } <nl> 
mmm CTest . java <nl> ppp CTest . java <nl> 
mmm RedisClientEntry . java <nl> ppp RedisClientEntry . java <nl> - import java . net . InetSocketAddress ; <nl> - import java . util . Map ; <nl> - import org . redisson . MasterSlaveServersConfig ; <nl> + import io . netty . util . concurrent . Promise ; <nl> - import io . netty . util . concurrent . Promise ; <nl> 
mmm UnzipFile . java <nl> ppp UnzipFile . java <nl> - final String fileZip = " src / main / resources / compressed . zip "; <nl> + final String fileZip = " src / main / resources / unzipTest / compressed . zip "; <nl> + final File destDir = new File (" src / main / resources / unzipTest "); <nl> - final String fileName = zipEntry . getName (); <nl> 
mmm SmsTemplateDO . java <nl> ppp SmsTemplateDO . java <nl> 
mmm LiquibaseMigtrationTest . java <nl> ppp LiquibaseMigtrationTest . java <nl> - void shouldRemoveDataSharingRelatedTables _ asPartOfMigration _ 2020 _ 06 _ 1 _ remove _ data _ sharing _ tables () throws SQLException , LiquibaseException { <nl> + void shouldRemoveDataSharingRelatedTables _ asPartOfMigration _ 2006 _ remove _ data _ sharing _ tables () throws SQLException , LiquibaseException { <nl> 
mmm FrontendHandler . java <nl> ppp FrontendHandler . java <nl> + @ Override <nl> + public void channelWritabilityChanged ( final ChannelHandlerContext context ) { <nl> + context . fireChannelWritabilityChanged (); <nl> + if ( context . channel () . isWritable ()) { <nl> + } <nl> + } <nl> 
mmm AccountListItemSkin . java <nl> ppp AccountListItemSkin . java <nl> + import javafx . scene . control . Label ; <nl> + import javafx . scene . layout . VBox ; <nl> - import org . jackhuang . hmcl . ui . construct . TwoLineListItem ; <nl> + import org . jackhuang . hmcl . auth . authlibinjector . AuthlibInjectorAccount ; <nl> 
mmm CurriedClosure . java <nl> ppp CurriedClosure . java <nl> 
mmm DiscoveryFilterAdapter . java <nl> ppp DiscoveryFilterAdapter . java <nl> - data () . addAll ( discoveryParamsSections ( initialCategories ) . toList () . toBlocking () . single ()); <nl> + data () . addAll ( paramsSections ( initialCategories ) . toList () . toBlocking () . single ()); <nl> - protected Observable < List < Pair < DiscoveryParams , DiscoveryFilterStyle >>> discoveryParamsSections ( final List < Category > initialCategories ) { <nl> 
new file <nl> ppp Country . java <nl> + package org . baeldung . sqlfiles ; <nl> + import static javax . persistence . GenerationType . IDENTITY ; <nl> + import javax . persistence . Column ; <nl> + import javax . persistence . Entity ; <nl> + import javax . persistence . GeneratedValue ; <nl> + import javax . persistence . Id ; <nl> 
mmm GlobalConfig . java <nl> ppp GlobalConfig . java <nl> - @ Value ("${ nacos . naming . distro . taskDispatchPeriod : 200 }") <nl> + @ Value ("${ nacos . naming . distro . taskDispatchPeriod : 2000 }") <nl> 
mmm OrientationHelper . java <nl> ppp OrientationHelper . java <nl> - mListener = new OrientationEventListener ( context , SensorManager . SENSOR _ DELAY _ NORMAL ) { <nl> + mListener = new OrientationEventListener ( context . getApplicationContext (), SensorManager . SENSOR _ DELAY _ NORMAL ) { <nl> - } <nl> 
mmm ProcessorSection . java <nl> ppp ProcessorSection . java <nl> 
mmm PersianSRXSentenceTokenizerTest . java <nl> ppp PersianSRXSentenceTokenizerTest . java <nl> - testSplit ("این یک جمله است . ", "حملهٔ بعدی"); <nl> + testSplit ("این یک جمله است . ", "جملهٔ بعدی"); <nl> + testSplit ("آیا این یک جمله است؟ ", "جملهٔ بعدی"); <nl> + testSplit ("یک جمله!!! ", "جملهٔ بعدی"); <nl> 
mmm JavaDomUtils . java <nl> ppp JavaDomUtils . java <nl> - FullyQualifiedJavaType nonGenericType = <nl> - new FullyQualifiedJavaType ( fullyQualifiedJavaType . getFullyQualifiedNameWithoutTypeParameters ()); <nl> - return compilationUnit . getImportedTypes () . contains ( nonGenericType ); <nl> + String name = fullyQualifiedJavaType . getFullyQualifiedNameWithoutTypeParameters (); <nl> 
new file <nl> ppp Problem07 . java <nl> + package ProjectEuler ; <nl> + public class Problem07 { <nl> + public static void main ( String [] args ) { <nl> + int [][] testNumbers = { <nl> + { 1 , 2 }, <nl> + { 2 , 3 }, <nl> + { 3 , 5 }, <nl> + { 4 , 7 }, <nl> + { 5 , 11 }, <nl> + { 6 , 13 }, <nl> + { 20 , 71 }, <nl> 
mmm BazelConfiguration . java <nl> ppp BazelConfiguration . java <nl> + public void setupShellEnvironment ( ImmutableMap . Builder < String , String > builder ) { <nl> + String path = System . getenv (" PATH "); <nl> + builder . put (" PATH ", path == null ? ":/ bin :/ usr / bin " : path ); <nl> + String tmpdir = System . getenv (" TMPDIR "); <nl> 
mmm TableToken . java <nl> ppp TableToken . java <nl> - import com . google . common . base . Strings ; <nl> - public boolean hasDelimiter () { <nl> - return !( Strings . isNullOrEmpty ( leftDelimiter ) || Strings . isNullOrEmpty ( rightDelimiter )); <nl> + public int getLength () { <nl> + return skippedSchemaNameLength + tableName . length () + leftDelimiter . length () + rightDelimiter . length (); <nl> 
mmm MultimapContainsEntryTester . java <nl> ppp MultimapContainsEntryTester . java <nl> 
mmm Hook . java <nl> ppp Hook . java <nl> - public void runHook ( Object . . . args ) { <nl> - } <nl> 

deleted file <nl> mmm StreamChecker . java <nl> - package org . immutables . check ; <nl> - import java . util . List ; <nl> - import java . util . Objects ; <nl> - import java . util . stream . Collectors ; <nl> - import java . util . stream . Stream ; <nl> - public class StreamChecker < Z extends Stream < T >, T > { <nl> 
mmm CreateInstance . java <nl> ppp CreateInstance . java <nl> - package aws . example . ec2 ; <nl> - import com . amazonaws . services . ec2 . AmazonEC2 ; <nl> - import com . amazonaws . services . ec2 . AmazonEC2ClientBuilder ; <nl> - import com . amazonaws . services . ec2 . model . InstanceType ; <nl> - import com . amazonaws . services . ec2 . model . RunInstancesRequest ; <nl> 

mmm NetworkInterfaceManager . java <nl> ppp NetworkInterfaceManager . java <nl> + } else { <nl> + local = address ; <nl> 
new file <nl> ppp FileUtilsTest . java <nl> + package org . apache . dolphinscheduler . api . utils ; <nl> + import org . junit . After ; <nl> + import org . junit . Before ; <nl> + import org . junit . Rule ; <nl> + import org . junit . Test ; <nl> + import org . junit . rules . TemporaryFolder ; <nl> + import org . mockito . Mockito ; <nl> 
mmm FeederSpout . java <nl> ppp FeederSpout . java <nl> + import backtype . storm . utils . InprocMessaging ; <nl> - import java . util . HashMap ; <nl> - import java . util . concurrent . LinkedBlockingQueue ; <nl> - public transient static Map < String , LinkedBlockingQueue < List < Object >>> _ feeds = new HashMap < String , LinkedBlockingQueue < List < Object >>>(); <nl> 
mmm DesktopModule . java <nl> ppp DesktopModule . java <nl> + import bisq . desktop . main . MarketPricePresentation ; <nl> + bind ( MarketPricePresentation . class ) . in ( Singleton . class ); <nl> 
deleted file <nl> mmm LocalCache . java <nl> - package com . github . benmanes . caffeine . cache ; <nl> - import java . util . Iterator ; <nl> - import java . util . Map ; <nl> - import java . util . Spliterator ; <nl> - import java . util . concurrent . ConcurrentMap ; <nl> - import java . util . function . Function ; <nl> 
mmm UniqueName . java <nl> ppp UniqueName . java <nl> + public final int id () { <nl> + return id ; <nl> + } <nl> 
mmm BundleIT . java <nl> ppp BundleIT . java <nl> - . resolve (" camel - core - osgi - activator . jar "))) <nl> + . resolve (" camel - osgi - activator . jar "))) <nl> - boolean hasCamelCoreOsgiActivator = false ; <nl> + boolean hasCamelOsgiActivator = false ; <nl> - if (" org . apache . camel . camel - core - osgi - activator " . equals ( b . getSymbolicName ())) { <nl> 
mmm JPADefinition . java <nl> ppp JPADefinition . java <nl> - RuntimePackageDependency . required (" org . hibernate ")); <nl> + RuntimePackageDependency . required (" org . hibernate "), <nl> + RuntimePackageDependency . optional (" org . hibernate . envers ")); <nl> 
new file <nl> ppp Server . java <nl> + package org . traccar . model ; <nl> + public class Server implements Factory { <nl> + @ Override <nl> + public Server create () { <nl> + return new Server (); <nl> + } <nl> + private long id ; <nl> + public long getId () { return id ; } <nl> + public void setId ( long id ) { this . id = id ; } <nl> 
new file <nl> ppp UnicodeLexerSharedInputState . java <nl> + package org . codehaus . groovy . antlr ; <nl> + import antlr . LexerSharedInputState ; <nl> + public class UnicodeLexerSharedInputState extends LexerSharedInputState { <nl> + private final UnicodeEscapingReader escapingReader ; <nl> + private int prevUnescape ; <nl> 
new file <nl> ppp TitanFactoryShorthandTest . java <nl> + package com . thinkaurelius . titan . graphdb ; <nl> + import com . thinkaurelius . titan . core . TitanFactory ; <nl> + import com . thinkaurelius . titan . core . TitanGraph ; <nl> + import org . junit . Test ; <nl> + public class TitanFactoryShorthandTest { <nl> 
new file <nl> ppp SQLServerWallTest1 . java <nl> + package com . alibaba . druid . bvt . filter . wall ; <nl> + import junit . framework . TestCase ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . druid . wall . WallUtils ; <nl> + public class SQLServerWallTest1 extends TestCase { <nl> + public SQLServerWallTest1 ( String name ){ <nl> 
mmm NodeWithRange . java <nl> ppp NodeWithRange . java <nl> + import java . util . Optional ; <nl> - import java . util . Optional ; <nl> - if ( getRange () . isPresent () & & other . getRange () . isPresent ()) { <nl> + if ( hasRange () & & other . hasRange ()) { <nl> + default boolean hasRange () { <nl> + return getRange () . isPresent (); <nl> 
mmm ControllerDocumentation . java <nl> ppp ControllerDocumentation . java <nl> + private HashMap < String , DocumentationSchema > models ; <nl> - HashMap < String , DocumentationSchema > models = newHashMap (); <nl> - for ( Model model : modelMap . values ()) { <nl> - models . putAll ( modelToSchema ( schemaProvider ) . apply ( model )); <nl> 
mmm CommentFeedActivity . java <nl> ppp CommentFeedActivity . java <nl> - @ Bind ( R . id . comment _ button _ backing ) TextView commentButtonTextView ; <nl> + @ Bind ( R . id . comment _ button ) TextView commentButtonTextView ; <nl> + @ Bind ( R . id . comment _ feed _ recycler _ view ) RecyclerView recyclerView ; <nl> 
mmm LauncherShortcuts . java <nl> ppp LauncherShortcuts . java <nl> - Parcelable iconResource = Intent . ShortcutIconResource . fromContext ( this , R . drawable . icon ); <nl> + Parcelable iconResource = Intent . ShortcutIconResource . fromContext ( this , R . mipmap . icon ); <nl> 
mmm AbstractJavaScope . java <nl> ppp AbstractJavaScope . java <nl> - if ( declaration instanceof VariableNameDeclaration & & getDeclarations () . keySet () . contains ( declaration )) { <nl> - throw new RuntimeException ( declaration + " is already in the symbol table "); <nl> - } <nl> 
mmm SphericalMercatorProjection . java <nl> ppp SphericalMercatorProjection . java <nl> - public LatLng toLatLng ( Point point ) { <nl> + public LatLng toLatLng ( com . google . maps . android . geometry . Point point ) { <nl> 
mmm FileTests . java <nl> ppp FileTests . java <nl> - final Semaphore semaphore = new Semaphore ( 0 ); <nl> + public void testFileUpload () throws Exception { <nl> + File f = new File ("/ sdcard / test . txt "); <nl> + StreamUtility . writeFile ( f , " hello world "); <nl> + Ion . with ( getContext ()) <nl> 
mmm IncrementKeyGenerator . java <nl> ppp IncrementKeyGenerator . java <nl> - public Number generateKey () { <nl> + public Comparable <?> generateKey () { <nl> 
mmm CodegenModelFactory . java <nl> ppp CodegenModelFactory . java <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - private static final Map < CodegenModelType , Class <?>> typeMapping = new HashMap < CodegenModelType , Class <?>>(); <nl> - public static void setTypeMapping ( CodegenModelType type , Class <?> implementation ) { <nl> 
new file <nl> ppp DochubTaglet . java <nl> + import com . sun . tools . doclets . Taglet ; <nl> + import java . util . Map ; <nl> + public class DochubTaglet extends DocTaglet { <nl> + public static void register ( final Map < String , Taglet > tagletMap ) { <nl> + DochubTaglet t = new DochubTaglet (); <nl> 
mmm Imports . java <nl> ppp Imports . java <nl> + import com . thinkaurelius . titan . core . TypeMaker ; <nl> + imports . add (" static " + TypeMaker . UniquenessConsistency . class . getName () + " . *"); <nl> 
mmm KickoffActivity . java <nl> ppp KickoffActivity . java <nl> - ConnectivityManager manager = <nl> - ( ConnectivityManager ) getSystemService ( Context . CONNECTIVITY _ SERVICE ); <nl> + ConnectivityManager manager = ( ConnectivityManager ) getApplicationContext () <nl> + . getSystemService ( Context . CONNECTIVITY _ SERVICE ); <nl> 
new file <nl> ppp MethodDeclarationTest . java <nl> + package com . github . javaparser . ast . body ; <nl> + import com . github . javaparser . JavaParser ; <nl> + import org . junit . Test ; <nl> + public class MethodDeclarationTest { <nl> + @ Test <nl> + public void annotationsAllowedAfterGenericsAndBeforeReturnType () { <nl> 
mmm Version . java <nl> ppp Version . java <nl> - String PLUGIN _ VERSION = " 0 . 29 "; <nl> + String PLUGIN _ VERSION = " 0 . 30 "; <nl> 
mmm HasJavaClassHashes . java <nl> ppp HasJavaClassHashes . java <nl> 
new file <nl> ppp AndroidInstrumentationTestIntegrationTest . java <nl> + package com . facebook . buck . android ; <nl> + import com . facebook . buck . testutil . integration . DebuggableTemporaryFolder ; <nl> + import com . facebook . buck . testutil . integration . ProjectWorkspace ; <nl> + import com . facebook . buck . testutil . integration . TestDataHelper ; <nl> 
mmm ErrorFinder . java <nl> ppp ErrorFinder . java <nl> + long time = System . currentTimeMillis (); <nl> - System . out . println (" SUCCESS : " + methodName ); <nl> + System . out . println (" SUCCESS : " + methodName + " - " + ( System . currentTimeMillis () - time )); <nl> 
mmm SearchWorkerFragment . java <nl> ppp SearchWorkerFragment . java <nl> + import androidx . annotation . NonNull ; <nl> - public void onAttach ( Context context ) { <nl> + public void onAttach (@ NonNull Context context ) { <nl> 
mmm NavigatorHandlerSetActiveObject . java <nl> ppp NavigatorHandlerSetActiveObject . java <nl> + import org . jkiss . dbeaver . model . exec . DBExecUtils ; <nl> - import org . jkiss . dbeaver . model . runtime . DBRProgressMonitor ; <nl> - import org . jkiss . dbeaver . model . runtime . DBRRunnableWithProgress ; <nl> 
new file <nl> ppp ConcurrencySBTreeBonsaiLocalTest . java <nl> + package com . orientechnologies . orient . core . ridbag ; <nl> + import java . util . concurrent . ExecutorService ; <nl> + import java . util . concurrent . Executors ; <nl> + import java . util . concurrent . Future ; <nl> + import java . util . concurrent . TimeUnit ; <nl> 
mmm ThreadLocalSerializer . java <nl> ppp ThreadLocalSerializer . java <nl> - static final class DEFAULT {} <nl> + static final class DEFAULT implements Serializable { <nl> + } <nl> + if ( PRINT _ WARNINGS _ ON _ UNSERIALIZABLE _ THREAD _ LOCAL ) <nl> + System . err . println (" WARNING : Cannot serialize ThreadLocal (" + tl + " = " + val + "), it will be restored as null . "); <nl> 
mmm InputStreamRequestBody . java <nl> ppp InputStreamRequestBody . java <nl> - source . close (); <nl> + if ( source != null ) { <nl> + source . close (); <nl> + } <nl> 
new file <nl> ppp SecurityValidationTask . java <nl> + package alluxio . cli . validation ; <nl> + import alluxio . PropertyKey ; <nl> + import org . apache . hadoop . conf . Configuration ; <nl> + import java . io . BufferedReader ; <nl> + import java . io . InputStreamReader ; <nl> + import java . io . IOException ; <nl> 
mmm AttributeAxisIteratorTest . java <nl> ppp AttributeAxisIteratorTest . java <nl> - import static junit . framework . TestCase . assertTrue ; <nl> + import static org . hamcrest . MatcherAssert . assertThat ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + import org . hamcrest . collection . IsMapContaining ; <nl> 
mmm BaseQGateWsAction . java <nl> ppp BaseQGateWsAction . java <nl> 
mmm NettyBuffer . java <nl> ppp NettyBuffer . java <nl> - return new NettyBuffer ( buffer . readSlice ( length )); <nl> + return new NettyBuffer ( buffer . readSlice ( length ) . retain ()); <nl> 
deleted file <nl> mmm IGuiHandler . java <nl> - package net . minecraftforge . common ; <nl> - import net . minecraft . src . EntityPlayer ; <nl> - import net . minecraft . src . World ; <nl> - public interface IGuiHandler <nl> - { <nl> - public Object getGuiElement ( int ID , EntityPlayer player , World world , int x , int y , int z ); <nl> 
mmm AplicomProtocolDecoderTest . java <nl> ppp AplicomProtocolDecoderTest . java <nl> + verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertHexString ( <nl> + " 44C20146B710C158DA002100B09F0700C054CA0EA254CA0E9C03BE0BF6015D7069070000142A600000000000000001 ")))); <nl> 
mmm ResponseConsumerDelegate . java <nl> ppp ResponseConsumerDelegate . java <nl> - import org . apache . http . Header ; <nl> - if ( responseIsStreamLike ( response )) { <nl> + if ( response . getFirstHeader (" Content - Type ") . getValue () . contains (" text / event - stream ")) { <nl> - private boolean responseIsStreamLike ( HttpResponse response ) { <nl> 
mmm BeanFactoryWithClassPathResourceTest . java <nl> ppp BeanFactoryWithClassPathResourceTest . java <nl> - public class BeanFactoryWithClassPathResource { <nl> + public class BeanFactoryWithClassPathResourceTest { <nl> 
mmm MaterialViewPagerHeaderView . java <nl> ppp MaterialViewPagerHeaderView . java <nl> 
deleted file <nl> mmm DefaultExpressionTraversalVisitor . java <nl> - package io . crate . sql . tree ; <nl> - public abstract class DefaultExpressionTraversalVisitor < R , C > <nl> - extends DefaultTraversalVisitor < R , C > <nl> - { <nl> - @ Override <nl> - protected R visitSubqueryExpression ( SubqueryExpression node , C context ) <nl> 
mmm AllTests . java <nl> ppp AllTests . java <nl> + import com . dianping . cat . report . page . cross . CrossReportMergerTest ; <nl> + CrossReportMergerTest . class , <nl> 
new file <nl> ppp JPAConverter . java <nl> + package org . jooq . impl ; <nl> + import java . lang . reflect . Method ; <nl> + import javax . persistence . AttributeConverter ; <nl> + import org . jooq . exception . MappingException ; <nl> + import org . jooq . tools . reflect . Reflect ; <nl> + public final class JPAConverter < T , U > extends AbstractConverter < T , U > { <nl> 
mmm ScannerSubstitutions . java <nl> ppp ScannerSubstitutions . java <nl> + import org . flywaydb . core . internal . scanner . ResourceNameCache ; <nl> - Charset encoding ) { <nl> + Charset encoding , ResourceNameCache resourceNameCache ) { <nl> 
mmm HexDumpProxy . java <nl> ppp HexDumpProxy . java <nl> - run ( localPort , remoteHost , remotePort ); <nl> + new HexDumpProxy ( localPort , remoteHost , remotePort ) . run (); <nl> 
mmm AllConfusionRulesEvaluator . java <nl> ppp AllConfusionRulesEvaluator . java <nl> + private static final int MAX _ NGRAM = 3 ; <nl> - ConfusionRuleEvaluator eval = new ConfusionRuleEvaluator ( lang , languageModel , 3 ); <nl> + ConfusionRuleEvaluator eval = new ConfusionRuleEvaluator ( lang , languageModel , MAX _ NGRAM ); <nl> 
mmm VetControllerTests . java <nl> ppp VetControllerTests . java <nl> 
mmm CollectionFilteringUnitTest . java <nl> ppp CollectionFilteringUnitTest . java <nl> - if ( employee . getName () <nl> - . equalsIgnoreCase ( name )) { <nl> + if ( employee . getName () . equals ( name )) { <nl> 
mmm NumberType . java <nl> ppp NumberType . java <nl> + private boolean autoIncrement ; <nl> + public boolean isAutoIncrement () { <nl> + return autoIncrement ; <nl> + } <nl> + public void setAutoIncrement ( boolean autoIncrement ) { <nl> + this . autoIncrement = autoIncrement ; <nl> + } <nl> 
deleted file <nl> mmm FlowableCmmnServletContextListener . java <nl> - package org . flowable . rest . servlet ; <nl> - import javax . servlet . ServletContextEvent ; <nl> - import javax . servlet . ServletContextListener ; <nl> - import org . flowable . cmmn . engine . CmmnEngine ; <nl> - import org . flowable . cmmn . engine . CmmnEngines ; <nl> 
mmm JoyContextListener . java <nl> ppp JoyContextListener . java <nl> - import jodd . madvoc . Madvoc ; <nl> - protected Madvoc madvoc ; <nl> - ServletContext servletContext = sce . getServletContext (); <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
deleted file <nl> mmm State . java <nl> - package com . meituan . sample . robusttest ; <nl> - public class State < T > { <nl> - } <nl> 
mmm FunctionalTestSuite . java <nl> ppp FunctionalTestSuite . java <nl> + import io . objectbox . query . QueryPropertiesTest ; <nl> + QueryPropertiesTest . class , <nl> 
mmm PlatformTest . java <nl> ppp PlatformTest . java <nl> + assertEquals (" Wrong resource path Linux / sparcv9 ", " linux - sparcv9 ", <nl> + Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> + " sparcv9 ", " Linux ")); <nl> 
mmm ZkUtils . java <nl> ppp ZkUtils . java <nl> - import com . google . common . base . Optional ; <nl> - import com . weibo . api . motan . exception . MotanFrameworkException ; <nl> - import org . apache . commons . lang3 . StringUtils ; <nl> 
mmm DataSourceListenerManager . java <nl> ppp DataSourceListenerManager . java <nl> - import io . shardingsphere . core . config . DataSourceConfiguration ; <nl> - import io . shardingsphere . core . rule . Authentication ; <nl> - import io . shardingsphere . core . rule . ShardingRule ; <nl> - import io . shardingsphere . orchestration . internal . event . config . ConfigurationChangedEvent ; <nl> 

mmm YamlKeyGeneratorConfigurationTest . java <nl> ppp YamlKeyGeneratorConfigurationTest . java <nl> + import io . shardingsphere . core . exception . ShardingConfigurationException ; <nl> + @ Test ( expected = ShardingConfigurationException . class ) <nl> + public void assertGetKeyGeneratorClassNameWithException () { <nl> 
mmm AppleBuildable . java <nl> ppp AppleBuildable . java <nl> 
mmm StateNode . java <nl> ppp StateNode . java <nl> + import io . shardingsphere . orchestration . internal . registry . state . schema . OrchestrationShardingSchema ; <nl> + public OrchestrationShardingSchema getOrchestrationShardingSchema ( final String dataSourceNodeFullPath ) { <nl> + return new OrchestrationShardingSchema ( dataSourceNodeFullPath . replace ( getDataSourcesNodeFullRootPath () + '/', "")); <nl> 
mmm SmsMmsPreferenceFragment . java <nl> ppp SmsMmsPreferenceFragment . java <nl> + initializePlatformSpecificOptions (); <nl> - initializePlatformSpecificOptions (); <nl> + initializeDefaultPreference (); <nl> - if ( Util . isDefaultSmsProvider ( getActivity ())) { <nl> - defaultPreference . setIntent ( new Intent ( Settings . ACTION _ WIRELESS _ SETTINGS )); <nl> 

deleted file <nl> mmm Schema . java <nl> - package org . traccar . model ; <nl> - public class Schema { <nl> - private int version ; <nl> - public int getVersion () { <nl> - return version ; <nl> - } <nl> - public void setVersion ( int version ) { <nl> - this . version = version ; <nl> - } <nl> - } <nl> 
mmm BootstrapExtensionExecutorTest . java <nl> ppp BootstrapExtensionExecutorTest . java <nl> 
mmm ClassFileVersionTest . java <nl> ppp ClassFileVersionTest . java <nl> + import static org . hamcrest . CoreMatchers . not ; <nl> - assertThat ( ClassFileVersion . of ( Object . class ) . getMinorMajorVersion (), is ( ClassFileVersion . ofThisVm () . getMinorMajorVersion ())); <nl> + assertThat ( ClassFileVersion . of ( Object . class ) . getMinorMajorVersion (), not ( 0 )); <nl> 
mmm LongSentenceRule . java <nl> ppp LongSentenceRule . java <nl> - public LongSentenceRule ( final ResourceBundle messages ) { <nl> - super ( messages ); <nl> - super . setCategory ( new Category ( messages . getString (" category _ misc "))); <nl> - setDefaultOff (); <nl> - } <nl> - @ Override <nl> - public String getDescription () { <nl> 
mmm HostPortWaitStrategyTest . java <nl> ppp HostPortWaitStrategyTest . java <nl> - waitUntilReadyAndTimeout (" sleep 5 ; exit 1 "); <nl> + waitUntilReadyAndTimeout (" exit 1 "); <nl> 
mmm StatisticsFilter . java <nl> ppp StatisticsFilter . java <nl> - private final Timer genericTimer = Metrics . getRegistry () . timer ("*"); <nl> - private final Timer emptySearch = Metrics . getRegistry () . timer (" empty _ search "); <nl> - private final Timer successfulSearch = Metrics . getRegistry () . timer (" successful _ search "); <nl> 
mmm CamelIgniteTest . java <nl> ppp CamelIgniteTest . java <nl> - String version = " 2 . 5 . 0 "; <nl> + String version = " 2 . 6 . 0 "; <nl> 
mmm ProtoExecutionResult . java <nl> ppp ProtoExecutionResult . java <nl> + import com . google . errorprone . annotations . Immutable ; <nl> - abstract class ProtoExecutionResult < T extends Message > { <nl> + @ Immutable <nl> + public abstract class ProtoExecutionResult < T extends Message > { <nl> - abstract T message (); <nl> 
mmm LdapUserAttributesToRolesAuthorizationGenerator . java <nl> ppp LdapUserAttributesToRolesAuthorizationGenerator . java <nl> - import lombok . Getter ; <nl> - @ Getter <nl> 
mmm ConfigurationFactoryTest . java <nl> ppp ConfigurationFactoryTest . java <nl> - " * name must match \"[\\ w ] + [\\ s ] + [\\ w ] + \"")); <nl> + " * name must match \"[\\ w ] + [\\ s ] + [\\ w ] + \" ( was Boop )")); <nl> 
mmm PerformanceMonitor . java <nl> ppp PerformanceMonitor . java <nl> + import android . support . annotation . Keep ; <nl> + @ Keep <nl> + @ Keep <nl> + @ Keep <nl> + @ Keep <nl> 
new file <nl> ppp ConsumeStatsListTest . java <nl> + package org . apache . rocketmq . common . protocol . body ; <nl> + import org . apache . rocketmq . common . admin . ConsumeStats ; <nl> + import org . apache . rocketmq . remoting . protocol . RemotingSerializable ; <nl> + import org . junit . Test ; <nl> 
new file <nl> ppp ClassStartNameEqualsEndNameTest . java <nl> + package net . sourceforge . pmd . lang . modelica . rule . bestpractices ; <nl> + import net . sourceforge . pmd . testframework . PmdRuleTst ; <nl> + public class ClassStartNameEqualsEndNameTest extends PmdRuleTst { <nl> + } <nl> 
mmm DubboWebApplicationInitializer . java <nl> ppp DubboWebApplicationInitializer . java <nl> 
mmm Clear . java <nl> ppp Clear . java <nl> - Clearable item = ( Clearable ) guiComp ; <nl> - item . clearData (); <nl> + if ( guiComp instanceof Clearable ){ <nl> + Clearable item = ( Clearable ) guiComp ; <nl> + item . clearData (); <nl> + } <nl> 
mmm MyReader . java <nl> ppp MyReader . java <nl> - import java . util . logging . Level ; <nl> - import java . util . logging . Logger ; <nl> 
mmm VolleyStreamFetcher . java <nl> ppp VolleyStreamFetcher . java <nl> - requestFuture = null ; <nl> 
mmm RowMapBufferTest . java <nl> ppp RowMapBufferTest . java <nl> + import java . io . IOException ; <nl> + @ Test <nl> + public void TestXOffsetIncrement () throws IOException , ClassNotFoundException { <nl> + RowMapBuffer buffer = new RowMapBuffer ( 100 ); <nl> + buffer . add ( new RowMap (" insert ", " foo ", " bar ", 1000L , new ArrayList < String >(), new Position ( new BinlogPosition ( 3 , " mysql . 1 "), 0L ))); <nl> 
mmm OkexExchangeV3 . java <nl> ppp OkexExchangeV3 . java <nl> 
new file <nl> ppp Dummy . java <nl> + package eu . stratosphere . examples . scala ; <nl> + public class Dummy { <nl> + } <nl> 
mmm HandlerUtils . java <nl> ppp HandlerUtils . java <nl> 
mmm FastQueue . java <nl> ppp FastQueue . java <nl> - if ( drainedElements == null ) { <nl> - synchronized ( this ) { <nl> - drainedElements = elements ; <nl> - drainedElementCount = size ; <nl> - elements = null ; <nl> - size = 0 ; <nl> + for (;;) { <nl> + if ( drainedElements == null ) { <nl> + synchronized ( this ) { <nl> 
mmm GermanTokenizerPostProcessor . java <nl> ppp GermanTokenizerPostProcessor . java <nl> - boolean numberRange = lastProcessedToken . word () . matches ("[ 0 - 9 ] + ") & & i + 1 < tokens . size () ? <nl> - tokens . get ( i + 1 ) . word () . matches ("[ 0 - 9 ] + ") : false ; <nl> - if ( lastProcessedToken != null & & afterIsEmpty . apply ( lastProcessedToken ) & & (( currToken . word () . equals (" . ") & & <nl> 
mmm LogUtil . java <nl> ppp LogUtil . java <nl> +  <nl> + public static final int DEBUG = 2 ; <nl> +  <nl> + public static final int ERROR = 5 ; <nl> +  <nl> + public static final int LEVEL = ERROR ; <nl> +  <nl> - Log . d ( tagName , message ); <nl> + if ( LEVEL >= DEBUG ) { <nl> + Log . d ( tagName , message ); <nl> 
mmm InsertCommaFilter . java <nl> ppp InsertCommaFilter . java <nl> - if ( tags1 . stream () . anyMatch ( k - > k . hasPosTagStartingWith (" VER :")) & & tags2 . stream () . anyMatch ( k - > k . hasPosTagStartingWith (" PRO : PER :"))) { <nl> + if ( hasTag ( tags1 , " VER :") & & hasTag ( tags2 , " PRO : PER :")) { <nl> 
mmm DataSourceUtil . java <nl> ppp DataSourceUtil . java <nl> - if ( defaultDataSourceFactory == null ) { <nl> + if ( defaultDataSourceFactory == null || ! requestHeaders . isEmpty ()) { <nl> 
mmm RussianWordRepeatRule . java <nl> ppp RussianWordRepeatRule . java <nl> - private static final Pattern EXC _ POS = Pattern . compile (" INTERJECTION | PRDC | PREP | CONJ | PARTICLE | PNN : . *"); <nl> + private static final Pattern EXC _ POS = Pattern . compile (" INTERJECTION | PRDC | PREP | CONJ | PARTICLE | PNN : . *| NumC : . *| Num : . *"); <nl> 
mmm MaximumIminusJSuchThatAiGTAj . java <nl> ppp MaximumIminusJSuchThatAiGTAj . java <nl> - System . out . println ( mj . maximum ( input )); <nl> 
mmm OnPlayerEventListener . java <nl> ppp OnPlayerEventListener . java <nl> 
mmm CycleDefaultMimeType . java <nl> ppp CycleDefaultMimeType . java <nl> - public enum StandardMimeType implements MimeType { <nl> + public enum CycleDefaultMimeType implements MimeType { <nl> - private StandardMimeType ( String contentType ) { <nl> + private CycleDefaultMimeType ( String contentType ) { <nl> 
mmm InstrumentedQueuedThreadPool . java <nl> ppp InstrumentedQueuedThreadPool . java <nl> + registry . register ( name ( QueuedThreadPool . class , " jobs "), new Gauge < Integer >() { <nl> + @ Override <nl> + public Integer getValue () { <nl> + return getQueue () . size (); <nl> + } <nl> + }); <nl> 
new file <nl> ppp EncryptColumnRuleConfigurationYamlSwapperTest . java <nl> + package org . apache . shardingsphere . encrypt . yaml . swapper . rule ; <nl> + import org . apache . shardingsphere . encrypt . api . config . rule . EncryptColumnRuleConfiguration ; <nl> + import org . apache . shardingsphere . encrypt . yaml . config . rule . YamlEncryptColumnRuleConfiguration ; <nl> 
mmm NavigationBar . java <nl> ppp NavigationBar . java <nl> - ReportPage . APP , <nl> 
mmm SyncHistoryActivity . java <nl> ppp SyncHistoryActivity . java <nl> + import android . annotation . SuppressLint ; <nl> + @ SuppressLint (" StaticFieldLeak ") <nl> 
mmm SyndDateUtils . java <nl> ppp SyndDateUtils . java <nl> - private static final String RFC822 = " dd MMM yyyy HH : mm : ss Z "; <nl> + public static final String RFC822 = " dd MMM yyyy HH : mm : ss Z "; <nl> - private static final String RFC822DAY = " EEE , " + RFC822 ; <nl> + public static final String RFC822DAY = " EEE , " + RFC822 ; <nl> 
mmm TimedScheduledExecutorService . java <nl> ppp TimedScheduledExecutorService . java <nl> - super ( registry , delegate , executorServiceName , tags ); <nl> + super ( registry , delegate , executorServiceName , "", tags ); <nl> 
new file <nl> ppp ConditionTest . java <nl> + package javaslang . test ; <nl> + import javaslang . test . Property . Condition ; <nl> + import org . junit . Test ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> + public class ConditionTest { <nl> + @ Test <nl> + public void should () { <nl> 
mmm HttpRequestEncoder . java <nl> ppp HttpRequestEncoder . java <nl> - buf . writeBytes ( request . getMethod () . toString () . getBytes ( CharsetUtil . US _ ASCII )); <nl> + encodeAscii ( request . getMethod () . toString (), buf ); <nl> - buf . writeBytes ( request . getProtocolVersion () . toString () . getBytes ( CharsetUtil . US _ ASCII )); <nl> 
mmm AggregationDistinctTokenGenerator . java <nl> ppp AggregationDistinctTokenGenerator . java <nl> - import com . google . common . base . Optional ; <nl> - public final class AggregationDistinctTokenGenerator implements CollectionSQLTokenGenerator < ShardingRule > { <nl> + public final class AggregationDistinctTokenGenerator implements CollectionSQLTokenGenerator < ShardingRule >, IgnoreForSingleRoute { <nl> 
mmm StandaloneSupervisor . java <nl> ppp StandaloneSupervisor . java <nl> + import java . net . InetAddress ; <nl> + import java . net . UnknownHostException ; <nl> - return Utils . uuid (); <nl> + String extraPart = ""; <nl> + try { <nl> + extraPart = " - " + InetAddress . getLocalHost () . getHostAddress (); <nl> 
mmm SocketChannelSender . java <nl> ppp SocketChannelSender . java <nl> + " bytes but could only set to " + actualSendBufSize + " bytes . You may want to " <nl> - + " consider changing the Operating System ' s maximum receive buffer "); <nl> + + " consider changing the Operating System ' s maximum send buffer "); <nl> 
mmm BSFTimer . java <nl> ppp BSFTimer . java <nl> + BSFManager mgr = null ; <nl> - BSFManager mgr = getManager (); <nl> + mgr = getManager (); <nl> + } finally { <nl> + if ( mgr != null ) { <nl> + mgr . terminate (); <nl> + } <nl> 
mmm GoVarDeclarationInspection . java <nl> ppp GoVarDeclarationInspection . java <nl> - PsiElement assign = varDeclaration instanceof GoShortVarDeclaration <nl> - ? (( GoShortVarDeclaration ) varDeclaration ) . getVarAssign () <nl> + PsiElement assign = varDeclaration instanceof GoShortVarDeclaration <nl> 
mmm ProcessEngineInfoService . java <nl> ppp ProcessEngineInfoService . java <nl> + import static org . flowable . admin . domain . EndpointType . CMMN ; <nl> + public static final String CMMN _ ENGINE _ INFO _ URL = " cmmn - management / engine "; <nl> + case CMMN : <nl> + builder = clientUtil . createUriBuilder ( CMMN _ ENGINE _ INFO _ URL ); <nl> 
mmm ThriftCoordinatorServerIntegrationTest . java <nl> ppp ThriftCoordinatorServerIntegrationTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore <nl> + @ Ignore <nl> 
mmm ShardingOnlyWithTables . java <nl> ppp ShardingOnlyWithTables . java <nl> - import io . shardingsphere . example . spring . namespace . mybatis . fixtrue . service . DemoService ; <nl> + import io . shardingsphere . repository . mybatis . service . DemoService ; <nl> 
mmm DemoService . java <nl> ppp DemoService . java <nl> - import io . shardingsphere . example . repository . mybatis . entity . Order ; <nl> - import io . shardingsphere . example . repository . mybatis . entity . OrderItem ; <nl> + import io . shardingsphere . example . repository . api . entity . Order ; <nl> 
mmm SeataHandlerInterceptor . java <nl> ppp SeataHandlerInterceptor . java <nl> 
mmm StatusActivity . java <nl> ppp StatusActivity . java <nl> - package com . facebook . sdk . tests ; <nl> + package com . facebook . sdk ; <nl> 
new file <nl> ppp TextBodyTest . java <nl> + package com . fsck . k9 . mail . internet ; <nl> + import java . io . IOException ; <nl> + import com . fsck . k9 . mail . MessagingException ; <nl> + import okio . Buffer ; <nl> + import org . apache . james . mime4j . util . MimeUtil ; <nl> + import org . junit . Test ; <nl> 
mmm DatabaseTableMetrics . java <nl> ppp DatabaseTableMetrics . java <nl> + private final String query ; <nl> + this ( dataSource , " SELECT COUNT ( 1 ) FROM " + tableName , tableName , name , tags ); <nl> + } <nl> + public DatabaseTableMetrics ( DataSource dataSource , String query , String tableName , String name , Iterable < Tag > tags ) { <nl> 
mmm IOStateChangedEvent . java <nl> ppp IOStateChangedEvent . java <nl> 
mmm UseShortArrayInitializerTest . java <nl> ppp UseShortArrayInitializerTest . java <nl> - public class ArrayInitializationVerbosenessTest extends PmdRuleTst { <nl> + public class UseShortArrayInitializerTest extends PmdRuleTst { <nl> 
new file <nl> ppp AssertionsBenchmarks . java <nl> + package org . junit . jupiter . jmh ; <nl> + import org . junit . jupiter . api . Assertions ; <nl> + import org . openjdk . jmh . annotations . Benchmark ; <nl> + public class AssertionsBenchmarks { <nl> + @ Benchmark <nl> + public void assertTrueWithSimpleStringMessage () { <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 10 . 6 "; <nl> + public static final String VERSION = " 2 . 10 . 7 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 10 . 6 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 10 . 7 "; <nl> 
mmm TestConfigSetsAPIShareSchema . java <nl> ppp TestConfigSetsAPIShareSchema . java <nl> - public class ConfigSetsAPITest extends SolrCloudTestCase { <nl> + public class TestConfigSetsAPIShareSchema extends SolrCloudTestCase { <nl> 
mmm BlogdownConfig . java <nl> ppp BlogdownConfig . java <nl> + public boolean is _ hugo _ project ; <nl> 
mmm AeronClient . java <nl> ppp AeronClient . java <nl> + import static uk . co . real _ logic . aeron . driver . Configuration . CLIENT _ LIVENESS _ TIMEOUT _ NS ; <nl> - return timeOfLastKeepalive () + Configuration . CLIENT _ LIVENESS _ TIMEOUT _ NS < now ; <nl> + return now > ( timeOfLastKeepalive + CLIENT _ LIVENESS _ TIMEOUT _ NS ); <nl> 
mmm Draft _ 6455 . java <nl> ppp Draft _ 6455 . java <nl> + import org . java _ websocket . exceptions . InvalidHandshakeException ; <nl> + import org . java _ websocket . handshake . ClientHandshake ; <nl> + import org . java _ websocket . handshake . HandshakeBuilder ; <nl> + import org . java _ websocket . handshake . ServerHandshakeBuilder ; <nl> 
mmm InstrumentedThreadFactoryTest . java <nl> ppp InstrumentedThreadFactoryTest . java <nl> - import org . junit . Test ; <nl> + import static org . fest . assertions . api . Assertions . assertThat ; <nl> + import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> 
mmm FetchBlock . java <nl> ppp FetchBlock . java <nl> + import com . google . bitcoin . utils . BriefLogFormatter ; <nl> - import java . net . InetSocketAddress ; <nl> - import java . util . concurrent . CountDownLatch ; <nl> - import org . jboss . netty . channel . ChannelFuture ; <nl> + BriefLogFormatter . init (); <nl> 
mmm AbstractRouter . java <nl> ppp AbstractRouter . java <nl> - protected boolean force ; <nl> - protected boolean enabled ; <nl> + protected boolean force = false ; <nl> + protected boolean enabled = true ; <nl> 
new file <nl> ppp AddDefaultCharsetValve . java <nl> + package org . apache . catalina . valves ; <nl> + import java . io . IOException ; <nl> + import javax . servlet . ServletException ; <nl> + import org . apache . catalina . valves . ValveBase ; <nl> + import org . apache . catalina . connector . Request ; <nl> 
new file <nl> ppp WildcardTypeTest . java <nl> + package com . alibaba . json . bvt ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . TypeReference ; <nl> + import junit . framework . TestCase ; <nl> + public class WildcardTypeTest extends TestCase { <nl> + public void test _ for _ wildcardType () throws Exception { <nl> 
mmm RequestLogConfiguration . java <nl> ppp RequestLogConfiguration . java <nl> - @ NotNull <nl> 
deleted file <nl> mmm DB2ValueHandlerProvider . java <nl> - package org . jkiss . dbeaver . ext . db2 . data ; <nl> - import org . eclipse . swt . graphics . Image ; <nl> - import org . jkiss . dbeaver . model . DBUtils ; <nl> - import org . jkiss . dbeaver . model . data . DBDPreferences ; <nl> - import org . jkiss . dbeaver . model . data . DBDValueHandler ; <nl> 
mmm MuninnPageCacheWithRealFileSystemIT . java <nl> ppp MuninnPageCacheWithRealFileSystemIT . java <nl> - SHORT _ TIMEOUT _ MILLIS = 30 _ 000 ; <nl> + SHORT _ TIMEOUT _ MILLIS = 60 _ 000 ; <nl> 
mmm InstanceOfExpr . java <nl> ppp InstanceOfExpr . java <nl> - public final class InstanceOfExpr extends Expression implements NodeWithType < InstanceOfExpr , ReferenceType >, NodeWithExpression < InstanceOfExpr > { <nl> + public final class InstanceOfExpr extends Expression implements NodeWithType < InstanceOfExpr , ReferenceType <?>>, NodeWithExpression < InstanceOfExpr > { <nl> 
mmm LocalLinuxSandboxedStrategyTest . java <nl> ppp LocalLinuxSandboxedStrategyTest . java <nl> - import com . google . devtools . build . lib . util . CommandFailureUtils ; <nl> - assertThat ( e . getMessage ()) <nl> - . startsWith ( <nl> - CommandFailureUtils . describeCommandFailure ( <nl> - true , <nl> 
mmm SplashScreenHelper . java <nl> ppp SplashScreenHelper . java <nl> - splash . update (); <nl> + synchronized ( SplashScreen . class ) { <nl> + if ( splash . isVisible ()) { <nl> + splash . update (); <nl> + } <nl> + } <nl> 
new file <nl> ppp GoLegacyResolveStructTest . java <nl> + package com . goide . psi ; <nl> + import com . goide . GoLegacyResolveTestBase ; <nl> + public class GoLegacyResolveStructTest extends GoLegacyResolveTestBase { <nl> + @ Override <nl> + protected String getBasePath () { return " psi / resolve / struct "; } <nl> 
new file <nl> ppp VolumeChanged . java <nl> + package net . runelite . api . events ; <nl> + import lombok . Value ; <nl> + @ Value <nl> + public class VolumeChanged <nl> + { <nl> + public enum Type <nl> + { <nl> + MUSIC , <nl> + EFFECTS , <nl> + AREA <nl> + } <nl> + private final Type type ; <nl> + } <nl> 
new file <nl> ppp DemoService . java <nl> + package io . shardingsphere . example . repository . api . service ; <nl> + import io . shardingsphere . example . repository . api . entity . Order ; <nl> + import io . shardingsphere . example . repository . api . entity . OrderItem ; <nl> + import org . springframework . stereotype . Service ; <nl> 
mmm AgentInfoBoMapper . java <nl> ppp AgentInfoBoMapper . java <nl> - import org . springframework . stereotype . Component ; <nl> + import org . springframework . stereotype . Component ; <nl> 
mmm ClientConfiguration . java <nl> ppp ClientConfiguration . java <nl> - KinesisAsyncClient kinesisClient = KinesisAsyncClient . builder () <nl> + KinesisAsyncClient client2 = KinesisAsyncClient . builder () <nl> 
mmm StartupConsistencyCheck . java <nl> ppp StartupConsistencyCheck . java <nl> - return new StartupConsistencyCheck ( Status . RUNNING , new ArrayList < AlluxioURI >()); <nl> + return new StartupConsistencyCheck ( Status . RUNNING , new ArrayList <>()); <nl> 
mmm MasterSlaveDataSourceBeanDefinitionParserTag . java <nl> ppp MasterSlaveDataSourceBeanDefinitionParserTag . java <nl> - public static final String REG _ REF _ TAG = " reg - ref "; <nl> + public static final String REG _ REF _ TAG = " registry - center - ref "; <nl> 
mmm PythonBinaryDescription . java <nl> ppp PythonBinaryDescription . java <nl> - Paths . get ( System . getProperty (" buck . buck _ dir ", System . getProperty (" user . dir "))) <nl> - . resolve (" src / com / facebook / buck / python / pex . py "); <nl> + Paths . get ( <nl> + System . getProperty ( <nl> 
mmm GraphiteWriterThread . java <nl> ppp GraphiteWriterThread . java <nl> + import java . net . InetSocketAddress ; <nl> + import java . net . SocketAddress ; <nl> + SocketAddress carbonServer ; <nl> + this . carbonServer = new InetSocketAddress ( carbonHost , carbonPort ); <nl> - Socket sock = new Socket ( carbonHost , carbonPort ); <nl> 
mmm ExtensionLoader . java <nl> ppp ExtensionLoader . java <nl> - return filer . getResource ( StandardLocation . CLASS _ PATH , "", resourceName ) <nl> + return filer . getResource ( StandardLocation . CLASS _ OUTPUT , "", resourceName ) <nl> 
mmm SuntechProtocolDecoderTest . java <nl> ppp SuntechProtocolDecoderTest . java <nl> + verifyPosition ( decoder , text ( <nl> + " ST300ALT ; 205174410 ; 14 ; 712 ; 20110101 ; 00 : 00 : 07 ; 00000 ; + 20 . 593923 ; - 100 . 336716 ; 000 . 000 ; 000 . 00 ; 0 ; 0 ; 0 ; 16 . 57 ; 000000 ; 81 ; 000000 ; 4 . 0 ; 0 ; 0 . 00 ; 0000 ; 0000 ; 0 ; 0 ")); <nl> 
mmm StatusImpl . java <nl> ppp StatusImpl . java <nl> + private static final boolean isGump = Boolean . parseBoolean ( System . getProperty (" gump . run "," false ")); <nl> + if ( isGump ) { <nl> + new Throwable ("\ nGUMP DEBUG : " + this ) . printStackTrace (); <nl> + } <nl> 
mmm BlockDeletionContext . java <nl> ppp BlockDeletionContext . java <nl> - blockIds . forEach ( id - > registerBlockForDeletion ( id )); <nl> + blockIds . forEach ( this :: registerBlockForDeletion ); <nl> 
mmm Visits . java <nl> ppp Visits . java <nl> - @ Table ( name = " visits ") <nl> + @ Table ( name = " visits ", <nl> + indexes = {@ Index ( name = " visits _ create _ time _ index ", columnList = " create _ time ")}) <nl> 
mmm ContainsDuplicateIII . java <nl> ppp ContainsDuplicateIII . java <nl> 
mmm NpmMojo . java <nl> ppp NpmMojo . java <nl> + @ Parameter ( property = " skip . npm ", defaultValue = " false ", required = false ) <nl> + private Boolean skipNpm ; <nl> - File packageJson = new File ( workingDirectory , " package . json "); <nl> - if ( buildContext == null || buildContext . hasDelta ( packageJson ) || ! buildContext . isIncremental ()) { <nl> 
mmm IndexClassLookupUtils . java <nl> ppp IndexClassLookupUtils . java <nl> + import java . util . HashSet ; <nl> + import java . util . Set ; <nl> + private static Set < DotName > alreadyKnown = new HashSet <>(); <nl> - if ( info == null & & withLogging ) { <nl> + if ( info == null & & withLogging & & ! alreadyKnown . contains ( dotName )) { <nl> 
mmm NetworkInterfaceManager . java <nl> ppp NetworkInterfaceManager . java <nl> - local = address ; <nl> + if ( local == null ) { <nl> + local = address ; <nl> + } <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm GotoCommand . java <nl> ppp GotoCommand . java <nl> - " The got command tells Baritone to head towards a given goal or block . ", <nl> + " The goto command tells Baritone to head towards a given goal or block . ", <nl> 
new file <nl> ppp _ 634 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 634 { <nl> + private static final int M = 1000000007 ; <nl> + public int findDerangement ( int n ) { <nl> + long ans = 1 ; <nl> + for ( int i = 1 ; i <= n ; i + + ) { <nl> + ans = ( i * ans % M + ( i % 2 == 0 ? 1 : - 1 )) % M ; <nl> 
mmm ShardingEncryptorEngine . java <nl> ppp ShardingEncryptorEngine . java <nl> 
mmm MergeSort . java <nl> ppp MergeSort . java <nl> - import java . util . Arrays ; <nl> - public static void main ( String [] args ) { <nl> - int [] a = new int []{ 4 , 2 , 1 , 3 , 4 , 0 }; <nl> - sort ( a ); <nl> - System . out . println ( Arrays . toString ( a )); <nl> - } <nl> 
mmm CustomPushPayload . java <nl> ppp CustomPushPayload . java <nl> + import java . util . Map ; <nl> 
mmm ShowFileRequestHandlerTest . java <nl> ppp ShowFileRequestHandlerTest . java <nl> 
mmm ConsoleConfig . java <nl> ppp ConsoleConfig . java <nl> - @ ConfigItem ( defaultValue = " INFO ") <nl> + @ ConfigItem ( defaultValue = " ALL ") <nl> 
mmm SessionParam . java <nl> ppp SessionParam . java <nl> + this . tokens . add (" asp . net _ sessionid "); <nl> + this . tokens . add (" siteserver "); <nl> + this . tokens . add (" cfid "); <nl> + this . tokens . add (" cftoken "); <nl> + this . tokens . add (" sessid "); <nl> + this . tokens . add (" sid "); <nl> 
mmm CreateBucket . java <nl> ppp CreateBucket . java <nl> - System . out . println (" Error creating bucket !\ n "); <nl> + System . out . println (" Error creating bucket . \ n "); <nl> 
mmm MainApplication . java <nl> ppp MainApplication . java <nl> - import com . facebook . react . ReactApplication ; <nl> + import com . facebook . react . ReactApplication ; <nl> - new ReactVideoPackage () <nl> - ); <nl> + new ReactVideoPackage () <nl> + ); <nl> 
mmm ShardingEncryptor . java <nl> ppp ShardingEncryptor . java <nl> - String decode ( String ciphetext ); <nl> + String decode ( String ciphertext ); <nl> 
mmm WebSecurityConfigurer . java <nl> ppp WebSecurityConfigurer . java <nl> 
mmm CompilationPhaseTracer . java <nl> ppp CompilationPhaseTracer . java <nl> + METADATA _ COLLECTION , <nl> 
mmm MXBeansGetterSanityTest . java <nl> ppp MXBeansGetterSanityTest . java <nl> + } else if ( mxBeanClass . getName () . equals (" com . ibm . lang . management . internal . UnixExtendedOperatingSystem ") <nl> + & & methodName . equals (" getHardwareModel ")) { <nl> + } else if ( mxBeanClass . getName () . equals (" com . ibm . lang . management . internal . ExtendedRuntimeMXBeanImpl ") <nl> 
mmm Incubating . java <nl> ppp Incubating . java <nl> + import java . lang . annotation . Documented ; <nl> + @ Documented <nl> 
mmm MySQLDataSourceMetaData . java <nl> ppp MySQLDataSourceMetaData . java <nl> 
new file <nl> ppp ConstantGenerator . java <nl> + package org . jkiss . dbeaver . ext . mockdata . generator ; <nl> + import org . jkiss . dbeaver . DBException ; <nl> + import org . jkiss . dbeaver . model . DBPDataKind ; <nl> + import org . jkiss . dbeaver . model . runtime . DBRProgressMonitor ; <nl> + import org . jkiss . dbeaver . model . struct . DBSAttributeBase ; <nl> 
new file <nl> ppp UnknownType . java <nl> + package com . github . javaparser . ast . type ; <nl> + import com . github . javaparser . ast . visitor . GenericVisitor ; <nl> + import com . github . javaparser . ast . visitor . VoidVisitor ; <nl> + public final class UnknownType extends Type { <nl> + public UnknownType () { <nl> 
new file <nl> ppp SqsConsumerMessageLocalstackTest . java <nl> + package org . apache . camel . component . aws2 . sqs . localstack ; <nl> + import org . apache . camel . EndpointInject ; <nl> + import org . apache . camel . Exchange ; <nl> + import org . apache . camel . ExchangePattern ; <nl> + import org . apache . camel . Processor ; <nl> 
mmm Cli . java <nl> ppp Cli . java <nl> - String version = serviceClass . getPackage () . getImplementationVersion (); <nl> + Package pkg = serviceClass . getPackage (); <nl> + String version = null ; <nl> + if ( pkg != null ) { <nl> + version = pkg . getImplementationVersion (); <nl> + } <nl> 
mmm UserIndex . java <nl> ppp UserIndex . java <nl> + import org . elasticsearch . index . query . FilterBuilders ; <nl> - . setQuery ( QueryBuilders . boolQuery () <nl> - . should ( QueryBuilders . termQuery ( UserIndexDefinition . FIELD _ LOGIN , scmAccount )) <nl> - . should ( QueryBuilders . termQuery ( UserIndexDefinition . FIELD _ EMAIL , scmAccount )) <nl> 
mmm ApolloOpenApiConstants . java <nl> ppp ApolloOpenApiConstants . java <nl> - String JSON _ DATE _ FORMAT = " yyyy - MM - dd ' T ' HH : mm : ssZ "; <nl> + String JSON _ DATE _ FORMAT = " yyyy - MM - dd ' T ' HH : mm : ss . SSSZ "; <nl> 
mmm CountNoOf2s . java <nl> ppp CountNoOf2s . java <nl> - public int count2s ( int n ){ <nl> - if ( n < 2 ){ <nl> - return 0 ; <nl> - } else if ( n <= 9 ){ <nl> - return 1 ; <nl> - } <nl> - int pow = 1 ; <nl> - while ( pow <= n ){ <nl> - pow *= 10 ; <nl> - } <nl> - pow = pow / 10 ; <nl> -  <nl> - if ( n / pow == 2 ){ <nl> 
mmm LanguageUtil . java <nl> ppp LanguageUtil . java <nl> - " fi ", " fr ", " gl ", " hi ", " hu ", " id ", " it ", " ja ", " ko ", " lt ", " nl ", " no ", " pl ", " pt _ PT ", " pt _ BR ", " ro ", " ru ", <nl> + " fi ", " fr ", " got ", " gl ", " hi ", " hu ", " id ", " it ", " ja ", " ko ", " lt ", " nl ", " no ", " pl ", " pt _ PT ", " pt _ BR ", " ro ", " ru ", <nl> 
new file <nl> ppp OCommandExecutorSQLCreateLinkTest . java <nl> + package com . orientechnologies . orient . core . sql ; <nl> + import com . orientechnologies . orient . core . db . document . ODatabaseDocumentTx ; <nl> + import com . orientechnologies . orient . core . record . impl . ODocument ; <nl> + import com . orientechnologies . orient . core . sql . query . OSQLSynchQuery ; <nl> 
mmm SchemaCacheLoader . java <nl> ppp SchemaCacheLoader . java <nl> + import org . codehaus . jackson . map . ObjectMapper ; <nl> - import com . fasterxml . jackson . databind . ObjectMapper ; <nl> + private static final ObjectMapper OBJECT _ MAPPER = new ObjectMapper (); <nl> - Schema schema = new ObjectMapper () . readValue ( content , Schema . class ); <nl> 
mmm VibrationUtils . java <nl> ppp VibrationUtils . java <nl> - import android . content . Context ; <nl> - import android . os . Vibrator ; <nl> 
new file <nl> ppp Swagger2SpringBoot . java <nl> + package springfox . springconfig ; <nl> + import org . springframework . boot . SpringApplication ; <nl> + import org . springframework . boot . autoconfigure . SpringBootApplication ; <nl> + import org . springframework . context . ApplicationContext ; <nl> 
mmm TestHttp2Section _ 3 _ 5 . java <nl> ppp TestHttp2Section _ 3 _ 5 . java <nl> + import org . junit . Assert ; <nl> - @ Test ( expected = IOException . class ) <nl> + @ Test <nl> - sendPing (); <nl> + parser . readFrame ( true ); <nl> + Assert . assertEquals (" 0 - Settings - [ 3 ] - [ 200 ]\ n " + <nl> + " 0 - Settings - End \ n " <nl> 
mmm UTPasswordCallback . java <nl> ppp UTPasswordCallback . java <nl> - private Map < String , String > passwords = <nl> + private Map < String , String > passwords = <nl> - passwords . put (" clientx509v1 ", " storepassword "); <nl> - passwords . put (" serverx509v1 ", " storepassword "); <nl> + passwords . put (" alice ", " password "); <nl> 
new file <nl> ppp MacroLibGroovyMethods . java <nl> + package org . apache . groovy . macrolib ; <nl> + import org . codehaus . groovy . ast . expr . ConstantExpression ; <nl> + import org . codehaus . groovy . ast . expr . Expression ; <nl> + import org . codehaus . groovy . ast . expr . GStringExpression ; <nl> 
mmm ReturnChange . java <nl> ppp ReturnChange . java <nl> + import java . util . LinkedList ; <nl> - return null ; <nl> + validateInputData ( moneys , billAmount ); <nl> + List < Integer > change = new LinkedList < Integer >(); <nl> + while ( billAmount > 0 & & moneys . length > 0 ) { <nl> + for ( int i = moneys . length - 1 ; i >= 0 ; i - - ) { <nl> 
mmm PluginHelper . java <nl> ppp PluginHelper . java <nl> - public final static String sPluginZip = " plugin - debug - local . zip "; <nl> + public final static String sPluginZip = " plugin - debug . zip "; <nl> 
new file <nl> ppp TablesExtractorTest . java <nl> + package org . apache . shardingsphere . core . parse . extractor . impl . common . table ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . *; <nl> + import java . util . Collection ; <nl> + import java . util . HashMap ; <nl> 
mmm KSToolbar . java <nl> ppp KSToolbar . java <nl> 
mmm WebExceptionResolver . java <nl> ppp WebExceptionResolver . java <nl> - package com . xxl . job . admin . controller . resolver ; <nl> - import com . xxl . job . admin . core . exception . XxlJobException ; <nl> - import com . xxl . job . core . biz . model . ReturnT ; <nl> - import com . xxl . job . admin . core . util . JacksonUtil ; <nl> 
mmm ListAppActivity . java <nl> ppp ListAppActivity . java <nl> - import android . Manifest ; <nl> - import android . content . pm . PackageManager ; <nl> - import android . support . annotation . NonNull ; <nl> - import android . support . v4 . app . ActivityCompat ; <nl> - import android . support . v7 . app . AlertDialog ; <nl> 
mmm _ 11 . java <nl> ppp _ 11 . java <nl> - public class ContainerWithMostWater { <nl> + public class _ 11 { <nl> 
mmm MinuteBasedVoter . java <nl> ppp MinuteBasedVoter . java <nl> + import java . time . LocalDateTime ; <nl> + import java . util . Collection ; <nl> - import java . time . LocalDateTime ; <nl> - import java . util . Collection ; <nl> - import java . util . List ; <nl> - import java . util . stream . Collectors ; <nl> 
new file <nl> ppp Application . java <nl> + package org . baeldung . acl ; <nl> + import org . springframework . boot . SpringApplication ; <nl> + import org . springframework . boot . autoconfigure . SpringBootApplication ; <nl> + @ SpringBootApplication <nl> + public class Application { <nl> + public static void main ( String [] args ) { <nl> 
new file <nl> ppp Hello . java <nl> + package org . acme ; <nl> + import javax . ws . rs . GET ; <nl> + import javax . ws . rs . Path ; <nl> + import javax . ws . rs . Produces ; <nl> + import javax . ws . rs . core . MediaType ; <nl> + @ Path ("/ hello ") <nl> + public class Hello { <nl> + @ GET <nl> + @ Produces ( MediaType . TEXT _ PLAIN ) <nl> 
mmm ByteToMessageDecoderTest . java <nl> ppp ByteToMessageDecoderTest . java <nl> - public class ByteToMessageHandlerTest { <nl> + public class ByteToMessageDecoderTest { <nl> - final ByteBuf buf = Unpooled . buffer () . writeBytes ( new byte [] {' a ', ' b ', ' c '}); <nl> + final ByteBuf buf = Unpooled . buffer () . writeBytes ( new byte []{' a ', ' b ', ' c '}); <nl> 
mmm CommentsInserterTest . java <nl> ppp CommentsInserterTest . java <nl> + import com . github . javaparser . ast . CompilationUnit ; <nl> - private ParseResult parseSample ( String sampleName ) { <nl> + private ParseResult < CompilationUnit > parseSample ( String sampleName ) { <nl> + @ Test <nl> + public void issue624 () { <nl> 
mmm LightweightHelpUI . java <nl> ppp LightweightHelpUI . java <nl> + import org . apache . commons . logging . Log ; <nl> + import org . apache . commons . logging . LogFactory ; <nl> + import org . eclipse . core . runtime . FileLocator ; <nl> + import org . eclipse . help . IHelpResource ; <nl> + import org . eclipse . ui . PartInitException ; <nl> 
mmm CassandraTransaction . java <nl> ppp CassandraTransaction . java <nl> + public String toString () { <nl> + StringBuilder sb = new StringBuilder ( 64 ); <nl> + sb . append (" CassandraTransaction @"); <nl> + sb . append ( Integer . toHexString ( hashCode ())); <nl> + sb . append ("[ read ="); <nl> + sb . append ( read ); <nl> 
mmm _ 293 . java <nl> ppp _ 293 . java <nl> - public class FlipGame { <nl> + public class _ 293 { <nl> 
mmm DefaultDataSourceFactory . java <nl> ppp DefaultDataSourceFactory . java <nl> 
mmm ShadowCameraManager . java <nl> ppp ShadowCameraManager . java <nl> + @ Implements ( <nl> + className = " android . hardware . camera2 . CameraManager $ CameraManagerGlobal ", <nl> + minSdk = VERSION _ CODES . LOLLIPOP ) <nl> + public static class ShadowCameraManagerGlobal { <nl> + @ Implementation ( minSdk = VERSION _ CODES . N ) <nl> 
new file <nl> ppp OptimizeResult . java <nl> + package org . apache . shardingsphere . core . optimizer . engine . result ; <nl> + public final class OptimizeResult { <nl> + } <nl> 
mmm OptimizeResult . java <nl> ppp OptimizeResult . java <nl> - package org . apache . shardingsphere . core . optimizer . engine . result ; <nl> + package org . apache . shardingsphere . core . optimizer . result ; <nl> 
mmm LabeledData . java <nl> ppp LabeledData . java <nl> + private String attached ; <nl> + this ( x , y , null ); <nl> + } <nl> + public LabeledData ( Vector x , double y , String attached ) { <nl> + this . attached = attached ; <nl> + public void attach ( String msg ) { <nl> + attached = msg ; <nl> + } <nl> + public String getAttach () { <nl> 
mmm RxSupport . java <nl> ppp RxSupport . java <nl> - } catch ( Exception e ) { <nl> - throw new RuntimeException ( e ); <nl> 
mmm ListenableScheduledFuture . java <nl> ppp ListenableScheduledFuture . java <nl> - import com . google . common . annotations . GwtIncompatible ; <nl> + import com . google . common . annotations . GwtCompatible ; <nl> - @ GwtIncompatible <nl> + @ GwtCompatible <nl> 
mmm OrchestrationShardingMasterSlaveNamespaceTest . java <nl> ppp OrchestrationShardingMasterSlaveNamespaceTest . java <nl> - import io . shardingsphere . jdbc . orchestration . internal . datasource . OrchestrationShardingDataSource ; <nl> + import io . shardingsphere . jdbc . orchestration . spring . datasource . OrchestrationSpringShardingDataSource ; <nl> 
mmm GreedyAllocator . java <nl> ppp GreedyAllocator . java <nl> - mManagerView = Preconditions . checkNotNull ( view ); <nl> + mManagerView = Preconditions . checkNotNull ( view , " view "); <nl> - mManagerView = Preconditions . checkNotNull ( view ); <nl> + mManagerView = Preconditions . checkNotNull ( view , " view "); <nl> 
mmm V680ProtocolDecoderTest . java <nl> ppp V680ProtocolDecoderTest . java <nl> + assertNotNull ( decoder . decode ( null , null , <nl> + " # 352897045085282 # # 0 # 0000 # AUT # 1 # 72400510730208 , 00d36307 , 10734fc4 # 4647 . 8922 , W , 2339 . 1956 , S , 2 . 60 , 63 . 74 # 200413 # 094310 . 000 ")); <nl> 
mmm StormMetricsRegistry . java <nl> ppp StormMetricsRegistry . java <nl> - import clojure . lang . IFn ; <nl> - import com . codahale . metrics . *; <nl> + import com . codahale . metrics . Gauge ; <nl> + import com . codahale . metrics . Meter ; <nl> + import com . codahale . metrics . Metric ; <nl> + import com . codahale . metrics . MetricRegistry ; <nl> 
mmm QueryRowTest . java <nl> ppp QueryRowTest . java <nl> - QueryRow queryRow1 = new QueryRow ( Collections . singletonList (( Object ) 10 ), Collections . < Integer > emptyList ()); <nl> + QueryRow queryRow1 = new QueryRow ( Collections . singletonList (( Object ) 10 )); <nl> - QueryRow queryRow1 = new QueryRow ( Collections . singletonList (( Object ) 10 ), Collections . < Integer > emptyList ()); <nl> 
mmm YamlKeyGeneratorConfiguration . java <nl> ppp YamlKeyGeneratorConfiguration . java <nl> + column = keyGeneratorConfiguration . getColumn (); <nl> + public KeyGeneratorConfiguration getKeyGeneratorConfiguration () { <nl> + return new KeyGeneratorConfiguration ( column , type , className , props ); <nl> 
mmm ParameterAnnotations . java <nl> ppp ParameterAnnotations . java <nl> - this ( name _ index , length , ( ParameterAnnotationEntry []) null , <nl> - constant _ pool ); <nl> + super ( name _ index , length , constant _ pool ); <nl> - public ParameterAnnotations ( int name _ index , int length , <nl> - ParameterAnnotationEntry [] parameter _ annotation _ table , ConstantPool constant _ pool ) { <nl> 
mmm JavaRuntimeRule . java <nl> ppp JavaRuntimeRule . java <nl> - . add ( attr (" srcs ", LABEL _ LIST ) . allowedFileTypes ( FileTypeSet . ANY _ FILE ) . mandatory ()) <nl> + . add ( attr (" srcs ", LABEL _ LIST ) . allowedFileTypes ( FileTypeSet . ANY _ FILE )) <nl> 
mmm SpringBootEncryptTest . java <nl> ppp SpringBootEncryptTest . java <nl> + import org . apache . shardingsphere . core . rule . EncryptRule ; <nl> - public void assertWithMasterSlaveDataSource () { <nl> + public void assertWithEncryptDataSource () { <nl> + @ Test <nl> + public void assertWithEncryptRule () { <nl> 
mmm ServletContextFactory . java <nl> ppp ServletContextFactory . java <nl> + * @ deprecated <nl> 
mmm PartVisitor . java <nl> ppp PartVisitor . java <nl> - import java . nio . ByteBuffer ; <nl> - class ByteBufferVisitor implements PartVisitor { <nl> - private final ByteBuffer target ; <nl> - public ByteBufferVisitor ( ByteBuffer target ) { <nl> - this . target = target ; <nl> - } <nl> - @ Override <nl> - public void withBytes ( byte [] bytes ) { <nl> 
mmm SelfValidatingClass . java <nl> ppp SelfValidatingClass . java <nl> + import javax . annotation . Nullable ; <nl> + @ Nullable <nl> - if (! answer . equals ( 42 )) { <nl> + if ( answer == null || ! answer . equals ( 42 )) { <nl> 
mmm SpatialPrefixTreeFactory . java <nl> ppp SpatialPrefixTreeFactory . java <nl> + else if (" s2 " . equalsIgnoreCase ( cname )) <nl> + instance = new S2PrefixTree . Factory (); <nl> 
deleted file <nl> mmm DataSourceService . java <nl> - package io . shardingsphere . orchestration . internal . registry . state . service ; <nl> - import io . shardingsphere . orchestration . internal . registry . state . node . StateNode ; <nl> - import io . shardingsphere . orchestration . reg . api . RegistryCenter ; <nl> 
mmm CallRequestController . java <nl> ppp CallRequestController . java <nl> + if ( canceled ) return ; <nl> 
mmm GoImportReferenceSet . java <nl> ppp GoImportReferenceSet . java <nl> + @ Override <nl> + public boolean couldBeConvertedTo ( boolean relative ) { <nl> + return false ; <nl> + } <nl> 
deleted file <nl> mmm SolrSortField . java <nl> - package org . apache . solr . search ; <nl> - import org . apache . lucene . search . IndexSearcher ; <nl> - import org . apache . lucene . search . SortField ; <nl> - import java . io . IOException ; <nl> - public interface SolrSortField { <nl> - public SortField weight ( IndexSearcher searcher ) throws IOException ; <nl> 
mmm Platform . java <nl> ppp Platform . java <nl> - private final Pattern SO = Pattern . compile ("(?:^|/) lib \\ w + [ . ] so (?:[ . ]\\ d + ){ 0 , 3 }$"); <nl> + private final Pattern SO = Pattern . compile ("(?:^|/) lib \\ w + [ . ] so (?:[ . ]\\ d + )*$"); <nl> - MACOSX (" Mac OS X ") { <nl> - private final Pattern DYLIB = Pattern . compile ("(?:^|/) lib \\ w + [ . ] dylib $"); <nl> 
mmm ConfigurationTest . java <nl> ppp ConfigurationTest . java <nl> - import org . languagetool . language . Belarusian ; <nl> + import org . languagetool . language . French ; <nl> + import java . nio . file . Files ; <nl> - tempFile . delete (); <nl> + Files . delete ( tempFile . toPath ()); <nl> - new Belarusian ()); <nl> 
mmm DefaultOnDoubleTapListener . java <nl> ppp DefaultOnDoubleTapListener . java <nl> - if ( scale < photoViewAttacher . getMinimumScale ()) { <nl> + if ( scale < photoViewAttacher . getMediumScale ()) { <nl> 
mmm _ 463 . java <nl> ppp _ 463 . java <nl> - public class IslandPerimeter { <nl> + public class _ 463 { <nl> 
new file <nl> ppp ReverseBinaryNumberTest . java <nl> + package com . github . pedrovgs . problem71 ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + public class ReverseBinaryNumberTest { <nl> + private ReverseBinaryNumber reverseBinaryNumber ; <nl> 
mmm RestResponseEntityExceptionHandler . java <nl> ppp RestResponseEntityExceptionHandler . java <nl> + import org . springframework . validation . BindException ; <nl> + @ Override <nl> + protected ResponseEntity < Object > handleBindException ( BindException ex , HttpHeaders headers , HttpStatus status , WebRequest request ) { <nl> 
mmm SampleEvaluator . java <nl> ppp SampleEvaluator . java <nl> - second = objects [ 2 ]; <nl> + second = objects [ 1 ]; <nl> 
mmm ArgumentMatcherStorage . java <nl> ppp ArgumentMatcherStorage . java <nl> + @ SuppressWarnings (" unchecked ") <nl> 
new file <nl> ppp SyncCallTest . java <nl> + package org . apache . zookeeper . test ; <nl> + import java . io . IOException ; <nl> + import java . util . Date ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> + import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . TimeUnit ; <nl> 
mmm Server . java <nl> ppp Server . java <nl> + import io . vertx . core . http . HttpServerResponse ; <nl> + import java . util . HashSet ; <nl> + import java . util . Set ; <nl> - router . route () . handler ( CorsHandler . create ("*") <nl> - . allowedMethod ( HttpMethod . GET ) <nl> - . allowedMethod ( HttpMethod . POST ) <nl> 
mmm ModifyColumnExtractHandler . java <nl> ppp ModifyColumnExtractHandler . java <nl> - ColumnDefinitionExtractResult result = new ColumnDefinitionExtractResult (); <nl> + ColumnDefinitionExtractResult extractResult = new ColumnDefinitionExtractResult (); <nl> - result . getColumnDefintions () . add ( columnDefinition . get ()); <nl> 
mmm LBHttpSolrClientTest . java <nl> ppp LBHttpSolrClientTest . java <nl> - package org . apache . solr . client . solrj . impl ; <nl> - import org . apache . http . impl . client . CloseableHttpClient ; <nl> - import org . apache . solr . client . solrj . ResponseParser ; <nl> - import org . apache . solr . common . params . ModifiableSolrParams ; <nl> 
mmm GitHubExample . java <nl> ppp GitHubExample . java <nl> + import dagger . Module ; <nl> + import dagger . Provides ; <nl> - import feign . IncrementalCallback ; <nl> + import feign . Logger ; <nl> + import feign . Observable ; <nl> + import feign . Observer ; <nl> - void contributors (@ Named (" owner ") String owner , @ Named (" repo ") String repo , <nl> 
new file <nl> ppp DynamicClassLoader . java <nl> + package org . apache . jmeter ; <nl> + import java . net . URL ; <nl> + import java . net . URLClassLoader ; <nl> + import java . net . URLStreamHandlerFactory ; <nl> + public class DynamicClassLoader extends URLClassLoader { <nl> + public DynamicClassLoader ( URL [] arg0 ) { <nl> 
mmm NoOpAccessibilityChecker . java <nl> ppp NoOpAccessibilityChecker . java <nl> + public NoOpAccessibilityChecker () { <nl> + } <nl> 
mmm ConfusionFileIndenterTest . java <nl> ppp ConfusionFileIndenterTest . java <nl> - public void indentWithCommentsTest () throws Exception { <nl> + public void indentWithCommentsTest () { <nl> - String expected = " mir ; mit ; 1 . 50 # p = 0 . 994 , r = 0 . 658 , tp = 775 , tn = 1173 , fp = 5 , fn = 403 , 178 + 1000 , 2017 - 10 - 23 \ n " <nl> 
mmm GenAidlDescription . java <nl> ppp GenAidlDescription . java <nl> - import com . facebook . buck . model . BuildTarget ; <nl> - import com . facebook . buck . rules . AbstractDescriptionArg ; <nl> + import com . facebook . buck . rules . CommonDescriptionArg ; <nl> + import com . facebook . buck . rules . HasDeclaredDeps ; <nl> 
mmm CompactObjectInputStream . java <nl> ppp CompactObjectInputStream . java <nl> - return Class . forName ( name , false , classLoader ); <nl> + if ( classLoader == null ) { <nl> + return Class . forName ( <nl> + name , false , <nl> + Thread . currentThread () . getContextClassLoader ()); <nl> + } else { <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm _ 121 . java <nl> ppp _ 121 . java <nl> - Example 2 : <nl> + Example 2 : <nl> - public int maxProfit _ 20160924 ( int [] prices ) { <nl> - if ( prices == null || prices . length < 2 ) return 0 ; <nl> + public int maxProfit ( int [] prices ) { <nl> + if ( prices == null || prices . length < 2 ) return 0 ; <nl> 
mmm RingBufferPermission . java <nl> ppp RingBufferPermission . java <nl> - private static final int ALL = PUT | READ ; <nl> + private static final int ALL = PUT | READ | CREATE | DESTROY ; <nl> 
mmm JsonBundleTest . java <nl> ppp JsonBundleTest . java <nl> - import com . yammer . dropwizard . json . JsonBundle ; <nl> - import com . yammer . dropwizard . jersey . OptionalQueryParamInjectableProvider ; <nl> + import com . yammer . dropwizard . json . JsonBundle ; <nl> - @ Test <nl> - public void addsOptionalQueryParamSupport () throws Exception { <nl> 
mmm Previewer . java <nl> ppp Previewer . java <nl> + disableDrawerSwipe (); <nl> 
mmm Versions . java <nl> ppp Versions . java <nl> - public static byte [] SERVER _ VERSION = " 5 . 6 . 29 - mycat - 1 . 6 . 7 . 5 - test - 20200221151409 " . getBytes (); <nl> + public static byte [] SERVER _ VERSION = " 5 . 6 . 29 - mycat - 1 . 6 . 7 . 5 - test - 20200223222836 " . getBytes (); <nl> 
mmm JsOptions . java <nl> ppp JsOptions . java <nl> + import javax . annotation . Nullable ; <nl> - public JsOptions put ( String key , Serializable value ) { <nl> + public JsOptions put ( String key , @ Nullable Serializable value ) { <nl> 
mmm IOSLauncher . java <nl> ppp IOSLauncher . java <nl> + import io . anuke . kryonet . DefaultThreadImpl ; <nl> + import io . anuke . mindustry . core . ThreadHandler ; <nl> + @ Override <nl> + public ThreadHandler . ThreadProvider getThreadProvider () { <nl> + return new DefaultThreadImpl (); <nl> + } <nl> 
deleted file <nl> mmm JavascriptClientFilter . java <nl> - package org . atmosphere . client ; <nl> - import org . atmosphere . cpr . PerRequestBroadcastFilter ; <nl> - import javax . servlet . http . HttpServletRequest ; <nl> - import javax . servlet . http . HttpServletResponse ; <nl> - import java . util . concurrent . atomic . AtomicInteger ; <nl> 
new file <nl> ppp BasicHadoopTest . java <nl> + package com . kylinolap . common . util ; <nl> + import org . apache . hadoop . conf . Configuration ; <nl> + import org . apache . hadoop . hbase . HBaseConfiguration ; <nl> + import org . apache . hadoop . hbase . HColumnDescriptor ; <nl> + import org . apache . hadoop . hbase . HTableDescriptor ; <nl> 
new file <nl> ppp ClientJooqMapper . java <nl> + package keywhiz . service . daos ; <nl> + import keywhiz . api . model . Client ; <nl> + import org . jooq . Record ; <nl> + import org . jooq . RecordMapper ; <nl> + import static keywhiz . jooq . tables . Clients . CLIENTS ; <nl> + class ClientJooqMapper implements RecordMapper < Record , Client > { <nl> 
mmm Linter . java <nl> ppp Linter . java <nl> + import org . kohsuke . args4j . Argument ; <nl> + import org . kohsuke . args4j . CmdLineException ; <nl> + import org . kohsuke . args4j . CmdLineParser ; <nl> + import org . kohsuke . args4j . Option ; <nl> - public static void main ( String [] args ) throws IOException { <nl> 
mmm InternalGrpclbConstantsAccessor . java <nl> ppp InternalGrpclbConstantsAccessor . java <nl> - public static Attributes setLbAddrAuthorityAttr ( <nl> - @ EquivalentAddressGroup . Attr Attributes attrs , String authority ) { <nl> - return attrs . toBuilder () . set ( GrpclbConstants . ATTR _ LB _ ADDR _ AUTHORITY , authority ) . build (); <nl> 
new file <nl> ppp JsonBody . java <nl> + package org . mockserver . model ; <nl> + import org . mockserver . matchers . JsonBodyMatchType ; <nl> + public class JsonBody extends Body { <nl> + public static final JsonBodyMatchType DEFAULT _ MATCH _ TYPE = JsonBodyMatchType . ONLY _ MATCHING _ FIELDS ; <nl> + private final String json ; <nl> 
new file <nl> ppp LoggingRunListener . java <nl> + package org . junit . platform . runner ; <nl> + import org . junit . runner . Description ; <nl> + import org . junit . runner . Result ; <nl> + import org . junit . runner . notification . Failure ; <nl> + import org . junit . runner . notification . RunListener ; <nl> 
mmm RequestMappingHandlerAdapterExampleController . java <nl> ppp RequestMappingHandlerAdapterExampleController . java <nl> - model . addObject (" message ", " Madhwal "); <nl> + model . addObject (" message "," Madhwal "); <nl> 
mmm DateTools . java <nl> ppp DateTools . java <nl> + public static String getUserTimeZone ( User currentUser ) { <nl> + DateTimeZone tz = globalTimezone ; <nl> + if ( currentUser != null & & currentUser . getTimeZone () != null ) { <nl> + tz = currentUser . getTimeZone (); <nl> + } <nl> + return tz . toString (); <nl> 
mmm LockFairTest . java <nl> ppp LockFairTest . java <nl> + import java . sql . Connection ; <nl> + dataSource . setUrl (" jdbc : mock : xx "); <nl> - Assert . assertEquals ( false , (( ReentrantLock ) dataSource . getLock ()) . isFair ()); <nl> + Assert . assertEquals ( false , (( ReentrantLock ) dataSource . getLock ()) . isFair ()); <nl> 
new file <nl> ppp ConfigFilterTest5 . java <nl> + package com . alibaba . druid . bvt . filter . config ; <nl> + import com . alibaba . druid . filter . config . ConfigFilter ; <nl> + import junit . framework . Assert ; <nl> + import junit . framework . TestCase ; <nl> + public class ConfigFilterTest5 extends TestCase { <nl> 
deleted file <nl> mmm DurationUtilsTestCase . java <nl> - package org . apache . skywalking . apm . collector . ui . utils ; <nl> - import java . text . ParseException ; <nl> - import org . junit . Test ; <nl> - public class DurationUtilsTestCase { <nl> - @ Test <nl> - public void test () throws ParseException { <nl> 
mmm EnvironmentConfig . java <nl> ppp EnvironmentConfig . java <nl> - private static final List < String > CAT _ SERVERS = Arrays . asList (" localhost : 2281 ", " 10 . 1 . 110 . 57 : 8080 ", <nl> - " 10 . 1 . 110 . 23 : 8080 ", " 10 . 1 . 110 . 21 : 8080 "); <nl> + private static final List < String > CAT _ SERVERS = Arrays . asList (" 10 . 1 . 110 . 57 : 8080 ", " 10 . 1 . 110 . 23 : 8080 ", <nl> 
new file <nl> ppp TestResourceBundleELResolver . java <nl> + package javax . el ; <nl> + import java . util . Enumeration ; <nl> + import java . util . ListResourceBundle ; <nl> + import java . util . ResourceBundle ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import org . apache . jasper . el . ELContextImpl ; <nl> 

deleted file <nl> mmm PostgreSQLDistinctClauseParser . java <nl> - package io . shardingsphere . core . parsing . parser . dialect . postgresql . clause ; <nl> - import io . shardingsphere . core . parsing . lexer . LexerEngine ; <nl> - import io . shardingsphere . core . parsing . lexer . token . Keyword ; <nl> 
mmm MySQLDropIndexExtractHandler . java <nl> ppp MySQLDropIndexExtractHandler . java <nl> - import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . ASTExtractHandler1 ; <nl> - import io . shardingsphere . core . parsing . parser . sql . SQLStatement ; <nl> - public final class MySQLDropIndexExtractHandler implements ASTExtractHandler , ASTExtractHandler1 { <nl> 
mmm QueueOperation . java <nl> ppp QueueOperation . java <nl> - public void subscribe ( ObservableEmitter < T > emitter ) throws Exception { <nl> + public void subscribe ( ObservableEmitter < T > emitter ) { <nl> + RxBleLog . e ( deadObjectException , " QueueOperation terminated with a DeadObjectException "); <nl> 
mmm ReflectionSaltSource . java <nl> ppp ReflectionSaltSource . java <nl> - Method reflectionMethod = user . getClass () . getMethod ( this . userPropertyToUse , <nl> + Method reflectionMethod = user . getClass () <nl> + . getMethod ( this . userPropertyToUse , <nl> - throw new AuthenticationServiceException ( exception . getMessage ()); <nl> 
mmm HelloWorld . java <nl> ppp HelloWorld . java <nl> + import graphql . ExecutionResult ; <nl> - import graphql . schema . GraphQLObjectType ; <nl> + import graphql . schema . StaticDataFetcher ; <nl> + import graphql . schema . idl . RuntimeWiring ; <nl> + import graphql . schema . idl . SchemaGenerator ; <nl> 
mmm InvalidFileNameException . java <nl> ppp InvalidFileNameException . java <nl> - package org . apache . tomcat . util . http . fileupload ; <nl> - public class InvalidFileNameException extends RuntimeException { <nl> - private static final long serialVersionUID = 7922042602454350470L ; <nl> - private final String name ; <nl> 
mmm PrometheusCollector . java <nl> ppp PrometheusCollector . java <nl> + import java . util . concurrent . CopyOnWriteArrayList ; <nl> - public void addMetricFamilySamples ( MetricFamilySamples mfs ) { <nl> + public synchronized void addMetricFamilySamples ( MetricFamilySamples mfs ) { <nl> - metricFamilyMap . put ( mfs . name , new ArrayList <>()); <nl> 
mmm OperationSetTLSJabberImpl . java <nl> ppp OperationSetTLSJabberImpl . java <nl> - public String getCipherSuite () { <nl> + @ Override <nl> + public String getCipherSuite () <nl> + { <nl> - public String getProtocol () { <nl> + @ Override <nl> + public String getProtocol () <nl> + { <nl> - public Certificate [] getServerCertificates () { <nl> 
mmm ShadowImageView . java <nl> ppp ShadowImageView . java <nl> - private void applyImageAttribute () { <nl> - String source = attributeSet . getAttributeValue ( ANDROID _ NS , " src "); <nl> - if ( source != null ) { <nl> - if ( source . startsWith ("@ drawable /")) { <nl> - setImageResource ( attributeSet . getAttributeResourceValue ( ANDROID _ NS , " src ", 0 )); <nl> 
mmm FileUploadToObjectConverter . java <nl> ppp FileUploadToObjectConverter . java <nl> + import io . micronaut . core . util . StringUtils ; <nl> - if ( String ) { <nl> + if ( StringUtils . isNotEmpty ( contentType )) { <nl> 
new file <nl> ppp EmbeddedTomcat . java <nl> + package org . apache . catalina . startup ; <nl> + import java . io . ByteArrayInputStream ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + import java . nio . charset . StandardCharsets ; <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> 
mmm CustomAnnotationSerializerITest . java <nl> ppp CustomAnnotationSerializerITest . java <nl> + public void testTwoSentences () throws IOException { <nl> + Annotation annotation = new Annotation (" I bought a bone for my dog . He chews it every day . "); <nl> + fullPipeline . annotate ( annotation ); <nl> 
mmm Dashboard . java <nl> ppp Dashboard . java <nl> - import java . util . Map ; <nl> 
mmm RestResourceBaseTest . java <nl> ppp RestResourceBaseTest . java <nl> - import org . mockito . ArgumentMatcher ; <nl> - import org . mockito . internal . matchers . VarargMatcher ; <nl> - import static org . mockito . ArgumentMatchers . argThat ; <nl> + import static org . mockito . ArgumentMatchers . any ; <nl> 
new file <nl> ppp SqlGenConfig . java <nl> + package jodd . db . oom . sqlgen ; <nl> + public class SqlGenConfig { <nl> + public boolean isUpdateAcceptsTableAlias () { <nl> + return updateAcceptsTableAlias ; <nl> + } <nl> + public void setUpdateAcceptsTableAlias ( boolean updateAcceptsTableAlias ) { <nl> + this . updateAcceptsTableAlias = updateAcceptsTableAlias ; <nl> 
mmm InsertStatement . java <nl> ppp InsertStatement . java <nl> - private int columnsListLastIndex ; <nl> 
mmm MySQLComStmtClosePacketTest . java <nl> ppp MySQLComStmtClosePacketTest . java <nl> + import static org . hamcrest . Matchers . is ; <nl> + import static org . junit . Assert . assertThat ; <nl> + @ Test <nl> + public void assertNew () { <nl> + when ( payload . readInt4 ()) . thenReturn ( 1 ); <nl> + MySQLComStmtClosePacket actual = new MySQLComStmtClosePacket ( payload ); <nl> 
mmm StateNodeTest . java <nl> ppp StateNodeTest . java <nl> - package io . shardingsphere . orchestration . internal . state ; <nl> + package io . shardingsphere . orchestration . internal . state . node ; <nl> - import io . shardingsphere . orchestration . internal . state . node . StateNode ; <nl> 
mmm InputTypesResource . java <nl> ppp InputTypesResource . java <nl> 
mmm MethodRule . java <nl> ppp MethodRule . java <nl> - * examples of how this can be useful , see these provided MethodRules , <nl> - * or write your own : <nl> + * an example of how this can be useful , see {@ link TestWatchman } . <nl> - * < ul > <nl> - * < li >{@ link ErrorCollector }: collect multiple errors in one test method </ li > <nl> 
mmm AuthManagerServiceImpl . java <nl> ppp AuthManagerServiceImpl . java <nl> + import java . util . Arrays ; <nl> - String packageName = extras . containsKey ( KEY _ ANDROID _ PACKAGE _ NAME ) ? extras . getString ( KEY _ ANDROID _ PACKAGE _ NAME ) <nl> - : extras . containsKey ( KEY _ CLIENT _ PACKAGE _ NAME ) ? extras . getString ( KEY _ CLIENT _ PACKAGE _ NAME ) : null ; <nl> 
mmm WhitespaceCheckFilter . java <nl> ppp WhitespaceCheckFilter . java <nl> - throw new IllegalArgumentException (" Wrong position in WhitespaceCheckFilter : " + pos ); <nl> + throw new IllegalArgumentException (" Wrong position in WhitespaceCheckFilter : " + pos + ", must be 1 to " + patternTokens . length ); <nl> 
mmm TridentKafkaTopology . java <nl> ppp TridentKafkaTopology . java <nl> - Map config = new HashMap (); <nl> - props . put (" metadata . broker . list ", brokerConnectionString ); <nl> - props . put (" request . required . acks ", " 1 "); <nl> - props . put (" serializer . class ", " kafka . serializer . StringEncoder "); <nl> 
mmm AsyncMultiMap . java <nl> ppp AsyncMultiMap . java <nl> - * A multi - map holds a List of values against each key as opposed to a single value , as with a Map . <nl> + * A multi - map holds a Set of values against each key as opposed to a single value , as with a Map . A value appears only <nl> + * once for a key ( no duplicated values for the same key ) . <nl> 
mmm TitanGremlinPlugin . java <nl> ppp TitanGremlinPlugin . java <nl> + import com . google . common . collect . ImmutableSet ; <nl> - return Optional . of ( new HashSet <>( Arrays . asList ( new Artifact (" com . thinkaurelius . titan ", " titan - cassandra ", TitanConstants . VERSION )))); <nl> + return Optional . of ( ImmutableSet . of ( <nl> 
new file <nl> ppp DebugsShouldUseLoggingLevelTest . java <nl> + package net . sourceforge . pmd . lang . apex . rule . bestpractices ; <nl> + import net . sourceforge . pmd . testframework . PmdRuleTst ; <nl> + public class DebugsShouldUseLoggingLevelTest extends PmdRuleTst { <nl> + } <nl> 
deleted file <nl> mmm SSLUtil . java <nl> - package jodd . http . net ; <nl> - import java . io . File ; <nl> - import java . io . FileInputStream ; <nl> - import java . io . FileNotFoundException ; <nl> - import java . io . FileOutputStream ; <nl> - import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> 
mmm GermanHelperTest . java <nl> ppp GermanHelperTest . java <nl> + @ Test <nl> + public void testGetDeterminerNumber () throws Exception { <nl> + assertThat ( GermanHelper . getDeterminerNumber (" ART : DEF : DAT : SIN : FEM "), is (" SIN ")); <nl> + } <nl> + @ Test <nl> + public void testGetDeterminerDefiniteness () throws Exception { <nl> 
mmm JndiNamingDependencyProcessor . java <nl> ppp JndiNamingDependencyProcessor . java <nl> + import java . util . Collections ; <nl> + if ( mappings == null ) return Collections . emptySet (); <nl> 
mmm ResourceUtils . java <nl> ppp ResourceUtils . java <nl> + import java . nio . file . Paths ; <nl> + private static final String [] DEFAULT _ FILE _ SEARCH _ LOCATIONS = new String []{" . / config /", " . /"}; <nl> - InputStream in = ClassLoaderUtil . getLoader () . getResourceAsStream ( configPath ); <nl> 
mmm RevolutForm . java <nl> ppp RevolutForm . java <nl> - addTopLabelTextField ( gridPane , gridRow , Res . get (" payment . account . userName "), <nl> + addTopLabelTextField ( gridPane , gridRow , Res . get (" payment . account . name "), <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final int VERSION _ INT = 1000010 ; <nl> + public static final int VERSION _ INT = 1000011 ; <nl> 
mmm ExceptionMetered . java <nl> ppp ExceptionMetered . java <nl> - * By default , the annotation default to capturing all exceptions ( subclasses of {@ link Exception }) <nl> - * and will use the default event - type of " exceptions " . <nl> - * < p /> <nl> - * A meter named {@ code fancyNameExceptionMetric } will be created with event - type named <nl> 
mmm ArrayListMultimapTest . java <nl> ppp ArrayListMultimapTest . java <nl> - import com . google . common . collect . HashMultimap ; <nl> - import com . google . common . collect . Multimaps ; <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> - System . setProperty (" smart - socket . server . pageSize ", ( 16 * 1024 * 1024 ) + ""); <nl> - System . setProperty (" smart - socket . session . writeChunkSize ", ( 1024 * 8 ) + ""); <nl> - System . setProperty (" sun . nio . ch . maxCompletionHandlersOnStack "," 2 "); <nl> 
mmm QuestionD . java <nl> ppp QuestionD . java <nl> 
mmm LogbackLoggingSystem . java <nl> ppp LogbackLoggingSystem . java <nl> + @ Requires ( classes = ch . qos . logback . classic . LoggerContext . class ) <nl> 
mmm LocalStorageService . java <nl> ppp LocalStorageService . java <nl> - import java . util . HashSet ; <nl> - import java . util . Set ; <nl> - String type = id . substring ( id . lastIndexOf (" - ")); <nl> - Set < String > reportIds = new HashSet < String >(); <nl> - for ( String tmp : bucket . getIds ()) { <nl> 
mmm OfferBook . java <nl> ppp OfferBook . java <nl> - try { <nl> - OfferBookListItem item = candidate . get (); <nl> + OfferBookListItem item = candidate . get (); <nl> + synchronized ( offerBookListItems ) { <nl> - } catch ( Throwable t ) { <nl> - log . error (" offerBookListItems . remove failed " + t . getMessage ()); <nl> 
mmm RunningQuarkusApplicationImpl . java <nl> ppp RunningQuarkusApplicationImpl . java <nl> - return ( Iterable < String >) getConfig . getReturnType () . getMethod (" getPropertyNames ") <nl> + return ( Iterable < String >) getConfig . getReturnType () . getMethod (" getPropertyNames ", String . class , Class . class ) <nl> 
mmm DateUtils . java <nl> ppp DateUtils . java <nl> - private static final String RFC1123 _ PATTERN = " EEE , dd MMM yyyyy HH : mm : ss z "; <nl> + private static final String RFC1123 _ PATTERN = " EEE , dd MMM yyyy HH : mm : ss z "; <nl> 
mmm _ 144 . java <nl> ppp _ 144 . java <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - import java . util . Stack ; <nl> + import java . util . *; <nl> - public List < Integer > preorderTraversal _ iterative _ original ( TreeNode root ) { <nl> + public List < Integer > preorderTraversal _ iterative ( TreeNode root ) { <nl> 
mmm Jackson . java <nl> ppp Jackson . java <nl> + import static com . fasterxml . jackson . databind . DeserializationFeature . FAIL _ ON _ UNKNOWN _ PROPERTIES ; <nl> + import com . fasterxml . jackson . databind . DeserializationFeature ; <nl> - . setSubtypeResolver ( new DiscoverableSubtypeResolver ()); <nl> 
mmm JavaCheckstyle . java <nl> ppp JavaCheckstyle . java <nl> - public static final Logger LOG = Logger . getLogger ( JavaCheckstyle . class . getName ()); <nl> - private static final String CLASSNAME = JavaCheckstyle . class . getCanonicalName (); <nl> - private JavaCheckstyle () { } <nl> - public void foo () { <nl> 
mmm IntroActivity . java <nl> ppp IntroActivity . java <nl> + setSkipText ( getString ( R . string . action _ skip ) . toUpperCase ()); <nl> + setDoneText ( getString ( R . string . action _ done ) . toUpperCase ()); <nl> + setGrantText ( getString ( R . string . action _ grant ) . toUpperCase ()); <nl> 
mmm BoltAckInfo . java <nl> ppp BoltAckInfo . java <nl> + public int ackingTaskId ; <nl> - public BoltAckInfo ( Tuple tuple , Long processLatencyMs ) { <nl> + public BoltAckInfo ( Tuple tuple , int ackingTaskId , Long processLatencyMs ) { <nl> + this . ackingTaskId = ackingTaskId ; <nl> 
mmm SpringBootConfiguration . java <nl> ppp SpringBootConfiguration . java <nl> - SpringBootShardingRuleConfigurationProperties . class , SpringBootMasterSlaveRuleConfigurationProperties . class , SpringBootPropertiesConfigurationProperties . class <nl> - }) <nl> + SpringBootShardingRuleConfigurationProperties . class , <nl> 
mmm ActivityLifecycleCallbacksImpl . java <nl> ppp ActivityLifecycleCallbacksImpl . java <nl> 
mmm ExceptionUtils . java <nl> ppp ExceptionUtils . java <nl> + import java . util . function . Supplier ; <nl> + public static void bombIf ( boolean check , Supplier < String > msg ) { <nl> + if ( check ) { <nl> + throw bomb ( msg . get ()); <nl> + } <nl> + } <nl> 
mmm MemoryChannel . java <nl> ppp MemoryChannel . java <nl> - private static final int PUSH _ TIMEOUT = ScalingContext . getInstance () . getServerConfiguration () . getPushTimeout (); <nl> 
mmm LogFormatter . java <nl> ppp LogFormatter . java <nl> - setPattern (" % - 5p [ % d { ISO8601 ," + timeZone . getID () + "}] % c : % m \ n % ex "); <nl> + setPattern (" % - 5p [ % d { ISO8601 ," + timeZone . getID () + "}] % c : % m % n % ex "); <nl> 
mmm RxBleRadioOperationServicesDiscover . java <nl> ppp RxBleRadioOperationServicesDiscover . java <nl> - import android . util . Log ; <nl> - Log . d (" xxx ", " constructor " + bluetoothGatt ); <nl> 
mmm NaturalLogicRelationTest . java <nl> ppp NaturalLogicRelationTest . java <nl> - assertEquals ( NaturalLogicRelation . FORWARD _ ENTAILMENT , NaturalLogicRelation . forDependencyInsertion (" conj _ or ")); <nl> - assertEquals ( NaturalLogicRelation . FORWARD _ ENTAILMENT , NaturalLogicRelation . forDependencyInsertion (" conj _ or ", true )); <nl> 
mmm NimbusInfo . java <nl> ppp NimbusInfo . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger LOG = LoggerFactory . getLogger ( NimbusInfo . class ); <nl> + if ( conf . containsKey ( Config . STORM _ LOCAL _ HOSTNAME )) { <nl> + host = conf . get ( Config . STORM _ LOCAL _ HOSTNAME ) . toString (); <nl> 
mmm Container . java <nl> ppp Container . java <nl> + import io . jenkins . blueocean . rest . pageable . PagedResponse ; <nl> - import java . util . AbstractCollection ; <nl> - public abstract class Container < T > extends AbstractCollection < T > implements Pageable < T > { <nl> + public abstract class Container < T > implements Pageable < T > { <nl> 
mmm MockitoJUnitRunnerTest . java <nl> ppp MockitoJUnitRunnerTest . java <nl> + import org . mockito . Mock ; <nl> - public static class StubbingInConstructorUsed extends StubbingInConstructorUnused { <nl> + public static class StubbingInConstructorUsed extends StubbingInConstructorUnused { <nl> - IMethods mock ; <nl> 
mmm AtmosphereResourceSessionFactory . java <nl> ppp AtmosphereResourceSessionFactory . java <nl> 
mmm BazelPyTestRule . java <nl> ppp BazelPyTestRule . java <nl> - py _ binary ( <nl> - name = " foo ", <nl> + py _ test ( <nl> + name = " runtest _ test ", <nl> - " bar . py ", <nl> - " baz . py ", <nl> + " runtest _ main . py ", <nl> + " runtest _ lib . py ", <nl> - main = " bar . py ", <nl> + main = " runtest _ main . py ", <nl> 
mmm CreditCard . java <nl> ppp CreditCard . java <nl> - public static enum Type { <nl> + public enum Type { <nl> 
mmm ShardingSphereVisitor . java <nl> ppp ShardingSphereVisitor . java <nl> - import org . apache . shardingsphere . rdl . parser . autogen . ShardingSphereStatementParser . CreateShardingRulesContext ; <nl> + import org . apache . shardingsphere . rdl . parser . autogen . ShardingSphereStatementParser . CreateShardingRuleContext ; <nl> 
mmm BinaryMemcacheEncoder . java <nl> ppp BinaryMemcacheEncoder . java <nl> - import io . netty . buffer . Unpooled ; <nl> - ByteBuf keyBuf = Unpooled . copiedBuffer ( key , CharsetUtil . UTF _ 8 ); <nl> - try { <nl> - buf . writeBytes ( keyBuf ); <nl> - } finally { <nl> - keyBuf . release (); <nl> - } <nl> + buf . writeBytes ( key . getBytes ( CharsetUtil . UTF _ 8 )); <nl> 
deleted file <nl> mmm RequestMappingHandlerAdapterExampleController . java <nl> - package com . baeldung . spring . controller ; <nl> - import org . springframework . stereotype . Controller ; <nl> - import org . springframework . web . bind . annotation . RequestMapping ; <nl> - import org . springframework . web . servlet . ModelAndView ; <nl> 
new file <nl> ppp SparkSQLTwitter . java <nl> + package com . oreilly . learningsparkexamples . java ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import org . apache . commons . lang . StringUtils ; <nl> + import org . apache . spark . SparkConf ; <nl> + import org . apache . spark . api . java . JavaSparkContext ; <nl> 
mmm Characters . java <nl> ppp Characters . java <nl> - return ( <nl> - cType == Character . START _ PUNCTUATION || <nl> + return cType == Character . START _ PUNCTUATION || <nl> - cType == Character . FINAL _ QUOTE _ PUNCTUATION ); <nl> + cType == Character . FINAL _ QUOTE _ PUNCTUATION ; <nl> + } <nl> + public static boolean isSymbol ( char c ) { <nl> 
mmm Terminate . java <nl> ppp Terminate . java <nl> 
mmm FontGenerator . java <nl> ppp FontGenerator . java <nl> - OS . exec (" fontforge ", " - script ", " core / assets - raw / fontgen / merge . pe "); <nl> 
mmm FrenchCompoundAwareHunspellRuleTest . java <nl> ppp FrenchCompoundAwareHunspellRuleTest . java <nl> + assertSuggestion ( lt , " Etais - tu ", "É tais - tu "); <nl> + assertSuggestion ( lt , " etais - tu ", "é tais - tu "); <nl> 
mmm MainEventHandler . java <nl> ppp MainEventHandler . java <nl> + String uniqueId = Context . getDataManager () . getDeviceById ( position . getDeviceId ()) . getUniqueId (); <nl> - s . append (" id : ") . append ( position . getDeviceId ()) . append (", "); <nl> + s . append (" id : ") . append ( uniqueId ) . append (", "); <nl> 
mmm DrawerAdapter . java <nl> ppp DrawerAdapter . java <nl> - toggleChecked ( false ); <nl> - myChecked . put ( position , true ); <nl> + toggleChecked ( false ); <nl> + myChecked . put ( position , true ); <nl> - 0 , 0 , 0 , 0 , 0 , <nl> - 0 , 0 . 58431373f , 0 , 0 , 0 , <nl> - 0 , 0 , 0 . 52941176f , 0 , 0 , <nl> 
new file <nl> ppp GwtSerializationDependencies . java <nl> + package com . google . common . base ; <nl> + import com . google . common . annotations . GwtCompatible ; <nl> + @ GwtCompatible <nl> + @ SuppressWarnings (" serial ") <nl> + final class GwtSerializationDependencies { <nl> + private GwtSerializationDependencies () {} <nl> 
mmm TableToken . java <nl> ppp TableToken . java <nl> - private final int ownerLength ; <nl> - this . ownerLength = ownerLength ; <nl> 
new file <nl> ppp TitanGraphConfiguration . java <nl> + package com . thinkaurelius . titan . tinkerpop . rexster ; <nl> + import com . google . common . base . Joiner ; <nl> + import com . thinkaurelius . titan . core . TitanFactory ; <nl> + import com . tinkerpop . blueprints . Graph ; <nl> + import com . tinkerpop . rexster . Tokens ; <nl> 
mmm IForgeKeybinding . java <nl> ppp IForgeKeybinding . java <nl> + default boolean isConflictContextAndModifierActive () <nl> + { <nl> + return getKeyConflictContext () . isActive () & & getKeyModifier () . isActive ( getKeyConflictContext ()); <nl> + } <nl> 
mmm TableRuleConfiguration . java <nl> ppp TableRuleConfiguration . java <nl> + import io . shardingsphere . api . config . KeyGeneratorConfiguration ; <nl> - import io . shardingsphere . core . keygen . generator . KeyGenerator ; <nl> - private KeyGenerator keyGenerator ; <nl> + private KeyGeneratorConfiguration keyGenerator ; <nl> 
mmm XmlTest . java <nl> ppp XmlTest . java <nl> - GroovyObject object = compile (" src / test / groovy / xml / SmallNamespaceDOMTest . groovy "); <nl> - object . invokeMethod (" testTree ", null ); <nl> + GroovyObject object = compile (" src / test / groovy / xml / NamespaceDOMTest . groovy "); <nl> + object . invokeMethod (" testXsdSchemaWithBuilderHavingAutoPrefix ", null ); <nl> 
mmm RussianSimpleReplaceRule . java <nl> ppp RussianSimpleReplaceRule . java <nl> + import java . util . List ; <nl> + import org . apache . commons . lang . StringUtils ; <nl> 
mmm ParseResultDemo . java <nl> ppp ParseResultDemo . java <nl> - System . out . printf (" % s = % s ( - 1 means this option was not matched on command line ) % n ", name , pr . matchedOptionValue (" x ", - 1 )); <nl> + System . out . printf (" % s = % s ( - 1 means this option was not matched on command line ) % n ", name , pr . matchedOptionValue ( name , - 1 )); <nl> 
mmm XferMgrCopy . java <nl> ppp XferMgrCopy . java <nl> - System . out . println (" to s3 object : " + to _ bucket ); <nl> - System . out . println (" in bucket : " + to _ key ); <nl> + System . out . println (" to s3 object : " + to _ key ); <nl> + System . out . println (" in bucket : " + to _ bucket ); <nl> 
new file <nl> ppp JavadocExclude . java <nl> + package org . mockito . javadoc ; <nl> + import com . sun . javadoc . *; <nl> + import com . sun . tools . doclets . formats . html . HtmlDoclet ; <nl> + import java . lang . reflect . InvocationHandler ; <nl> + import java . lang . reflect . Method ; <nl> + import java . lang . reflect . Proxy ; <nl> 
new file <nl> ppp DataSourceConnectionUrlUtilTest . java <nl> + package org . apache . shardingsphere . rdl . parser . binder . util ; <nl> + import org . apache . shardingsphere . infra . database . type . dialect . MySQLDatabaseType ; <nl> + import org . apache . shardingsphere . infra . database . type . dialect . PostgreSQLDatabaseType ; <nl> 
mmm App . java <nl> ppp App . java <nl> - import org . jooby . Jooby ; <nl> - import org . jooby . MediaType ; <nl> - import org . jooby . Results ; <nl> - import org . jooby . Result ; <nl> - import org . jooby . json . Jackson ; <nl> - import java . util . Map ; <nl> - import java . util . HashMap ; <nl> - import java . util . Locale ; <nl> 
mmm AggregationDistinctPlaceholder . java <nl> ppp AggregationDistinctPlaceholder . java <nl> + import io . shardingsphere . core . parsing . lexer . token . DefaultKeyword ; <nl> + @ Override <nl> + public String toString () { <nl> + return DefaultKeyword . DISTINCT + " " + columnName ; <nl> + } <nl> 
mmm ShadowSensor . java <nl> ppp ShadowSensor . java <nl> + import android . os . Build . VERSION _ CODES ; <nl> + import org . robolectric . RuntimeEnvironment ; <nl> - reflector ( _ Sensor _ . class , sensor ) . setType ( type ); <nl> + reflector ( _ Sensor _ . class , sensor ) . setTypeCompat ( type ); <nl> 
mmm S2iBuild . java <nl> ppp S2iBuild . java <nl> - import java . io . BufferedReader ; <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> - import java . io . InputStreamReader ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> 
new file <nl> ppp CodeHeapAnalyticsParams . java <nl> + import jdk . test . lib . dcmd . PidJcmdExecutor ; <nl> + public class CodeHeapAnalyticsParams { <nl> + public static void main ( String args []) throws Exception { <nl> + PidJcmdExecutor executor = new PidJcmdExecutor (); <nl> + executor . execute (" Compiler . CodeHeap _ Analytics all 1 ") . shouldHaveExitValue ( 0 ); <nl> 
mmm SessionConfig . java <nl> ppp SessionConfig . java <nl> - package org . apache . catalina . util ; <nl> - import javax . servlet . SessionCookieConfig ; <nl> - import org . apache . catalina . Context ; <nl> - public class SessionConfig { <nl> - private static final String DEFAULT _ SESSION _ COOKIE _ NAME = " JSESSIONID "; <nl> 
new file <nl> ppp _ 1624 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 1624 { <nl> + public static class Solution1 { <nl> + public int maxLengthBetweenEqualCharacters ( String s ) { <nl> + int maxLen = - 1 ; <nl> + for ( int i = 0 ; i < s . length (); i + + ) { <nl> + char c = s . charAt ( i ); <nl> 
mmm MongoTransactionalLiveTest . java <nl> ppp MongoTransactionalLiveTest . java <nl> - @ Test ( expected = MongoCommandException . class ) <nl> - @ Transactional <nl> - public void whenCountDuringMongoTransaction _ thenException () { <nl> - userRepository . save ( new User (" John ", 30 )); <nl> - userRepository . save ( new User (" Ringo ", 35 )); <nl> 
new file <nl> ppp ThrowableCollector . java <nl> + package org . junit . gen5 . engine . junit5 . descriptor ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + import org . junit . gen5 . api . Executable ; <nl> + import org . junit . gen5 . commons . util . Preconditions ; <nl> 
mmm Timestamper . java <nl> ppp Timestamper . java <nl> - public static final short ONE _ MS = 1 << BIN _ DIGITS ; <nl> + public static final short ONE _ MS = 1 << BIN _ DIGITS ; <nl> - while ( true ) { <nl> - long base = System . currentTimeMillis () << BIN _ DIGITS ; <nl> - long maxValue = base + ONE _ MS - 1 ; <nl> 
mmm ReleasePermitOnComplete . java <nl> ppp ReleasePermitOnComplete . java <nl> - if (" onCompleted " . equals ( method . getName ())) { <nl> + switch ( method . getName ()) { <nl> + case " onCompleted ": <nl> + case " onThrowable ": <nl> + default : <nl> 
mmm RetryingDownloader . java <nl> ppp RetryingDownloader . java <nl> - " Failed to download { 0 } . { 1 } retries left ", <nl> + " Failed to download % d . % d retries left ", <nl> 
mmm Evictor . java <nl> ppp Evictor . java <nl> - import org . apache . flink . streaming . runtime . tasks . ProcessingTimeService ; <nl> 
mmm ComfoAirBindingProvider . java <nl> ppp ComfoAirBindingProvider . java <nl> 
mmm AgroalRecorder . java <nl> ppp AgroalRecorder . java <nl> - public static final String DEFAULT _ DATASOURCE _ NAME = "< default >"; <nl> 
mmm Database . java <nl> ppp Database . java <nl> - public SQLiteDatabase openDB () { <nl> - this . sqLiteDatabase = this . sugarDb . getWritableDatabase (); <nl> + public SQLiteDatabase openDB () { <nl> + if ( this . sqLiteDatabase == null ) { <nl> + this . sqLiteDatabase = this . sugarDb . getWritableDatabase (); <nl> 
new file <nl> ppp Matchers . java <nl> + package co . paralleluniverse . common . test ; <nl> + import org . hamcrest . Matcher ; <nl> + import org . mockito . internal . matchers . Contains ; <nl> + import org . mockito . internal . matchers . EndsWith ; <nl> + import org . mockito . internal . matchers . EqualsWithDelta ; <nl> 
mmm ProjectConstants . java <nl> ppp ProjectConstants . java <nl> 
mmm HasOtherAnnotations . java <nl> ppp HasOtherAnnotations . java <nl> - import org . junit . runner . RunWith ; <nl> - import org . junit . runner . Runner ; <nl> - @ RunWith ( Runner . class ) <nl> 
mmm HeaderXssProtectionScanner . java <nl> ppp HeaderXssProtectionScanner . java <nl> - import org . parosproxy . paros . network . HttpUserAgent ; <nl> + import org . zaproxy . zap . utils . HttpUserAgent ; <nl> - public class HeaderXssProtectionScanner extends PluginPassiveScanner implements PassiveScanner { <nl> 
mmm Counter . java <nl> ppp Counter . java <nl> - return this . info . equals ( counter ); <nl> + return this . info . equals ( counter . info ); <nl> 
mmm OrchestrationMasterSlaveDataSource . java <nl> ppp OrchestrationMasterSlaveDataSource . java <nl> - import io . shardingsphere . orchestration . internal . event . state . DisabledStateEventBusEvent ; <nl> - import javax . sql . DataSource ; <nl> - import java . util . LinkedHashMap ; <nl> - import java . util . Map ; <nl> 
mmm OperationResponseClassReader . java <nl> ppp OperationResponseClassReader . java <nl> - if ( Void . class . equals ( returnType ) || Void . TYPE . equals ( returnType )) { <nl> + if ( Void . class . equals ( returnType . getErasedType ()) || Void . TYPE . equals ( returnType . getErasedType ())) { <nl> 
mmm StreamBitratePropertiesReader . java <nl> ppp StreamBitratePropertiesReader . java <nl> 
mmm ExecutableMethodProcessorListener . java <nl> ppp ExecutableMethodProcessorListener . java <nl> - import io . micronaut . core . reflect . GenericTypeUtils ; <nl> - import java . util . Optional ; <nl> 
new file <nl> ppp MySqlExplainTest _ 1 . java <nl> + package com . alibaba . druid . bvt . sql . mysql ; <nl> + import com . alibaba . druid . sql . MysqlTest ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> + import com . alibaba . druid . sql . dialect . mysql . parser . MySqlStatementParser ; <nl> 
mmm MTConfigTopHitProvider . java <nl> ppp MTConfigTopHitProvider . java <nl> - option ( messageIde (" mt . boldtabs "), " getIsBoldTabs ", " setIsBoldTabs ") <nl> + option ( messageIde (" mt . boldtabs "), " getIsBoldTabs ", " setIsBoldTabs "), <nl> + option ( messageIde (" mt . iswallpaperset "), " isWallpaperSet ", " setIsWallpaperSet "), <nl> 
mmm LDAPService . java <nl> ppp LDAPService . java <nl> - if (" admin " . equals ( userName ) & & " admin " . equals ( password )) { <nl> + if (" catadmin " . equals ( userName ) & & " catadmin " . equals ( password )) { <nl> 
mmm Broadcast . java <nl> ppp Broadcast . java <nl> 
mmm StringTools . java <nl> ppp StringTools . java <nl> + private StringTools () { <nl> + } <nl> 
mmm CassandraTransaction . java <nl> ppp CassandraTransaction . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger log = LoggerFactory . getLogger ( CassandraTransaction . class ); <nl> - return CLevel . parse ( getConfiguration () . getCustomOption ( CASSANDRA _ READ _ CONSISTENCY )); <nl> 
mmm MetricsHealthController . java <nl> ppp MetricsHealthController . java <nl> + import io . micrometer . core . instrument . Counter ; <nl> + import io . micrometer . core . instrument . Gauge ; <nl> - ObjectNode metrics = factory . objectNode (); <nl> + ObjectNode metricsJson = factory . objectNode (); <nl> 
mmm RocksDBWindowStore . java <nl> ppp RocksDBWindowStore . java <nl> - if ( bytesValue == null ) { <nl> - return null ; <nl> - } <nl> 
mmm OChannelDataOutput . java <nl> ppp OChannelDataOutput . java <nl> - public OChannelBinary writeByte ( final byte iContent ) throws IOException ; <nl> + public OChannelDataOutput writeByte ( final byte iContent ) throws IOException ; <nl> - public OChannelBinary writeBoolean ( final boolean iContent ) throws IOException ; <nl> 
mmm Timestamped . java <nl> ppp Timestamped . java <nl> + if ( obj == null ) { <nl> + return false ; <nl> + } <nl> - result = prime * result + ( int ) ( timestampMillis ^ ( timestampMillis )); <nl> + result = prime * result + ( int ) ( timestampMillis ^ ( timestampMillis >>> 32 )); <nl> 
new file <nl> ppp RequestUtilTest . java <nl> + package org . apache . kylin . rest . util ; <nl> + import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + public class RequestUtilTest { <nl> 
mmm Batch . java <nl> ppp Batch . java <nl> - projectReactor . getRoot () . setProperties ( convertToProperties ( configuration )); <nl> + if ( configuration != null ) { <nl> + projectReactor . getRoot () . setProperties ( convertToProperties ( configuration )); <nl> + } <nl> - String key = ( String ) keys . next (); <nl> 
new file <nl> ppp MembershipProvider . java <nl> + package org . apache . catalina . tribes ; <nl> + import java . util . Properties ; <nl> + public interface MembershipProvider { <nl> + public void init ( Properties properties ) throws Exception ; <nl> + public void start ( int level ) throws java . lang . Exception ; <nl> 
mmm DropIndexGenerator . java <nl> ppp DropIndexGenerator . java <nl> + } else if ( database instanceof SybaseASADatabase ) { <nl> + return new Sql []{ new UnparsedSql (" DROP INDEX " + database . escapeTableName ( statement . getTableCatalogName (), schemaName , statement . getTableName ()) + " . " + database . escapeIndexName ( statement . getTableCatalogName (), schemaName , statement . getIndexName ()), getAffectedIndex ( statement ))}; <nl> 
mmm Module . java <nl> ppp Module . java <nl> - protected < T > T getComponentByType ( Class < T > tClass ) { <nl> - return container . getComponentByType ( tClass ); <nl> - } <nl> 
mmm TreeVisitor . java <nl> ppp TreeVisitor . java <nl> 
mmm ScrollPaneBorder . java <nl> ppp ScrollPaneBorder . java <nl> - super ( new Insets ( 6 , 6 , 8 , 6 ), <nl> + super ( new Insets ( 2 , 2 , 2 , 2 ), <nl> 
mmm Path . java <nl> ppp Path . java <nl> 
mmm MonitorLoggingStoreTest . java <nl> ppp MonitorLoggingStoreTest . java <nl> + import com . facebook . FacebookPowerMockTestCase ; <nl> - import com . facebook . FacebookTestCase ; <nl> + import org . powermock . api . mockito . PowerMockito ; <nl> + import org . powermock . core . classloader . annotations . PrepareForTest ; <nl> 
mmm EnumPreferences . java <nl> ppp EnumPreferences . java <nl> - public static < T extends Enum > T getEnumValue ( SharedPreferences preferences , Class < T > type , <nl> + public static < T extends Enum < T >> T getEnumValue ( SharedPreferences preferences , Class < T > type , <nl> - return type . cast ( Enum . valueOf ( type , name )); <nl> 
mmm AgilityConfig . java <nl> ppp AgilityConfig . java <nl> - description = " Placeholder " <nl> + description = " Configuration for the Agility plugin " <nl> 
mmm AntMetaDataExporterTest . java <nl> ppp AntMetaDataExporterTest . java <nl> - import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . assertTrue ; <nl> - private final String url = " jdbc : h2 : target / h2 " + System . currentTimeMillis (); <nl> + private final String url = " jdbc : h2 :~/ dbs / h2 " + System . currentTimeMillis (); <nl> 
new file <nl> ppp LobsterTextView . java <nl> + package com . hackvg . android . view . custom _ views ; <nl> + import android . content . Context ; <nl> + import android . graphics . Typeface ; <nl> + import android . util . AttributeSet ; <nl> + import android . widget . TextView ; <nl> + public class LobsterTextView extends TextView { <nl> 
mmm SpdyHttpClientTest . java <nl> ppp SpdyHttpClientTest . java <nl> + import java . io . InputStream ; <nl> + import java . lang . reflect . Field ; <nl> + import java . util . Properties ; <nl> - import twitter4j . internal . http . HttpClient ; <nl> + import twitter4j . auth . AccessToken ; <nl> + import twitter4j . auth . OAuthAuthorization ; <nl> 
mmm TimedAnnotationBeanPostProcessor . java <nl> ppp TimedAnnotationBeanPostProcessor . java <nl> - import org . springframework . core . Ordered ; <nl> - public class TimedAnnotationBeanPostProcessor extends AbstractProxyingBeanPostProcessor implements <nl> - Ordered { <nl> + public class TimedAnnotationBeanPostProcessor extends AbstractProxyingBeanPostProcessor { <nl> 

mmm KafkaSASLTestResource . java <nl> ppp KafkaSASLTestResource . java <nl> - File directory = Testing . Files . createTestingDirectory (" kafka - data ", true ); <nl> + File directory = Testing . Files . createTestingDirectory (" sasl - kafka - data ", true ); <nl> - directory = Testing . Files . createTestingDirectory (" kafka - data ", removeExistingContent ); <nl> 
mmm PlatformTest . java <nl> ppp PlatformTest . java <nl> - assertEquals (" Wrong resource path OpenBSD / x86 ", " openbsd - x86 ", <nl> + assertEquals (" Wrong resource path OpenBSD / x86 ", " bsd - x86 ", <nl> - assertEquals (" Wrong resource path FreeBSD / x86 ", " freebsd - x86 ", <nl> + assertEquals (" Wrong resource path FreeBSD / x86 ", " bsd - x86 ", <nl> 
new file <nl> ppp KotlinSymbolTokenizerTest . java <nl> + package org . opensolaris . opengrok . analysis . kotlin ; <nl> + import java . io . BufferedReader ; <nl> + import java . io . InputStream ; <nl> + import java . io . InputStreamReader ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> 
mmm HandleData . java <nl> ppp HandleData . java <nl> +  <nl> + private HandleGetter handleGetter = new HandleGetter (); <nl> + private HandleSetter handleSetter = new HandleSetter (); <nl> + private HandleEqualsAndHashCode handleEqualsAndHashCode = new HandleEqualsAndHashCode (); <nl> + private HandleToString handleToString = new HandleToString (); <nl> 
new file <nl> ppp ConcurrentIndexDefinitionIT . java <nl> + package com . orientechnologies . orient . server . distributed ; <nl> + import com . orientechnologies . orient . core . db . ODatabaseSession ; <nl> + import com . orientechnologies . orient . core . db . ODatabaseType ; <nl> + import com . orientechnologies . orient . core . db . OrientDB ; <nl> 
mmm KafkaContainer . java <nl> ppp KafkaContainer . java <nl> - public static final int KAFKA _ PORT = 9092 ; <nl> + public static final int KAFKA _ PORT = 9093 ; <nl> - String networkAlias = " kafka - " + Base58 . randomString ( 6 ); <nl> - withNetworkAliases ( networkAlias ); <nl> + withNetworkAliases (" kafka - " + Base58 . randomString ( 6 )); <nl> 
mmm SandboxActionContextConsumer . java <nl> ppp SandboxActionContextConsumer . java <nl> - if ( OS . getCurrent () == OS . LINUX ) { <nl> - spawnContexts . put ("", " sandboxed "); <nl> - } <nl> + spawnContexts . put ("", " sandboxed "); <nl> 
mmm SIPCommMenuBarUI . java <nl> ppp SIPCommMenuBarUI . java <nl> - LookAndFeel . installBorder ( menuBar , null ); <nl> 
mmm BounceWebFragment . java <nl> ppp BounceWebFragment . java <nl> 
mmm AsyncProcessRevisitedTest . java <nl> ppp AsyncProcessRevisitedTest . java <nl> - waitForJobExecutorToProcessAllJobs ( 3000 , 500 ); <nl> + waitForJobExecutorToProcessAllJobs ( 5000 , 500 ); <nl> 
mmm AllAdjacentCombination . java <nl> ppp AllAdjacentCombination . java <nl> - package com . interview . array ; <nl> + package com . interview . recursion ; <nl> 
mmm StubbingListener . java <nl> ppp StubbingListener . java <nl> + import org . mockito . Incubating ; <nl> + @ Incubating <nl> 
mmm AdvancedMultimediaManager . java <nl> ppp AdvancedMultimediaManager . java <nl> - private static final int MAX _ ZOOM = 250 ; <nl> + private static final int MAX _ ZOOM = 200 ; <nl> 
mmm DefaultHttpCredentialsPlugin . java <nl> ppp DefaultHttpCredentialsPlugin . java <nl> - Principal p = null ; <nl> - if ( userName != null ) { <nl> - p = new SingleUserPrincipal ( userName ); <nl> + String doAsUser = req . getHeader (" doAsUser "); <nl> + if ( doAsUser == null ) { <nl> + doAsUser = req . getParameter (" doAsUser "); <nl> 
mmm FlexibleItemHolderExample . java <nl> ppp FlexibleItemHolderExample . java <nl> - import eu . davidea . samples . flexibleadapter . R ; <nl> - import eu . davidea . samples . flexibleadapter . models . HeaderItem ; <nl> - import eu . davidea . viewholders . ExpandableViewHolder ; <nl> + import eu . davidea . samples . flexibleadapter . R ; <nl> 
mmm DateCriterionTest . java <nl> ppp DateCriterionTest . java <nl> + import org . apache . commons . lang . time . DateUtils ; <nl> - assertTrue ( date . before ( new Date ( System . currentTimeMillis () - 2 * DAYS ))); <nl> - assertTrue ( date . after ( new Date ( System . currentTimeMillis () - 4 * DAYS ))); <nl> 
new file <nl> ppp ConsumerConnectionTest . java <nl> + package org . apache . rocketmq . common . protocol . body ; <nl> + import org . apache . rocketmq . common . consumer . ConsumeFromWhere ; <nl> + import org . apache . rocketmq . common . protocol . heartbeat . ConsumeType ; <nl> + import org . apache . rocketmq . common . protocol . heartbeat . MessageModel ; <nl> 
mmm TestU . java <nl> ppp TestU . java <nl> - ParserRuleContext ret = p . declarator (); <nl> + ParserRuleContext ret = p . s (); <nl> 
mmm ActivityFeedActivity . java <nl> ppp ActivityFeedActivity . java <nl> + import com . kickstarter . KSApplication ; <nl> + import com . kickstarter . libs . CurrentUser ; <nl> + import com . kickstarter . libs . utils . ObjectUtils ; <nl> + import javax . inject . Inject ; <nl> + @ Inject CurrentUser currentUser ; <nl> 
mmm ShardingPropertiesConstant . java <nl> ppp ShardingPropertiesConstant . java <nl> - * 默认 默认值 : 100 <nl> + * 默认 默认值 : CPU 核 数 <nl> 
mmm ColumnDefinitionExtractHandler . java <nl> ppp ColumnDefinitionExtractHandler . java <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . ColumnDefinitionExtractResult ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . ExtractResult ; <nl> 
mmm ServiceDescriptor . java <nl> ppp ServiceDescriptor . java <nl> + import java . util . Collection ; <nl> - import java . util . List ; <nl> - public class ServiceDescriptor { <nl> + public final class ServiceDescriptor { <nl> - private final List < MethodDescriptor <?, ?>> methods ; <nl> + private final Collection < MethodDescriptor <?, ?>> methods ; <nl> 
new file <nl> ppp StringsTest . java <nl> + package io . dropwizard . util ; <nl> + import org . junit . jupiter . api . Test ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> + import static org . assertj . core . api . Assertions . assertThatExceptionOfType ; <nl> + public class StringsTest { <nl> 
mmm MeiligaoProtocolDecoderTest . java <nl> ppp MeiligaoProtocolDecoderTest . java <nl> + verifyPosition ( decoder , binary ( <nl> + " 242400680790209818ffff99553038333235382e3030302c412c303131352e393338302c532c30333634382e313430392c452c302e30302c3331352e35352c3132303131367c302e37347c313930322e337c303430307c303030302c303030307c302e30f41b0d0a ")); <nl> 
mmm MongoAsserts . java <nl> ppp MongoAsserts . java <nl> - check ( errorCode ) . is ( 11000 ); <nl> + check ( codeName ) . is (" DuplicateKey "); <nl> 
mmm SysUpdateProjector . java <nl> ppp SysUpdateProjector . java <nl> + import io . crate . data . BatchIteratorProjector ; <nl> + import io . crate . data . CollectingBatchIterator ; <nl> + import javax . annotation . Nullable ; <nl> + import java . util . Collections ; <nl> + import java . util . stream . Collector ; <nl> 
mmm DateFieldFormatTest . java <nl> ppp DateFieldFormatTest . java <nl> + JSON . defaultTimeZone = TimeZone . getTimeZone (" Asia / Shanghai "); <nl> + JSON . defaultLocale = Locale . CHINA ; <nl> - String t1 = new SimpleDateFormat (" yyyy - MM - dd HH : mm : ss ") . format ( now ); <nl> - String t2 = new SimpleDateFormat (" yyyy / MM / dd HH : mm : ss ") . format ( now ); <nl> 
mmm DebugChecker . java <nl> ppp DebugChecker . java <nl> - DebugChecker () { <nl> - } <nl> 
mmm MyInterface . java <nl> ppp MyInterface . java <nl> - package net . sourceforge . pmd . lang . java . rule . strictexception ; <nl> + package net . sourceforge . pmd . lang . java . rule . clone ; <nl> 
mmm LibFFITest . java <nl> ppp LibFFITest . java <nl> - import org . lwjgl . BufferUtils ; <nl> - import org . lwjgl . LWJGLUtil ; <nl> - import org . lwjgl . PointerBuffer ; <nl> - import org . lwjgl . Sys ; <nl> + import org . lwjgl . *; <nl> + import org . lwjgl . LWJGLUtil . Platform ; <nl> - long nMemPutInt = lib . getFunctionAddress (" Java _ org _ lwjgl _ system _ MemoryUtil _ nMemPutInt "); <nl> 

mmm LanguageIdentifierTools . java <nl> ppp LanguageIdentifierTools . java <nl> - } catch ( Throwable t ) { <nl> - throw new Exception (" Failed trying to load language profile for language \"" + language + "\" . Error : " + t . getMessage ()); <nl> + } catch ( Exception e ) { <nl> + throw new Exception (" Failed trying to load language profile for language \"" + language + "\" . ", e ); <nl> 
mmm AuthenticationUtils . java <nl> ppp AuthenticationUtils . java <nl> - import java . net . URLClassLoader ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - import org . apache . hadoop . conf . Configuration ; <nl> - final List < URL > resources = new ArrayList <>(); <nl> 
mmm ContentLengthCloseFlushServlet . java <nl> ppp ContentLengthCloseFlushServlet . java <nl> - protected void doGet ( final HttpServletRequest req , final HttpServletResponse resp ) throws ServletException , IOException { <nl> + protected synchronized void doGet ( final HttpServletRequest req , final HttpServletResponse resp ) throws ServletException , IOException { <nl> 
mmm InodeUtils . java <nl> ppp InodeUtils . java <nl> + * @ throws InvalidPathException if the path for the inode is invalid <nl> + * @ throws FileDoesNotExistException if the path for the inode is invalid <nl> 
mmm CouchDbServiceRegistryTests . java <nl> ppp CouchDbServiceRegistryTests . java <nl> 
mmm SystemOutWriter . java <nl> ppp SystemOutWriter . java <nl> - public PrintStream getStream (){ <nl> + public PrintStream getStream () { <nl> 
mmm ShardingContext . java <nl> ppp ShardingContext . java <nl> - import io . shardingsphere . core . property . DataSourceProperty ; <nl> - import io . shardingsphere . core . property . DataSourcePropertyFactory ; <nl> + import io . shardingsphere . core . property . DataSourcePropertyManager ; <nl> - import java . util . LinkedHashMap ; <nl> 
mmm ExecutorRouteRound . java <nl> ppp ExecutorRouteRound . java <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> - private static ConcurrentMap < Integer , Integer > routeCountEachJob = new ConcurrentHashMap < Integer , Integer >(); <nl> + private static ConcurrentMap < Integer , AtomicInteger > routeCountEachJob = new ConcurrentHashMap <>(); <nl> 
mmm CryptoPacketExtension . java <nl> ppp CryptoPacketExtension . java <nl> - Object cryptoSuite = super . getAttribtue ( CRYPTO _ SUITE _ ARG _ NAME ); <nl> - return cryptoSuite == null ? null : cryptoSuite . toString (); <nl> + return getAttribtueString ( CRYPTO _ SUITE _ ARG _ NAME ); <nl> 
new file <nl> ppp ConditionEvaluator . java <nl> + package org . junit . gen5 . engine . junit5 . execution ; <nl> + import org . junit . gen5 . api . extension . Condition ; <nl> + import org . junit . gen5 . api . extension . Condition . Result ; <nl> + import org . junit . gen5 . api . extension . TestExecutionContext ; <nl> 
new file <nl> ppp BaseEncodingBenchmark . java <nl> + package com . google . common . io ; <nl> + import com . google . caliper . BeforeExperiment ; <nl> + import com . google . caliper . Benchmark ; <nl> + import com . google . caliper . Param ; <nl> + import java . util . Random ; <nl> + public class BaseEncodingBenchmark { <nl> 
new file <nl> ppp ONetworkPropagateTest . java <nl> + package com . orientechnologies . orient . distributed . impl . coordinator . network ; <nl> + import com . orientechnologies . orient . core . db . config . ONodeIdentity ; <nl> + import com . orientechnologies . orient . distributed . impl . log . OLogId ; <nl> 
mmm YamlMasterSlaveRuleConfiguration . java <nl> ppp YamlMasterSlaveRuleConfiguration . java <nl> + import java . util . Properties ; <nl> 
mmm PicassoTestRunner . java <nl> ppp PicassoTestRunner . java <nl> - import java . io . File ; <nl> + import org . robolectric . res . FsFile ; <nl> - @ Override protected AndroidManifest createAppManifest ( File baseDir ) { <nl> + @ Override protected AndroidManifest createAppManifest ( FsFile manifestFile ) { <nl> 
mmm AndroidModule . java <nl> ppp AndroidModule . java <nl> 
new file <nl> ppp QueryConsumeQueueResponseBodyTest . java <nl> + package org . apache . rocketmq . common . protocol . body ; <nl> + import org . apache . rocketmq . common . protocol . heartbeat . SubscriptionData ; <nl> + import org . apache . rocketmq . remoting . protocol . RemotingSerializable ; <nl> 
new file <nl> ppp MasterSlaveEventBusInstance . java <nl> + package io . shardingsphere . jdbc . orchestration . internal . eventbus . jdbc . masterslave ; <nl> + import com . google . common . eventbus . EventBus ; <nl> + import lombok . AccessLevel ; <nl> + import lombok . NoArgsConstructor ; <nl> + @ NoArgsConstructor ( access = AccessLevel . PRIVATE ) <nl> 
mmm EnglishConfusionProbabilityRule . java <nl> ppp EnglishConfusionProbabilityRule . java <nl> + " your use case ", <nl> 
mmm CompositeImmutability . java <nl> ppp CompositeImmutability . java <nl> + import java . lang . reflect . Array ; <nl> + if ( object == null ) return true ; <nl> + if ( object . getClass () . isArray ()) { <nl> + return Array . getLength ( object ) == 0 ; <nl> + } <nl> 
mmm StatementUtil . java <nl> ppp StatementUtil . java <nl> - if ( transactionTimeout != null & & queryTimeout == null || queryTimeout == 0 || transactionTimeout < queryTimeout ) { <nl> + if ( transactionTimeout == null ) { <nl> + return ; <nl> + } <nl> + if ( queryTimeout == null || queryTimeout == 0 || transactionTimeout < queryTimeout ) { <nl> 
deleted file <nl> mmm AsyncTransportTest . java <nl> - package io . netty . channel ; <nl> - import java . net . InetSocketAddress ; <nl> - import io . netty . bootstrap . ServerBootstrap ; <nl> - import io . netty . buffer . ByteBuf ; <nl> - import io . netty . channel . ChannelFuture ; <nl> - import io . netty . channel . ChannelHandlerContext ; <nl> 
mmm EdgeTransformerTest . java <nl> ppp EdgeTransformerTest . java <nl> - public void testNotLightweightEdge () { <nl> - OETLProcessor proc = getProcessor ( <nl> - "{ source : { content : { value : ' name , surname , friend \ nJay , Miner , Luca ' } }, extractor : { row : {} }," <nl> - + " transformers : [{ csv : {}}, { vertex : { class :' V1 '}}, { edge :{ class :' Friend ', joinFieldName :' friend ', lookup :' V2 . name '}}," <nl> 
mmm ShadowLayoutParamsTest . java <nl> ppp ShadowLayoutParamsTest . java <nl> - assertThat ( layoutParams1 . width ) . isEqualTo ( 123 ); <nl> + assertThat ( layoutParams2 . width ) . isEqualTo ( 123 ); <nl> 
mmm NeedsPermission . java <nl> ppp NeedsPermission . java <nl> - int maxSdkVersion () default 0 ; <nl> 
mmm LicenseService . java <nl> ppp LicenseService . java <nl> - int getNumLicensesInstalled (); <nl> - boolean uninstallLicense (); <nl> - void setKey ( String key ); <nl> 
new file <nl> ppp MeasureDataTest . java <nl> + package org . sonar . api . database . model ; <nl> + import com . google . common . base . Charsets ; <nl> + import org . junit . Test ; <nl> + import static org . fest . assertions . Assertions . assertThat ; <nl> + public class MeasureDataTest { <nl> + @ Test <nl> 
mmm AuthPluginDataTest . java <nl> ppp AuthPluginDataTest . java <nl> + @ Test <nl> + public void testGetAuthPluginDataWithoutArguments () { <nl> + AuthPluginData authPluginData = new AuthPluginData (); <nl> + assertThat ( authPluginData . getAuthPluginData () . length , is ( 20 )); <nl> + } <nl> 
mmm GoImportOptimizerTest . java <nl> ppp GoImportOptimizerTest . java <nl> - public void testUnusedImportsWithSemicolon () { doTest (); } <nl> + public void testUnusedImportsWithSemicolon () { doTest (); } <nl> + public void testUnusedImplicitImports () { doTest (); } <nl> + public void testUsedImplicitImports () { doTest (); } <nl> 
new file <nl> ppp CreateModel . java <nl> + package com . example . sage ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . sagemaker . SageMakerClient ; <nl> + import software . amazon . awssdk . services . sagemaker . model . ContainerDefinition ; <nl> 
mmm RpcNettyConfiguration . java <nl> ppp RpcNettyConfiguration . java <nl> 
mmm FcmJobService . java <nl> ppp FcmJobService . java <nl> - import org . thoughtcrime . securesms . notifications . MessageNotifier ; <nl> + Log . i ( TAG , " Successfully retrieved messages . "); <nl> - Log . w ( TAG , " Failed to pull . Notifying and scheduling a retry . ", e ); <nl> - MessageNotifier . notifyMessagesPending ( getApplicationContext ()); <nl> 
new file <nl> ppp _ 1Test . java <nl> + package com . fishercoder ; <nl> + import com . fishercoder . solutions . _ 1 ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertArrayEquals ; <nl> + public class _ 1Test { <nl> + private static _ 1 . Solution1 solution1 ; <nl> 
mmm FakePlayerFactory . java <nl> ppp FakePlayerFactory . java <nl> 
mmm Keys . java <nl> ppp Keys . java <nl> - public static final ForeignKey < BookRecord , AuthorRecord > FK _ T _ BOOK _ AUTHOR _ ID = Internal . createForeignKey ( org . jooq . example . db . h2 . Keys . PK _ T _ AUTHOR , Book . BOOK , " FK _ T _ BOOK _ AUTHOR _ ID ", new TableField [] { Book . BOOK . AUTHOR _ ID }, true ); <nl> 
mmm CountingSort . java <nl> ppp CountingSort . java <nl> - int [] counts = new int [ maxValue + 1 ]; <nl> - int max = Integer . MIN _ VALUE ; <nl> 
new file <nl> ppp InsertAssistedColumnsToken . java <nl> + package org . apache . shardingsphere . core . parse . sql . token . impl ; <nl> + import lombok . EqualsAndHashCode ; <nl> + import lombok . Getter ; <nl> + import lombok . ToString ; <nl> + import org . apache . shardingsphere . core . parse . sql . token . Attachable ; <nl> 
mmm NetFlowV5PacketTest . java <nl> ppp NetFlowV5PacketTest . java <nl> + assertEquals ( 0 , flow2 . tos ); <nl> + assertEquals ("/ 10 . 0 . 2 . 15 ", flow2 . srcAddress . toString ()); <nl> + assertEquals ("/ 10 . 0 . 2 . 2 ", flow2 . dstAddress . toString ()); <nl> + assertEquals ("/ 0 . 0 . 0 . 0 ", flow2 . nextHop . get () . toString ()); <nl> 
mmm ThriftSolrTest . java <nl> ppp ThriftSolrTest . java <nl> - ? " target " : " titan - solr / target ", " cassandra ", " % s ", " localhost - rp "); <nl> + ? " target " : " titan - solr / target ", " cassandra ", " % s ", " localhost - murmur "); <nl> 
mmm Floor . java <nl> ppp Floor . java <nl> - writer . key (" description "); writer . value (" Returns the floor of a number "); <nl> + writer . key (" description "); writer . value (" Returns the floor of a number as an integer "); <nl> 
mmm ScriptVMMixin . java <nl> ppp ScriptVMMixin . java <nl> + if ( currentScript . getInstructions ()[ currentScriptPC ] != RUNELITE _ EXECUTE ) <nl> + { <nl> + throw new AssertionError (" currentScriptPC is wrong "); <nl> + } <nl> 
deleted file <nl> mmm CombinedDecoder . java <nl> - package io . undertow . websockets . jsr . annotated ; <nl> - import java . io . IOException ; <nl> - import java . nio . ByteBuffer ; <nl> - import java . util . List ; <nl> - import javax . websocket . DecodeException ; <nl> - import javax . websocket . Decoder ; <nl> 
new file <nl> ppp MessageListConfigDTO . java <nl> + package org . graylog . plugins . enterprise . search . views . widgets . messagelist ; <nl> + import com . fasterxml . jackson . annotation . JsonCreator ; <nl> + import com . fasterxml . jackson . annotation . JsonProperty ; <nl> + import com . fasterxml . jackson . annotation . JsonTypeName ; <nl> 
mmm NullAssignmentRule . java <nl> ppp NullAssignmentRule . java <nl> + import net . sourceforge . pmd . lang . java . ast . ASTBlockStatement ; <nl> + import net . sourceforge . pmd . lang . java . ast . ASTLambdaExpression ; <nl> + import net . sourceforge . pmd . lang . java . ast . ASTReturnStatement ; <nl> 
mmm DatabaseVersion . java <nl> ppp DatabaseVersion . java <nl> - public static final int LAST _ VERSION = 286 ; <nl> + public static final int LAST _ VERSION = 287 ; <nl> 
mmm GuavaListenableFutureSupport . java <nl> ppp GuavaListenableFutureSupport . java <nl> - import graphql . execution . instrumentation . NoOpInstrumentation ; <nl> + import graphql . execution . instrumentation . SimpleInstrumentation ; <nl> - import java . util . concurrent . Executors ; <nl> - return new NoOpInstrumentation () { <nl> 
mmm Query . java <nl> ppp Query . java <nl> - if ( this == obj ) <nl> - return true ; <nl> - if ( getClass () != obj . getClass ()) <nl> - return false ; <nl> - return true ; <nl> + return getClass () == obj . getClass (); <nl> 
mmm AutoFonProtocolDecoderTest . java <nl> ppp AutoFonProtocolDecoderTest . java <nl> - verifyNothing ( decoder , binary ( <nl> + verifyPosition ( decoder , binary ( <nl> 
mmm SurefirePlugin . java <nl> ppp SurefirePlugin . java <nl> + import java . io . File ; <nl> - new Object []{ basedir , includes , excludes } ); <nl> + new Object []{ new File ( basedir , " target / test - classes " ), includes , excludes } ); <nl> 
deleted file <nl> mmm SviasProtocol . java <nl> - package org . traccar . protocol ; <nl> - import org . jboss . netty . bootstrap . ServerBootstrap ; <nl> - import org . jboss . netty . channel . ChannelPipeline ; <nl> - import org . jboss . netty . handler . codec . string . StringDecoder ; <nl> - import org . jboss . netty . handler . codec . string . StringEncoder ; <nl> 
mmm Conditional . java <nl> ppp Conditional . java <nl> 
mmm Analyzer . java <nl> ppp Analyzer . java <nl> 
mmm MorfologikTagger . java <nl> ppp MorfologikTagger . java <nl> - public synchronized Dictionary getDictionary () throws IOException { <nl> + private synchronized Dictionary getDictionary () throws IOException { <nl> 
new file <nl> ppp ChipGroupTest . java <nl> + package com . google . android . material . chip ; <nl> + import com . google . android . material . R ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertNotEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> 
new file <nl> ppp SQLServerDatabaseMetaDataDialectHandlerTest . java <nl> + package org . apache . shardingsphere . infra . metadata . model . physical . jdbc . handler ; <nl> + import java . sql . SQLException ; <nl> + import org . apache . shardingsphere . infra . database . type . DatabaseType ; <nl> + import org . apache . shardingsphere . infra . database . type . dialect . SQLServerDatabaseType ; <nl> 
mmm HelloUdpServerExternalResource . java <nl> ppp HelloUdpServerExternalResource . java <nl> - protected void before () throws Throwable { <nl> - int port = choosePort (); <nl> - server = new HelloUdpServer ( port , timeout ) . createServer (); <nl> - } <nl> + int port ; <nl> + try { <nl> + port = choosePort (); <nl> 
mmm AddOrUpdateActionConfig . java <nl> ppp AddOrUpdateActionConfig . java <nl> - if (! key . matches ("( owner | group | mode )")) { <nl> + if (! key . matches ("( owner | group | mode | filename )")) { <nl> 
mmm SwingUIFacade . java <nl> ppp SwingUIFacade . java <nl> - " Area you sure you want to do this ?", <nl> + " Are you sure you want to do this ?", <nl> 
mmm MavenPluginCollector . java <nl> ppp MavenPluginCollector . java <nl> 
mmm KbsConstants . java <nl> ppp KbsConstants . java <nl> - import org . thoughtcrime . securesms . keyvalue . SignalStore ; <nl> - return SignalStore . kbsValues () . hasMigratedToPinsForAll () ? MINIMUM _ PIN _ LENGTH : LEGACY _ MINIMUM _ PIN _ LENGTH ; <nl> + return LEGACY _ MINIMUM _ PIN _ LENGTH ; <nl> 
mmm HelloAndroidActivity . java <nl> ppp HelloAndroidActivity . java <nl> - package com . googlecode . androidannotations . maveneclipse ; <nl> + package org . androidannotations . maveneclipse ; <nl> + import org . androidannotations . maveneclipse . R ; <nl> 
mmm FragmentedMp4ExtractorTest . java <nl> ppp FragmentedMp4ExtractorTest . java <nl> + @ Test <nl> + public void testSampleWithProtectedAc4Track () throws Exception { <nl> + ExtractorAsserts . assertBehavior ( <nl> + getExtractorFactory ( Collections . emptyList ()), " mp4 / sample _ ac4 _ protected . mp4 "); <nl> 
mmm SpectatorTimerTest . java <nl> ppp SpectatorTimerTest . java <nl> - AtlasMeterRegistry registry = new AtlasMeterRegistry ( new AtlasConfig () { <nl> - @ Override <nl> - public String get ( String k ) { <nl> - return null ; <nl> - } <nl> - @ Override <nl> - public Duration step () { <nl> - return Duration . ofSeconds ( 10 ); <nl> 
mmm JsonPOJOMapperTest . java <nl> ppp JsonPOJOMapperTest . java <nl> - Thread . currentThread () . setName (" vert . x - 1 "); <nl> 
mmm AddMembersSyncFlagToOrgAlmBinding . java <nl> ppp AddMembersSyncFlagToOrgAlmBinding . java <nl> + import org . sonar . server . platform . db . migration . SupportsBlueGreen ; <nl> + @ SupportsBlueGreen <nl> 
mmm ODatabaseScriptManager . java <nl> ppp ODatabaseScriptManager . java <nl> + if ( iKey . equals (" sql ")) { <nl> + if (! iKey . equals ( iValue . getFactory () . getLanguageName ())) <nl> + return false ; <nl> + } else { <nl> + if (( iValue . getFactory () . getLanguageName ()) . equals (" sql ")) <nl> 
mmm EasyLoggerTest . java <nl> ppp EasyLoggerTest . java <nl> - logger . debug ("$$$$"); <nl> - logger . debug (" hello {}", "$$$$"); <nl> + logger . debug ("$^!@ # *()"); <nl> + logger . debug (" hello {}", "!@ # $ % ^ & *(), . /[]:;"); <nl> 
mmm OErrorCode . java <nl> ppp OErrorCode . java <nl> + import com . orientechnologies . common . log . OLogManager ; <nl> - throw exceptionClass . getConstructor ( String . class , Exception . class ) . newInstance ( fullMessage , parent ); <nl> + OException exc = OException . wrapException ( exceptionClass . getConstructor ( String . class ) . newInstance ( message ), parent ); <nl> 
mmm ProjectSearchResultViewHolder . java <nl> ppp ProjectSearchResultViewHolder . java <nl> - void projectSearchResultClick (@ NonNull final ProjectSearchResultViewHolder viewHolder , @ NonNull final Project project ); <nl> + void projectSearchResultClick ( ProjectSearchResultViewHolder viewHolder , Project project ); <nl> 
mmm OrderAggregateUnitTest . java <nl> ppp OrderAggregateUnitTest . java <nl> + import com . baeldung . axon . coreapi . exceptions . UnconfirmedOrderException ; <nl> - public void givenOrderPlacedEvent _ whenShipOrderCommand _ thenShouldThrowIllegalStateException () { <nl> + public void givenOrderPlacedEvent _ whenShipOrderCommand _ thenShouldThrowUnconfirmedOrderException () { <nl> 
deleted file <nl> mmm Boat . java <nl> - package com . baeldung . beaninjectiontypes ; <nl> - import org . springframework . beans . factory . annotation . Autowired ; <nl> - import org . springframework . stereotype . Component ; <nl> - @ Component <nl> - public class Boat { <nl> - private Engine engine ; <nl> 
mmm Testable . java <nl> ppp Testable . java <nl> - * < p > In this context , the term " testable " means that the annotated method or <nl> - * class can be executed by a {@ code TestEngine } as a test or test container <nl> + * < p > In this context , the term " testable " means that the annotated method , field , <nl> 
mmm TextInputLayoutPseudoLocaleTest . java <nl> ppp TextInputLayoutPseudoLocaleTest . java <nl> + import android . annotation . TargetApi ; <nl> + @ TargetApi ( 17 ) <nl> 
mmm NotificationQueueDaoTest . java <nl> ppp NotificationQueueDaoTest . java <nl> - checkTables (" should _ insert _ new _ notification _ queue ", new String [] {" id "}, " notifications "); <nl> + assertThat ( dao . count ()) . isEqualTo ( 1 ); <nl> 
new file <nl> ppp RefDocExamples . java <nl> + package com . tightdb . refdoc ; <nl> + public class RefDocExamples { <nl> + public static void main ( String [] args ) { <nl> + System . out . println (" - - - - - - Running all reference documentation examples . - - - - - - "); <nl> + try { <nl> + TypedTableIntro . main ( null ); <nl> 
mmm AppendCharacterWithCharRule . java <nl> ppp AppendCharacterWithCharRule . java <nl> + import net . sourceforge . pmd . lang . java . ast . ASTPrimaryExpression ; <nl> + import net . sourceforge . pmd . lang . java . ast . ASTPrimarySuffix ; <nl> 
new file <nl> ppp SchemaSerializationTest . java <nl> + package org . openrefine . wikidata . schema ; <nl> + import java . io . IOException ; <nl> + import java . nio . file . Files ; <nl> + import java . nio . file . Paths ; <nl> + import org . json . JSONException ; <nl> + import org . json . JSONObject ; <nl> 
mmm LoggingExceptionMapper . java <nl> ppp LoggingExceptionMapper . java <nl> - final long id = logException ( id , exception ); <nl> + final long id = logException ( exception ); <nl> 
new file <nl> ppp HashCodeTest . java <nl> + package jodd . util ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + public class HashCodeTest { <nl> + @ Test <nl> + public void testhashCode () { <nl> + int hash = HashCode . hash ( 0 , " Hey "); <nl> + hash = HashCode . hash ( hash , 1 ); <nl> 
mmm JSONObectNullTest . java <nl> ppp JSONObectNullTest . java <nl> + public void test _ for _ null2 () throws Exception { <nl> + JSON . parseObject (" null "); <nl> + } <nl> 
new file <nl> ppp DescribeAccountAttributes . java <nl> + package com . example . rds ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . rds . RdsClient ; <nl> + import software . amazon . awssdk . services . rds . model . AccountQuota ; <nl> 
mmm PropertyFilter . java <nl> ppp PropertyFilter . java <nl> - * @ return true if the property will be filtered out , false otherwise <nl> + * @ return true if the property will be included , false if to be filtered out <nl> 
mmm AuthenticationPayloadExchangeConverter . java <nl> ppp AuthenticationPayloadExchangeConverter . java <nl> - import io . rsocket . metadata . WellKnownMimeType ; <nl> - import io . rsocket . metadata . security . WellKnownAuthType ; <nl> + import io . rsocket . metadata . WellKnownAuthType ; <nl> + import io . rsocket . metadata . WellKnownMimeType ; <nl> 
mmm Application . java <nl> ppp Application . java <nl> + import org . activiti . configuration . ActivitiRuntimeBundle ; <nl> - @ EnableBinding ( ProcessEngineChannels . class ) <nl> - @ ComponentScan (" org . activiti ") <nl> - @ EnableDiscoveryClient <nl> + @ ActivitiRuntimeBundle <nl> 
mmm Share . java <nl> ppp Share . java <nl> + call . success (); <nl> 
mmm CronetHttpStackTest . java <nl> ppp CronetHttpStackTest . java <nl> - package com . android . volley . toolbox ; <nl> + package com . android . volley . cronet ; <nl> - import com . android . volley . cronet . *; <nl> - import com . android . volley . cronet . CronetHttpStack ; <nl> - public class CronetStackTest { <nl> 
mmm JavaSymbolFinderIntegrationTest . java <nl> ppp JavaSymbolFinderIntegrationTest . java <nl> 
mmm HttpsSslContextParametersGetTest . java <nl> ppp HttpsSslContextParametersGetTest . java <nl> - import org . apache . camel . impl . JndiRegistry ; <nl> - import org . apache . camel . support . jsse . SSLContextParameters ; <nl> - @ Override <nl> - protected JndiRegistry createRegistry () throws Exception { <nl> 
mmm AbstractEtcdEndpoint . java <nl> ppp AbstractEtcdEndpoint . java <nl> - @ UriPath ( label = " common ", description = " The path the endpoint refers to ") <nl> + @ UriPath ( label = " common ", description = " The path the endpoint refers to ") <nl> 
mmm UtilsController . java <nl> ppp UtilsController . java <nl> - model . addAttribute (" parameter ", " You set : " + ( String ) WebUtils . getSessionAttribute ( request , " parameter ")); <nl> + model . addAttribute (" parameter ", " You set : " + ( String ) WebUtils . getSessionAttribute ( request , " parameter ")); <nl> 
mmm MainApplication . java <nl> ppp MainApplication . java <nl> - @ Command ( name = " OhMyAgent ", mixinStandardHelpOptions = true , version = " 1 . 2 . 0 ", description = " OhMyScheduler - Worker 代理 ") <nl> + @ Command ( name = " OhMyAgent ", mixinStandardHelpOptions = true , version = " 1 . 2 . 0 ", description = " OhMyScheduler - Worker agent ") <nl> 
mmm CSVResultRestExecutor . java <nl> ppp CSVResultRestExecutor . java <nl> - String separator = params . getOrDefault (" separator ",","); <nl> + String separator = ","; <nl> + if ( params . containsKey (" separator ")){ <nl> + separator = params . get (" separator "); <nl> + } <nl> - String newLine = params . getOrDefault (" newLine ","\ n "); <nl> 
mmm MeasureDtoToWsMeasure . java <nl> ppp MeasureDtoToWsMeasure . java <nl> + import static java . lang . Double . compare ; <nl> - ofNullable ( bestValue ) . ifPresent ( v - > measureBuilder . setBestValue ( doubleValue == v )); <nl> + ofNullable ( bestValue ) . ifPresent ( v - > measureBuilder . setBestValue ( compare ( doubleValue , v ) == 0 )); <nl> 
mmm RegexMatching . java <nl> ppp RegexMatching . java <nl> 
mmm ListUtil . java <nl> ppp ListUtil . java <nl> + public static < From , To > LinkedList < To > convert ( Collection < From > collection , Converter < From , To > converter ) { <nl> + LinkedList < To > converted = new LinkedList < To >(); <nl> + for ( From f : collection ) { <nl> + converted . add ( converter . convert ( f )); <nl> 
mmm TestItem . java <nl> ppp TestItem . java <nl> + import com . facebook . proguard . annotations . DoNotStrip ; <nl> + @ DoNotStrip <nl> + @ DoNotStrip <nl> + @ DoNotStrip <nl> + @ DoNotStrip <nl> + @ DoNotStrip <nl> 
mmm ClientThread . java <nl> ppp ClientThread . java <nl> + import java . util . function . BooleanSupplier ; <nl> - private ConcurrentLinkedQueue < Runnable > invokes = new ConcurrentLinkedQueue <>(); <nl> + private ConcurrentLinkedQueue < BooleanSupplier > invokes = new ConcurrentLinkedQueue <>(); <nl> 
mmm NodeWithVariables . java <nl> ppp NodeWithVariables . java <nl> + default Type getMinimumCommonType () { <nl> + return getVariables () . stream () . map ( v - > v . getType ()) <nl> + . sorted (( Comparator < Type <?>>) ( a , b ) - > a . getArrayLevel () - b . getArrayLevel ()) <nl> + . findFirst () <nl> 
mmm _ 236 . java <nl> ppp _ 236 . java <nl> + For example , the lowest common ancestor ( LCA ) of nodes 5 and 1 is 3 . <nl> + Another example is LCA of nodes 5 and 4 is 5 , since a node can be a descendant of itself according to the LCA definition . */ <nl> - if ( root == null || root == p || root == q ) return root ; <nl> 
mmm BasicAccountService . java <nl> ppp BasicAccountService . java <nl> + if ( account == null ) { <nl> + account = accountsById . get ( accountName ); <nl> + } <nl> 
mmm DateTimeUtilsTests . java <nl> ppp DateTimeUtilsTests . java <nl> + import java . time . Clock ; <nl> + import java . time . Instant ; <nl> + assertNotNull ( DateTimeUtils . dateTimeOf ( Instant . now ( Clock . systemUTC ()))); <nl> + assertNotNull ( DateTimeUtils . dateTimeOf ( ZonedDateTime . now ( ZoneOffset . UTC ))); <nl> 
mmm CoNLLUReaderITest . java <nl> ppp CoNLLUReaderITest . java <nl> - public String examplePath = "/ u / nlp / data / stanford - corenlp / test / data / conllu / es - example . conllu "; <nl> + public String examplePath = "/ u / nlp / data / stanford - corenlp - testing / data / conllu / es - example . conllu "; <nl> 
mmm PublicationLink . java <nl> ppp PublicationLink . java <nl> - private final NetworkPublication networkPublication ; <nl> - private final IpcPublication ipcPublication ; <nl> + private final Object publication ; <nl> - this . networkPublication = publication ; <nl> - this . ipcPublication = null ; <nl> + this . publication = publication ; <nl> 
mmm ComponentClickListener . java <nl> ppp ComponentClickListener . java <nl> - dispatchOnClick ( mEventHandler , view ); <nl> + final boolean isTracing = ComponentsSystrace . isTracing (); <nl> + if ( isTracing ) { <nl> + String componentClassName = ""; <nl> + if ( mEventHandler . mHasEventDispatcher != null ) { <nl> 
mmm MetricsRestTemplateCustomizerTest . java <nl> ppp MetricsRestTemplateCustomizerTest . java <nl> + import java . net . URI ; <nl> + import java . net . URISyntaxException ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + @ Test <nl> + public void interceptRestTemplateWithUri () throws URISyntaxException { <nl> 
mmm Namespace . java <nl> ppp Namespace . java <nl> 
new file <nl> ppp DB2SelectTest _ 9 . java <nl> + package com . alibaba . druid . bvt . sql . db2 ; <nl> + import java . util . List ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . druid . sql . DB2Test ; <nl> + import com . alibaba . druid . sql . SQLUtils ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> 
mmm UserDetailsServiceImpl . java <nl> ppp UserDetailsServiceImpl . java <nl> + import me . zhengjie . exception . EntityNotFoundException ; <nl> - import me . zhengjie . modules . system . service . dto . *; <nl> + import me . zhengjie . modules . system . service . dto . UserDto ; <nl> + import org . springframework . security . core . userdetails . UsernameNotFoundException ; <nl> 
mmm ParameterizedFeatureNode . java <nl> ppp ParameterizedFeatureNode . java <nl> + throw new SpockExecutionException (" Data provider has no data "); <nl> 
new file <nl> ppp BaseRequestListener2 . java <nl> + package com . facebook . imagepipeline . listener ; <nl> + import androidx . annotation . NonNull ; <nl> + import com . facebook . imagepipeline . producers . ProducerContext ; <nl> + import java . util . Map ; <nl> + import javax . annotation . Nullable ; <nl> 
mmm SjmsComponentRestartTest . java <nl> ppp SjmsComponentRestartTest . java <nl> - import org . apache . camel . impl . JndiRegistry ; <nl> 
mmm Logger . java <nl> ppp Logger . java <nl> - int length = message . length (); <nl> + int length = message != null ? message . length () : 0 ; <nl> + if ( length == 0 & & throwable == null ) { <nl> + return ; <nl> + } <nl> 
mmm FriendlyCardView . java <nl> ppp FriendlyCardView . java <nl> + import android . content . res . Resources ; <nl> + import me . zhanghai . android . douya . util . ViewUtils ; <nl> 
mmm Sakila . java <nl> ppp Sakila . java <nl> - import org . jooq . examples . mysql . sakila . SakilaFactory ; <nl> + import org . jooq . util . mysql . MySQLFactory ; <nl> - Factory create = new SakilaFactory ( connection ); <nl> + Factory create = new MySQLFactory ( connection ); <nl> 
mmm UniformSample . java <nl> ppp UniformSample . java <nl> - final int s = ( int ) size (); <nl> + final int s = size (); <nl> 
mmm DefaultEventExecutorChooserFactory . java <nl> ppp DefaultEventExecutorChooserFactory . java <nl> - return new PowerOfTowEventExecutorChooser ( executors ); <nl> + return new PowerOfTwoEventExecutorChooser ( executors ); <nl> - private static final class PowerOfTowEventExecutorChooser implements EventExecutorChooser { <nl> 
mmm BrowserWebDriverContainer . java <nl> ppp BrowserWebDriverContainer . java <nl> + import java . util . Optional ; <nl> 
mmm Slf4jLogConsumer . java <nl> ppp Slf4jLogConsumer . java <nl> + private String prefix = ""; <nl> + public Slf4jLogConsumer withPrefix ( String prefix ) { <nl> + this . prefix = "[" + prefix + "] "; <nl> + return this ; <nl> + } <nl> - logger . info ("{}: {}", outputFrame . getType (), outputFrame . getUtf8String ()); <nl> 
mmm SerialSubscription . java <nl> ppp SerialSubscription . java <nl> + import java . util . concurrent . locks . Lock ; <nl> + import java . util . concurrent . locks . ReadWriteLock ; <nl> + import java . util . concurrent . locks . ReentrantReadWriteLock ; <nl> - private final AtomicBoolean unsubscribed = new AtomicBoolean (); <nl> 
deleted file <nl> mmm PlaceholderComponent . java <nl> - package com . facebook . litho ; <nl> - class PlaceholderComponent extends Component { <nl> - protected PlaceholderComponent () { <nl> - super (" PlaceholderComponent "); <nl> - } <nl> - public static PlaceholderComponent createAndBuild () { <nl> - return new PlaceholderComponent (); <nl> 
mmm BuckLiveTemplatesProvider . java <nl> ppp BuckLiveTemplatesProvider . java <nl> - return new String [] {"/ liveTemplates / Buck . xml "}; <nl> + return new String [] {"/ liveTemplates / Buck "}; <nl> 
new file <nl> ppp ShadowButton . java <nl> + package com . xtremelabs . robolectric . shadows ; <nl> + public class ShadowButton extends ShadowTextView { <nl> + @ Override <nl> + public void applyAttributes () { <nl> + super . applyAttributes (); <nl> + if ( getBackground () == null ) { <nl> + setBackgroundColor ( android . R . color . transparent ); <nl> 
mmm DatabaseHintSQLRouterTest . java <nl> ppp DatabaseHintSQLRouterTest . java <nl> - public void setRouteRuleContext () { <nl> + public void setRouterContext () { <nl> 
mmm TestCorePropertiesReload . java <nl> ppp TestCorePropertiesReload . java <nl> - import java . io . FileWriter ; <nl> + import java . io . FileOutputStream ; <nl> + import java . io . OutputStreamWriter ; <nl> + import java . io . BufferedWriter ; <nl> + import java . io . Writer ; <nl> - import org . junit . BeforeClass ; <nl> 
mmm AppModule . java <nl> ppp AppModule . java <nl> + configuration . add ( SymbolConstants . INCLUDE _ CORE _ STACK , false ); <nl> - public void contributeMarkupRenderer ( OrderedConfiguration < MarkupRendererFilter > configuration ){ <nl> - configuration . override (" InjectDefaultStylesheet ", new MarkupRendererFilter () { <nl> 
mmm TestShaderNodes . java <nl> ppp TestShaderNodes . java <nl> + for ( Shader . ShaderSource shaderSource : t . getDef () . getShader ( assetManager , renderer . getCaps (), t . getDynamicDefines ()) . getSources ()) { <nl> + System . out . println ( shaderSource . getSource ()); <nl> + } <nl> 
mmm ListenableFutureTest . java <nl> ppp ListenableFutureTest . java <nl> 
mmm WellBehavedMap . java <nl> ppp WellBehavedMap . java <nl> + import org . checkerframework . checker . nullness . compatqual . MonotonicNonNullDecl ; <nl> 
mmm BlowfishTupleSerializer . java <nl> ppp BlowfishTupleSerializer . java <nl> - private static final Logger LOG = Logger . getLogger ( BlowfishSerializer . class ); <nl> + private static final Logger LOG = Logger . getLogger ( BlowfishTupleSerializer . class ); <nl> - LOG . error (" Encryption key not specified "); <nl> 
mmm DataServer . java <nl> ppp DataServer . java <nl> - for ( int i = 1 ; i <= 102 ; i + + ) { <nl> + for ( int i = 0 ; i < 100 ; i + + ) { <nl> 
mmm AuthorizationServerClientCredentialsPasswordValidXmlTests . java <nl> ppp AuthorizationServerClientCredentialsPasswordValidXmlTests . java <nl> - private static final String CLIENT _ SECRET = " secret "; <nl> 
mmm Chat . java <nl> ppp Chat . java <nl> - import org . atmosphere . config . service . AtmosphereHandlerService ; <nl> + import org . atmosphere . config . service . ManagedService ; <nl> + import org . atmosphere . config . service . Message ; <nl> - import org . atmosphere . interceptor . AtmosphereResourceLifecycleInterceptor ; <nl> 
new file <nl> ppp GoClientExperimentalCodegen . java <nl> + package org . openapitools . codegen . languages ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + public class GoClientExperimentalCodegen extends GoClientCodegen { <nl> + private static final Logger LOGGER = LoggerFactory . getLogger ( GoClientExperimentalCodegen . class ); <nl> 
mmm StreamsApiController . java <nl> ppp StreamsApiController . java <nl> + import com . google . common . collect . Lists ; <nl> + import controllers . SearchControllerV2 ; <nl> + import org . graylog2 . restclient . models . Stream ; <nl> + import java . util . List ; <nl> + public Result listStreams () { <nl> 
mmm AccountTypeUtils . java <nl> ppp AccountTypeUtils . java <nl> - public static String getAuthTokenTypePass ( String baseAuthTokenType ) { <nl> + public static String getAuthTokenTypePass ( String accountType ) { <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 11 . 7 "; <nl> + public static final String VERSION = " 2 . 12 . 0 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 11 . 7 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 12 . 0 "; <nl> 
mmm IntegrateSupportedSQLParsingTest . java <nl> ppp IntegrateSupportedSQLParsingTest . java <nl> + sqlCasesLoader . switchSQLCase (" sql "); <nl> + parserResultSetLoader . switchResult (" parser "); <nl> 
deleted file <nl> mmm PDFSampleMain . java <nl> - package com . baeldung . pdf ; <nl> - import java . io . FileOutputStream ; <nl> - import java . io . IOException ; <nl> - import java . net . URISyntaxException ; <nl> - import java . nio . file . Path ; <nl> - import java . nio . file . Paths ; <nl> - import java . util . stream . Stream ; <nl> 
mmm CSVTransformerTest . java <nl> ppp CSVTransformerTest . java <nl> + import java . util . List ; <nl> 
mmm MiscFormatterTest . java <nl> ppp MiscFormatterTest . java <nl> - position . set (" c ", 3 . 555 ); <nl> - assertEquals ( position . getOther (), "< info >< a > 3 </ a >< b > 2 </ b >< c > 3 . 56 </ c ></ info >"); <nl> + assertEquals ("< info >< a > 3 </ a >< b > 2 </ b ></ info >", position . getOther ()); <nl> 
mmm SocketEvent . java <nl> ppp SocketEvent . java <nl> - OPEN _ READ , OPEN _ WRITE , STOP , TIMEOUT , DISCONNECT , ERROR , ASYNC _ WRITE _ ERROR , ASYNC _ READ _ ERROR , CLOSE _ NOW <nl> + OPEN _ READ , <nl> + OPEN _ WRITE , <nl> + STOP , <nl> + TIMEOUT , <nl> + DISCONNECT , <nl> + ERROR , <nl> + ASYNC _ WRITE _ ERROR , <nl> 
mmm CatalanSentenceTokenizerTest . java <nl> ppp CatalanSentenceTokenizerTest . java <nl> + testSplit ( new String [] { " el vi no é s gens propi de monjos , amb tot . . . \" vetllant , aix ò s í" }); <nl> 
mmm RemoteIdmAuthenticationProvider . java <nl> ppp RemoteIdmAuthenticationProvider . java <nl> + org . flowable . engine . impl . identity . Authentication . setAuthenticatedUserId ( user . getId ()); <nl> 
mmm GraphQLScriptTest . java <nl> ppp GraphQLScriptTest . java <nl> + typeRegistry . merge ( schemaParser . parse ( loadSchema (" config . graphqls "))); <nl> 
mmm OmsBannerPrinter . java <nl> ppp OmsBannerPrinter . java <nl> - private static final String BANNER = "\ n ███████ ██ ██ \ n " + <nl> - "░██░░░░██ ░██ ░██ \ n " + <nl> - "░██ ░██ ██████ ███ ██ █████ ██████ ░██ ██████ ░██ \ n " + <nl> - "░███████ ██░░░░██░░██ █ ░██ ██░░░██░░██░░█ ░██ ██░░░░██░██████ \ n " + <nl> 
mmm Binder . java <nl> ppp Binder . java <nl> - class TableBindingVisitor extends DefaultTraversalVisitor < Object , BindingContext > { <nl> + static class TableBindingVisitor extends DefaultTraversalVisitor < Object , BindingContext > { <nl> - class DataTypeGatherer extends DefaultTraversalVisitor < DataType , BindingContext > { <nl> 
mmm CommonPools . java <nl> ppp CommonPools . java <nl> 
mmm TableTokenAssert . java <nl> ppp TableTokenAssert . java <nl> - assertThat ( assertMessage . getFullAssertMessage (" Table tokens begin position assertion error : "), actual . getStartIndex (), is ( expected . getBeginPosition ())); <nl> + assertThat ( assertMessage . getFullAssertMessage (" Table tokens start index assertion error : "), actual . getStartIndex (), is ( expected . getStartIndex ())); <nl> 
mmm AnimationRunnerTestRule . java <nl> ppp AnimationRunnerTestRule . java <nl> + public static final int FRAME _ TIME _ MS = MockTimingSource . FRAME _ TIME _ MS ; <nl> 
mmm SRXSentenceTokenizerTest . java <nl> ppp SRXSentenceTokenizerTest . java <nl> + int count = 0 ; <nl> - if ( language . getShortName () . equals (" km ") || language . getShortName () . equals (" ml ") || language . getShortName () . equals (" pt ")) { <nl> + if ( language . getShortName () . equals (" km ") || language . getShortName () . equals (" ml ")) { <nl> 
new file <nl> ppp AuthenticationOrchestrationListenerTest . java <nl> + package io . shardingsphere . orchestration . internal . config . listener ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + public class AuthenticationOrchestrationListenerTest { <nl> + @ Before <nl> + public void setUp () { <nl> 
new file <nl> ppp ProjectBadgesWsTest . java <nl> + package org . sonar . server . badge . ws ; <nl> + import java . util . Collections ; <nl> + import org . junit . Test ; <nl> + import org . sonar . api . server . ws . Request ; <nl> + import org . sonar . api . server . ws . Response ; <nl> + import org . sonar . api . server . ws . WebService ; <nl> 
mmm SQLKeep . java <nl> ppp SQLKeep . java <nl> 
mmm HikariCPCollectorTest . java <nl> ppp HikariCPCollectorTest . java <nl> - try ( HikariDataSource ds = new HikariDataSource ( config ); <nl> - Connection connection1 = ds . getConnection ()) { <nl> + try ( HikariDataSource ds = new HikariDataSource ( config )) { <nl> + try ( Connection connection1 = ds . getConnection ()) { <nl> 
mmm GreetingTest . java <nl> ppp GreetingTest . java <nl> - . contentType (" text / plain ") <nl> - . body ( equalTo (" hello funqy ")); <nl> + . contentType (" application / json ") <nl> + . body ( equalTo ("\" hello funqy \"")); <nl> 
deleted file <nl> mmm SpdyAprNpnHandler . java <nl> - package org . apache . coyote . spdy ; <nl> - import java . io . IOException ; <nl> - import org . apache . coyote . Adapter ; <nl> - import org . apache . coyote . http11 . NpnHandler ; <nl> - import org . apache . juli . logging . Log ; <nl> - import org . apache . juli . logging . LogFactory ; <nl> 
mmm MySQLPacketCodecEngineTest . java <nl> ppp MySQLPacketCodecEngineTest . java <nl> + @ Test <nl> + public void assertCreatePacketPayload () { <nl> + assertThat ( new MySQLPacketCodecEngine () . createPacketPayload ( byteBuf ) . getByteBuf (), is ( byteBuf )); <nl> + } <nl> 
mmm ChatAtmosphereHandler . java <nl> ppp ChatAtmosphereHandler . java <nl> + import org . atmosphere . websocket . WebSocketEventListenerAdapter ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> - @ ManagedService ( path = "/ chat ") <nl> + @ ManagedService ( path = "/ chat ", listeners = { ChatAtmosphereHandler . WebSocketEventListener . class }) <nl> 
new file <nl> ppp Issue1367 _ jaxrs . java <nl> + package com . alibaba . json . bvt . issue _ 1300 ; <nl> + import com . alibaba . fastjson . support . jaxrs . FastJsonProvider ; <nl> + import org . glassfish . jersey . client . ClientConfig ; <nl> + import org . glassfish . jersey . server . ResourceConfig ; <nl> 
mmm TaxonomyMergeUtils . java <nl> ppp TaxonomyMergeUtils . java <nl> - * {@ link # merge ( Directory , Directory , OrdinalMap , IndexWriter , LuceneTaxonomyWriter )} <nl> + * {@ link # merge ( Directory , Directory , LuceneTaxonomyWriter . OrdinalMap , IndexWriter , LuceneTaxonomyWriter )} <nl> - * @ see # merge ( Directory , Directory , OrdinalMap , IndexWriter , LuceneTaxonomyWriter ) <nl> 
mmm AuthorizationRequestRepository . java <nl> ppp AuthorizationRequestRepository . java <nl> + @ Deprecated <nl> 
mmm SmallIntType . java <nl> ppp SmallIntType . java <nl> - if (( database instanceof AbstractDb2Database ) || ( database instanceof DerbyDatabase ) || ( database instanceof <nl> - FirebirdDatabase ) || ( database instanceof InformixDatabase )) { <nl> + if (( database instanceof AbstractDb2Database ) || <nl> 
new file <nl> ppp FluxMerge . java <nl> + package reactor . core . publisher ; <nl> + import java . util . Objects ; <nl> + import java . util . Queue ; <nl> + import java . util . function . Function ; <nl> + import java . util . function . Supplier ; <nl> + import org . reactivestreams . Publisher ; <nl> + import org . reactivestreams . Subscriber ; <nl> 
mmm ClusteredEventBusWithSSLTest . java <nl> ppp ClusteredEventBusWithSSLTest . java <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> 
mmm DemoApplication . java <nl> ppp DemoApplication . java <nl> + import android . os . Build ; <nl> - refWatcher = LeakCanary . install ( this ); <nl> + if ( BuildConfig . DEBUG ) <nl> + refWatcher = LeakCanary . install ( this ); <nl> 
mmm FieldTypesLookupTest . java <nl> ppp FieldTypesLookupTest . java <nl> 
mmm GoogleDocClient . java <nl> ppp GoogleDocClient . java <nl> + textarea . positionCaret ( newMessage . length ()); <nl> 
mmm RuleProperty . java <nl> ppp RuleProperty . java <nl> 
mmm TransferService . java <nl> ppp TransferService . java <nl> - private static final int DEFAULT _ SERVICE _ PORT = 34000 ; <nl> - if ( port < 0 & & port > 65535 ) { <nl> - port = DEFAULT _ SERVICE _ PORT ; <nl> - } <nl> 
mmm MessageSecurityExpressionRoot . java <nl> ppp MessageSecurityExpressionRoot . java <nl> - final class MessageSecurityExpressionRoot extends SecurityExpressionRoot { <nl> + public final class MessageSecurityExpressionRoot extends SecurityExpressionRoot { <nl> 
mmm TableRuleConfiguration . java <nl> ppp TableRuleConfiguration . java <nl> - private String keyGeneratorColumnName ; <nl> 
mmm JvmThreadMetrics . java <nl> ppp JvmThreadMetrics . java <nl> - . description (" the peak live thread count since the Java virtual machine started or peak was reset ") <nl> + . description (" The peak live thread count since the Java virtual machine started or peak was reset ") <nl> 
mmm ConfigurationUtils . java <nl> ppp ConfigurationUtils . java <nl> - import org . apache . jmeter . report . core . ArgumentNullException ; <nl> 
mmm RlpEncoderTest . java <nl> ppp RlpEncoderTest . java <nl> 
mmm CommonParamsTest . java <nl> ppp CommonParamsTest . java <nl> - public void testStart () { assertEquals ( CommonParams . START , " start "); } <nl> - public void testStartDefault () { assertEquals ( CommonParams . START _ DEFAULT , 0 ); } <nl> + public void testStart () { assertEquals (" start ", CommonParams . START ); } <nl> 
mmm AESShardingEncryptorTest . java <nl> ppp AESShardingEncryptorTest . java <nl> + import org . junit . Before ; <nl> + @ Before <nl> + public void setUp () { <nl> + Properties properties = new Properties (); <nl> + properties . setProperty (" aes . key . value ", " test "); <nl> + encryptor . setProperties ( properties ); <nl> 
mmm WebMvcConfig . java <nl> ppp WebMvcConfig . java <nl> + @ EnableWebMvc <nl> 
mmm ToolBootstrap . java <nl> ppp ToolBootstrap . java <nl> 
mmm Test2BDocValues . java <nl> ppp Test2BDocValues . java <nl> - @ Ignore (" probably very slow ") <nl> + @ Ignore (" takes ~ 30 minutes ") <nl> 
mmm SpringBootAdminClientAutoConfiguration . java <nl> ppp SpringBootAdminClientAutoConfiguration . java <nl> + @ ConditionalOnProperty (" spring . boot . admin . url ") <nl> - @ ConditionalOnProperty (" spring . boot . admin . url ") <nl> 
new file <nl> ppp ShortListDSLV . java <nl> + package com . mobeta . android . demodslv ; <nl> + import java . util . Arrays ; <nl> + import java . util . ArrayList ; <nl> + import android . app . ListActivity ; <nl> + import android . os . Bundle ; <nl> + import android . widget . ArrayAdapter ; <nl> + import com . mobeta . android . dslv . DragSortListView ; <nl> 
mmm MyItemReader . java <nl> ppp MyItemReader . java <nl> - tokens = new StringTokenizer ( builder . toString (), ","); <nl> + tokens = new StringTokenizer ( builder . toString (), ","); <nl> - System . out . format (" readItem ( % d ): % d ", context . getExecutionId (), Integer . valueOf ( tokens . nextToken ())); <nl> 
mmm TypesafeMap . java <nl> ppp TypesafeMap . java <nl> 
mmm HikariMBeanElf . java <nl> ppp HikariMBeanElf . java <nl> - ObjectName poolName = new ObjectName (" com . zaxxer . hikari . pool : type = Pool (" + configuration . getPoolName () + ")"); <nl> + ObjectName poolName = new ObjectName (" com . zaxxer . hikari : type = Pool (" + configuration . getPoolName () + ")"); <nl> 

mmm StatusCode . java <nl> ppp StatusCode . java <nl> - NOT _ RECEIVED , IN _ PORT , ONBOARD _ CARRIER , CLAIMED <nl> + NOT _ RECEIVED , IN _ PORT , ONBOARD _ CARRIER , CLAIMED , UNKNOWN <nl> 
mmm PullRequestReview . java <nl> ppp PullRequestReview . java <nl> + @ Nullable <nl> - public void setResult ( ReviewResult result ) { <nl> + public void setResult (@ Nullable ReviewResult result ) { <nl> 
new file <nl> ppp MainActivity . java <nl> + package com . orhanobut . benchmark ; <nl> + import android . app . Activity ; <nl> + import android . os . Bundle ; <nl> + import android . util . Log ; <nl> + import com . orhanobut . hawk . Hawk ; <nl> + import com . orhanobut . hawk . LogInterceptor ; <nl> + public class MainActivity extends Activity { <nl> 
mmm GeodeBackend . java <nl> ppp GeodeBackend . java <nl> - import org . immutables . criteria . internal . Query ; <nl> - public class GeodeBackend < T > implements Backend { <nl> + public class GeodeBackend implements Backend { <nl> - this . region = Objects . requireNonNull ( region , " cache is null "); <nl> 
mmm ConcurrentLinkedHashMapTest . java <nl> ppp ConcurrentLinkedHashMapTest . java <nl> - final int threadNum = 20 ; <nl> + final int threadNum = 5 ; <nl> - Thread . sleep ( 100 ); <nl> + Thread . sleep ( 300 ); <nl> - Thread . sleep ( 30 ); <nl> + Thread . sleep ( 50 ); <nl> - Thread . sleep ( 60 ); <nl> + Thread . sleep ( 150 ); <nl> 
mmm ClusterInitializationIntegrationTest . java <nl> ppp ClusterInitializationIntegrationTest . java <nl> + import static org . junit . Assert . assertEquals ; <nl> - import org . junit . Assert ; <nl> - Assert . assertEquals ( SUPER _ USER , status . getOwner ()); <nl> - Assert . assertEquals ( 0755 , status . getMode ()); <nl> 
new file <nl> ppp FragmentArgsTest . java <nl> + package org . androidannotations . test15 ; <nl> + import static org . fest . assertions . api . Assertions . assertThat ; <nl> + import org . androidannotations . test15 . instancestate . SaveInstanceStateActivityParameterizedTest ; <nl> + import org . junit . Test ; <nl> 
mmm Tracer . java <nl> ppp Tracer . java <nl> - return System . currentTimeMillis () + start ; <nl> + return System . currentTimeMillis () - start ; <nl> 
mmm ArbitratorSelection . java <nl> ppp ArbitratorSelection . java <nl> - checkArgument (! arbitrators . isEmpty (), " arbitrators must nto be empty "); <nl> + checkArgument (! arbitrators . isEmpty (), " arbitrators must not be empty "); <nl> 
mmm ProfilerTest . java <nl> ppp ProfilerTest . java <nl> - private static final int COMPUTE _ WORK _ MILLIS = 40 ; <nl> + private static final int COMPUTE _ WORK _ MILLIS = 100 ; <nl> + public static final String METHOD = " expensiveComputation "; <nl> - while ( profiler . countSamples () < 5 ); <nl> + while ( tryGettingMoreSamples ( profiler ) ); <nl> 
mmm ReplyException . java <nl> ppp ReplyException . java <nl> - super ( message ); <nl> - this . failureType = failureType ; <nl> - this . failureCode = failureCode ; <nl> + super ("(" + failureType + "," + failureCode + ") " + ( message != null ? message : "")); <nl> + this . failureType = failureType ; <nl> 

new file <nl> ppp TransactionalSQLExecutionHook . java <nl> + package org . apache . shardingsphere . transaction . base . seata . at ; <nl> + import io . seata . core . context . RootContext ; <nl> + import org . apache . shardingsphere . core . execute . hook . SQLExecutionHook ; <nl> + import org . apache . shardingsphere . core . route . RouteUnit ; <nl> 
mmm GoNamedElementImpl . java <nl> ppp GoNamedElementImpl . java <nl> - import com . intellij . extapi . psi . StubBasedPsiElementBase ; <nl> - public abstract class GoNamedElementImpl < T extends GoNamedStub <?>> extends StubBasedPsiElementBase < T > implements GoCompositeElement , GoNamedElement { <nl> 
mmm MqttSessionId . java <nl> ppp MqttSessionId . java <nl> 
new file <nl> ppp GuavaCacheLoaderTest . java <nl> + package org . baeldung . guava ; <nl> + import com . google . common . cache . CacheBuilder ; <nl> + import com . google . common . cache . CacheLoader ; <nl> + import com . google . common . cache . LoadingCache ; <nl> + import com . google . common . collect . ImmutableMap ; <nl> 
mmm About . java <nl> ppp About . java <nl> + import processing . app . Platform ; <nl> + Platform . isMacOS () ? <nl> + RenderingHints . VALUE _ TEXT _ ANTIALIAS _ DEFAULT : <nl> 
new file <nl> ppp KotlinSafeCastTest . java <nl> + package org . jacoco . core . test . validation . kotlin ; <nl> + import org . jacoco . core . test . validation . ValidationTestBase ; <nl> + import org . jacoco . core . test . validation . kotlin . targets . KotlinElvisOperatorTarget ; <nl> + import org . jacoco . core . test . validation . kotlin . targets . KotlinSafeCastTarget ; <nl> 
mmm OHazelcastLockManager . java <nl> ppp OHazelcastLockManager . java <nl> + import com . orientechnologies . common . types . OModifiableInteger ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + private HazelcastInstance hazelcast ; <nl> + private Set < String > lockedResurces = new HashSet <>(); <nl> 
mmm CardBrowserContextMenu . java <nl> ppp CardBrowserContextMenu . java <nl> - Timber . w (" Failed to read context menu status setting "); <nl> + Timber . w ( e , " Failed to read context menu status setting "); <nl> 
mmm TableNamesExtractHandler . java <nl> ppp TableNamesExtractHandler . java <nl> - import io . shardingsphere . core . parsing . antlr . extractor . statement . util . ASTUtils ; <nl> - import io . shardingsphere . core . parsing . parser . sql . SQLStatement ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . ExtractResult ; <nl> 
mmm Driver . java <nl> ppp Driver . java <nl> + import java . util . logging . Logger ; <nl> - public Logger getParentLogger () throws SQLFeatureNotSupportedException { <nl> + public Logger getParentLogger () { <nl> 
new file <nl> ppp TestElementKindPredicates . java <nl> + import java . util . Set ; <nl> + import java . util . function . Predicate ; <nl> + import javax . lang . model . element . ElementKind ; <nl> + public class TestElementKindPredicates { <nl> + public static void main ( String . . . args ) { <nl> + Set < ElementKind > ALL _ KINDS = Set . of ( ElementKind . values ()); <nl> 
mmm RoundedActivity . java <nl> ppp RoundedActivity . java <nl> - (( RoundedImageView ) view . findViewById ( R . id . imageView1 )) . setOval ( true ); <nl> 

mmm EncryptDataSourceBeanDefinitionParserTag . java <nl> ppp EncryptDataSourceBeanDefinitionParserTag . java <nl> - public static final String ENCRYPTOR _ RULE _ CONFIG _ TAG = " encryptor - rule "; <nl> + public static final String ENCRYPT _ RULE _ TAG = " encrypt - rule "; <nl> + public static final String TABLE _ CONFIG _ TAG = " table "; <nl> 
mmm OrchestrationFacadeTest . java <nl> ppp OrchestrationFacadeTest . java <nl> + setRegistry ( orchestrationFacade . getConfigService ()); <nl> + setRegistry ( orchestrationFacade . getClass () . getDeclaredField (" instanceStateService ") . get ( orchestrationFacade )); <nl> + setRegistry ( orchestrationFacade . getClass () . getDeclaredField (" dataSourceService ") . get ( orchestrationFacade )); <nl> 
mmm StandardServerSF . java <nl> ppp StandardServerSF . java <nl> 
deleted file <nl> mmm ManualMeasure . java <nl> - package org . sonar . jpa . entity ; <nl> - import org . apache . commons . lang . builder . ReflectionToStringBuilder ; <nl> - import org . apache . commons . lang . builder . ToStringStyle ; <nl> - import javax . persistence . *; <nl> - @ Entity <nl> - @ Table ( name = " manual _ measures ") <nl> 
mmm FragmentDefinition . java <nl> ppp FragmentDefinition . java <nl> + import graphql . PublicApi ; <nl> + @ PublicApi <nl> 
mmm Characters . java <nl> ppp Characters . java <nl> - return ( <nl> - cType == Character . START _ PUNCTUATION || <nl> + return cType == Character . START _ PUNCTUATION || <nl> - cType == Character . FINAL _ QUOTE _ PUNCTUATION ); <nl> + cType == Character . FINAL _ QUOTE _ PUNCTUATION ; <nl> + } <nl> + public static boolean isSymbol ( char c ) { <nl> 
mmm DefaultIssueQueryResultTest . java <nl> ppp DefaultIssueQueryResultTest . java <nl> + import static com . google . common . collect . Lists . newArrayList ; <nl> + @ Test ( expected = IllegalArgumentException . class ) <nl> + public void should _ first _ throw _ exception _ if _ no _ issue () { <nl> + DefaultIssueQueryResult result = new DefaultIssueQueryResult ( Collections . < Issue > emptyList ()); <nl> 
mmm TestDBRule . java <nl> ppp TestDBRule . java <nl> - import com . fasterxml . jackson . databind . ObjectMapper ; <nl> - import com . google . common . io . Resources ; <nl> - import io . dropwizard . configuration . ConfigurationException ; <nl> - import io . dropwizard . configuration . ConfigurationFactory ; <nl> 
mmm AstLambdaExpression . java <nl> ppp AstLambdaExpression . java <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - import org . apache . el . util . MessageFactory ; <nl> - AstLambdaParameters formalParameters = <nl> - ( AstLambdaParameters ) children [ 0 ]; <nl> - int paramCount = 0 ; <nl> 
mmm ColumnDefWithLength . java <nl> ppp ColumnDefWithLength . java <nl> - import java . sql . Time ; <nl> - import java . sql . Timestamp ; <nl> - import java . math . BigDecimal ; <nl> - import java . math . BigInteger ; <nl> - protected static String buildStrFormatForColLength ( Long columnLength ) { <nl> 
mmm PerActivity . java <nl> ppp PerActivity . java <nl> 
mmm UIReplacer . java <nl> ppp UIReplacer . java <nl> + import com . intellij . codeInsight . lookup . impl . LookupCellRenderer ; <nl> + import com . intellij . ui . ColorUtil ; <nl> + import com . intellij . ui . JBColor ; <nl> + Patcher . patchAutocomplete (); <nl> - public static void patchQuickInfo () { <nl> 
mmm Jsonize . java <nl> ppp Jsonize . java <nl> + import java . util . Collection ; <nl> + import java . util . Map ; <nl> + import org . json . JSONArray ; <nl> - Object o1 = args [ 0 ]; <nl> - if ( o1 == null ) { <nl> - return " null "; <nl> - } else if ( o1 instanceof Number || o1 instanceof Boolean ) { <nl> 
new file <nl> ppp FilesFilter . java <nl> + package com . mycompany . filters ; <nl> + import org . apache . regexp . RE ; <nl> + import org . apache . regexp . RESyntaxException ; <nl> + import com . puppycrawl . tools . checkstyle . api . AuditEvent ; <nl> + import com . puppycrawl . tools . checkstyle . api . AutomaticBean ; <nl> 
mmm IncorectBindingPuzzleFixedTest . java <nl> ppp IncorectBindingPuzzleFixedTest . java <nl> - @ Ignore <nl> - @ Test <nl> - public void shouldReportNoMoreInteractionsProperly () throws Exception { <nl> - DerivedInterface derivedMock = Mockito . mock ( DerivedInterface . class ); <nl> - setMock ( derivedMock ); <nl> 
mmm JsBundle . java <nl> ppp JsBundle . java <nl> - this . getProjectFilesystem () . getRootPath (); <nl> 
mmm WebSocketPubSub . java <nl> ppp WebSocketPubSub . java <nl> - @ WebSocketHandlerService <nl> + @ WebSocketHandlerService ( path ="/ pubsub ") <nl> 
mmm ConstantComplexityOrderStackTest . java <nl> ppp ConstantComplexityOrderStackTest . java <nl> + import static org . junit . Assert . assertEquals ; <nl> + @ Test public void shouldReturnMinElementInTheStack2 () { <nl> + stack2 . push ( 1 ); <nl> + stack2 . push ( 2 ); <nl> + stack2 . push ( 3 ); <nl> + stack2 . push ( - 1 ); <nl> 
mmm BusinessRuleConfigManager . java <nl> ppp BusinessRuleConfigManager . java <nl> + import java . util . List ; <nl> + import com . dianping . cat . home . rule . entity . Condition ; <nl> + import com . dianping . cat . home . rule . entity . Subcondition ; <nl> + import com . dianping . cat . report . task . alert . MetricType ; <nl> 
new file <nl> ppp CallerSensitive . java <nl> + package sun . reflect ; <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + import java . lang . annotation . Target ; <nl> + @ Retention ( RetentionPolicy . RUNTIME ) <nl> 
mmm FileConfig . java <nl> ppp FileConfig . java <nl> - @ ConfigProperty ( name = " path ", defaultValue = " true ") <nl> + @ ConfigProperty ( name = " path ", defaultValue = " shamrock . log ") <nl> 
mmm ShowHabitActivity . java <nl> ppp ShowHabitActivity . java <nl> - import android . content . Intent ; <nl> - import android . view . Menu ; <nl> - import android . view . MenuItem ; <nl> - @ Override <nl> - public boolean onCreateOptionsMenu ( Menu menu ) <nl> - { <nl> - getMenuInflater () . inflate ( R . menu . show _ habit _ activity _ menu , menu ); <nl> 
deleted file <nl> mmm SmileUtils . java <nl> - package smile . util ; <nl> - import smile . math . MathEx ; <nl> - import smile . sort . QuickSort ; <nl> - import java . util . Arrays ; <nl> - public interface SmileUtils { <nl> - default int [][] sort ( double [][] x ) { <nl> - int n = x . length ; <nl> - int p = x [ 0 ] . length ; <nl> 
mmm DiagnosticsLogger . java <nl> ppp DiagnosticsLogger . java <nl> - logger . info (" Sending diagnostics to the Hazelcast logger "); <nl> + logger . info (" Sending diagnostics to the ' com . hazelcast . diagnostics ' logger "); <nl> 
mmm SessionsResource . java <nl> ppp SessionsResource . java <nl> + import org . graylog2 . plugin . database . users . User ; <nl> - import org . graylog2 . plugin . database . users . User ; <nl> + import javax . ws . rs . GET ; <nl> - import javax . ws . rs . NotFoundException ; <nl> - import javax . ws . rs . core . Response ; <nl> 
mmm _ 199 . java <nl> ppp _ 199 . java <nl> - List < Integer > res = new ArrayList < Integer >(); <nl> - if ( root == null ) return res ; <nl> - Queue < TreeNode > q = new LinkedList < TreeNode >(); <nl> + List < Integer > result = new ArrayList <>(); <nl> + if ( root == null ) return result ; <nl> + Queue < TreeNode > q = new LinkedList <>(); <nl> 
mmm AbstractFunction . java <nl> ppp AbstractFunction . java <nl> - " Wrong number of parameters . Actual : " + num + <nl> - " . Expected : >= " + min <nl> - + " and <= " + max <nl> + getReferenceKey () + <nl> + " called with wrong number of parameters . Actual : " + num + <nl> + ( <nl> + min == max ? <nl> + " . Expected : " + min + " . " <nl> 
deleted file <nl> mmm AutostartUriBeaconDiscoveryServiceReceiver . java <nl> - package org . physical _ web . physicalweb ; <nl> - import android . content . BroadcastReceiver ; <nl> - import android . content . Context ; <nl> - import android . content . Intent ; <nl> - import android . content . SharedPreferences ; <nl> 
mmm Controller . java <nl> ppp Controller . java <nl> 
new file <nl> ppp ConstantComplexityOrderStackTest . java <nl> + package com . github . pedrovgs . problem63 ; <nl> + import com . github . pedrovgs . problem63 . ConstantComplexityOrderStack . Stack1 ; <nl> + import com . github . pedrovgs . problem63 . ConstantComplexityOrderStack . Stack2 ; <nl> + import org . junit . Before ; <nl> 
new file <nl> ppp ListDataSets . java <nl> + package com . example . forecast ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . forecast . ForecastClient ; <nl> + import software . amazon . awssdk . services . forecast . model . DatasetSummary ; <nl> 
mmm DeferredReleaser . java <nl> ppp DeferredReleaser . java <nl> + import javax . annotation . Nullable ; <nl> - private static DeferredReleaser sInstance = null ; <nl> + private static @ Nullable DeferredReleaser sInstance = null ; <nl> 
mmm SchemaCaptureTest . java <nl> ppp SchemaCaptureTest . java <nl> + assertThat ( columns [ 1 ], instanceOf ( IntColumnDef . class )); <nl> + assertThat ((( IntColumnDef ) columns [ 1 ]) . isSigned (), is ( false )); <nl> 
new file <nl> ppp SeekBarActivity . java <nl> + package net . qiujuer . sample . genius ; <nl> + import android . os . Bundle ; <nl> + import android . support . v7 . app . AppCompatActivity ; <nl> + import android . view . View ; <nl> + import net . qiujuer . genius . ui . widget . Button ; <nl> + import net . qiujuer . genius . ui . widget . EditText ; <nl> 
mmm ProcessMessageJob . java <nl> ppp ProcessMessageJob . java <nl> + log . debug (" Passing {} to {}", message , reader ); <nl> 
mmm GetAllProjectMetadataCommand . java <nl> ppp GetAllProjectMetadataCommand . java <nl> - e . getValue () . write ( writer , options ); <nl> + pm . write ( writer , options ); <nl> 
mmm EnvUtilTest . java <nl> ppp EnvUtilTest . java <nl> - import org . junit . After ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . powermock . api . mockito . PowerMockito ; <nl> + import org . powermock . core . classloader . annotations . PrepareForTest ; <nl> + import org . powermock . modules . junit4 . PowerMockRunner ; <nl> 
mmm JavascriptClientCodegenTest . java <nl> ppp JavascriptClientCodegenTest . java <nl> + import io . swagger . parser . OpenAPIParser ; <nl> + import io . swagger . v3 . oas . models . OpenAPI ; <nl> + import io . swagger . v3 . oas . models . Operation ; <nl> + import io . swagger . v3 . oas . models . media . Schema ; <nl> 
mmm FooServiceIntegrationTest . java <nl> ppp FooServiceIntegrationTest . java <nl> - public class FooServiceTest { <nl> + public class FooServiceIntegrationTest { <nl> 
mmm BuckEventsQueue . java <nl> ppp BuckEventsQueue . java <nl> 
mmm TopLimitHandler . java <nl> ppp TopLimitHandler . java <nl> - import javax . persistence . Entity ; <nl> 
new file <nl> ppp InlineXMLOutputter . java <nl> + package edu . stanford . nlp . pipeline ; <nl> + import edu . stanford . nlp . io . IOUtils ; <nl> + import edu . stanford . nlp . ling . *; <nl> + import java . io . IOException ; <nl> + import java . io . OutputStream ; <nl> + import java . io . PrintWriter ; <nl> 
mmm TestAddBlockgroup . java <nl> ppp TestAddBlockgroup . java <nl> - import org . apache . hadoop . hdfs . server . blockmanagement . BlockInfo ; <nl> + import org . apache . hadoop . hdfs . server . blockmanagement . BlockInfoContiguous ; <nl> - BlockInfo [] file1Blocks = file1Node . getBlocks (); <nl> 
mmm UserControllerIntegrationTest . java <nl> ppp UserControllerIntegrationTest . java <nl> - import java . nio . charset . Charset ; <nl> - import static org . assertj . core . api . Assertions . assertThat ; <nl> + import java . nio . charset . Charset ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> 
deleted file <nl> mmm ZuulNettyReqRespTransformer . java <nl> - package com . netflix . zuul . message . http ; <nl> - public class ZuulNettyReqRespAdaptor { <nl> - } <nl> 
mmm User . java <nl> ppp User . java <nl> - @ NonNull public Integer id = null ; <nl> + public Integer id = null ; <nl> 
mmm Scalar . java <nl> ppp Scalar . java <nl> 
mmm MockMvcRequestAsyncConfigurer . java <nl> ppp MockMvcRequestAsyncConfigurer . java <nl> + * @ author Johan Haleby <nl> 
mmm SchedulerAssignmentImpl . java <nl> ppp SchedulerAssignmentImpl . java <nl> - public void unassignByExecutor ( ExecutorDetails executor ) { <nl> - this . executorToSlot . remove ( executor ); <nl> - } <nl> - public void unassignByExecutors ( Collection < ExecutorDetails > executors ) { <nl> - for ( ExecutorDetails executor : executors ) { <nl> 
mmm Gl200ProtocolDecoderTest . java <nl> ppp Gl200ProtocolDecoderTest . java <nl> + verify ( decoder . decode ( null , null , <nl> + " + RESP : GTFRI , 02010D , 867844001675407 ,, 0 , 0 , 1 , 2 , 0 . 0 , 0 , 28 . 9 , 8 . 591011 , 56 . 476397 , 20140915213209 , 0238 , 0001 , 03CB , 2871 ,, 97 , 20140915213459 , 009A ")); <nl> 
mmm AnnotationUtilsTest . java <nl> ppp AnnotationUtilsTest . java <nl> + @ Test <nl> + public void shouldAcceptClasses () { <nl> + FakeAnnotation annotation = AnnotationUtils . getClassAnnotation ( SuperClass . class , FakeAnnotation . class ); <nl> + assertThat ( annotation . value (), is (" foo ")); <nl> 
new file <nl> ppp MultiNorms . java <nl> + package org . apache . lucene . index ; <nl> + import java . io . IOException ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import org . apache . lucene . search . Similarity ; <nl> + import org . apache . lucene . util . ReaderUtil ; <nl> 
mmm Employee . java <nl> ppp Employee . java <nl> - @ Table ( name =" EMPLOYEE _ SCHEMA _ GEN _ SCRIPTS ") <nl> + @ Table ( name =" EMPLOYEE _ SCHEMA _ READER _ WRITER _ PU ") <nl> 
mmm AdlConfKeys . java <nl> ppp AdlConfKeys . java <nl> - static final String ADL _ EVENTS _ TRACKING _ SOURCE = " adl . events . tracking . source "; <nl> 
new file <nl> ppp AndroidAppBundleIntegrationTest . java <nl> + package com . facebook . buck . android ; <nl> + import static org . junit . Assert . assertThat ; <nl> + import com . facebook . buck . io . filesystem . ProjectFilesystem ; <nl> + import com . facebook . buck . io . filesystem . TestProjectFilesystems ; <nl> 
mmm AfterClass . java <nl> ppp AfterClass . java <nl> - * DatabaseConnection database ; <nl> + * private static DatabaseConnection database ; <nl> 
mmm AtLeastOneConstructorRule . java <nl> ppp AtLeastOneConstructorRule . java <nl> + import net . sourceforge . pmd . ast . ASTUnmodifiedClassDeclaration ; <nl> - public Object visit ( ASTClassDeclaration node , Object data ) { <nl> + public Object visit ( ASTUnmodifiedClassDeclaration node , Object data ) { <nl> 
mmm ForwardingFluentFuture . java <nl> ppp ForwardingFluentFuture . java <nl> + @ Override <nl> + public String toString () { <nl> + return delegate . toString (); <nl> + } <nl> 
mmm MockPlatformSupport . java <nl> ppp MockPlatformSupport . java <nl> + TestConstants . TOOLS _ REPOSITORY <nl> 
mmm UrlNav . java <nl> ppp UrlNav . java <nl> - TWO _ HOURS _ BEFORE (" - 2h ", - 2 ), <nl> - TWO _ HOURS _ LATER (" + 2h ", 2 ), <nl> 
new file <nl> ppp CamelMicrometerTest . java <nl> + package org . apache . camel . itest . springboot ; <nl> + import org . apache . camel . itest . springboot . util . ArquillianPackager ; <nl> + import org . jboss . arquillian . container . test . api . Deployment ; <nl> + import org . jboss . arquillian . junit . Arquillian ; <nl> 
deleted file <nl> mmm SingleUpstreamRowDownstream . java <nl> - package io . crate . operation . projectors ; <nl> - import io . crate . operation . RowDownstream ; <nl> - public class SingleUpstreamRowDownstream implements RowDownstream { <nl> - private final RowReceiver rowReceiver ; <nl> - private boolean receiverAcquired = false ; <nl> 
mmm CurrentSchemaFunctionTest . java <nl> ppp CurrentSchemaFunctionTest . java <nl> + import io . crate . metadata . FunctionIdent ; <nl> + @ Test <nl> - Scalar impl = ( Scalar ) functions . get ( function . info () . ident ()); <nl> + FunctionIdent ident = function . info () . ident (); <nl> + Scalar impl = ( Scalar ) functions . get ( ident . name (), ident . argumentTypes ()); <nl> 
mmm NetflowCodec . java <nl> ppp NetflowCodec . java <nl> + import org . graylog2 . plugin . inputs . transports . NettyTransport ; <nl> + if ( cr . containsField ( NettyTransport . CK _ PORT )) { <nl> + cr . getField ( NettyTransport . CK _ PORT ) . setDefaultValue ( 2055 ); <nl> + } <nl> 
mmm ExceptionHandlerAdvice . java <nl> ppp ExceptionHandlerAdvice . java <nl> + @ ExceptionHandler ( Exception . class ) <nl> + @ ResponseBody <nl> + public ErrorInfo handleOtherException ( Exception e ) { <nl> + return new ErrorInfo (" Internal server error ", e ); <nl> + } <nl> 

mmm TestOpenSSLConf . java <nl> ppp TestOpenSSLConf . java <nl> - Set < String > disabledProtocols = new HashSet < String >( Arrays . asList ( DISABLED _ PROTOCOLS )); <nl> + Set < String > disabledProtocols = new HashSet <>( Arrays . asList ( DISABLED _ PROTOCOLS )); <nl> - Set < String > enabledProtocols = new HashSet < String >( Arrays . asList ( protocols )); <nl> 
mmm TransactionTest . java <nl> ppp TransactionTest . java <nl> - begin = db . beginTransaction (); <nl> - createStatement = db . update (" CREATE TABLE IF NOT EXISTS EMPLOYEE ( id int primary key , name varchar ( 255 ))") <nl> + Observable < Boolean > begin = db . beginTransaction (); <nl> + Observable < Integer > createStatement = db <nl> 
mmm QuarkusPluginFunctionalTest . java <nl> ppp QuarkusPluginFunctionalTest . java <nl> + import java . util . Map ; <nl> + Map < String , Object > context = new HashMap <>(); <nl> + context . put (" path ", "/ greeting "); <nl> + . className (" org . acme . GreetingResource ") <nl> - . doCreateProject ( new HashMap <>())) <nl> 
mmm AbstractOption . java <nl> ppp AbstractOption . java <nl> - Map strToOpt = getStrToOpt (); <nl> + final Map strToOpt = getStrToOpt (); <nl> - Map strToOpt = getStrToOpt (); <nl> + final Map strToOpt = getStrToOpt (); <nl> 
mmm NoCorrespondingNeedsPermissionDetector . java <nl> ppp NoCorrespondingNeedsPermissionDetector . java <nl> - for ( int i = 0 ; i < first . size (); i + + ) { <nl> + for ( int i = 0 , size = first . size (); i < size ; i + + ) { <nl> 
mmm SelectMessageQueueByRandom . java <nl> ppp SelectMessageQueueByRandom . java <nl> - public class SelectMessageQueueByRandoom implements MessageQueueSelector { <nl> + public class SelectMessageQueueByRandom implements MessageQueueSelector { <nl> - int value = random . nextInt (); <nl> - if ( value < 0 ) { <nl> 
mmm AdapterUtils . java <nl> ppp AdapterUtils . java <nl> - } else if ( v instanceof View ) { <nl> + } else if ( parent instanceof View ) { <nl> 
mmm SubtitleData . java <nl> ppp SubtitleData . java <nl> 
mmm ExpectedInsertValuesToken . java <nl> ppp ExpectedInsertValuesToken . java <nl> - @ XmlElement ( name = " column - name ") <nl> + @ XmlElement ( name = " column - names ") <nl> - @ XmlElementWrapper ( name = " column - values ") <nl> - @ XmlElement ( name = " value ") <nl> - private List < String > columnValues = new LinkedList <>(); <nl> 
deleted file <nl> mmm ThreadBasedDomainEventNotifierImpl . java <nl> - package se . citerus . dddsample . application . messaging ; <nl> - import se . citerus . dddsample . domain . model . handling . HandlingEvent ; <nl> - import se . citerus . dddsample . domain . service . DomainEventNotifier ; <nl> - import se . citerus . dddsample . domain . service . TrackingService ; <nl> 
mmm Type . java <nl> ppp Type . java <nl> 
mmm ASTLocalVariableDeclaration . java <nl> ppp ASTLocalVariableDeclaration . java <nl> + if ( isFinal ()) { <nl> + out + = "( final )"; <nl> + } <nl> 
mmm ListTopologies . java <nl> ppp ListTopologies . java <nl> - private static final String MSG _ FORMAT = " % - 20s % - 10s % - 10s % - 12s % - 10s \ n "; <nl> + private static final String MSG _ FORMAT = " % - 20s % - 10s % - 10s % - 12s % - 12s % - 20s \ n "; <nl> - System . out . printf ( MSG _ FORMAT , " Topology _ name ", " Status ", " Num _ tasks ", " Num _ workers ", " Uptime _ secs "); <nl> 
mmm SampleApp . java <nl> ppp SampleApp . java <nl> + import io . spring . initializr . generator . spring . autoconfigure . GeneratorSpringAutoConfiguration ; <nl> - @ SpringBootApplication ( <nl> - exclude = { InitializrAutoConfiguration . class , InitializrActuatorEndpointsAutoConfiguration . class }) <nl> 
mmm DebugDataModule . java <nl> ppp DebugDataModule . java <nl> + import com . squareup . picasso . OkHttpDownloader ; <nl> + import com . squareup . picasso . Picasso ; <nl> + import retrofit . MockRestAdapter ; <nl> + @ Provides @ Singleton Picasso providePicasso ( OkHttpClient client , MockRestAdapter mockRestAdapter , <nl> 
mmm NokogiriNonStrictErrorHandler . java <nl> ppp NokogiriNonStrictErrorHandler . java <nl> + String msgLowerCase = msg . toLowerCase (); <nl> - msg . toLowerCase () . contains (" in prolog ") || <nl> - msg . toLowerCase () . contains (" limit ") || <nl> - msg . toLowerCase () . contains (" preceding the root element must be well - formed "); <nl> 
mmm Filter . java <nl> ppp Filter . java <nl> 
mmm CommonObjects . java <nl> ppp CommonObjects . java <nl> 
mmm Volley . java <nl> ppp Volley . java <nl> + * @ param stack An {@ link HttpStack } to use for the network , or null for default . <nl> - public static RequestQueue newRequestQueue ( Context context ) { <nl> + public static RequestQueue newRequestQueue ( Context context , HttpStack stack ) { <nl> - HttpStack stack ; <nl> 
mmm ShardingTablesConfigurationPrecise . java <nl> ppp ShardingTablesConfigurationPrecise . java <nl> + import io . shardingsphere . api . config . KeyGeneratorConfiguration ; <nl> - result . setKeyGeneratorColumnName (" order _ id "); <nl> + result . setKeyGeneratorConfig ( getKeyGeneratorConfiguration ()); <nl> 
mmm MessageContentType . java <nl> ppp MessageContentType . java <nl> + import android . support . annotation . Nullable ; <nl> + @ Nullable <nl> 
deleted file <nl> mmm InsertValuesTokenAssert . java <nl> - package org . apache . shardingsphere . core . parse . integrate . asserts . token ; <nl> - import com . google . common . base . Optional ; <nl> - import lombok . RequiredArgsConstructor ; <nl> - import org . apache . shardingsphere . core . parse . integrate . asserts . SQLStatementAssertMessage ; <nl> 
new file <nl> ppp Main . java <nl> + package com . zhisheng . examples . streaming . socket ; <nl> + import org . apache . flink . api . common . functions . FlatMapFunction ; <nl> + import org . apache . flink . api . java . tuple . Tuple2 ; <nl> + import org . apache . flink . streaming . api . datastream . DataStreamSource ; <nl> 
new file <nl> ppp ComposedModelTest . java <nl> + package io . swagger . models ; <nl> + import io . swagger . util . Json ; <nl> + import org . testng . annotations . Test ; <nl> + import static org . testng . Assert . assertNull ; <nl> + import static org . testng . Assert . assertTrue ; <nl> + public class ComposedModelTest { <nl> 
new file <nl> ppp XPathUtilTest . java <nl> + package org . apache . jmeter . util ; <nl> + import static org . junit . Assert . *; <nl> + import java . io . PrintStream ; <nl> + import org . hamcrest . CoreMatchers ; <nl> + import org . junit . Test ; <nl> + public class XPathUtilTest { <nl> + @ Test <nl> + public void testFormatXmlSimple () { <nl> 
new file <nl> ppp LithoPluginIcons . java <nl> + package icons ; <nl> + import com . intellij . openapi . util . IconLoader ; <nl> + import javax . swing . Icon ; <nl> + public interface LithoPluginIcons { <nl> + Icon BASE _ ACTION = IconLoader . getIcon ("/ icons / lithoLogo . svg "); <nl> + } <nl> 
mmm LimitExecutionStep . java <nl> ppp LimitExecutionStep . java <nl> + if ( limitVal == - 1 ) { <nl> + return getPrev () . get () . syncPull ( ctx , nRecords ); <nl> + } <nl> 
mmm H2StorageProvider . java <nl> ppp H2StorageProvider . java <nl> - import org . apache . skywalking . oap . server . core . storage . IBatchDAO ; <nl> - import org . apache . skywalking . oap . server . core . storage . IHistoryDeleteDAO ; <nl> - import org . apache . skywalking . oap . server . core . storage . IRegisterLockDAO ; <nl> 
mmm MonitoredWithInterfacePointcut . java <nl> ppp MonitoredWithInterfacePointcut . java <nl> - public MonitoredWithInterfacePointcut () { <nl> - super (); <nl> - this . interfaceClass = null ; <nl> - } <nl> 
mmm ResourceFragment . java <nl> ppp ResourceFragment . java <nl> - import android . accounts . Account ; <nl> - import android . os . Bundle ; <nl> - import me . zhanghai . android . douya . account . util . AccountUtils ; <nl> - import me . zhanghai . android . douya . util . FragmentUtils ; <nl> - public class ResourceFragment extends TargetedRetainedFragment { <nl> 
mmm RolesAllowedCheck . java <nl> ppp RolesAllowedCheck . java <nl> - import java . util . List ; <nl> + import java . util . Collection ; <nl> + import java . util . Collections ; <nl> + import java . util . HashSet ; <nl> - private static final Map < List < String >, RolesAllowedCheck > CACHE = new ConcurrentHashMap <>(); <nl> 
mmm WildcardFindFile . java <nl> ppp WildcardFindFile . java <nl> - import java . io . File ; <nl> 
mmm MergeEventListenerTest . java <nl> ppp MergeEventListenerTest . java <nl> + import io . shardingsphere . core . jdbc . core . datasource . ShardingDataSource ; <nl> + import org . mockito . Mockito ; <nl> + import static org . mockito . Mockito . when ; <nl> + private final ShardingDataSource shardingDataSource ; <nl> 

mmm ItemsToken . java <nl> ppp ItemsToken . java <nl> + import lombok . ToString ; <nl> + @ ToString <nl> 
new file <nl> ppp SimplifyPath . java <nl> + package com . stevesun . solutions ; <nl> + import java . util . *; <nl> + public class SimplifyPath { <nl> + public String simplifyPath ( String path ) { <nl> + Deque < String > stack = new LinkedList <>(); <nl> + Set < String > skipSet = new HashSet <>( Arrays . asList (" . . ", " . ", "")); <nl> 
mmm EditorAction . java <nl> ppp EditorAction . java <nl> - * <nl> + * < p > <nl> + * The return type of the method can be either < b > void </ b > or < b > boolean </ b > . In <nl> + * case of < b > boolean </ b >, the value returned from the annotated method will be <nl> + * returned in the generated listener method ( indicating event consumption ) . If <nl> 
mmm AutomationClientAuthFactory . java <nl> ppp AutomationClientAuthFactory . java <nl> - throw new NotAuthorizedException ( format (" Not authorized as a AutomationClient ")); <nl> + throw new NotAuthorizedException (" Not authorized as a AutomationClient "); <nl> 
mmm AccumulatingReducer . java <nl> ppp AccumulatingReducer . java <nl> - StringBuffer sSum = new StringBuffer (); <nl> + StringBuilder sSum = new StringBuilder (); <nl> 
mmm MailUtil . java <nl> ppp MailUtil . java <nl> - email . setCharset ( Charset . defaultCharset () . name ()); <nl> + email . setCharset (" UTF - 8 "); <nl> 
mmm H2ExceptionSuiteTest . java <nl> ppp H2ExceptionSuiteTest . java <nl> + import com . mysema . query . JavaSpecVersion ; <nl> - assertTrue ( Throwables . getStackTraceAsString ( result ) <nl> - . contains (" Suppressed ")); <nl> + String stackTraceAsString = Throwables . getStackTraceAsString ( result ); <nl> 
mmm GraphqlLibraryDescription . java <nl> ppp GraphqlLibraryDescription . java <nl> - import com . facebook . buck . model . BuildTarget ; <nl> - import com . facebook . buck . rules . AbstractDescriptionArg ; <nl> + import com . facebook . buck . rules . CommonDescriptionArg ; <nl> - import com . facebook . buck . rules . SourcePath ; <nl> 
mmm LtDictionary . java <nl> ppp LtDictionary . java <nl> + import com . sun . star . linguistic2 . XDictionaryEntry ; <nl> + for ( XDictionaryEntry entry : manualDictionary . getEntries ()) { <nl> + MessageHandler . printToLogFile ( entry . getDictionaryWord ()); <nl> + } <nl> 
mmm PurgeMapper . java <nl> ppp PurgeMapper . java <nl> - void deleteSnapshotMeasures (@ Param (" analysisUuids ") List < String > analysisUuids ); <nl> 
new file <nl> ppp MessageController . java <nl> + package com . baeldung . web . controller ; <nl> + import org . springframework . stereotype . Controller ; <nl> + import org . springframework . ui . Model ; <nl> + import org . springframework . web . bind . annotation . RequestMapping ; <nl> + import org . springframework . web . bind . annotation . RequestMethod ; <nl> 
mmm GraknTinkerGraphTest . java <nl> ppp GraknTinkerGraphTest . java <nl> - for ( int i = 0 ; i < 100 ; i + + ){ <nl> + for ( int i = 0 ; i < 20 ; i + + ){ <nl> - assertEquals ( 101 , graknGraph . admin () . getMetaEntityType () . subTypes () . size ()); <nl> + assertEquals ( 21 , graknGraph . admin () . getMetaEntityType () . subTypes () . size ()); <nl> 
mmm MasterSlaveSchema . java <nl> ppp MasterSlaveSchema . java <nl> - GlobalRegistry . getInstance () . getShardingProperties () . < Integer > getValue ( ShardingPropertiesConstant . MAX _ CONNECTIONS _ SIZE _ PER _ QUERY )); <nl> + GlobalRegistry . getInstance () . getShardingProperties () . < Integer > getValue ( ShardingPropertiesConstant . MAX _ CONNECTIONS _ SIZE _ PER _ QUERY ), <nl> 
new file <nl> ppp JSONException . java <nl> + package com . ichi2 . utils ; <nl> + public class JSONException extends RuntimeException { <nl> + private JSONException exc = null ; <nl> + public JSONException ( String s ) { <nl> + super ( s ); <nl> + } <nl> + public JSONException () { <nl> + super (); <nl> + } <nl> 
mmm ProjectLock . java <nl> ppp ProjectLock . java <nl> - throw new SonarException (" The project is already been analysing . "); <nl> + throw new SonarException (" The project is already being analysed . "); <nl> 
mmm Screen . java <nl> ppp Screen . java <nl> - * {@ literal @} Screen ( R . layout . welcome _ layout ) <nl> + * {@ literal @} Screen ( Conversation . class ) <nl> - * {@ literal @} Screen ( view = Conversation . class ) <nl> + * {@ literal @} Screen ( layout = R . layout . conversation _ layout ) <nl> 
mmm TestPerfBenchMarkDriver . java <nl> ppp TestPerfBenchMarkDriver . java <nl> - @ Test <nl> 
new file <nl> ppp SpringContextIntegrationTest . java <nl> + package com . baeldung ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . springframework . test . context . ContextConfiguration ; <nl> + import org . springframework . test . context . junit4 . SpringJUnit4ClassRunner ; <nl> 
mmm MiniFinderProtocol . java <nl> ppp MiniFinderProtocol . java <nl> 
new file <nl> ppp ExternalRunnerTestProtocol . java <nl> + package com . facebook . buck . core . test . rule ; <nl> + import com . facebook . buck . core . model . BuildTarget ; <nl> + import com . facebook . buck . core . util . immutables . BuckStyleValue ; <nl> + import com . fasterxml . jackson . core . JsonGenerator ; <nl> 
mmm DescriptionResolver . java <nl> ppp DescriptionResolver . java <nl> - private static final Pattern PATTERN = Pattern . compile ("\\ Q ${\\ E ( . + ?)\\ Q }\\ E "); <nl> + private static final Pattern PATTERN = Pattern . compile ("\\ Q ${\\ E ( . + ?)(:( . *))?\\ Q }\\ E "); <nl> + String defaultValue = matcher . group ( 3 ); <nl> 
mmm Subscription . java <nl> ppp Subscription . java <nl> + @ Override <nl> + public String toString () { <nl> + return String . format ("[ t : % s , cliID : % s , qos : % s ]", this . topic , this . clientId , this . requestedQos ); <nl> + } <nl> 
mmm BSFormatterTest . java <nl> ppp BSFormatterTest . java <nl> + import org . junit . Before ; <nl> + import java . util . Locale ; <nl> + @ Before <nl> + public void setup () { <nl> + Locale . setDefault ( new Locale (" en ", " US ")); <nl> + } <nl> 
new file <nl> ppp NimbusJwkReactiveJwtDecoderTests . java <nl> + package org . springframework . security . oauth2 . jwt ; <nl> + import com . nimbusds . jose . jwk . JWK ; <nl> + import com . nimbusds . jose . jwk . JWKSet ; <nl> + import com . nimbusds . jose . jwk . RSAKey ; <nl> + import okhttp3 . mockwebserver . MockResponse ; <nl> 
mmm _ 118 . java <nl> ppp _ 118 . java <nl> + ] <nl> + */ <nl> - public static List < List < Integer >> generate ( int numRows ) { <nl> + public List < List < Integer >> generate ( int numRows ) { <nl> - if ( numRows < 1 ) return result ; <nl> - List < Integer > row = new ArrayList (); <nl> - row . add ( 1 ); <nl> 
mmm UtilsTest . java <nl> ppp UtilsTest . java <nl> + System . currentTimeMillis ()); <nl> - tempDir . setReadable ( false ); <nl> - try { <nl> - Utils . mkdirs ( tempDir ); <nl> - fail (" Mkdir should have thrown an exception "); <nl> - } catch ( VoldemortException e ) {} <nl> + System . currentTimeMillis ()); <nl> 
mmm CustomAnnotationParameterResolver . java <nl> ppp CustomAnnotationParameterResolver . java <nl> 
mmm POSTaggerBenchmarkITest . java <nl> ppp POSTaggerBenchmarkITest . java <nl> - " format = TSV , wordColumn = 0 , tagColumn = 1 ,/ u / nlp / data / pos - tagger / english / test - wsj - 19 - 21 . tsv ", <nl> + " format = TSV , wordColumn = 0 , tagColumn = 1 ,/ u / nlp / data / pos - tagger / english / test - wsj - 19 - 21 . caseless . tsv ", <nl> 
mmm Handler . java <nl> ppp Handler . java <nl> - data . put ( domain + " - Url - Total ", String . valueOf ( detail . getTotalCount ())); <nl> + data . put ( domain + " UrlTotal ", String . valueOf ( detail . getTotalCount ())); <nl> 
mmm SpringTransactionIntegrationTest . java <nl> ppp SpringTransactionIntegrationTest . java <nl> - import org . activiti . engine . ActivitiException ; <nl> + import javax . sql . DataSource ; <nl> + import org . activiti . bpmn . exceptions . XMLException ; <nl> - import javax . sql . DataSource ; <nl> 
mmm PrometheusEndpointIntegrationTest . java <nl> ppp PrometheusEndpointIntegrationTest . java <nl> - import org . springframework . boot . test . autoconfigure . web . servlet . AutoConfigureMockMvc ; <nl> - @ AutoConfigureMockMvc <nl> 
mmm Utils . java <nl> ppp Utils . java <nl> - public static byte [] toBytes ( Object obj ) { <nl> - if ( obj == null ) { <nl> - return null ; <nl> - } else if ( obj instanceof String ){ <nl> + public static byte [] toBytes ( Object obj ){ <nl> + if ( obj instanceof String ){ <nl> 
mmm OSleepStatementExecutionTest . java <nl> ppp OSleepStatementExecutionTest . java <nl> - @ Test public void testBegin () { <nl> + @ Test public void testBasic () { <nl> - Assert . assertTrue ( System . currentTimeMillis () - begin > 1000 ); <nl> + Assert . assertTrue ( System . currentTimeMillis () - begin >= 1000 ); <nl> 
mmm AuthenticationYamlSwapperTest . java <nl> ppp AuthenticationYamlSwapperTest . java <nl> + import org . apache . shardingsphere . core . yaml . config . common . YamlProxyUserConfiguration ; <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - Map < String , ProxyUser > users = new HashMap <>(); <nl> 
mmm StorageLocation . java <nl> ppp StorageLocation . java <nl> + import org . apache . hadoop . fs . Path ; <nl> - import org . apache . hadoop . hdfs . server . common . Util ; <nl> 
new file <nl> ppp PersonName . java <nl> + package com . baeldung . basicmethods ; <nl> + import java . io . FileWriter ; <nl> + import java . io . IOException ; <nl> + import java . io . PrintWriter ; <nl> + public class PersonName { <nl> + public String getName ( String firstName , String lastName ) throws RuntimeException { <nl> 
mmm AbstractSQLStatement . java <nl> ppp AbstractSQLStatement . java <nl> + * @ author panjuan <nl> + private final Conditions encryptConditions = new Conditions (); <nl> 
mmm MySQLTextResultSetRowPacketTest . java <nl> ppp MySQLTextResultSetRowPacketTest . java <nl> + import java . math . BigDecimal ; <nl> + import java . util . Arrays ; <nl> + import static org . mockito . Mockito . times ; <nl> - public void assertWrite () { <nl> + public void assertNew () { <nl> + verify ( payload , times ( 3 )) . readStringLenenc (); <nl> 
new file <nl> ppp MethodContextResolutionTest . java <nl> + package com . github . javaparser . symbolsolver . resolution . javaparser . contexts ; <nl> + import com . github . javaparser . ParseException ; <nl> + import com . github . javaparser . ast . CompilationUnit ; <nl> + import com . github . javaparser . ast . body . ClassOrInterfaceDeclaration ; <nl> 
mmm BundleHelper . java <nl> ppp BundleHelper . java <nl> + * @ param < T > <nl> + * the element type of the returned array <nl> 
mmm NQueenProblem . java <nl> ppp NQueenProblem . java <nl> 
mmm CommandRunnerParamsForTesting . java <nl> ppp CommandRunnerParamsForTesting . java <nl> - private ImmutableMap environment = ImmutableMap . copyOf ( System . getenv ()); <nl> + private ImmutableMap < String , String > environment = ImmutableMap . copyOf ( System . getenv ()); <nl> 
mmm NdkLibraryDescription . java <nl> ppp NdkLibraryDescription . java <nl> - final Path rootDirectory = params . getPathRelativizer () . apply ( buildRulePath ); <nl> + final Path rootDirectory = params . getPathAbsolutifier () . apply ( buildRulePath ); <nl> 
mmm NetUtil . java <nl> ppp NetUtil . java <nl> - public static String getLocalHostAddress () throws UnknownHostException , SocketException { <nl> + private static InetAddress getLocalHost () throws UnknownHostException , SocketException { <nl> - return InetAddress . getLocalHost () . getHostAddress (); <nl> 
mmm HttpsClientSslLiveTest . java <nl> ppp HttpsClientSslLiveTest . java <nl> - import javax . net . ssl . SSLPeerUnverifiedException ; <nl> + import javax . net . ssl . SSLException ; <nl> - import org . junit . Ignore ; <nl> - public class HttpsClientLiveManualTest { <nl> + public class HttpsClientSslLiveTest { <nl> 
mmm DokanyVolume . java <nl> ppp DokanyVolume . java <nl> - private static final String FS _ TYPE _ NAME = " Cryptomator File System "; <nl> + private static final String FS _ TYPE _ NAME = " CryptomatorFS "; <nl> 
mmm DistanceHandler . java <nl> ppp DistanceHandler . java <nl> + import java . math . BigDecimal ; <nl> + import java . math . RoundingMode ; <nl> - import java . math . BigDecimal ; <nl> - distance = BigDecimal . valueOf ( distance ) . setScale ( 2 ) . doubleValue (); <nl> + distance = BigDecimal . valueOf ( distance ) . setScale ( 2 , RoundingMode . HALF _ EVEN ) . doubleValue (); <nl> 
new file <nl> ppp ComponentLibraryCatalogFileTest . java <nl> + package org . apache . skywalking . apm . collector . boot ; <nl> + import org . apache . skywalking . apm . collector . configuration . service . ComponentLibraryCatalogService ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> 
mmm BackupStatusUpdaterTest . java <nl> ppp BackupStatusUpdaterTest . java <nl> - assertThat ( serverBackup . getStatus ()) . isEqualTo ( BackupProgressStatus . BACKUP _ DATABASE ); <nl> + assertThat ( serverBackup . getStatus ()) . isEqualTo ( BackupStatus . IN _ PROGRESS ); <nl> + assertThat ( serverBackup . getBackupProgressStatus ()) . hasValue ( BackupProgressStatus . BACKUP _ DATABASE ); <nl> 
mmm MetricsUtilTest . java <nl> ppp MetricsUtilTest . java <nl> - Assert <nl> - . assertEquals ( 1 , MetricsUtil . getCounter ( test1 ) . getCount ()); <nl> - @ Test <nl> - @ Test <nl> - @ Test <nl> 
mmm ALPNManager . java <nl> ppp ALPNManager . java <nl> - private final List < ALPNProvider > alpnProviders ; <nl> + private final ALPNProvider [] alpnProviders ; <nl> - this . alpnProviders = Collections . unmodifiableList ( provider ); <nl> + this . alpnProviders = provider . toArray ( new ALPNProvider [ 0 ]); <nl> 
new file <nl> ppp ECJEvaluatorFactoryTest . java <nl> + package com . mysema . query . collections ; <nl> + import com . mysema . codegen . ECJEvaluatorFactory ; <nl> + import org . junit . Test ; <nl> + public class ECJEvaluatorFactoryTest extends AbstractQueryTest { <nl> + @ Test <nl> + public void Evaluator _ Factory () { <nl> 
mmm URLFetcher . java <nl> ppp URLFetcher . java <nl> 
mmm HamcrestMatchersTest . java <nl> ppp HamcrestMatchersTest . java <nl> + import org . mockito . ArgumentMatcher ; <nl> + import static org . mockito . Mockito . argThat ; <nl> + @ Test <nl> + public void coexists _ with _ mockito _ matcher () { <nl> + when ( mock . simpleMethod ( argThat ( new ArgumentMatcher < String >() { <nl> 
new file <nl> ppp AtmosphereFramework . java <nl> + package org . atmosphere . cpr ; <nl> + public class AtmosphereFramework { <nl> + } <nl> 
mmm ResponseHandler . java <nl> ppp ResponseHandler . java <nl> + if ( existing . hasEntity ()) <nl> + requestContext . setGenericReturnType ( existing . getEntity () . getClass ()); <nl> 
mmm StorageDirectory . java <nl> ppp StorageDirectory . java <nl> - private static final String USER _ PROPERTIES _ FILE _ NAME = " bitsquare . properties "; <nl> - return new File ( System . getProperty (" user . home ") + "/ BitSquare "); <nl> + return new File ( System . getProperty (" user . home ") + File . separator + " BitSquare "); <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> - deploymentInfo . addFilter ( Servlets . filter ( FILTER _ NAME , JsrWebSocketFilter . class )); <nl> + deploymentInfo . addFilter ( Servlets . filter ( FILTER _ NAME , JsrWebSocketFilter . class ) . setAsyncSupported ( true )); <nl> 
mmm ClusterNodesDecoder . java <nl> ppp ClusterNodesDecoder . java <nl> - node . addFlag ( ClusterNodeInfo . Flag . valueOf ( flagValue )); <nl> + for ( Flag nodeInfoFlag : ClusterNodeInfo . Flag . values ()) { <nl> + if ( nodeInfoFlag . name () . equals ( flagValue )) { <nl> + node . addFlag ( nodeInfoFlag ); <nl> 
mmm EpollChannelOption . java <nl> ppp EpollChannelOption . java <nl> - public static final ChannelOption < Integer > TCP _ QUICKACK = ChannelOption . valueOf ( T , " TCP _ QUICKACK "); <nl> + public static final ChannelOption < Boolean > TCP _ QUICKACK = ChannelOption . valueOf ( T , " TCP _ QUICKACK "); <nl> 
mmm SecureExchangeAttribute . java <nl> ppp SecureExchangeAttribute . java <nl> - public static final String TOKEN = "${ SECURE }"; <nl> + public static final String TOKEN = " % { SECURE }"; <nl> - return Boolean . toString ( exchange . getRequestScheme () . toLowerCase () . equals (" https ")); <nl> + return Boolean . toString ( exchange . isSecure ()); <nl> 
mmm AssetsAnnotationProcessor . java <nl> ppp AssetsAnnotationProcessor . java <nl> - path . substring ( path . lastIndexOf ("/") + 1 ) + "/" + fname , ( path . substring ( path . lastIndexOf ("/") + 1 ) + "/" + fname ) . replace (" . ogg ", " . caf ")); <nl> + path . substring ( path . lastIndexOf ("/") + 1 ) + "/" + fname , ( path . substring ( path . lastIndexOf ("/") + 1 ) + "/" + fname ) . replace (" . ogg ", " . mp3 ")); <nl> 
deleted file <nl> mmm DoNotStrip . java <nl> - package com . facebook . proguard . annotations ; <nl> - import static java . lang . annotation . RetentionPolicy . CLASS ; <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Retention ; <nl> - import java . lang . annotation . Target ; <nl> 
mmm Answer . java <nl> ppp Answer . java <nl> - * return " called with arguments : " + Arrays . toString ( args ); <nl> + * return " called with arguments : " + args ; <nl> 
mmm AbstractProducer . java <nl> ppp AbstractProducer . java <nl> - import java . sql . SQLException ; <nl> 
mmm Avatar . java <nl> ppp Avatar . java <nl> - url = avatarManager . getAvatarUrl ( user . getFacade ()); <nl> + url = avatarManager . getAvatarUrl ( user != null ? user . getFacade (): null ); <nl> 
mmm AeronStat . java <nl> ppp AeronStat . java <nl> + import java . io . File ; <nl> + import java . io . PrintStream ; <nl> + import java . nio . ByteBuffer ; <nl> + import java . nio . MappedByteBuffer ; <nl> + import java . util . Date ; <nl> + import java . util . concurrent . atomic . AtomicBoolean ; <nl> 
mmm DOMPool . java <nl> ppp DOMPool . java <nl> - * @ author Peter Lin <nl> - protected static HashMap MEMCACHE = new HashMap ( 50 ); <nl> + private static HashMap MEMCACHE = new HashMap ( 50 ); <nl> 
deleted file <nl> mmm TestServlet . java <nl> - package org . javaee7 . websocket . endpoint . security ; <nl> - import java . io . IOException ; <nl> - import java . io . PrintWriter ; <nl> - import javax . servlet . ServletException ; <nl> - import javax . servlet . annotation . WebServlet ; <nl> - import javax . servlet . http . HttpServlet ; <nl> 
deleted file <nl> mmm FormParamFilter . java <nl> - package org . atmosphere . client ; <nl> - import org . atmosphere . cpr . BroadcastFilter ; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - public class FormParamFilter implements BroadcastFilter { <nl> - private static final Logger logger = LoggerFactory . getLogger ( FormParamFilter . class ); <nl> 
mmm JdkOpenSslEngineInteroptTest . java <nl> ppp JdkOpenSslEngineInteroptTest . java <nl> - return super . mySetupMutualAuthServerIsValidException ( cause ) || cause instanceof SSLException ; <nl> + return super . mySetupMutualAuthServerIsValidClientException ( cause ) || cause instanceof SSLException ; <nl> 
deleted file <nl> mmm BoundsTest . java <nl> - package com . github . javaparser ; <nl> - import java . util . Collection ; <nl> - public class BoundsTest { <nl> - public static < T extends Object & Foo <? super T >> T min ( Collection <? extends T > coll ) { <nl> - return null ; <nl> - } <nl> - public interface Foo < T > { <nl> 
new file <nl> ppp _ 99999RandomQuestionsTest . java <nl> + package com . fishercoder ; <nl> + import com . fishercoder . solutions . _ 99999RandomQuestions ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + public class _ 99999RandomQuestionsTest { <nl> 
mmm ShareApplication . java <nl> ppp ShareApplication . java <nl> - interface ShareApplication { <nl> + public interface ShareApplication { <nl> 
deleted file <nl> mmm FieldValueGetterFactory . java <nl> - package org . apache . beam . sdk . schemas ; <nl> - import java . util . List ; <nl> - public interface FieldValueGetterFactory extends Factory < List < FieldValueGetter >> { <nl> - @ Override <nl> - List < FieldValueGetter > create ( Class <?> targetClass , Schema schema ); <nl> 
mmm BlockingWaitStrategy . java <nl> ppp BlockingWaitStrategy . java <nl> + import com . lmax . disruptor . util . Util ; <nl> + import sun . misc . Unsafe ; <nl> + import java . lang . reflect . Field ; <nl> 
mmm FatalExitError . java <nl> ppp FatalExitError . java <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - private static final Logger log = LoggerFactory . getLogger ( FatalExitError . class ); <nl> 
mmm MeteorChat . java <nl> ppp MeteorChat . java <nl> + Meteor m = ( Meteor ) req . getSession () . getAttribute (" meteor "); <nl> 
mmm BerkeleyJETx . java <nl> ppp BerkeleyJETx . java <nl> - Preconditions . checkNotNull ( tx ); <nl> - return getClass () . getSimpleName () + tx . toString (); <nl> + return getClass () . getSimpleName () + ( null == tx ? " nulltx " : tx . toString ()); <nl> 
mmm ListenableFutureTest . java <nl> ppp ListenableFutureTest . java <nl> 
mmm TestAnalyzeTableTx . java <nl> ppp TestAnalyzeTableTx . java <nl> - if ( config . networked & & config . big ) { <nl> + if ( config . networked || config . big ) { <nl> 
mmm _ 393Test . java <nl> ppp _ 393Test . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore <nl> 
deleted file <nl> mmm ShowSource . java <nl> - package examples ; <nl> - import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> - import java . util . Locale ; <nl> - import javax . servlet . jsp . JspException ; <nl> - import javax . servlet . jsp . JspTagException ; <nl> - import javax . servlet . jsp . JspWriter ; <nl> 
mmm DefaultRestRegistryFactory . java <nl> ppp DefaultRestRegistryFactory . java <nl> + import org . apache . camel . spi . annotations . JdkService ; <nl> + @ JdkService ( RestRegistryFactory . FACTORY ) <nl> 
mmm YamlTableRuleConfigurationTest . java <nl> ppp YamlTableRuleConfigurationTest . java <nl> - assertThat ( actual . getKeyGeneratorColumnName (), is (" order _ id ")); <nl> - assertThat ( actual . getKeyGeneratorConfig (), instanceOf ( KeyGeneratorConfiguration . class )); <nl> + KeyGeneratorConfiguration keyGeneratorConfiguration = new KeyGeneratorConfiguration (); <nl> 
mmm Bug _ for _ issue _ 470 . java <nl> ppp Bug _ for _ issue _ 470 . java <nl> - public void test _ for _ issue _ 1 () throws Exception { <nl> + public void test _ for _ issue _ private () throws Exception { <nl> + public void test _ for _ issue _ method () throws Exception { <nl> + List < V2 > list = JSON . parseArray ("[{\" value \": null }]", V2 . class ); <nl> 
mmm FacebookSdkVersion . java <nl> ppp FacebookSdkVersion . java <nl> - public static final String BUILD = " 6 . 1 . 0 "; <nl> + public static final String BUILD = " 6 . 2 . 0 "; <nl> 
mmm PrintLocales . java <nl> ppp PrintLocales . java <nl> + String var ; <nl> + if ( StringTools . isEmpty ( variant )) { <nl> + var = ""; <nl> + } else { <nl> + var = " - " + variant ; <nl> + } <nl> - locales = locales + " " + element . getShortName () + " - " + variant ; <nl> + locales = locales + " " + element . getShortName () + var ; <nl> 
mmm _ 246 . java <nl> ppp _ 246 . java <nl> - public class StrobogrammaticNumber { <nl> + public class _ 246 { <nl> 
mmm TwoDataSources . java <nl> ppp TwoDataSources . java <nl> - Thread . sleep ( 15000 ); <nl> + Thread . sleep ( 5000 ); <nl> 
mmm AsyncHealthCheckDecorator . java <nl> ppp AsyncHealthCheckDecorator . java <nl> + import com . codahale . metrics . health . annotation . Async ; <nl> - import com . codahale . metrics . health . annotation . Async ; <nl> - Async async = ( Async ) healthCheck . getClass () . getAnnotation ( Async . class ); <nl> 
mmm InstanceListenerManager . java <nl> ppp InstanceListenerManager . java <nl> - import java . util . LinkedList ; <nl> 
mmm GcmIntentService . java <nl> ppp GcmIntentService . java <nl> + import org . whispersystems . textsecure . directory . Directory ; <nl> + Directory directory = Directory . getInstance ( context ); <nl> + directory . setToken ( directory . getToken ( message . getSource ()), true ); <nl> 
mmm InstrumentationModule . java <nl> ppp InstrumentationModule . java <nl> + import com . yammer . metrics . HealthCheckRegistry ; <nl> 
mmm RunnerTestDescriptor . java <nl> ppp RunnerTestDescriptor . java <nl> - private final Class <?> testClass ; <nl> - this . testClass = testClass ; <nl> - public Runner getRunner () { <nl> - return this . runner ; <nl> - } <nl> - public Class <?> getTestClass () { <nl> - return this . testClass ; <nl> - } <nl> 
new file <nl> ppp NullPointerAndEmptyArrayTest . java <nl> + package APITests ; <nl> + import java . net . URL ; <nl> + import CustomClassloaders . CustomURLClassLoader ; <nl> + public class NullPointerAndEmptyArrayTest { <nl> + public static void main ( String [] args ) throws Throwable { <nl> + NullPointerAndEmptyArrayTest test = new NullPointerAndEmptyArrayTest (); <nl> 
mmm SellerStep2View . java <nl> ppp SellerStep2View . java <nl> - return " Wait for blockchain confirmation "; <nl> + return " Wait for payment "; <nl> - " You need to wait until that the bitcoin buyer starts the " + model . dataModel . getCurrencyCode () + " payment . "; <nl> + " You need to wait until the bitcoin buyer starts the " + model . dataModel . getCurrencyCode () + " payment . "; <nl> 
new file <nl> ppp FileBrowserLifecyclePlugin . java <nl> + package org . pentaho . di . plugins . fileopensave . lifecycle ; <nl> + import org . pentaho . di . plugins . fileopensave . cache . FileCache ; <nl> + import org . pentaho . di . ui . spoon . SpoonLifecycleListener ; <nl> + import org . pentaho . di . ui . spoon . SpoonPerspective ; <nl> 
mmm EclipsePlugin . java <nl> ppp EclipsePlugin . java <nl> 
mmm GovernanceRuleRepository . java <nl> ppp GovernanceRuleRepository . java <nl> 
new file <nl> ppp GroupListTest . java <nl> + package org . apache . rocketmq . common . protocol ; <nl> + import org . apache . rocketmq . common . protocol . body . GroupList ; <nl> + import org . junit . Test ; <nl> + import java . util . HashSet ; <nl> + import java . util . UUID ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> 
mmm FlowableAppDefinitionService . java <nl> ppp FlowableAppDefinitionService . java <nl> 
mmm FakeAdaptiveDataSet . java <nl> ppp FakeAdaptiveDataSet . java <nl> + private final long chunkCount ; <nl> + this . chunkCount = lastChunkDurationUs == 0 ? fullChunks : fullChunks + 1 ; <nl> + } <nl> + public long getChunkCount () { <nl> + return chunkCount ; <nl> - return chunkIndex == getAllData () . size () - 1 ? lastChunkDurationUs : chunkDurationUs ; <nl> 
mmm TableTokenAssert . java <nl> ppp TableTokenAssert . java <nl> + * @ author panjuan <nl> - assertThat ( assertMessage . getFullAssertMessage (" Table tokens original literals assertion error : "), actual . getOriginalLiterals (), is ( expected . getOriginalLiterals ())); <nl> + assertThat ( assertMessage . getFullAssertMessage (" Table tokens table name assertion error : "), actual . getTableName (), is ( expected . getTableName ())); <nl> 
mmm RejoinerIntegrationTest . java <nl> ppp RejoinerIntegrationTest . java <nl> - static final GqlInputConverter INPUT _ CONVERTER = <nl> - GqlInputConverter . newBuilder () . add ( GreetingsRequest . getDescriptor () . getFile ()) . build (); <nl> 
mmm AtnManager . java <nl> ppp AtnManager . java <nl> 
mmm CardSpec . java <nl> ppp CardSpec . java <nl> - . positionType ( ABSOLUTE ) <nl> - . positionPx ( ALL , 0 ) <nl> 
mmm OpenTracingTracer . java <nl> ppp OpenTracingTracer . java <nl> - import lombok . Getter ; <nl> 
mmm RealmBaseAdapter . java <nl> ppp RealmBaseAdapter . java <nl> - public RealmBaseAdapter ( Context context , int resId , RealmResults < T > realmResults , boolean automaticUpdate ) { <nl> + public RealmBaseAdapter ( Context context , RealmResults < T > realmResults , boolean automaticUpdate ) { <nl> - this . resId = resId ; <nl> 
mmm PromiseNotificationUtil . java <nl> ppp PromiseNotificationUtil . java <nl> - } else { <nl> + } else if ( logger . isWarnEnabled ()) { <nl> 
mmm _ 158 . java <nl> ppp _ 158 . java <nl> - public class ReadNCharactersGivenRead4IICallMultipleTimes { <nl> + public class _ 158 { <nl> 
mmm UpdateStatement . java <nl> ppp UpdateStatement . java <nl> + public boolean isSQLParameterMarkerExpression ( final Column column ) { <nl> + return assignments . get ( column ) instanceof SQLParameterMarkerExpression ; <nl> + } <nl> 
mmm Version . java <nl> ppp Version . java <nl> - String PLUGIN _ VERSION = " 0 . 31 "; <nl> + String PLUGIN _ VERSION = " 0 . 32 "; <nl> 
mmm UberTestCaseGroovySourceSubPackages . java <nl> ppp UberTestCaseGroovySourceSubPackages . java <nl> 

new file <nl> ppp IntegrationTest . java <nl> + package backtype . storm . testing ; <nl> + public interface IntegrationTest { <nl> + } <nl> 
mmm GsonBuilderTest . java <nl> ppp GsonBuilderTest . java <nl> - import com . google . gson . stream . JsonReader ; <nl> - import com . google . gson . stream . JsonWriter ; <nl> - import java . io . IOException ; <nl> + import com . google . gson . stream . JsonReader ; <nl> + import com . google . gson . stream . JsonWriter ; <nl> 
new file <nl> ppp JsonPathUnitTest . java <nl> + package com . baeldung . jsonpath . introduction ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . nio . charset . Charset ; <nl> + import java . nio . charset . StandardCharsets ; <nl> 
mmm PythonInPlaceBinary . java <nl> ppp PythonInPlaceBinary . java <nl> + import com . facebook . buck . rules . AddToRuleKey ; <nl> + @ AddToRuleKey <nl> + @ AddToRuleKey <nl> + @ AddToRuleKey <nl> + @ AddToRuleKey <nl> 
new file <nl> ppp IntStreamsConversionsUnitTest . java <nl> + package com . baeldung . intstreams . conversion ; <nl> + import org . junit . Test ; <nl> + import java . util . List ; <nl> + import java . util . stream . Collectors ; <nl> + import java . util . stream . IntStream ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> 
mmm OwnTracksProtocolDecoder . java <nl> ppp OwnTracksProtocolDecoder . java <nl> - boolean haveTopic = root . containsKey (" topic "); <nl> - boolean haveTid = root . containsKey (" tid "); <nl> - if ( haveTopic ) { <nl> + if ( root . containsKey (" topic ")) { <nl> - if ( haveTid ) { <nl> + if ( root . containsKey (" tid ")) { <nl> 
mmm OServerShutdownMainTest . java <nl> ppp OServerShutdownMainTest . java <nl> + import com . orientechnologies . orient . core . Orient ; <nl> + private boolean allowJvmShutdownPrev ; <nl> + private String prevPassword ; <nl> + private String prevOrientHome ; <nl> - System . setProperty (" ORIENTDB _ ROOT _ PASSWORD ", " rootPassword "); <nl> 
new file <nl> ppp FlinkNacosTest2 . java <nl> + package com . zhisheng . configration . nacos ; <nl> + import com . alibaba . nacos . api . NacosFactory ; <nl> + import com . alibaba . nacos . api . config . ConfigService ; <nl> + import com . alibaba . nacos . api . config . listener . Listener ; <nl> + import org . apache . flink . api . java . tuple . Tuple2 ; <nl> 
mmm MetricsCacheManagerServer . java <nl> ppp MetricsCacheManagerServer . java <nl> 
mmm InstrumentedConnectionFactory . java <nl> ppp InstrumentedConnectionFactory . java <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + import java . lang . reflect . Method ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + private Method getProtocols ; <nl> 
mmm CollectionsTestCase . java <nl> ppp CollectionsTestCase . java <nl> - return ( Integer ) o1 - ( Integer ) o2 ; <nl> + return (( Integer ) o1 ) . intValue () - (( Integer ) o2 ) . intValue (); <nl> - assertTrue (" Element " + i , ( Integer ) v . elementAt ( i - 1 ) <= ( Integer ) v . elementAt ( i )); <nl> 
mmm GroupSelectionQuery . java <nl> ppp GroupSelectionQuery . java <nl> 
mmm NetworkStateManager . java <nl> ppp NetworkStateManager . java <nl> - import androidx . appcompat . app . AppCompatActivity ; <nl> - import androidx . fragment . app . Fragment ; <nl> - import static java . util . Objects . requireNonNull ; <nl> + import com . kunminx . architecture . utils . Utils ; <nl> 
mmm DigestAuthTokenServiceConfigurator . java <nl> ppp DigestAuthTokenServiceConfigurator . java <nl> - import org . jgroups . auth . MD5Token ; <nl> 
mmm Trigger . java <nl> ppp Trigger . java <nl> + @ Override <nl> 
mmm ShadowBinderBridge . java <nl> ppp ShadowBinderBridge . java <nl> - return ReflectionHelpers . callInstanceMethod ( realBinder , " onTransact ", <nl> - ClassParameter . from ( int . class , code ), <nl> - ClassParameter . from ( Parcel . class , data ), <nl> - ClassParameter . from ( Parcel . class , reply ), <nl> 
mmm SampleConfiguration . java <nl> ppp SampleConfiguration . java <nl> - public static final String CHANNEL _ PROP = " aeron . example . channel "; <nl> - public static final String STREAM _ ID _ PROP = " aeron . example . streamId "; <nl> + public static final String CHANNEL _ PROP = " aeron . sample . channel "; <nl> 
mmm TopReportVisitorTest . java <nl> ppp TopReportVisitorTest . java <nl> - . readFrom ( getClass () . getResourceAsStream (" alert . report . xml "), " utf - 8 "); <nl> + . readFrom ( getClass () . getResourceAsStream (" alertReport . xml "), " utf - 8 "); <nl> 
new file <nl> ppp _ 647 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 647 { <nl> + public int countSubstrings ( String s ) { <nl> + int count = 0 ; <nl> + for ( int i = 0 ; i < s . length (); i + + ) { <nl> + } <nl> + return count ; <nl> + } <nl> + private int extendPalindrome ( String s , int left , int right ) { <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 7 . 1 "; <nl> + public static final String VERSION = " 2 . 7 . 2 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 7 . 1 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 7 . 2 "; <nl> 
new file <nl> ppp ExpectedAggregationDistinctToken . java <nl> + package io . shardingsphere . core . parsing . integrate . jaxb . token ; <nl> + import lombok . Getter ; <nl> + import lombok . Setter ; <nl> + import javax . xml . bind . annotation . XmlAccessType ; <nl> + import javax . xml . bind . annotation . XmlAccessorType ; <nl> 
mmm FunctionsOracle . java <nl> ppp FunctionsOracle . java <nl> - FUNCTIONS . put (" NEXTVAL ", <nl> - new FunctionInfo (" NEXTVAL ", NEXTVAL , VAR _ ARGS , Value . DECIMAL , false , false , true , false )); <nl> 
mmm AppConfig . java <nl> ppp AppConfig . java <nl> - public final static boolean DEBUG = true ; <nl> + public final static boolean DEBUG = false ; <nl> 
mmm Timed . java <nl> ppp Timed . java <nl> 
new file <nl> ppp Unwrap . java <nl> + package com . squareup . moshi . recipes ; <nl> + import com . squareup . moshi . JsonAdapter ; <nl> + import com . squareup . moshi . JsonQualifier ; <nl> + import com . squareup . moshi . JsonReader ; <nl> + import com . squareup . moshi . JsonWriter ; <nl> + import com . squareup . moshi . Moshi ; <nl> 
mmm ShardingRuleMockBuilder . java <nl> ppp ShardingRuleMockBuilder . java <nl> + import java . util . LinkedList ; <nl> - private final List < String > shardingColumns = new ArrayList <>(); <nl> + private final List < TableRule > tableRules = new LinkedList <>(); <nl> + private final List < String > shardingColumns = new LinkedList <>(); <nl> 
mmm LayersTestCase . java <nl> ppp LayersTestCase . java <nl> + " wildflyee . api ", <nl> 
mmm FileWorkerMasterSyncExecutorTest . java <nl> ppp FileWorkerMasterSyncExecutorTest . java <nl> + import static org . mockito . Mockito . mock ; <nl> + import static org . mockito . Mockito . when ; <nl> + import static org . mockito . Mockito . anyLong ; <nl> + import static org . mockito . Mockito . eq ; <nl> 
new file <nl> ppp Main . java <nl> + package com . zhisheng . examples . streaming . parallelism ; <nl> + import org . apache . flink . api . common . functions . MapFunction ; <nl> + import org . apache . flink . api . java . utils . ParameterTool ; <nl> + import org . apache . flink . streaming . api . environment . StreamExecutionEnvironment ; <nl> 
new file <nl> ppp ProxySchemaContextsTest . java <nl> + package org . apache . shardingsphere . proxy . backend . schema ; <nl> + import org . apache . shardingsphere . infra . auth . Authentication ; <nl> + import org . apache . shardingsphere . infra . config . properties . ConfigurationProperties ; <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 7 . 3 "; <nl> + public static final String VERSION = " 2 . 8 . 0 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 7 . 3 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 8 . 0 "; <nl> 
mmm AppLifecycles . java <nl> ppp AppLifecycles . java <nl> + import android . support . annotation . NonNull ; <nl> - void attachBaseContext ( Context base ); <nl> + void attachBaseContext (@ NonNull Context base ); <nl> - void onCreate ( Application application ); <nl> + void onCreate (@ NonNull Application application ); <nl> 
mmm ComponentsWs . java <nl> ppp ComponentsWs . java <nl> - . setDescription (" Get information about a component ( file , directory , project , . . . ) and its ancestors or descendants . < br >" + <nl> + . setDescription (" Get information about a component ( file , directory , project , . . . ) and its ancestors or descendants . " + <nl> 
new file <nl> ppp Issue1662 . java <nl> + package com . alibaba . json . bvt . issue _ 1600 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONArray ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import com . alibaba . fastjson . annotation . JSONField ; <nl> 
mmm ExternalResources . java <nl> ppp ExternalResources . java <nl> + @ Deprecated <nl> 
mmm ViewService . java <nl> ppp ViewService . java <nl> - import java . util . Map ; <nl> - final Map < String , PluginMetadataSummary > requirements = Stream . concat ( <nl> - view . requires () . entrySet () . stream (), <nl> - viewRequirementsFactory . create ( view ) . entrySet () . stream () <nl> - ) . collect ( Collectors . toMap ( Map . Entry :: getKey , Map . Entry :: getValue , ( entry1 , entry2 ) - > entry1 )); <nl> 
mmm NQueenProblem . java <nl> ppp NQueenProblem . java <nl> - public boolean solve ( int current , Position [] positions , List < List < String >> result , int n ) { <nl> + public void solve ( int current , Position [] positions , List < List < String >> result , int n ) { <nl> - return true ; <nl> + return ; <nl> 
mmm PLSQLParserTest . java <nl> ppp PLSQLParserTest . java <nl> + @ Test <nl> + public void testCodingStyleExample () throws Exception { <nl> + parsePLSQL ( IOUtils . toString ( PLSQLParserTest . class . getResourceAsStream (" ast / CodingStyleExample . pls "))); <nl> + } <nl> 
mmm ConnectionStateAccessor . java <nl> ppp ConnectionStateAccessor . java <nl> - import org . mockito . internal . util . reflection . Whitebox ; <nl> + import java . lang . reflect . Field ; <nl> - public static final void setDebugWaitOnExpiredForClient ( CuratorFramework client ) <nl> + public static void setDebugWaitOnExpiredForClient ( CuratorFramework client ) <nl> 
mmm ZQLSession . java <nl> ppp ZQLSession . java <nl> + setStatus ( Status . READY ); <nl> 
mmm GsonUtilsTest . java <nl> ppp GsonUtilsTest . java <nl> - " java . util . Map < java . lang . String , java . util . Collection < java . lang . String >>", <nl> + " java . util . Map < java . lang . String , java . util . List < java . lang . String >>", <nl> 
mmm DB2RunstatsTool . java <nl> ppp DB2RunstatsTool . java <nl> - sql + = getLineSeparator (); <nl> - sql + = String . format (" TABLESAMPLE SYSTEM ( % d )", settings . getSamplePercent ()); <nl> + sql + = String . format (" TABLESAMPLE SYSTEM ( % d )", settings . getSamplePercent ()); <nl> 
new file <nl> ppp ApolloDataSourceProvider . java <nl> + package com . ctrip . framework . apollo . ds ; <nl> + import org . codehaus . plexus . logging . LogEnabled ; <nl> + import org . codehaus . plexus . logging . Logger ; <nl> + import org . unidal . dal . jdbc . datasource . DataSourceProvider ; <nl> 
mmm DatadogNamingConventionTest . java <nl> ppp DatadogNamingConventionTest . java <nl> + import io . micrometer . core . lang . Nullable ; <nl> - import static org . mockito . ArgumentMatchers . eq ; <nl> - import static org . mockito . BDDMockito . given ; <nl> - import static org . mockito . BDDMockito . mock ; <nl> 
new file <nl> ppp MemoryUtils . java <nl> + package com . jme3 . util ; <nl> + import java . lang . management . ManagementFactory ; <nl> + import java . util . logging . Level ; <nl> + import java . util . logging . Logger ; <nl> + import javax . management . JMException ; <nl> + import javax . management . MBeanServer ; <nl> 
mmm PushCharacterCalculator . java <nl> ppp PushCharacterCalculator . java <nl> - private static final int MAX _ TOTAL _ SIZE = 2000 ; <nl> + private static final int MAX _ TOTAL _ SIZE = 64 * 1024 ; <nl> 
mmm ShadowSettings . java <nl> ppp ShadowSettings . java <nl> + public static void set24HourTimeFormat ( boolean use24HourTimeFormat ) { <nl> + Settings . System . putInt ( Robolectric . application . getContentResolver (), Settings . System . TIME _ 12 _ 24 , use24HourTimeFormat ? 24 : 12 ); <nl> + } <nl> 
mmm MailTest . java <nl> ppp MailTest . java <nl> + @ Ignore <nl> 
mmm JsonReverseGeocoder . java <nl> ppp JsonReverseGeocoder . java <nl> - import org . apache . http . HttpEntity ; <nl> - import org . apache . http . client . methods . CloseableHttpResponse ; <nl> - import org . apache . http . client . methods . HttpGet ; <nl> - import org . apache . http . impl . client . CloseableHttpClient ; <nl> 
mmm Mindmaps . java <nl> ppp Mindmaps . java <nl> - return clients . computeIfAbsent ( key , ( k ) - > loadImplementation ( factoryClassname , location , keyspace )); <nl> + return clients . computeIfAbsent ( key , ( k ) - > loadImplementation ( factoryClassname , location , finalKeyspace )); <nl> 
mmm TreeShapedStack . java <nl> ppp TreeShapedStack . java <nl> - private TreeShapedStack ( TreeShapedStack previous , T data , int size ) { <nl> + private TreeShapedStack ( TreeShapedStack < T > previous , T data , int size ) { <nl> - public TreeShapedStack pop () { <nl> + public TreeShapedStack < T > pop () { <nl> 
mmm AuthenticationChangedListenerTest . java <nl> ppp AuthenticationChangedListenerTest . java <nl> - private static final String AUTHENTICATION _ YAML = " password : root \ nusername : root \ n "; <nl> + private static final String AUTHENTICATION _ YAML = " users :\ n " + " root1 :\ n password : root1 \ n " <nl> 
mmm MediaStoreHelper . java <nl> ppp MediaStoreHelper . java <nl> + data . moveToFirst (); <nl> 
mmm MyApplication . java <nl> ppp MyApplication . java <nl> - import io . flutter . plugin . common . PluginRegistry ; <nl> - import io . flutter . plugins . GeneratedPluginRegistrant ; <nl> 
mmm ValidationError . java <nl> ppp ValidationError . java <nl> + import android . content . Context ; <nl> + public String getCollatedErrorMessage ( final Context context ) { <nl> + StringBuilder stringBuilder = new StringBuilder (); <nl> + for ( Rule failedRule : failedRules ) { <nl> + String message = failedRule . getMessage ( context ) . trim (); <nl> 
mmm BinaryTCPClientImplTest . java <nl> ppp BinaryTCPClientImplTest . java <nl> - import org . apache . jorphan . util . JOrphanUtils ; <nl> + import java . io . ByteArrayInputStream ; <nl> + import java . io . ByteArrayOutputStream ; <nl> + import java . io . InputStream ; <nl> + import org . apache . jorphan . util . JOrphanUtils ; <nl> 
mmm SendJob . java <nl> ppp SendJob . java <nl> - return new SendReq ( message . getPduHeaders (), body ); <nl> + return new SendReq ( message . getPduHeaders (), <nl> + body , <nl> + message . getDatabaseMessageId (), <nl> + message . getDatabaseMessageBox (), <nl> + message . getSentTimestamp ()); <nl> 
mmm TitanConstants . java <nl> ppp TitanConstants . java <nl> + import com . google . common . base . Preconditions ; <nl> + import java . io . InputStream ; <nl> + Package p = TitanConstants . class . getPackage (); <nl> + Preconditions . checkNotNull ( p , " Unable to load package containing class " + TitanConstants . class ); <nl> 
mmm TotemFrameDecoder . java <nl> ppp TotemFrameDecoder . java <nl> - int length = Integer . parseInt ( buf . toString ( 2 , 2 , Charset . defaultCharset ()), 16 ); <nl> + int length = Integer . parseInt ( buf . toString ( buf . readerIndex () + 2 , 2 , Charset . defaultCharset ()), 16 ); <nl> 
mmm EnglishConfusionProbabilityRule . java <nl> ppp EnglishConfusionProbabilityRule . java <nl> + " let us know below ", <nl> + " let us know in ", <nl> + " your kind of ", <nl> + " sneak peek ", <nl> + " the 4 of you ", <nl> + " confirm you own the ", <nl> + " your ride " <nl> 
mmm InputUtils . java <nl> ppp InputUtils . java <nl> - final IBinder windowToken = view == null ? null : view . getWindowToken (); <nl> + final IBinder windowToken = view != null ? view . getWindowToken () : null ; <nl> 
mmm Percentile . java <nl> ppp Percentile . java <nl> - return type () + "(" + percentile () + "," + field () + ")"; <nl> + return type () + "(" + field () + "," + percentile () + ")"; <nl> 
new file <nl> ppp SchemaHashTest . java <nl> + package com . linkedin . pinot . common . data ; <nl> + import org . codehaus . jackson . map . ObjectMapper ; <nl> + import org . testng . annotations . Test ; <nl> + public class SchemaHashTest { <nl> + private String makeSchema () { <nl> + return "{" + <nl> + "\" schemaName \":\" TestSchema \"," + <nl> 
new file <nl> ppp BodyOnlyAggregationStrategyTest . java <nl> + package org . apache . camel . processor . aggregator ; <nl> + import org . apache . camel . AggregationStrategy ; <nl> + import org . apache . camel . ContextTestSupport ; <nl> + import org . apache . camel . Exchange ; <nl> + import org . apache . camel . ExtendedExchange ; <nl> 
mmm Keywords . java <nl> ppp Keywords . java <nl> + import java . util . Collection ; <nl> + import com . google . common . collect . Sets ; <nl> + import com . google . common . io . LineProcessor ; <nl> 
mmm RequestInfo . java <nl> ppp RequestInfo . java <nl> + ", uri ='" + request . uri () + '\'' + <nl> 
mmm FileSystemLogger . java <nl> ppp FileSystemLogger . java <nl> - import org . sonar . api . scan . filesystem . FileSystemFilter ; <nl> 
new file <nl> ppp JobQueueChangeEvent . java <nl> + package org . apache . hadoop . mapreduce . jobhistory ; <nl> + import org . apache . avro . util . Utf8 ; <nl> + import org . apache . hadoop . mapreduce . JobID ; <nl> + @ SuppressWarnings (" deprecation ") <nl> + public class JobQueueChangeEvent implements HistoryEvent { <nl> 
mmm FutureAdapter . java <nl> ppp FutureAdapter . java <nl> 
mmm RobolectricTest . java <nl> ppp RobolectricTest . java <nl> + import timber . log . Timber ; <nl> + Timber . uprootAll (); <nl> 
mmm PersistenceConfig . java <nl> ppp PersistenceConfig . java <nl> - @ ComponentScan ( basePackages = { " com . baeldung . persistence ", " com . baeldung . modelmapper " }) <nl> - @ EnableJpaRepositories ( basePackages = {" com . baeldung . persistence . dao ", " com . baeldung . modelmapper . repository "}) <nl> 
mmm LayoutThreadPoolExecutor . java <nl> ppp LayoutThreadPoolExecutor . java <nl> + import android . os . Looper ; <nl> + if ( Looper . myLooper () == null ) { <nl> + Looper . prepare (); <nl> + } <nl> 
mmm TimeBucketUtilsTest . java <nl> ppp TimeBucketUtilsTest . java <nl> + import java . util . TimeZone ; <nl> + import org . junit . After ; <nl> + import org . junit . Before ; <nl> + @ Before <nl> + public void setup () { <nl> + TimeZone . setDefault ( TimeZone . getTimeZone (" Asia / Shanghai ")); <nl> + } <nl> 
mmm ShardingDataSourceMetaDataTest . java <nl> ppp ShardingDataSourceMetaDataTest . java <nl> - public void testGetAllInstanceDataSourceNamesForMasterSlaveShardingRule () { <nl> + public void assertGetAllInstanceDataSourceNamesForMasterSlaveShardingRule () { <nl> - public void testGetAllInstanceDataSourceNamesForShardingRule () { <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 0 . 2 . 1 "); <nl> + public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 3 . 0 "); <nl> 
new file <nl> ppp OrderByExtractResult . java <nl> + package io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result ; <nl> + import io . shardingsphere . core . constant . OrderDirection ; <nl> + import io . shardingsphere . core . parsing . parser . sql . SQLStatement ; <nl> 
mmm SpringContextTest . java <nl> ppp SpringContextTest . java <nl> - package org . baeldung ; <nl> + package com . baeldung ; <nl> 
mmm AbstractPhone . java <nl> ppp AbstractPhone . java <nl> - protected ArrayList < Integer > extensions ; <nl> + protected ArrayList < Integer > extensions = new ArrayList <>(); <nl> 
mmm TextEditorActivityTest . java <nl> ppp TextEditorActivityTest . java <nl> - public void testOpenFileUri () { <nl> + public void testOpenFileUri () throws IOException { <nl> - private File simulateFile () { <nl> + private File simulateFile () throws IOException { <nl> - File file = new File (" text . txt "); <nl> 
mmm ContextGetterDecl . java <nl> ppp ContextGetterDecl . java <nl> - if ( obj == null ) return false ; <nl> + if ( this == obj ) return true ; <nl> - if ( this == obj ) return true ; <nl> - if ( this . hashCode () != obj . hashCode () ) return false ; <nl> 
mmm GoTestConsoleProperties . java <nl> ppp GoTestConsoleProperties . java <nl> + String failedMessage = ServiceMessageBuilder . testFailed ( myCurrentTest ) . addAttribute (" message ", myStdOut . toString ()) . toString (); <nl> - return super . processServiceMessages ( failedMessage (), outputType , visitor ) <nl> 
mmm ReverseAlternateKNodes . java <nl> ppp ReverseAlternateKNodes . java <nl> + * k is less than or equal to 1 . <nl> + if ( k <= 1 ){ <nl> + return head ; <nl> + } <nl> 
mmm UpgradeableModules . java <nl> ppp UpgradeableModules . java <nl> - " java . jnlp ", <nl> - " jdk . internal . vm . compiler . management ", <nl> - " jdk . deploy ", <nl> - " jdk . javaws ", <nl> - " jdk . plugin ", <nl> - " jdk . plugin . dom " <nl> - ); <nl> + " jdk . internal . vm . compiler . management "); <nl> 
mmm InMemoryGraphTest . java <nl> ppp InMemoryGraphTest . java <nl> + @ Override <nl> + public void testConfiguration () {} <nl> 
new file <nl> ppp ListDataSetGroups . java <nl> + package com . example . forecast ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . forecast . ForecastClient ; <nl> + import software . amazon . awssdk . services . forecast . model . DatasetGroupSummary ; <nl> 
mmm NoSqlDaoServiceTestSuite . java <nl> ppp NoSqlDaoServiceTestSuite . java <nl> - Arrays . asList (" sql / schema - entities - hsql . sql ", " sql / schema - entities - idx . sql ", " sql / system - data . sql ", " sql / system - test . sql "), <nl> + Arrays . asList (" sql / schema - types - hsql . sql ", " sql / schema - entities - hsql . sql ", " sql / schema - entities - idx . sql ", " sql / system - data . sql ", " sql / system - test . sql "), <nl> 
new file <nl> ppp SelectItemPrefixTokenGenerator . java <nl> + package org . apache . shardingsphere . core . rewrite . token . generator ; <nl> + import com . google . common . base . Optional ; <nl> + import org . apache . shardingsphere . core . parse . sql . segment . dml . SelectItemsSegment ; <nl> + import org . apache . shardingsphere . core . parse . sql . segment . dml . item . AggregationDistinctSelectItemSegment ; <nl> 
mmm SQLTokenGenerateEngineTest . java <nl> ppp SQLTokenGenerateEngineTest . java <nl> + SelectStatement selectStatement = new SelectStatement (); <nl> + selectStatement . getSQLSegments () . add ( createSelectItemsSegment ()); <nl> + optimizedStatement = new ShardingSelectOptimizedStatement ( selectStatement , Collections . < ShardingCondition > emptyList (), new AndCondition (), Collections . < SelectItem > emptyList (), <nl> 
mmm HomeFragment . java <nl> ppp HomeFragment . java <nl> - mTabAdapter . addTab ( new TabFragmentPagerAdapter . FragmentCreator () { <nl> - @ Override <nl> - public Fragment createFragment () { <nl> - return NotYetImplementedFragment . newInstance (); <nl> - } <nl> - }, getString ( R . string . home _ nine _ and _ quater )); <nl> 
mmm GoMultiplePackagesQuickFix . java <nl> ppp GoMultiplePackagesQuickFix . java <nl> + import com . intellij . ui . IdeBorderFactory ; <nl> + import com . intellij . ui . components . JBLabel ; <nl> + import com . intellij . util . NotNullFunction ; <nl> + import javax . swing . *; <nl> + list . installCellRenderer ( new NotNullFunction < Object , JComponent >() { <nl> 
mmm GetTheElementInTheMiddleOfTheList . java <nl> ppp GetTheElementInTheMiddleOfTheList . java <nl> + public ListNode < Integer > get2 ( ListNode < Integer > list ) { <nl> + validateInput ( list ); <nl> + ListNode < Integer > currentNode = list ; <nl> + ListNode < Integer > fastNode = list . getNext (); <nl> 
mmm AppLogManager . java <nl> ppp AppLogManager . java <nl> - import java . net . URL ; <nl> - import org . apache . log4j . Logger ; <nl> - import org . apache . log4j . xml . DOMConfigurator ; <nl> - protected Logger m _ logger = Logger . getLogger ( AppLogManager . class ); <nl> - URL file = this . getClass () . getClassLoader () . getResource (" config / log4j . xml "); <nl> 
new file <nl> ppp decomp005 . java <nl> + package com . ibm . jvmti . tests . decompResolveFrame ; <nl> + public class decomp005 <nl> + { <nl> + private static boolean pass ; <nl> + private static boolean entered ; <nl> + private native boolean triggerDecompile (); <nl> +  <nl> + public void interp ( boolean jitted ) throws Throwable { <nl> 
deleted file <nl> mmm EdgeCasesTokenizerTest . java <nl> - package net . sourceforge . pmd . cpd ; <nl> - import java . io . IOException ; <nl> - import java . nio . charset . StandardCharsets ; <nl> - import org . apache . commons . io . IOUtils ; <nl> - import org . junit . Test ; <nl> - public class EdgeCasesTokenizerTest { <nl> 
mmm UploadController . java <nl> ppp UploadController . java <nl> + import java . io . File ; <nl> 
mmm ByteBuddyAgentTest . java <nl> ppp ByteBuddyAgentTest . java <nl> + import org . junit . After ; <nl> + import java . lang . instrument . Instrumentation ; <nl> + import java . lang . reflect . Field ; <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + import static org . mockito . Mockito . mock ; <nl> 
mmm DatabaseUtils . java <nl> ppp DatabaseUtils . java <nl> - " action _ plans ", <nl> - " action _ plans _ reviews ", <nl> - " active _ dashboards ", <nl> - " active _ filters ", <nl> - " active _ rules ", <nl> - " active _ rule _ changes ", <nl> - " active _ rule _ parameters ", <nl> - " active _ rule _ param _ changes ", <nl> 
mmm TargetedAtParentFragment . java <nl> ppp TargetedAtParentFragment . java <nl> - public class TargetParentFragment extends Fragment { <nl> + public class TargetedAtParentFragment extends Fragment { <nl> - private static final String KEY _ PREFIX = TargetParentFragment . class . getName () + ' . '; <nl> 
mmm BuckParsingTest . java <nl> ppp BuckParsingTest . java <nl> + public void testExtensionFile () { <nl> + doTest (); <nl> + } <nl> 
mmm WebSocketChat . java <nl> ppp WebSocketChat . java <nl> + import org . codehaus . jackson . map . ObjectMapper ; <nl> + import java . io . IOException ; <nl> 
mmm BeanIds . java <nl> ppp BeanIds . java <nl> 
new file <nl> ppp CheckerTest . java <nl> + package com . puppycrawl . tools . checkstyle ; <nl> + import com . puppycrawl . tools . checkstyle . api . CheckstyleException ; <nl> + import junit . framework . TestCase ; <nl> + public class CheckerTest <nl> + extends TestCase <nl> + { <nl> + public void testPackageNames () throws CheckstyleException <nl> 
mmm UploaderFactoryTest . java <nl> ppp UploaderFactoryTest . java <nl> + import static org . junit . Assert . assertTrue ; <nl> + import java . util . HashMap ; <nl> + import org . junit . Test ; <nl> + import cc . arduino . packages . uploaders . GenericNetworkUploader ; <nl> - import org . junit . Test ; <nl> 
new file <nl> ppp ConstraintViolationExceptionHandler . java <nl> + package com . baeldung . spring . controller ; <nl> + import org . springframework . http . HttpHeaders ; <nl> + import org . springframework . http . HttpStatus ; <nl> + import org . springframework . http . ResponseEntity ; <nl> + import org . springframework . web . bind . annotation . ControllerAdvice ; <nl> 
mmm EnglishDashRule . java <nl> ppp EnglishDashRule . java <nl> + import org . languagetool . rules . Example ; <nl> + addExamplePair ( Example . wrong (" I ' ll buy a new < marker > T — shirt </ marker > . "), <nl> + Example . fixed (" I ' ll buy a new < marker > T - shirt </ marker > . ")); <nl> 
mmm BaseDCLIntegrateTest . java <nl> ppp BaseDCLIntegrateTest . java <nl> - protected void dropUserIfExisted ( final Connection connection ) { <nl> - String name = ! Strings . isNullOrEmpty ( assertion . getNewName ()) ? assertion . getUser () : assertion . getNewName (); <nl> - String dropSQL = " drop " + assertion . getType () + " " + name ; <nl> 
mmm BaseDataHandler . java <nl> ppp BaseDataHandler . java <nl> - ctx . fireChannelRead ( handlePosition (( Position ) msg )); <nl> + Position position = handlePosition (( Position ) msg ); <nl> + if ( position != null ) { <nl> + ctx . fireChannelRead ( position ); <nl> + } <nl> 
mmm QueueUtils . java <nl> ppp QueueUtils . java <nl> 
mmm Api . java <nl> ppp Api . java <nl> - import com . google . gson . GsonBuilder ; <nl> -  <nl> + @ SuppressWarnings (" unchecked ") <nl> - return ( T ) gson . fromJson ( sb . toString (), t . getClass ()); <nl> + return ( T ) gson . fromJson ( sb . toString (), ( Class < T >) t . getClass ()); <nl> 
mmm FlattenTest . java <nl> ppp FlattenTest . java <nl> 
mmm VarClientStr . java <nl> ppp VarClientStr . java <nl> - CHATBOX _ TYPED _ TEXT ( 1 ), <nl> - INPUT _ TEXT ( 22 ), <nl> - PRIVATE _ MESSAGE _ TARGET ( 23 ), <nl> - RECENT _ CLAN _ CHAT ( 129 ); <nl> + CHATBOX _ TYPED _ TEXT ( 335 ), <nl> + INPUT _ TEXT ( 359 ), <nl> + PRIVATE _ MESSAGE _ TARGET ( 360 ), <nl> 
new file <nl> ppp ProtocolPackager . java <nl> + package com . ai . cloud . skywalking . util ; <nl> + import java . util . Arrays ; <nl> + public class ProtocolPackager { <nl> + public static byte [] pack ( byte [] data ) { <nl> + byte [] dataPackage = new byte [ data . length + 4 ]; <nl> + packDataText ( data , dataPackage ); <nl> 
mmm DemoUtil . java <nl> ppp DemoUtil . java <nl> - import com . google . android . exoplayer . ExoPlayerLibraryInfo ; <nl> - import android . content . Context ; <nl> - import android . content . pm . PackageInfo ; <nl> - import android . content . pm . PackageManager . NameNotFoundException ; <nl> - import android . os . Build ; <nl> 
mmm TestNodeManagerMetrics . java <nl> ppp TestNodeManagerMetrics . java <nl> + import org . apache . hadoop . metrics2 . lib . DefaultMetricsSystem ; <nl> + import org . junit . Assert ; <nl> + DefaultMetricsSystem . initialize (" NodeManager "); <nl> + Assert . assertTrue (! metrics . containerLaunchDuration . changed ()); <nl> 
mmm InformationDisclosureDebugErrors . java <nl> ppp InformationDisclosureDebugErrors . java <nl> - private static final Logger logger = Logger . getLogger ( InformationDisclosureDebugErrors . class . getClass ()); <nl> + private static final Logger logger = Logger . getLogger ( InformationDisclosureDebugErrors . class ); <nl> 
new file <nl> ppp OEncryptionFactoryTest . java <nl> + package com . orientechnologies . orient . core . encryption . impl ; <nl> + import com . orientechnologies . orient . core . encryption . OEncryption ; <nl> + import com . orientechnologies . orient . core . encryption . OEncryptionFactory ; <nl> + import org . junit . Assert ; <nl> 
mmm StaticInitializerExampleTest . java <nl> ppp StaticInitializerExampleTest . java <nl> - import org . junit . Ignore ; <nl> - @ Ignore (" Temporary ignored ") <nl> 
mmm ReadSourceTranslatorBatch . java <nl> ppp ReadSourceTranslatorBatch . java <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - Map < String , String > datasetSourceOptions = new HashMap <>(); <nl> - datasetSourceOptions . put ( DatasetSourceBatch . BEAM _ SOURCE _ OPTION , serializedSource ); <nl> 
mmm ReportingTests . java <nl> ppp ReportingTests . java <nl> - public class ReportingTest extends AbstractJUnit5TestEngineTests { <nl> + public class ReportingTests extends AbstractJUnit5TestEngineTests { <nl> - public void threeReportEntriesArePublished () { <nl> + void threeReportEntriesArePublished () { <nl> 
deleted file <nl> mmm MergedMarkupFragment . java <nl> - package com . pmease . commons . wicket ; <nl> - import java . util . ArrayList ; <nl> - import java . util . Iterator ; <nl> - import java . util . List ; <nl> - import org . apache . wicket . markup . IMarkupFragment ; <nl> - import org . apache . wicket . markup . MarkupElement ; <nl> 
new file <nl> ppp TestShardingEncryptor . java <nl> + package org . apache . shardingsphere . core . fixture ; <nl> + import lombok . Getter ; <nl> + import lombok . Setter ; <nl> + import org . apache . shardingsphere . spi . algorithm . encrypt . ShardingEncryptor ; <nl> + import java . util . Properties ; <nl> 
deleted file <nl> mmm MainActivity . java <nl> - package io . virtualapp . test ; <nl> - import android . app . Activity ; <nl> - import android . content . Intent ; <nl> - import android . os . Bundle ; <nl> - import android . view . View ; <nl> - import android . view . ViewGroup ; <nl> - import android . widget . Button ; <nl> 

mmm BasicQueryCassandra . java <nl> ppp BasicQueryCassandra . java <nl> - } <nl> + public static class KeyValue implements Serializable { <nl> + private String key ; <nl> + private Integer value ; <nl> - class KeyValue implements Serializable { <nl> - private String key ; <nl> - private Integer value ; <nl> + public static KeyValue newInstance ( String k , Integer v ) { <nl> 
mmm ProvidersRepository . java <nl> ppp ProvidersRepository . java <nl> 
new file <nl> ppp TestUnderFileSystemFileOutStream . java <nl> + package alluxio . client . block . stream ; <nl> + import java . io . IOException ; <nl> + import java . nio . ByteBuffer ; <nl> + import java . util . Arrays ; <nl> + public class TestUnderFileSystemFileOutStream extends UnderFileSystemFileOutStream { <nl> 
mmm GuiceSetupTest . java <nl> ppp GuiceSetupTest . java <nl> + import bisq . core . locale . CurrencyUtil ; <nl> + import bisq . core . locale . Res ; <nl> + Res . setup (); <nl> + CurrencyUtil . setup (); <nl> 
mmm Main . java <nl> ppp Main . java <nl> 
mmm SeedNodesRepository . java <nl> ppp SeedNodesRepository . java <nl> + new NodeAddress (" 2zxtnprnx5wqr7a3 . onion : 8000 "), <nl> 
new file <nl> ppp LibJitsiActivator . java <nl> + package net . java . sip . communicator . impl . libjitsi ; <nl> + import org . jitsi . service . libjitsi . *; <nl> + import org . osgi . framework . *; <nl> + public class LibJitsiActivator <nl> + implements BundleActivator <nl> + { <nl> + public void start ( BundleContext bundleContext ) <nl> 
mmm ExternalFilesHelper . java <nl> ppp ExternalFilesHelper . java <nl> 
mmm CustomConstraintTest . java <nl> ppp CustomConstraintTest . java <nl> - . addAsResource (" ValidationMessages . properties ") <nl> - . addAsManifestResource ( EmptyAsset . INSTANCE , " beans . xml "); <nl> + . addAsResource (" ValidationMessages . properties "); <nl> 
mmm RCTCameraViewManager . java <nl> ppp RCTCameraViewManager . java <nl> + import com . facebook . react . uimanager . annotations . ReactProp ; <nl> - public class RCTCameraViewManager extends SimpleViewManager < RCTCameraView > { <nl> - private static final String REACT _ CLASS = " RCTCameraView "; <nl> 
mmm InsertSetClauseParser . java <nl> ppp InsertSetClauseParser . java <nl> - insertStatement . addSQLToken ( new InsertSetToken ( insertValuesToken . get () . getStartIndex (), insertStatement . getLogicSQL () . length () - 1 )); <nl> + insertStatement . addSQLToken ( new InsertSetToken ( insertValuesToken . get () . getStartIndex (), insertValuesToken . get () . getStopIndex ())); <nl> 
mmm LimitImplementationFiles . java <nl> ppp LimitImplementationFiles . java <nl> - LocalizedMessage [] errors = new LocalizedMessage [ 1 ]; <nl> + final String path = files [ max ] . getPath (); <nl> - final String bundle = getMessageBundle (); <nl> + getMessageCollector () . reset (); <nl> - Object [] msgArgs = new Object []{ new Integer ( max )}; <nl> 
mmm ExceptionWhileDataFetching . java <nl> ppp ExceptionWhileDataFetching . java <nl> - private final Exception exception ; <nl> + private final Throwable exception ; <nl> - public ExceptionWhileDataFetching ( Exception exception ) { <nl> + public ExceptionWhileDataFetching ( Throwable exception ) { <nl> - public Exception getException () { <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm TagNameToType . java <nl> ppp TagNameToType . java <nl> + . put (" tfoot ", " HTMLTableSectionElement ") <nl> 
new file <nl> ppp Absolute . java <nl> + package net . opentsdb . query . expression ; <nl> + import java . util . List ; <nl> + import net . opentsdb . core . DataPoint ; <nl> + import net . opentsdb . core . DataPoints ; <nl> + import net . opentsdb . core . MutableDataPoint ; <nl> + import net . opentsdb . core . SeekableView ; <nl> 
mmm AndroidAppModularityDescription . java <nl> ppp AndroidAppModularityDescription . java <nl> + import com . facebook . buck . rules . Hint ; <nl> + args . getNoDx (), <nl> + @ Hint ( isDep = false ) <nl> + ImmutableSet < BuildTarget > getNoDx (); <nl> 
mmm HazelcastBroadcaster . java <nl> ppp HazelcastBroadcaster . java <nl> + topic . addMessageListener ( new MessageListener < String >() { <nl> + @ Override <nl> + public void onMessage ( String message ) { <nl> + broadcastReceivedMessage ( message ); <nl> + } <nl> + }); <nl> - topic . addMessageListener ( new MessageListener < String >() { <nl> 
mmm JdbcUtils _ driver . java <nl> ppp JdbcUtils _ driver . java <nl> + public void test _ log4jdbc _ mysql () { <nl> + String dbType = JdbcUtils . getDbType ( jdbcUrl , null ); <nl> + assertEquals (" not support log4jdbc mysql , url like jdbc : log4jdbc : mysql : . . . ", JdbcConstants . MYSQL , dbType ); <nl> 
mmm OpenApiDeploymentTemplate . java <nl> ppp OpenApiDeploymentTemplate . java <nl> - import javax . enterprise . inject . se . SeContainer ; <nl> + import org . jboss . shamrock . runtime . BeanContainer ; <nl> - public void setupModel (@ ContextObject (" weld . container ") SeContainer container , OpenAPI staticModel , OpenAPI annotationModel ) { <nl> 
mmm SourceCodeTest . java <nl> ppp SourceCodeTest . java <nl> - import net . sourceforge . pmd . PMD ; <nl> - assertEquals (" Line 1 " + PMD . EOL + " Line 2 ", sourceCode . getSlice ( 1 , 2 )); <nl> + assertEquals (" Line 1 \ nLine 2 ", sourceCode . getSlice ( 1 , 2 )); <nl> 
mmm CUBRIDTemplates . java <nl> ppp CUBRIDTemplates . java <nl> - private final String limitTemplate = "\ nlimit { 0 }"; <nl> - private final String offsetLimitTemplate = "\ nlimit { 0 }, { 1 }"; <nl> + private String limitTemplate = "\ nlimit { 0 }"; <nl> + private String offsetLimitTemplate = "\ nlimit { 0 }, { 1 }"; <nl> 
mmm LottieValueCallback . java <nl> ppp LottieValueCallback . java <nl> - @ RestrictTo ( RestrictTo . Scope . LIBRARY ) <nl> 
mmm TimeBasedUuidGeneratorTest . java <nl> ppp TimeBasedUuidGeneratorTest . java <nl> - private static final int COUNT = 1048576 ; <nl> + private static final int COUNT = 100000 ; <nl> + @ Test <nl> + public void shouldGenerateTimeBasedUuid () { <nl> + UUID uuid = TimeBasedUuidGenerator . generate (); <nl> 
new file <nl> ppp InsertColumnsTokenGenerator . java <nl> + package org . apache . shardingsphere . core . rewrite . token . generator ; <nl> + import com . google . common . base . Optional ; <nl> + import org . apache . shardingsphere . core . parse . sql . statement . SQLStatement ; <nl> + import org . apache . shardingsphere . core . parse . sql . statement . dml . SelectStatement ; <nl> 
mmm Version . java <nl> ppp Version . java <nl> - VERSION _ MINOR = 1 , <nl> - VERSION _ REVISION = 7 ; <nl> + VERSION _ MINOR = 2 , <nl> + VERSION _ REVISION = 0 ; <nl> 
mmm _ 448 . java <nl> ppp _ 448 . java <nl> - public class FindAllNumbersDisappearedinanArray { <nl> + public class _ 448 { <nl> - FindAllNumbersDisappearedinanArray test = new FindAllNumbersDisappearedinanArray (); <nl> + _ 448 test = new _ 448 (); <nl> 
mmm IMessage . java <nl> ppp IMessage . java <nl> - import java . util . Date ; <nl> + enum MessageStatus { <nl> + CREATED , <nl> + SEND _ GOING , <nl> + SEND _ SUCCEED , <nl> + SEND _ FAILED , <nl> + SEND _ DRAFT , <nl> + RECEIVE _ GOING , <nl> + RECEIVE _ SUCCEED , <nl> + RECEIVE _ FAILED ; <nl> + } <nl> + MessageStatus getMessageStatus (); <nl> 
mmm HelpActivity . java <nl> ppp HelpActivity . java <nl> + @ Override <nl> + protected void onSaveInstanceState ( Bundle icicle ) { <nl> + super . onSaveInstanceState ( icicle ); <nl> + webView . saveState ( icicle ); <nl> + } <nl> 
mmm CrossDomainScriptInclusionScanner . java <nl> ppp CrossDomainScriptInclusionScanner . java <nl> - import org . parosproxy . paros . network . HttpStatusCode ; <nl> - import org . zaproxy . zap . extension . pscan . PassiveScanner ; <nl> - public class CrossDomainScriptInclusionScanner extends PluginPassiveScanner implements PassiveScanner { <nl> 
mmm SpdyHeaderBlockRawEncoder . java <nl> ppp SpdyHeaderBlockRawEncoder . java <nl> - if ( version < 3 ) { <nl> - buffer . setShort ( writerIndex , length ); <nl> - } else { <nl> - buffer . setInt ( writerIndex , length ); <nl> - } <nl> + buffer . setInt ( writerIndex , length ); <nl> - if ( version < 3 ) { <nl> 
mmm PluginLoader . java <nl> ppp PluginLoader . java <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - for ( T plugin : loadImplementations ( pluginType )) { <nl> + T plugin = loadImpl ( pluginType ); <nl> + if ( plugin != null ) { <nl> + return plugin ; <nl> - < T > List < T > loadImplementations ( Class < T > service ) { <nl> 
new file <nl> ppp Issue2371 . java <nl> + package com . alibaba . json . bvt . issue _ 2300 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . TypeReference ; <nl> + import com . alibaba . fastjson . annotation . JSONField ; <nl> + import junit . framework . TestCase ; <nl> 
mmm AgentPackagePath . java <nl> ppp AgentPackagePath . java <nl> + import java . net . URISyntaxException ; <nl> - agentJarFile = new File ( new URL ( urlString ) . getFile ()); <nl> + agentJarFile = new File ( new URL ( urlString ) . toURI ()); <nl> + } catch ( URISyntaxException e ) { <nl> + logger . error ( e , " Can not locate agent jar file by url :" + urlString ); <nl> 
new file <nl> ppp PhotoApplication . java <nl> + package com . example . photo ; <nl> + import org . springframework . boot . SpringApplication ; <nl> + import org . springframework . boot . autoconfigure . SpringBootApplication ; <nl> + @ SpringBootApplication <nl> + public class PhotoApplication { <nl> + public static void main ( String [] args ) { <nl> 
mmm Annotate . java <nl> ppp Annotate . java <nl> + Where [] target (); <nl> 

mmm ClientConfiguration . java <nl> ppp ClientConfiguration . java <nl> - KinesisAsyncClient kinesisClient = KinesisAsyncClient . builder () <nl> + KinesisAsyncClient client2 = KinesisAsyncClient . builder () <nl> 
new file <nl> ppp MemoryStrictlyExecutorStrategy . java <nl> + package io . shardingsphere . core . execute . stratege ; <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . util . concurrent . ListenableFuture ; <nl> + import io . shardingsphere . core . constant . SQLType ; <nl> 
new file <nl> ppp _ 99Test . java <nl> + package com . fishercoder ; <nl> + import com . fishercoder . common . classes . TreeNode ; <nl> + import com . fishercoder . common . utils . TreeUtils ; <nl> + import com . fishercoder . solutions . _ 99 ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> 
new file <nl> ppp WelcomeToReadActivity . java <nl> + package com . monke . monkeybook . view . activity ; <nl> + import android . animation . Animator ; <nl> + import android . animation . ValueAnimator ; <nl> + import android . content . Intent ; <nl> + import android . widget . ImageView ; <nl> + import com . monke . basemvplib . impl . IPresenter ; <nl> 
mmm TestXIncludeConfig . java <nl> ppp TestXIncludeConfig . java <nl> + assertNotNull (" ft - entity - include1 is null ", <nl> + schema . getFieldTypeByName (" ft - entity - include1 ")); <nl> + assertNotNull (" ft - entity - include2 is null ", <nl> + schema . getFieldTypeByName (" ft - entity - include2 ")); <nl> 
mmm DataNodeUsageReportUtil . java <nl> ppp DataNodeUsageReportUtil . java <nl> 
mmm ModuleUtilsTests . java <nl> ppp ModuleUtilsTests . java <nl> + import static org . junit . jupiter . api . Assumptions . assumeFalse ; <nl> + assumeFalse ( Boolean . getBoolean (" coverage . enabled ")); <nl> 

mmm JsonBody . java <nl> ppp JsonBody . java <nl> + import io . jenkins . blueocean . commons . ServiceException ; <nl> + import javax . servlet . http . HttpServletResponse ; <nl> + import static javax . servlet . http . HttpServletResponse . SC _ UNSUPPORTED _ MEDIA _ TYPE ; <nl> 
mmm SpringMasterSlaveDataSource . java <nl> ppp SpringMasterSlaveDataSource . java <nl> + import java . util . Properties ; <nl> 
deleted file <nl> mmm LambdaTest . java <nl> - package com . netflix . conductor . contribs . script ; <nl> - import com . netflix . conductor . common . metadata . tasks . Task ; <nl> - import com . netflix . conductor . common . run . Workflow ; <nl> - import com . netflix . conductor . contribs . lambda . LambdaTask ; <nl> 
mmm FieldTypeAndNameComparatorTest . java <nl> ppp FieldTypeAndNameComparatorTest . java <nl> + import java . util . Comparator ; <nl> + private static Comparator < Field > cmp = new PropertyAndSetterInjection . FieldTypeAndNameComparator (); <nl> - assertThat ( new PropertyAndSetterInjection . FieldTypeAndNameComparator () . compare ( field (" objectA "), field (" objectB "))) . isEqualTo ( - 1 ); <nl> 
mmm PathTypeCoercer . java <nl> ppp PathTypeCoercer . java <nl> - Path normalizedPath = pathRelativeToProjectRoot . resolve ( path ) . normalize (); <nl> - filesystem . getPathForRelativeExistingPath ( normalizedPath ); <nl> + try { <nl> + Path normalizedPath = pathRelativeToProjectRoot . resolve ( path ) . normalize (); <nl> 
deleted file <nl> mmm OpenshiftWithOverridenNameTest . java <nl> - package io . quarkus . it . kubernetes ; <nl> - public class OpenshiftWithOverridenNameTest { <nl> - } <nl> 
mmm FileBody . java <nl> ppp FileBody . java <nl> - return true ; <nl> + throw new AssertionError (" not implemented "); <nl> 
mmm Some . java <nl> ppp Some . java <nl> + public static final Some < Void > NOTHING = new Some <>( null ); <nl> + public static Some < Void > nothing () { <nl> + return NOTHING ; <nl> + } <nl> 
mmm Console . java <nl> ppp Console . java <nl> + import java . io . BufferedReader ; <nl> + import java . io . FileInputStream ; <nl> + import java . io . FileNotFoundException ; <nl> + import java . io . InputStreamReader ; <nl> + import java . nio . charset . Charset ; <nl> - public Console ( final IO io , final String inputPrompt , final String resultPrompt ) { <nl> 
mmm TestSmileRequest . java <nl> ppp TestSmileRequest . java <nl> - TestJsonRequest . doJsonRequest ( client , false ); <nl> + TestJsonRequest . doJsonRequest ( client , true ); <nl> 
mmm TaskMessage . java <nl> ppp TaskMessage . java <nl> + final int SHORT _ SIZE = 2 ; <nl> + final int INT _ SIZE = 4 ; <nl> - ByteBuffer bb = ByteBuffer . allocate ( _ message . length + 2 ); <nl> + ByteBuffer bb = ByteBuffer . allocate ( _ message . length + SHORT _ SIZE + INT _ SIZE ); <nl> - bb . put ( _ message ); <nl> 
mmm MySQLDataSourceMetaData . java <nl> ppp MySQLDataSourceMetaData . java <nl> - throw new ShardingException (" The URL of JDBC is not supported . "); <nl> + throw new ShardingException (" The URL of JDBC is not supported . Please refer to this pattern : % s . ", pattern . pattern ()); <nl> 
mmm TitanOutputFormat . java <nl> ppp TitanOutputFormat . java <nl> - public static final ConfigOption < Boolean > INFER _ SCHEMA = new ConfigOption < Boolean >( <nl> - TitanHadoopConfiguration . OUTPUT _ NS , " infer - schema ", <nl> - " Whether to attempt to automatically create Titan property keys and labels before writing data ", <nl> 
mmm DefaultServerIntrospector . java <nl> ppp DefaultServerIntrospector . java <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + private static final List < Integer > SECURE _ PORTS = Arrays . asList ( 443 , 8443 ); <nl> - return ("" + server . getPort ()) . endsWith (" 443 "); <nl> 
mmm JoinState . java <nl> ppp JoinState . java <nl> 
mmm SectionsConfiguration . java <nl> ppp SectionsConfiguration . java <nl> - public static boolean noServiceRegistration = false ; <nl> 
mmm EmployeeServiceImplUnitTest . java <nl> ppp EmployeeServiceImplUnitTest . java <nl> - class EmployeeServiceImplTest { <nl> + class EmployeeServiceImplUnitTest { <nl> 
mmm InactiveConnectionHandler . java <nl> ppp InactiveConnectionHandler . java <nl> - void onInactiveConnection ( final String channel , final int streamId , final int sessionId ); <nl> + void onInactiveConnection ( String channel , int streamId , int sessionId ); <nl> 
mmm PipelineTranslatorStreaming . java <nl> ppp PipelineTranslatorStreaming . java <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + import javax . annotation . Nullable ; <nl> + import org . apache . beam . runners . spark . structuredstreaming . translation . TranslationContext ; <nl> 
mmm Location . java <nl> ppp Location . java <nl> + @ Override <nl> + @ Override <nl> + public String toString () { <nl> + return name + " [" + unLocode + "]"; <nl> + } <nl> 
mmm FeignInterceptorConfig . java <nl> ppp FeignInterceptorConfig . java <nl> + import org . springframework . context . annotation . Configuration ; <nl> 
mmm CustomDeploymentCache . java <nl> ppp CustomDeploymentCache . java <nl> - if ( id . equals ( id )) { <nl> + if ( id . equals ( this . id )) { <nl> - if ( id . equals ( id )) { <nl> + if ( id . equals ( this . id )) { <nl> 
new file <nl> ppp AsIs . java <nl> + package com . bumptech . photos . view . loader ; <nl> + import com . bumptech . photos . LoadedCallback ; <nl> + import com . bumptech . photos . PhotoManager ; <nl> + import com . bumptech . photos . view . assetpath . AssetPathConverter ; <nl> + public class AsIs < T > extends PhotoManagerLoader < T >{ <nl> 
mmm SingletonImmutableBiMap . java <nl> ppp SingletonImmutableBiMap . java <nl> - this . singleKey = singleKey ; <nl> - this . singleValue = singleValue ; <nl> + this . singleKey = key ; <nl> + this . singleValue = value ; <nl> 
mmm RegTestParams . java <nl> ppp RegTestParams . java <nl> - segwitAddressHrp = " tb "; <nl> + segwitAddressHrp = " bcrt "; <nl> 
mmm AutoWindowSizingOnTest . java <nl> ppp AutoWindowSizingOnTest . java <nl> + import org . junit . runner . RunWith ; <nl> + import org . junit . runners . JUnit4 ; <nl> + @ RunWith ( JUnit4 . class ) <nl> 
mmm NotifyAboutChangesTest . java <nl> ppp NotifyAboutChangesTest . java <nl> + import static org . junit . Assert . assertTrue ; <nl> - final int numberOfThreads = 5 ; <nl> + final int numberOfThreads = 10 ; <nl> - while ( testObserver . getOnNextEvents () . size () != tables . size () & & SystemClock . elapsedRealtime () - startTime < 1000 ) { <nl> 
new file <nl> ppp UpdateKvConfigCommandTest . java <nl> + package org . apache . rocketmq . tools . command . namesrv ; <nl> + import org . apache . commons . cli . CommandLine ; <nl> + import org . apache . commons . cli . Options ; <nl> + import org . apache . commons . cli . PosixParser ; <nl> + import org . apache . rocketmq . client . ClientConfig ; <nl> 
mmm HttpConnectionEarlyResetTest . java <nl> ppp HttpConnectionEarlyResetTest . java <nl> - vertx . createNetClient ( new NetClientOptions () . setSoLinger ( 0 )) . connect ( 8080 , " localhost ", onSuccess ( NetSocket :: close )); <nl> + vertx . createNetClient ( new NetClientOptions () . setSoLinger ( 0 )) . connect ( 8080 , " localhost ", onSuccess ( socket - > { <nl> 
new file <nl> ppp ExecutionEnvironmentTest . java <nl> + package org . apache . flink . client ; <nl> + import org . apache . flink . api . common . functions . MapFunction ; <nl> + import org . apache . flink . api . java . DataSet ; <nl> + import org . apache . flink . api . java . ExecutionEnvironment ; <nl> 
deleted file <nl> mmm MergePreviewResourceReference . java <nl> - package io . onedev . server . web . page . project . pullrequests . detail . mergepreview ; <nl> - import org . apache . wicket . request . resource . CssResourceReference ; <nl> - public class MergePreviewResourceReference extends CssResourceReference { <nl> 
mmm OptimizeEngineFactory . java <nl> ppp OptimizeEngineFactory . java <nl> - return new QueryOptimizeEngine ( sqlStatement . getRouteConditions () . getOrCondition (), parameters ); <nl> + return new QueryOptimizeEngine ( sqlStatement . getRouteConditions (), parameters ); <nl> - return new QueryOptimizeEngine ( sqlStatement . getRouteConditions () . getOrCondition (), parameters ); <nl> 
new file <nl> ppp CustomStatusCodeMapper . java <nl> + package com . baeldung . health ; <nl> + import org . springframework . boot . actuate . health . HttpCodeStatusMapper ; <nl> + import org . springframework . boot . actuate . health . Status ; <nl> + import org . springframework . stereotype . Component ; <nl> 
new file <nl> ppp TestLoadLegacyLibrary . java <nl> + package j9vm . test . loadLibrary ; <nl> + import org . testng . annotations . Test ; <nl> + import org . testng . Assert ; <nl> + @ Test ( groups = { " level . sanity " }) <nl> + public class TestLoadLegacyLibrary { <nl> + private static native boolean fooImpl (); <nl> 
mmm SimpleReplaceRule . java <nl> ppp SimpleReplaceRule . java <nl> - super . setCategory ( new Category ("‫اشتباه تایپی محتمل‬")); <nl> - addExamplePair ( Example . wrong ("وی < marker >حاظر</ marker > به همکاری شد . "), <nl> - Example . fixed ("وی < marker >حاضر</ marker > به همکاری شد . ")); <nl> - return "اشتباه محتمل املائی"; <nl> 
mmm GoPerformanceTest . java <nl> ppp GoPerformanceTest . java <nl> + @ Override <nl> + protected boolean isWriteActionRequired () { <nl> + return false ; <nl> + } <nl> 
mmm IOTAProducerTest . java <nl> ppp IOTAProducerTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore <nl> 
new file <nl> ppp GoImportOptimizer . java <nl> + package com . goide . codeInsight . imports ; <nl> + import com . goide . psi . *; <nl> + import com . intellij . lang . ImportOptimizer ; <nl> + import com . intellij . openapi . editor . Document ; <nl> + import com . intellij . psi . PsiDocumentManager ; <nl> 
mmm IndexableFieldType . java <nl> ppp IndexableFieldType . java <nl> 
mmm PagerUtilsTest _ Count _ MySql _ 0 . java <nl> ppp PagerUtilsTest _ Count _ MySql _ 0 . java <nl> + public void test _ mysql _ 4 () throws Exception { <nl> + String sql = " select distinct a . col1 , a . col2 from test a "; <nl> + String result = PagerUtils . count ( sql , JdbcConstants . MYSQL ); <nl> 
mmm Vars . java <nl> ppp Vars . java <nl> - public static boolean debug = true ; <nl> + public static boolean debug = false ; <nl> 
mmm NotificationFilterController . java <nl> ppp NotificationFilterController . java <nl> - return ResponseEntity . badRequest () . body (" Either ' id ' or ' name ' must be set "); <nl> + return ResponseEntity . badRequest () . body (" Either ' instanceId ' or ' applicationName ' must be set "); <nl> 
deleted file <nl> mmm ELResolverTest . java <nl> - package org . javaee7 . el . standalone ; <nl> - import org . jboss . arquillian . container . test . api . Deployment ; <nl> - import org . jboss . arquillian . junit . Arquillian ; <nl> - import org . jboss . shrinkwrap . api . Archive ; <nl> - import org . jboss . shrinkwrap . api . ShrinkWrap ; <nl> 
mmm CommandDispatcherTest . java <nl> ppp CommandDispatcherTest . java <nl> + import static org . mockito . Mockito . times ; <nl> + @ Test <nl> + public void testCreateAndMergeCommands () throws Exception { <nl> + subject . register ( literal (" base ") . then ( literal (" foo ")) . executes ( command )); <nl> 
mmm ValencianCatalan . java <nl> ppp ValencianCatalan . java <nl> - List < String > rules = Arrays . asList (" EXIGEIX _ VERBS _ VALENCIANS ", <nl> - " EXIGEIX _ ACCENTUACIO _ VALENCIANA ", " EXIGEIX _ POSSESSIUS _ U ", <nl> - " EXIGEIX _ VERBS _ EIX ", " EXIGEIX _ VERBS _ ISC ", " PER _ PER _ A _ INFINITIU "); <nl> 
mmm MetricsAccumulator . java <nl> ppp MetricsAccumulator . java <nl> + } else { <nl> + instance . reset (); <nl> 
new file <nl> ppp ReflectUtilsTest . java <nl> + package com . blankj . utilcode . util ; <nl> + import com . blankj . utilcode . util . reflect . PrivateConstructors ; <nl> + import org . junit . Rule ; <nl> + import org . junit . Test ; <nl> + import org . junit . rules . ExpectedException ; <nl> + import static org . junit . Assert . assertEquals ; <nl> 
mmm ImageAssetBitmapManager . java <nl> ppp ImageAssetBitmapManager . java <nl> + import java . util . Iterator ; <nl> - for ( String key : bitmaps . keySet ()) { <nl> - Bitmap bitmap = bitmaps . remove ( key ); <nl> - bitmap . recycle (); <nl> + Iterator < Map . Entry < String , Bitmap >> it = bitmaps . entrySet () . iterator (); <nl> 
mmm Languages . java <nl> ppp Languages . java <nl> - import java . util . ArrayList ; <nl> - import java . util . Arrays ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl> - import org . sonar . api . batch . InstantiationStrategy ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> 
mmm MessageViewInfo . java <nl> ppp MessageViewInfo . java <nl> - import com . fsck . k9 . mail . Body ; <nl> - import com . fsck . k9 . mail . MessagingException ; <nl> - import com . fsck . k9 . mail . internet . MimeBodyPart ; <nl> - import com . fsck . k9 . mail . internet . TextBody ; <nl> - try { <nl> 
mmm MeasureFilterTreemapWidget . java <nl> ppp MeasureFilterTreemapWidget . java <nl> - @ WidgetProperty ( key = MeasureFilterTreemapWidget . COLOR _ METRIC _ PROPERTY , type = WidgetPropertyType . METRIC , optional = true ) <nl> + @ WidgetProperty ( key = MeasureFilterTreemapWidget . COLOR _ METRIC _ PROPERTY , type = WidgetPropertyType . METRIC , optional = true , options = " type : PERCENT ") <nl> 
mmm Handler . java <nl> ppp Handler . java <nl> -  <nl> - System . out . println ( report ); <nl> 
new file <nl> ppp MappingTest _ createTable _ 2 . java <nl> + package com . alibaba . druid . bvt . sql ; <nl> + import com . alibaba . druid . sql . SQLUtils ; <nl> + import com . alibaba . druid . util . JdbcConstants ; <nl> + import junit . framework . TestCase ; <nl> + import java . util . Collections ; <nl> 
new file <nl> ppp AnimatedDrawableBackendFrameRenderer . java <nl> + package com . facebook . fresco . animation . bitmap . wrapper ; <nl> + import javax . annotation . Nullable ; <nl> + import android . graphics . Bitmap ; <nl> + import android . graphics . Canvas ; <nl> + import android . graphics . Rect ; <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
new file <nl> ppp AgentWebUIController . java <nl> + package com . just . library ; <nl> + public class AgentWebUIController { <nl> + } <nl> 
mmm rtc001 . java <nl> ppp rtc001 . java <nl> - Method getMethodAccessor = method . getClass () . getDeclaredMethod (" getMethodAccessor "); <nl> - getMethodAccessor . setAccessible ( true ); <nl> - Object methodAccessor = getMethodAccessor . invoke ( method ); <nl> -  <nl> + Field field = method . getClass () . getDeclaredField (" methodAccessor "); <nl> 
mmm JBossWebSocketSupport . java <nl> ppp JBossWebSocketSupport . java <nl> + @ Override <nl> + public AsyncSupport complete ( AtmosphereResourceImpl r ) { <nl> + return this ; <nl> + } <nl> 
mmm ShadowGeocoderTest . java <nl> ppp ShadowGeocoderTest . java <nl> - import static org . junit . Assert . assertThrows ; <nl> + import static org . junit . Assert . fail ; <nl> - IllegalArgumentException thrown = <nl> - assertThrows ( IllegalArgumentException . class , () - > geocoder . getFromLocation ( 91 . 0 , 90 . 0 , 1 )); <nl> 
mmm StreamingUtil . java <nl> ppp StreamingUtil . java <nl> - System . err . println (" Writing chunk " + data ); <nl> 
deleted file <nl> mmm CancelStreamCommand . java <nl> - package io . grpc . netty ; <nl> - import static io . grpc . Status . Code . CANCELLED ; <nl> - import static io . grpc . Status . Code . DEADLINE _ EXCEEDED ; <nl> - import com . google . common . base . Preconditions ; <nl> - import io . grpc . Status ; <nl> 
mmm ConfiguredCommand . java <nl> ppp ConfiguredCommand . java <nl> - import com . yammer . dropwizard . config . *; <nl> + import com . yammer . dropwizard . config . Bootstrap ; <nl> + import com . yammer . dropwizard . config . Configuration ; <nl> + import com . yammer . dropwizard . config . ConfigurationException ; <nl> 
deleted file <nl> mmm TestArbitraryIndexDir . java <nl> - package org . apache . solr . core ; <nl> - import javax . xml . parsers . ParserConfigurationException ; <nl> - import java . io . File ; <nl> - import java . io . FileOutputStream ; <nl> - import java . io . IOException ; <nl> - import java . io . OutputStreamWriter ; <nl> 
new file <nl> ppp TaskRunner . java <nl> + package com . baeldung . concurrent . volatilekeyword ; <nl> + public class TaskRunner { <nl> + private static int number ; <nl> + private volatile static boolean ready ; <nl> + private static class Reader extends Thread { <nl> + @ Override <nl> + public void run () { <nl> 
mmm Signal . java <nl> ppp Signal . java <nl> + final long beginTime = System . currentTimeMillis (); <nl> - wait ( awaitTimeout ); <nl> + wait ( awaitTimeout - ( System . currentTimeMillis () - beginTime )); <nl> 
new file <nl> ppp TestPBECredentialHandler . java <nl> + package org . apache . catalina . realm ; <nl> + import java . security . NoSuchAlgorithmException ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + public class TestPBECredentialHandler { <nl> + private static final String [] ALGORITHMS = <nl> 
new file <nl> ppp Issue1074 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + public class Issue1074 extends TestCase { <nl> + public void test _ for _ issue () throws Exception { <nl> + JSON . parseObject ( json ); <nl> 
mmm JLanguageToolTest . java <nl> ppp JLanguageToolTest . java <nl> 

mmm NodeTreeUseActivity . java <nl> ppp NodeTreeUseActivity . java <nl> + import android . widget . Toast ; <nl> + SecondNode seNode2 = new SecondNode ( new ArrayList < BaseNode >(), " Second Node ( This is added )"); <nl> + List < SecondNode > nodes = new ArrayList <>(); <nl> + nodes . add ( seNode ); <nl> 
new file <nl> ppp DotnetModule . java <nl> + package com . facebook . buck . dotnet ; <nl> + import com . facebook . buck . module . BuckModule ; <nl> + @ BuckModule ( id = " com . facebook . buck . dotnet ") <nl> + public class DotnetModule {} <nl> 
mmm WidgetStrategyBindings . java <nl> ppp WidgetStrategyBindings . java <nl> - installWidgetStrategy ( widgetStrategyBinder (), StreamSearchResultCountWidget . class , StreamSearchResultCountWidget . Factory . class ); <nl> + installWidgetStrategyWithAlias ( widgetStrategyBinder (), DashboardWidget . Type . STREAM _ SEARCH _ RESULT _ COUNT . toString (), StreamSearchResultCountWidget . class , StreamSearchResultCountWidget . Factory . class ); <nl> 
mmm TbMsgMetaData . java <nl> ppp TbMsgMetaData . java <nl> - this . data . putAll ( data ); <nl> + data . forEach (( key , val ) - > putValue ( key , val )); <nl> - data . put ( key , value ); <nl> + if ( key != null & & value != null ) { <nl> + data . put ( key , value ); <nl> + } <nl> 
mmm InputStream . java <nl> ppp InputStream . java <nl> - import java . io . IOException ; <nl> 
mmm DiscoveryActivity . java <nl> ppp DiscoveryActivity . java <nl> - private DiscoverySpinnerAdapter spinnerAdapter = new DiscoverySpinnerAdapter (); <nl> 
mmm LDAPAuthoritiesPopulator . java <nl> ppp LDAPAuthoritiesPopulator . java <nl> - import org . springframework . ldap . core . DirContextOperations ; <nl> - @ Override <nl> - protected Set < GrantedAuthority > getAdditionalRoles ( DirContextOperations user , String username ) { <nl> - String userDn = user . getNameInNamespace (); <nl> 
deleted file <nl> mmm CustomMybatisMapperConfigurationTest . java <nl> - package org . flowable . test . spring . boot ; <nl> - import java . io . File ; <nl> - import java . io . FileInputStream ; <nl> - import java . net . URL ; <nl> - import java . util . Properties ; <nl> - import org . flowable . common . engine . impl . interceptor . Command ; <nl> 
new file <nl> ppp RuleDescription . java <nl> + package com . facebook . buck . core . description ; <nl> + import com . facebook . buck . core . model . BuildTarget ; <nl> + import com . facebook . buck . core . rules . analysis . RuleAnalysisContext ; <nl> + import com . facebook . buck . core . rules . providers . ProviderInfoCollection ; <nl> 
new file <nl> ppp ContentPackStreamsTest . java <nl> + package integration . system . bundles ; <nl> + import com . google . common . net . HttpHeaders ; <nl> + import com . jayway . restassured . response . ValidatableResponse ; <nl> + import integration . BaseRestTest ; <nl> + import integration . RequiresAuthentication ; <nl> 
mmm ViewPagerActivity . java <nl> ppp ViewPagerActivity . java <nl> - private int [] imgsId = new int []{ R . mipmap . aaa , R . mipmap . bbb , R . mipmap . ic _ launcher , R . mipmap . image003 }; <nl> + private int [] imgsId = new int []{ R . mipmap . aaa , R . mipmap . bbb , R . mipmap . ccc , R . mipmap . ic _ launcher , R . mipmap . image003 }; <nl> 
mmm CoarseSessionAttributes . java <nl> ppp CoarseSessionAttributes . java <nl> - if ( this . immutability . test ( value )) { <nl> - this . mutations . remove ( name ); <nl> - } else { <nl> - this . mutations . add ( name ); <nl> - } <nl> + this . mutations . remove ( name ); <nl> 
mmm NumberOfPartitionsSysCheck . java <nl> ppp NumberOfPartitionsSysCheck . java <nl> - private static final String DESCRIPTION = " The total number of partitions of one or more partitioned " + <nl> - " tables needs to be less than 1000 . "; <nl> + private static final String DESCRIPTION = <nl> + " The total number of partitions of one or more partitioned tables should " + <nl> 
mmm DictionaryBuilderTestHelper . java <nl> ppp DictionaryBuilderTestHelper . java <nl> 
mmm ServiceCacheConfiguration . java <nl> ppp ServiceCacheConfiguration . java <nl> - import com . hazelcast . config . *; <nl> + import com . hazelcast . config . Config ; <nl> + import com . hazelcast . config . DiscoveryStrategyConfig ; <nl> + import com . hazelcast . config . MapConfig ; <nl> + import com . hazelcast . config . MaxSizeConfig ; <nl> 
mmm JSErrorSubject . java <nl> ppp JSErrorSubject . java <nl> - import static org . junit . Assert . assertEquals ; <nl> - String message = " Expected an error of type " + type + " but got : " + actual ; <nl> - assertEquals ( message , type , actual . getType ()); <nl> + check (" getType ()") . that ( actual . getType ()) . isEqualTo ( type ); <nl> 
mmm ThreadPoolsExhaustedIntegrationTest . java <nl> ppp ThreadPoolsExhaustedIntegrationTest . java <nl> + import java . util . concurrent . TimeoutException ; <nl> + } catch ( TimeoutException e ) { <nl> + fail (" query run into a timeout "); <nl> - assertThat ( e . getMessage (), Matchers . containsString (" rejected execution ")); <nl> 
deleted file <nl> mmm MassiveConnectDisconnectTest . java <nl> - package com . orientechnologies . orient . test . io ; <nl> - import org . testng . annotations . Test ; <nl> - import com . orientechnologies . orient . core . config . OGlobalConfiguration ; <nl> - import com . orientechnologies . orient . core . db . document . ODatabaseDocumentTx ; <nl> 
mmm ParseResultDemo . java <nl> ppp ParseResultDemo . java <nl> + import picocli . CommandLine . Model . OptionSpec ; <nl> - String [] options = {" x ", " y "}; <nl> - for ( String name : options ) { <nl> - System . out . printf (" % s was specified : % s % n ", name , pr . hasMatchedOption ( name )); <nl> 
mmm ServletRegistration . java <nl> ppp ServletRegistration . java <nl> - public static interface Dynmaic <nl> + public static interface Dynamic <nl> 
mmm EPEOutputter . java <nl> ppp EPEOutputter . java <nl> - String OUTPUT _ REPRESENTATION = System . getProperty (" outputRepresenation ", " basic "); <nl> + private static String OUTPUT _ REPRESENTATION = System . getProperty (" outputRepresentation ", " basic "); <nl> - edge . set (" label ", dep . getRelation () . getShortName ()); <nl> 
mmm PMDVisitor . java <nl> ppp PMDVisitor . java <nl> + public static final String PMD _ VIOLATION = <nl> + " net . sourceforge . pmd . eclipse . violation "; <nl> +  <nl> - file . deleteMarkers ( null , false , IResource . DEPTH _ ONE ); <nl> + file . deleteMarkers ( PMD _ VIOLATION , true , <nl> + IResource . DEPTH _ INFINITE ); <nl> 
mmm CommentFeedActivity . java <nl> ppp CommentFeedActivity . java <nl> - import android . util . Log ; <nl> - import org . w3c . dom . Text ; <nl> - import java . util . ArrayList ; <nl> 
mmm fullscreen . java <nl> ppp fullscreen . java <nl> - import android . webkit . WebView ; <nl> - import org . apache . cordova . api . LOG ; <nl> 
mmm GenerateJLIClassesHelper . java <nl> ppp GenerateJLIClassesHelper . java <nl> - static byte [] generateInvokersHolderClassBytes ( String str , MethodType [] invokerMts , MethodType [] callMts ) { <nl> - throw OpenJDKCompileStub . OpenJDKCompileStubThrowError (); <nl> - } <nl> 
mmm LruBitmapPool . java <nl> ppp LruBitmapPool . java <nl> - public synchronized Bitmap get ( int size ) { <nl> - Bitmap cached = mStrategy . get ( size ); <nl> + public synchronized Bitmap get ( final int size ) { <nl> + if ( mCurrentSize > mMaxSize ) { <nl> + trimTo ( mMaxSize ); <nl> + } <nl> + final Bitmap cached = mStrategy . get ( size ); <nl> 
mmm JsonParserUtil . java <nl> ppp JsonParserUtil . java <nl> + CtorDescriptor ctorDescriptor = cd . getDefaultCtorDescriptor ( true ); <nl> + if ( ctorDescriptor == null ) { <nl> + throw new JsonException (" Default ctor not found for : " + targetType . getClass () . getName ()); <nl> + } <nl> - CtorDescriptor ctorDescriptor = cd . getDefaultCtorDescriptor ( true ); <nl> 
mmm InstanceManager . java <nl> ppp InstanceManager . java <nl> 

mmm ListTest . java <nl> ppp ListTest . java <nl> - fFull . add ( new Integer ( i )); <nl> + fFull . add ( i ); <nl> 
mmm Ratio . java <nl> ppp Ratio . java <nl> + import java . math . BigDecimal ; <nl> + import java . math . MathContext ; <nl> - return numerator . doubleValue () / denominator . doubleValue (); <nl> + return decimalValue ( MathContext . DECIMAL64 ) . doubleValue (); <nl> + } <nl> + public BigDecimal decimalValue (){ <nl> 

mmm ProgressBarComponent . java <nl> ppp ProgressBarComponent . java <nl> - private static final DecimalFormat DECIMAL _ FORMAT2 = new DecimalFormat (" # 0 "); <nl> + private static final DecimalFormat DECIMAL _ FORMAT _ ABS = new DecimalFormat (" # 0 "); <nl> - textToWrite = DECIMAL _ FORMAT . format ( Math . floor ( pc * 100d )) + " % "; <nl> 
mmm DropTableChange . java <nl> ppp DropTableChange . java <nl> - @ DatabaseChangeProperty ( mustEqualExisting =" table . schema ", since = " 3 . 0 ") <nl> + @ DatabaseChangeProperty ( mustEqualExisting =" table . catalog ", since = " 3 . 0 ") <nl> 
mmm FileConsumeTemplateTest . java <nl> ppp FileConsumeTemplateTest . java <nl> - assertEquals (" Bye World ", body ); <nl> - assertEquals (" Hello World ", body2 ); <nl> + assertEquals (" Hello World ", body ); <nl> + assertEquals (" Bye World ", body2 ); <nl> - } <nl> + } <nl> 
mmm DCLIntegrateTestCaseAssertion . java <nl> ppp DCLIntegrateTestCaseAssertion . java <nl> - @ XmlAttribute ( name = " user ") <nl> - private String user ; <nl> + @ XmlAttribute ( name = " init - sql ") <nl> + private String initSQL ; <nl> - @ XmlAttribute ( name = " host ") <nl> - private String host ; <nl> 
mmm AtmosphereHandler . java <nl> ppp AtmosphereHandler . java <nl> - public void doPost ( HttpServletRequest postRequest , HttpServletResponse postResponse , List < Serializable > messages , GwtAtmosphereResource cometResource ) { <nl> + public void doPost ( HttpServletRequest postRequest , HttpServletResponse postResponse , <nl> 
mmm TouchEvent . java <nl> ppp TouchEvent . java <nl> - } <nl> + } <nl> 
mmm CellServiceConstraintObserver . java <nl> ppp CellServiceConstraintObserver . java <nl> - private Notifier notifier ; <nl> - private ServiceState lastKnownState ; <nl> + private volatile Notifier notifier ; <nl> + private volatile ServiceState lastKnownState ; <nl> 
mmm RenderNodeAnimator . java <nl> ppp RenderNodeAnimator . java <nl> + public static int TRANSLATION _ X ; <nl> + public static int TRANSLATION _ Y ; <nl> + public static int TRANSLATION _ Z ; <nl> + public static int SCALE _ X ; <nl> + public static int SCALE _ Y ; <nl> + public static int ROTATION ; <nl> 
mmm GenerateRuleDocsCmd . java <nl> ppp GenerateRuleDocsCmd . java <nl> + private GenerateRuleDocsCmd () { <nl> + } <nl> 
mmm SwiftNativeLinkableTest . java <nl> ppp SwiftNativeLinkableTest . java <nl> + import com . facebook . buck . io . file . MorePaths ; <nl> - "/ usr / lib / swift ", <nl> + MorePaths . pathWithPlatformSeparators ("/ usr / lib / swift "), <nl> - "@ executable _ path / Frameworks ", <nl> + MorePaths . pathWithPlatformSeparators ("@ executable _ path / Frameworks "), <nl> 
mmm SaveAllSourcesController . java <nl> ppp SaveAllSourcesController . java <nl> - } catch ( IOException e ) { <nl> - assert ExceptionUtil . printStackTrace ( e ); <nl> + } catch ( Throwable t ) { <nl> + assert ExceptionUtil . printStackTrace ( t ); <nl> 
mmm SelectCipherItemTokenGenerator . java <nl> ppp SelectCipherItemTokenGenerator . java <nl> + private String tableName ; <nl> + tableName = optimizedStatement . getTables () . getSingleTableName (); <nl> - Collection < String > logicColumns = encryptRule . getCipherColumns ( optimizedStatement . getTables () . getSingleTableName ()); <nl> 
new file <nl> ppp BackportTranslations . java <nl> + package org . apache . tomcat . buildutil . translate ; <nl> + import java . io . IOException ; <nl> + import java . util . Properties ; <nl> + public class BackportTranslations extends BackportBase { <nl> + public static void main ( String . . . args ) throws IOException { <nl> 
mmm TestRewriteValve . java <nl> ppp TestRewriteValve . java <nl> - doTestRewrite (" RewriteRule ^/ b /( . *) / b / . . / a /$ 1 ", "/ b / % 255A ", "/ a / % 255A "); <nl> + doTestRewrite (" RewriteRule ^/ b /( . *) / b / . . / a /$ 1 ", "/ b / % 255A ", "/ b / . . / a / % 255A "); <nl> 
mmm InsertStatement . java <nl> ppp InsertStatement . java <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . collect . Lists ; <nl> + public List < String > getInsertColumnNames () { <nl> + return Lists . transform ( columns , new Function < Column , String >() { <nl> 
mmm SingletonBindingTest . java <nl> ppp SingletonBindingTest . java <nl> - package dagger . internal ; <nl> - import org . junit . Before ; <nl> - import org . junit . Test ; <nl> - import org . junit . runner . RunWith ; <nl> - import org . junit . runners . JUnit4 ; <nl> - import static org . fest . assertions . Assertions . assertThat ; <nl> 
mmm FakeApi . java <nl> ppp FakeApi . java <nl> - public Response testEndpointParameters (@ FormParam ( value = " number ") BigDecimal number ,@ FormParam ( value = " _ double ") Double _ double ,@ FormParam ( value = " patternWithoutDelimiter ") String patternWithoutDelimiter ,@ FormParam ( value = " _ byte ") byte [] _ byte ,@ FormParam ( value = " integer ") Integer integer ,@ FormParam ( value = " int32 ") Integer int32 ,@ FormParam ( value = " int64 ") Long int64 ,@ FormParam ( value = " _ float ") Float _ float ,@ FormParam ( value = " string ") String string ,@ FormParam ( value = " binary ") byte [] binary ,@ FormParam ( value = " date ") LocalDate date ,@ FormParam ( value = " dateTime ") javax . xml . datatype . XMLGregorianCalendar dateTime ,@ FormParam ( value = " password ") String password ,@ FormParam ( value = " paramCallback ") String paramCallback ) { <nl> 
mmm MaximizeSkiGates . java <nl> ppp MaximizeSkiGates . java <nl> 
mmm SyncPropertiesMojo . java <nl> ppp SyncPropertiesMojo . java <nl> + String out = sb . toString (); <nl> - byte [] strToBytes = sb . toString () . getBytes (); <nl> + byte [] strToBytes = out . getBytes (); <nl> 
mmm GoExpressionTypeProvider . java <nl> ppp GoExpressionTypeProvider . java <nl> - import com . goide . psi . GoStatement ; <nl> + import com . goide . psi . GoTopLevelDeclaration ; <nl> - return SyntaxTraverser . psiApi () . parents ( at ) . takeWhile ( Conditions . notInstanceOf ( GoStatement . class )) . filter ( GoTypeOwner . class ) . toList (); <nl> 
mmm TokenizerGermanBenchmarkITest . java <nl> ppp TokenizerGermanBenchmarkITest . java <nl> - runTest (" dev ", " de ", 0 . 95 ); <nl> + runTest (" dev ", " de ", 0 . 986 ); <nl> - runTest (" test ", " de ", 0 . 95 ); <nl> + runTest (" test ", " de ", 0 . 977 ); <nl> 
mmm AbstractOrchestrationDataSource . java <nl> ppp AbstractOrchestrationDataSource . java <nl> - private final Map < String , DataSource > dataSourceMap ; <nl> - super ( dataSourceMap . values ()); <nl> + super ( dataSourceMap ); <nl> - this . dataSourceMap = dataSourceMap ; <nl> - super ( DataSourceConverter . getDataSourceMap ( orchestrationFacade . getConfigService () . loadDataSourceConfigurations ( ShardingConstant . LOGIC _ SCHEMA _ NAME )) . values ()); <nl> 
new file <nl> ppp RxFlatmapAndSwitchmapUnitTest . java <nl> + package com . baeldung . rxjava . operators ; <nl> + import io . reactivex . Observable ; <nl> + import io . reactivex . schedulers . TestScheduler ; <nl> + import org . junit . Test ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> 
mmm PartImpl . java <nl> ppp PartImpl . java <nl> + import java . util . Collections ; <nl> + import io . undertow . util . HeaderValues ; <nl> - return formValue . getHeaders () . get ( new HttpString ( name )); <nl> + HeaderValues values = formValue . getHeaders () . get ( new HttpString ( name )); <nl> 
mmm Cacheable . java <nl> ppp Cacheable . java <nl> + * <nl> + * @ since 2 . 2 . 2 this is no longer is an aspect , but just serves as a marker for cached items <nl> + * <nl> - @ Incubating (" 2 . 1 . 1 ") <nl> 
mmm ClickReceiver . java <nl> ppp ClickReceiver . java <nl> - data . put (" text ", input . getString ( action )); <nl> + data . put (" text ", input . getCharSequence ( action )); <nl> 
mmm HashCodeTest . java <nl> ppp HashCodeTest . java <nl> + hash = HashCode . hash ( hash , new NameValue < String , String >(" A ", " B ")); <nl> + hash = HashCode . hash ( hash , new NameValue < String , String >(" A ", " B ")); <nl> 
mmm Version . java <nl> ppp Version . java <nl> - private static final String VERSION = " 2 . 1 . 11 - SNAPSHOT "; <nl> + private static final String VERSION = " 2 . 1 . 11 "; <nl> - private Version (){ <nl> + private Version () { <nl> - public static String getVersion (){ <nl> + public static String getVersion () { <nl> 
mmm WorldResource . java <nl> ppp WorldResource . java <nl> - worlds [ i ] = this . worldDAO . findById (( long )( random . nextInt ( 10000 ) + 1 )) . orNull (); <nl> + worlds [ i ] = this . worldDAO . findById (( long ) random . nextInt ( 10000 )) . orNull (); <nl> 
deleted file <nl> mmm BaseIndexTest . java <nl> - package org . owasp . dependencycheck . data . cpe ; <nl> - import org . owasp . dependencycheck . data . cpe . BaseIndex ; <nl> - import java . io . File ; <nl> - import org . junit . After ; <nl> - import org . junit . AfterClass ; <nl> - import org . junit . Before ; <nl> 
mmm LoopInLinkList . java <nl> ppp LoopInLinkList . java <nl> - public boolean loopExists ( Node head ){ <nl> - if ( head == null ){ <nl> + public boolean hasCycle ( Node head ){ <nl> + if ( head == null ) { <nl> - while ( slow != fast & & fast != null & & fast . next != null ){ <nl> + while ( fast != null ) { <nl> 
mmm ObjectMapperProvider . java <nl> ppp ObjectMapperProvider . java <nl> - import com . fasterxml . jackson . databind . SerializationFeature ; <nl> 
mmm WriteBigDecimalAsPlainTest . java <nl> ppp WriteBigDecimalAsPlainTest . java <nl> + import java . math . BigInteger ; <nl> 
mmm WebServer . java <nl> ppp WebServer . java <nl> + import java . io . IOException ; <nl> + import java . io . PrintWriter ; <nl> + import javax . servlet . ServletException ; <nl> + import javax . servlet . http . HttpServlet ; <nl> + import javax . servlet . http . HttpServletRequest ; <nl> + import javax . servlet . http . HttpServletResponse ; <nl> 
mmm DatabaseTypeTest . java <nl> ppp DatabaseTypeTest . java <nl> + assertThat ( DatabaseType . valueFrom (" PostgreSQL "), is ( DatabaseType . PostgreSQL )); <nl> 
mmm DynamicTestsTestCase . java <nl> ppp DynamicTestsTestCase . java <nl> - public List <?> dynamicTests () { <nl> + public List < DynamicTest > dynamicTests () { <nl> 
mmm RuleConfiguredTargetValue . java <nl> ppp RuleConfiguredTargetValue . java <nl> + import com . google . common . base . MoreObjects ; <nl> + @ Override <nl> + public String toString () { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . add (" generatingActionIndex ", generatingActionIndex ) <nl> 
mmm FluxGenerateVerification . java <nl> ppp FluxGenerateVerification . java <nl> + import org . testng . SkipException ; <nl> + @ Override <nl> + public void required _ spec309 _ requestZeroMustSignalIllegalArgumentException () <nl> + throws Throwable { <nl> + throw new SkipException (" Reactor doesn ' t onError on <= 0 request , it throws "); <nl> 
mmm DelegatingMethodHandle . java <nl> ppp DelegatingMethodHandle . java <nl> + static LambdaForm makeReinvokerForm ( MethodHandle mh , int num , Object obj , boolean flag , LambdaForm . NamedFunction nf1 , LambdaForm . NamedFunction nf2 ) { <nl> + throw OpenJDKCompileStub . OpenJDKCompileStubThrowError (); <nl> 
mmm ExpressionAnalysisContext . java <nl> ppp ExpressionAnalysisContext . java <nl> - private final Map < Function , Function > deterministicFunctionSymbols = new HashMap <>(); <nl> - if ( functionInfo . isDeterministic ()) { <nl> - Function existingFunction = deterministicFunctionSymbols . get ( newFunction ); <nl> 
mmm SystemsUtilsManualTest . java <nl> ppp SystemsUtilsManualTest . java <nl> - public class SystemsUtilsUnitTest { <nl> + public class SystemsUtilsManualTest { <nl> +  <nl> 
mmm AllInternalTests . java <nl> ppp AllInternalTests . java <nl> + import org . apache . shardingsphere . shardingjdbc . orchestration . internal . datasource . AllDataSourceTests ; <nl> + import org . apache . shardingsphere . shardingjdbc . orchestration . internal . util . DataSourceConverterTest ; <nl> 
mmm GenericServiceImpl . java <nl> ppp GenericServiceImpl . java <nl> - Object result = genericService . $ invoke ( method , parameterTypes , params ); <nl> - System . out . println ( result ); <nl> - return result ; <nl> + return genericService . $ invoke ( method , parameterTypes , params ); <nl> 
mmm S2iBuild . java <nl> ppp S2iBuild . java <nl> - import java . io . BufferedReader ; <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> - import java . io . InputStreamReader ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> 
mmm MetricCollectingRpcClient . java <nl> ppp MetricCollectingRpcClient . java <nl> - * . decorator ( MetricCollectingRpcClient . newDecorator ( MeterIdPrefixFunction . ofDefault (" myClient "))) <nl> + * . rpcDecorator ( MetricCollectingRpcClient . newDecorator ( MeterIdPrefixFunction . ofDefault (" myClient "))) <nl> 
mmm TradeStatisticsManager . java <nl> ppp TradeStatisticsManager . java <nl> - log . error (" We have already an item with the same offer ID . That might happen if both the offerer and the taker published the tradeStatistics "); <nl> + log . debug (" We have already an item with the same offer ID . That might happen if both the offerer and the taker published the tradeStatistics "); <nl> 
mmm MongoPropertyUtil . java <nl> ppp MongoPropertyUtil . java <nl> - import java . util . concurrent . ConcurrentHashMap ; <nl> - private static final Map < Class <?>, Map < String , String >> REPLACEMENT _ CACHE = new ConcurrentHashMap <>(); <nl> - return REPLACEMENT _ CACHE . computeIfAbsent ( clazz , theClass - > computeReplacement ( theClass )); <nl> 
mmm Imports . java <nl> ppp Imports . java <nl> + imports . add (" com . thinkaurelius . titan . core . util . *"); <nl> 
new file <nl> ppp _ 23Test . java <nl> + package com . fishercoder ; <nl> + import com . fishercoder . common . classes . ListNode ; <nl> + import com . fishercoder . common . utils . CommonUtils ; <nl> + import com . fishercoder . solutions . _ 23 ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> 
mmm ShortCodeUtil . java <nl> ppp ShortCodeUtil . java <nl> - if ( bareNumber . length () <= 6 & & (" DE " . equals ( localCountryCode ) || " FI " . equals ( localCountryCode ) || " SK " . equals ( localCountryCode ))) { <nl> - return true ; <nl> - } <nl> 
deleted file <nl> mmm Ignore . java <nl> - package ignore ; <nl> - public class Ignore { <nl> - } <nl> 
mmm Architecture . java <nl> ppp Architecture . java <nl> + import java . util . Properties ; <nl> - private Architecture ( String name ) { <nl> + Architecture ( String name ) { <nl> - public static Architecture detect () { <nl> - String javaName = System . getProperty (" os . arch "); <nl> + public static Architecture detect ( Properties properties ) { <nl> 
mmm WebviewPracticeActivity . java <nl> ppp WebviewPracticeActivity . java <nl> - public void onPageCommitVisible ( WebView view , String url ) { <nl> + public void onPageFinished ( WebView view , String url ) { <nl> + super . onPageFinished ( view , url ); <nl> 
mmm MongoDBHolder . java <nl> ppp MongoDBHolder . java <nl> + if ( mongodb == null ) { <nl> + throw new IllegalStateException (" You didn ' t define variable :" + varName + " using MongoDB Source Config ( property : MongoDB Source )"); <nl> + } <nl> 
deleted file <nl> mmm R . java <nl> - package org . schabi . newpipe ; <nl> - public final class R { <nl> - } <nl> 
mmm IssueAuthorizationDao . java <nl> ppp IssueAuthorizationDao . java <nl> + @ Override <nl> 
mmm RegistryCenterServiceLoader . java <nl> ppp RegistryCenterServiceLoader . java <nl> - RegistryCenterServiceLoader () { <nl> + public RegistryCenterServiceLoader () { <nl> 
mmm ObsoleteGui . java <nl> ppp ObsoleteGui . java <nl> + import java . util . Collection ; <nl> + import javax . swing . JPanel ; <nl> + import javax . swing . JPopupMenu ; <nl> + import javax . swing . tree . TreeNode ; <nl> + import org . apache . jmeter . config . ConfigTestElement ; <nl> + import org . apache . jmeter . gui . AbstractJMeterGuiComponent ; <nl> 
mmm ApiInfo . java <nl> ppp ApiInfo . java <nl> - @ Deprecated <nl> + @ Deprecated <nl> 
mmm PreferencesPanel . java <nl> ppp PreferencesPanel . java <nl> + public boolean isActivated (); <nl> 
mmm AbstractWorker . java <nl> ppp AbstractWorker . java <nl> - mExecutorService = Preconditions . checkNotNull ( executorService ); <nl> + mExecutorService = Preconditions . checkNotNull ( executorService , " executorService "); <nl> 
mmm DateTimeUtils . java <nl> ppp DateTimeUtils . java <nl> - Seconds seconds = Seconds . secondsBetween ( now , date _ time ); <nl> + Seconds seconds = Seconds . secondsBetween ( date _ time , now ); <nl> 
mmm FileNameGenerator . java <nl> ppp FileNameGenerator . java <nl> - builder . append ( c ) . replaceFirst (" *$",""); <nl> + builder . append ( c ); <nl> - return builder . toString (); <nl> + return builder . toString () . replaceFirst (" *$",""); <nl> 
mmm MegastekProtocolDecoderTest . java <nl> ppp MegastekProtocolDecoderTest . java <nl> - import org . traccar . helper . TestDataManager ; <nl> - import static org . traccar . helper . DecoderVerifier . verify ; <nl> + import static org . junit . Assert . assertNull ; <nl> + import static org . traccar . helper . DecoderVerifier . verify ; <nl> 
mmm _ 138 . java <nl> ppp _ 138 . java <nl> - } <nl> - class RandomListNode { <nl> - int label ; <nl> - RandomListNode next , random ; <nl> - RandomListNode ( int x ) { this . label = x ; } <nl> - } <nl> + class RandomListNode { <nl> + int label ; <nl> + RandomListNode next , random ; <nl> + RandomListNode ( int x ) { <nl> 
deleted file <nl> mmm InfiniteLoops . java <nl> - package com . baeldung . loops ; <nl> - public class InfiniteLoops { <nl> - public void infiniteLoopUsingWhile () { <nl> - while ( true ) { <nl> - System . out . println (" Infinite loop using while "); <nl> - } <nl> - } <nl> - public void infiniteLoopUsingFor () { <nl> 
mmm HttpAuthenticator . java <nl> ppp HttpAuthenticator . java <nl> - if ( closeTask == null ) { <nl> - closeTask = NoopCloseTask . INSTANCE ; <nl> - } <nl> - static class NoopCloseTask implements Runnable { <nl> - static final NoopCloseTask INSTANCE = new NoopCloseTask (); <nl> - @ Override <nl> - public void run () { <nl> 
mmm GuiWrongMinecraft . java <nl> ppp GuiWrongMinecraft . java <nl> - this . drawCenteredString ( this . fontRendererObj , " The file ' ForgeModLoader - client - 0 . log ' contains more information ", this . width / 2 , offset , 0xFFFFFF ); <nl> + this . drawCenteredString ( this . fontRendererObj , " The file ' fml - client - latest . log ' contains more information ", this . width / 2 , offset , 0xFFFFFF ); <nl> 
mmm GenericsTestBase . java <nl> ppp GenericsTestBase . java <nl> - private class GenericsTester extends ClassAdapter { <nl> + private class GenericsTester extends ClassVisitor { <nl> - super ( cv ); <nl> + super ( Opcodes . ASM4 , cv ); <nl> 
mmm ScriptJobHandler . java <nl> ppp ScriptJobHandler . java <nl> - ReturnT < String > result = ( exitValue == 0 )? IJobHandler . SUCCESS : new ReturnT < String >( IJobHandler . FAIL . getCode (), " script exit value (" + exitValue + ") is failed "); <nl> - return result ; <nl> + if ( exitValue == 0 ) { <nl> 
mmm ClientConfiguration . java <nl> ppp ClientConfiguration . java <nl> - KinesisAsyncClient kinesisClient = KinesisAsyncClient . builder () <nl> + KinesisAsyncClient client2 = KinesisAsyncClient . builder () <nl> 
mmm NthElementOfCountNumberSequence . java <nl> ppp NthElementOfCountNumberSequence . java <nl> - package com . interview . string ; <nl> + package com . interview . array ; <nl> 
new file <nl> ppp CarEngineFacadeTest . java <nl> + package com . baeldung . pattern . facade ; <nl> + import ch . qos . logback . classic . Logger ; <nl> + import ch . qos . logback . classic . spi . ILoggingEvent ; <nl> + import ch . qos . logback . core . AppenderBase ; <nl> + import org . junit . After ; <nl> 
mmm SecureRandomBytesKeyGenerator . java <nl> ppp SecureRandomBytesKeyGenerator . java <nl> - import java . security . NoSuchAlgorithmException ; <nl> - import java . security . NoSuchProviderException ; <nl> 
mmm SlackConsumerTest . java <nl> ppp SlackConsumerTest . java <nl> - Assume . assumeThat (" You should specified access token ", token , CoreMatchers . notNullValue ()); <nl> - Assume . assumeThat (" You should specified slack application hook ", hook , CoreMatchers . notNullValue ()); <nl> + Assume . assumeThat (" Please specify a Slack access token ", token , CoreMatchers . notNullValue ()); <nl> 
mmm Issue2430 . java <nl> ppp Issue2430 . java <nl> + import com . alibaba . fastjson . serializer . SerializerFeature ; <nl> - JSON . toJSONString ( vo )); <nl> + JSON . toJSONString ( vo , SerializerFeature . MapSortField )); <nl> - assertEquals (" VO :{ name - > zhangsan , map - >{ a =[ 1 , 2 , 3 ], b =[ 1 ]}}", vo . toString ()); <nl> 
mmm _ 1377 . java <nl> ppp _ 1377 . java <nl> - for ( int v : graph [ vertex ]) { <nl> - if (! visited [ v ]) { <nl> + for ( int next : graph [ vertex ]) { <nl> + if (! visited [ next ]) { <nl> - for ( int v : graph [ vertex ]) { <nl> - if (! visited [ v ]) { <nl> - visited [ v ] = true ; <nl> - queue . offer ( v ); <nl> 
mmm ThreadPools . java <nl> ppp ThreadPools . java <nl> - import java . util . Set ; <nl> - import java . util . concurrent . CopyOnWriteArraySet ; <nl> - import java . util . concurrent . ExecutorService ; <nl> - import java . util . concurrent . Executors ; <nl> - import java . util . concurrent . ScheduledExecutorService ; <nl> 
mmm MpscChunkedMessagePassingQueueSanityTest . java <nl> ppp MpscChunkedMessagePassingQueueSanityTest . java <nl> - import org . junit . Ignore ; <nl> 
mmm RootLotteAnimatableLayer . java <nl> ppp RootLotteAnimatableLayer . java <nl> - import com . airbnb . lotte . utils . LotteTransform3D ; <nl> - import com . airbnb . lotte . utils . Observable ; <nl> - setTransform ( new Observable <>( new LotteTransform3D ())); <nl> 
new file <nl> ppp JulLogEventSubstitution . java <nl> + package io . quarkus . logging . gelf . graal ; <nl> + import java . util . logging . LogRecord ; <nl> + import org . jboss . logmanager . ExtLogRecord ; <nl> + import com . oracle . svm . core . annotate . Substitute ; <nl> + import com . oracle . svm . core . annotate . TargetClass ; <nl> 
mmm RedisGroupConverter . java <nl> ppp RedisGroupConverter . java <nl> - String password = null ; <nl> + String password = null ; <nl> 
mmm TestMultiValuedNumericRangeQuery . java <nl> ppp TestMultiValuedNumericRangeQuery . java <nl> + import org . apache . lucene . search . TopScoreDocCollector ; <nl> - TopDocs trTopDocs = searcher . search ( cq , 1 ); <nl> - TopDocs nrTopDocs = searcher . search ( tq , 1 ); <nl> + TopScoreDocCollector trCollector = TopScoreDocCollector . create ( 1 , Integer . MAX _ VALUE ); <nl> 
mmm ViewLoaderTests . java <nl> ppp ViewLoaderTests . java <nl> - import java . util . HashMap ; <nl> - import net . sourceforge . argparse4j . inf . Namespace ; <nl> 
mmm ModLoadingException . java <nl> ppp ModLoadingException . java <nl> - return ForgeI18n . parseMessage ( i18nMessage , Streams . concat ( Stream . of ( modInfo . getModId (), errorStage , getCause ()), context . stream ()) . toArray ()); <nl> + return ForgeI18n . parseMessage ( i18nMessage , Streams . concat ( Stream . of ( modInfo , errorStage , getCause ()), context . stream ()) . toArray ()); <nl> 
mmm ColumnCardinalityMapper . java <nl> ppp ColumnCardinalityMapper . java <nl> - System . out . println (" Get col " + m + " row " + counter + " value : " + cell . toString ()); <nl> + System . out . println (" Get row " + counter + " column " + m + " value : " + cell . toString ()); <nl> 
mmm RealmObject . java <nl> ppp RealmObject . java <nl> - row . getTable () . remove ( row . getIndex ()); <nl> + row . getTable () . moveLastOver ( row . getIndex ()); <nl> 
mmm RuleMatchesAsJsonSerializerTest . java <nl> ppp RuleMatchesAsJsonSerializerTest . java <nl> - new RuleMatch ( new FakeRule (), 1 , 3 , " My Message ") <nl> + new RuleMatch ( new FakeRule (), 1 , 3 , " My Message , use < suggestion > foo </ suggestion > instead ") <nl> - assertTrue ( json . contains ("\" My Message \"")); <nl> 
mmm Container . java <nl> ppp Container . java <nl> - import io . jenkins . blueocean . rest . pageable . PagedResponse ; <nl> + import java . util . AbstractCollection ; <nl> - public abstract class Container < T > implements Pageable < T > { <nl> + public abstract class Container < T > extends AbstractCollection < T > implements Pageable < T > { <nl> 
mmm IdentityUserGroupsMappingTest . java <nl> ppp IdentityUserGroupsMappingTest . java <nl> + import static org . junit . Assert . assertNotNull ; <nl> + import static org . junit . Assert . assertEquals ; <nl> - import org . junit . Assert ; <nl> 
mmm CatBdbStore . java <nl> ppp CatBdbStore . java <nl> - environmentConfig = new EnvironmentConfig (); <nl> 
mmm InjectionPointProvider . java <nl> ppp InjectionPointProvider . java <nl> - InjectionPointProvider . CURRENT . set ( injectionPoint ); <nl> - return prev ; <nl> + if ( injectionPoint . equals ( prev )) { <nl> + return injectionPoint ; <nl> + } else { <nl> + InjectionPointProvider . CURRENT . set ( injectionPoint ); <nl> 
mmm _ 156 . java <nl> ppp _ 156 . java <nl> - public class BinaryTreeUpsideDown { <nl> + public class _ 156 { <nl> - public TreeNode upsideDownBinaryTree ( TreeNode root ) <nl> - { <nl> + public TreeNode upsideDownBinaryTree ( TreeNode root ) { <nl> 
mmm ApexLanguageModule . java <nl> ppp ApexLanguageModule . java <nl> - addVersion (" 1 . 0 ", new ApexHandler (), false ); <nl> + addVersion (" 1 . 0 ", new ApexHandler (), true ); <nl> 
new file <nl> ppp MTNoneArrows . java <nl> + package com . chrisrm . idea . actions . arrows ; <nl> + import com . chrisrm . idea . config . ui . ArrowsStyles ; <nl> + public final class MTNoneArrows extends MTAbstractArrowsAction { <nl> + @ Override <nl> + protected ArrowsStyles getArrowsStyle () { <nl> + return ArrowsStyles . NONE ; <nl> 
mmm OLiveResultListener . java <nl> ppp OLiveResultListener . java <nl> 
new file <nl> ppp FindItemsBasedOnValues . java <nl> + package findItems ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import java . text . ParseException ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> + import java . util . stream . Collectors ; <nl> 
mmm LongSentenceRule . java <nl> ppp LongSentenceRule . java <nl> - private static final Pattern NON _ WORD _ REGEX = Pattern . compile ("[?!:;,~’ - ]"); <nl> + private static final Pattern NON _ WORD _ REGEX = Pattern . compile ("[?!:;,~’'\"„“»«‚‘«»›‹ - ]"); <nl> 
mmm RenameColumnExtractHandler . java <nl> ppp RenameColumnExtractHandler . java <nl> + import java . util . Collection ; <nl> + import java . util . Iterator ; <nl> + import org . antlr . v4 . runtime . ParserRuleContext ; <nl> - import io . shardingsphere . core . parsing . antlr . sql . ddl . AlterTableStatement ; <nl> 
new file <nl> ppp UnderstandClass . java <nl> + package sporadic ; <nl> + public class UnderstandClass { <nl> + public UnderstandClass () { <nl> + } <nl> + public static void main ( String [] args ) { <nl> + UnderstandClass uc = new UnderstandClass (); <nl> + Class c1 = UnderstandClass . class ; <nl> + Class c2 = uc . getClass (); <nl> 

mmm SctpChannelOption . java <nl> ppp SctpChannelOption . java <nl> + import com . sun . nio . sctp . SctpStandardSocketOptions ; <nl> - import java . util . List ; <nl> 
mmm MainActivity . java <nl> ppp MainActivity . java <nl> + import com . google . android . gms . common . GoogleApiAvailability ; <nl> - int resultCode = GooglePlayServicesUtil . isGooglePlayServicesAvailable ( this ); <nl> + GoogleApiAvailability apiAvailability = GoogleApiAvailability . getInstance (); <nl> 
mmm LineageContextTest . java <nl> ppp LineageContextTest . java <nl> - import alluxio . Configuration ; <nl> - import alluxio . PropertyKey ; <nl> + import java . io . IOException ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import org . junit . Assert ; <nl> - import java . util . ArrayList ; <nl> 
mmm PerfCounterGcCpuUsageMonitor . java <nl> ppp PerfCounterGcCpuUsageMonitor . java <nl> - return gc0 == null ? 0 : gc0 . geNanos (); <nl> + return gc0 == null ? 0 : gc0 . getNanos (); <nl> - return gc1 == null ? 0 : gc1 . geNanos (); <nl> + return gc1 == null ? 0 : gc1 . getNanos (); <nl> 
mmm BoostingTermQuery . java <nl> ppp BoostingTermQuery . java <nl> + * <nl> + * @ deprecated See {@ link org . apache . lucene . search . payloads . BoostingFunctionTermQuery } <nl> 
mmm RouteSpecification . java <nl> ppp RouteSpecification . java <nl> + public static RouteSpecification fromLocation ( Location origin , Cargo cargo , Date arrivalDeadline ) { <nl> + Validate . notNull ( origin ); <nl> + Validate . notNull ( cargo ); <nl> + Validate . notNull ( arrivalDeadline ); <nl> + return new RouteSpecification ( origin , cargo . destination (), arrivalDeadline ); <nl> 
mmm UUIDType . java <nl> ppp UUIDType . java <nl> + import liquibase . statement . DatabaseFunction ; <nl> - return "'" + value + "'"; <nl> + return ( value instanceof DatabaseFunction ) ? database . generateDatabaseFunctionValue (( DatabaseFunction ) value ) : "'" + value + "'"; <nl> 
mmm SpellingData . java <nl> ppp SpellingData . java <nl> - import java . util . ArrayList ; <nl> - import java . util . Arrays ; <nl> - import java . util . List ; <nl> + import java . util . *; <nl> 
mmm PropertyRenamingPolicy . java <nl> ppp PropertyRenamingPolicy . java <nl> - HEURISTIC , <nl> - AGGRESSIVE _ HEURISTIC , <nl> 
mmm JsonSmartJsonProvider . java <nl> ppp JsonSmartJsonProvider . java <nl> - import net . minidev . json . parser . ContainerFactory ; <nl> + import net . minidev . json . mapper . AMapper ; <nl> + import net . minidev . json . mapper . DefaultMapperOrdered ; <nl> - private Mode mode ; <nl> + private final Mode mode ; <nl> 
mmm GoSdkServiceTest . java <nl> ppp GoSdkServiceTest . java <nl> + setIsLinux ( false ); <nl> + setIsLinux ( false ); <nl> + setIsWindows ( value , SystemInfo . isWindows , " isWindows "); <nl> + } <nl> + private void setIsLinux ( boolean value ) { <nl> + setIsWindows ( value , SystemInfo . isLinux , " isLinux "); <nl> 
deleted file <nl> mmm RoleQueryCriteria . java <nl> - package me . zhengjie . modules . system . service . dto ; <nl> - import lombok . Data ; <nl> - import me . zhengjie . annotation . Query ; <nl> - @ Data <nl> - public class RoleQueryCriteria { <nl> - @ Query ( type = Query . Type . INNER _ LIKE ) <nl> - private String name ; <nl> 

mmm Tree . java <nl> ppp Tree . java <nl> 
mmm FollowTopicDialog . java <nl> ppp FollowTopicDialog . java <nl> + et . setHint ( getString ( R . string . add _ topic _ hint )); <nl> 
mmm ViewStateDTO . java <nl> ppp ViewStateDTO . java <nl> + static final String FIELD _ DASHBOARD _ WIDGET _ POSITIONS = " dashboard _ positions "; <nl> + @ JsonProperty ( FIELD _ DASHBOARD _ WIDGET _ POSITIONS ) <nl> + public abstract Map < String , WidgetPositionDTO > dashboardWidgetPositions (); <nl> + @ JsonProperty ( FIELD _ DASHBOARD _ WIDGET _ POSITIONS ) <nl> 
mmm AbstractLombokClassProcessor . java <nl> ppp AbstractLombokClassProcessor . java <nl> + import com . intellij . psi . PsiMethod ; <nl> - PsiClass psiClass = PsiTreeUtil . getParentOfType ( psiAnnotation , PsiClass . class ); <nl> - if ( null != psiClass ) { <nl> + PsiElement psiElement = PsiTreeUtil . getParentOfType ( psiAnnotation , PsiField . class , PsiMethod . class , PsiClass . class ); <nl> 
mmm AutoCodec . java <nl> ppp AutoCodec . java <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + @ Retention ( RetentionPolicy . RUNTIME ) <nl> 
mmm FriendFollowViewHolder . java <nl> ppp FriendFollowViewHolder . java <nl> - import android . text . Spannable ; <nl> - import android . text . style . StyleSpan ; <nl> + import android . text . Html ; <nl> - titleTextView . setText ( context . getString ( R . string . username _ is _ following _ you , activity . user () . name ())); <nl> 
mmm AopLockAdvisor . java <nl> ppp AopLockAdvisor . java <nl> + @ Override <nl> + public int getOrder () { <nl> + return Integer . MIN _ VALUE ; <nl> + } <nl> 
new file <nl> ppp ThreadPoolTaskExecutorUnitTest . java <nl> + package com . baeldung . threading ; <nl> + import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . ThreadLocalRandom ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import org . springframework . scheduling . concurrent . ThreadPoolTaskExecutor ; <nl> 
mmm UsePreviousTimeOnInvalidTimestampTest . java <nl> ppp UsePreviousTimeOnInvalidTimestampTest . java <nl> + import org . apache . kafka . streams . errors . StreamsException ; <nl> + import static org . junit . Assert . fail ; <nl> + @ Test <nl> + public void shouldThrowStreamsException () { <nl> + final TimestampExtractor extractor = new UsePreviousTimeOnInvalidTimestamp (); <nl> 
mmm VisibleForTesting . java <nl> ppp VisibleForTesting . java <nl> + * < p >< b > Do not use this interface </ b > for public or protected declarations : it is a fig leaf for <nl> + * bad design , and it does not prevent anyone from using the declaration - - - and experience has shown <nl> + * that they will . If the method breaks the encapsulation of its class , then its internal <nl> 
mmm PastSnapshotFinderByPreviousVersion . java <nl> ppp PastSnapshotFinderByPreviousVersion . java <nl> + session . commit (); <nl> 
mmm SearchDatabase . java <nl> ppp SearchDatabase . java <nl> - import android . util . Log ; <nl> + import com . annimon . stream . Stream ; <nl> + import org . thoughtcrime . securesms . util . Util ; <nl> + import java . util . List ; <nl> 
mmm SelfValidatingValidator . java <nl> ppp SelfValidatingValidator . java <nl> + import com . google . common . collect . Maps ; <nl> - import java . util . HashMap ; <nl> + import java . util . concurrent . ConcurrentMap ; <nl> - private final HashMap < Class <?>, List < ValidationCaller <?>>> methodMap = new HashMap <>(); <nl> 
mmm ZipCompressionLevel . java <nl> ppp ZipCompressionLevel . java <nl> + MIN ( 1 ), <nl> 
mmm EmbeddingITest . java <nl> ppp EmbeddingITest . java <nl> - public class EmbeddingTest { <nl> + public class EmbeddingITest { <nl> 
new file <nl> ppp VersionsResourceTasks . java <nl> + package versions ; <nl> + import org . codehaus . groovy . runtime . ResourceGroovyMethods ; <nl> + import org . gradle . api . DefaultTask ; <nl> + import org . gradle . api . file . RegularFileProperty ; <nl> + import org . gradle . api . provider . MapProperty ; <nl> 
mmm WorkerImpl . java <nl> ppp WorkerImpl . java <nl> + import com . google . common . base . Preconditions ; <nl> - import org . dataportabilityproject . spi . cloud . types . LegacyPortabilityJob ; <nl> + import org . dataportabilityproject . spi . cloud . types . PortabilityJob ; <nl> - LegacyPortabilityJob job = store . find ( jobId , JobAuthorization . State . CREDS _ ENCRYPTED ); <nl> 
mmm NoteEditorRescheduleCard . java <nl> ppp NoteEditorRescheduleCard . java <nl> - import android . content . res . Resources ; <nl> - . inputRange ( 1 , - 1 ) <nl> + . inputRange ( 1 , 9999 ) <nl> 
mmm WebSocketListener . java <nl> ppp WebSocketListener . java <nl> 
mmm GermanLemmatizer . java <nl> ppp GermanLemmatizer . java <nl> + * @ deprecated use GermanTagger instead <nl> + * <nl> 
mmm ActionRequestRestExecuter . java <nl> ppp ActionRequestRestExecuter . java <nl> - import org . elasticsearch . action . admin . indices . get . GetIndexResponse ; <nl> - import org . elasticsearch . action . deletebyquery . DeleteByQueryRequest ; <nl> - import org . elasticsearch . plugin . deletebyquery . DeleteByQueryPlugin ; <nl> 
mmm AnnotatorPool . java <nl> ppp AnnotatorPool . java <nl> 
mmm Article . java <nl> ppp Article . java <nl> + import android . support . annotation . NonNull ; <nl> + import android . support . annotation . Nullable ; <nl> + @ Nullable <nl> + private Long id ; <nl> + @ NonNull <nl> + private String title ; <nl> + @ Nullable <nl> + public Long getId () { <nl> + return id ; <nl> 
mmm DemoTagger . java <nl> ppp DemoTagger . java <nl> - final List < AnalyzedTokenReadings > tokenReadings = new ArrayList < AnalyzedTokenReadings >(); <nl> - int pos = 0 ; <nl> + final List < AnalyzedTokenReadings > tokenReadings = new ArrayList < AnalyzedTokenReadings >(); <nl> - l . add ( new AnalyzedToken ( word , null , null )); <nl> 
mmm ReadinessCheckHttpCodeTest . java <nl> ppp ReadinessCheckHttpCodeTest . java <nl> - import org . springframework . boot . SpringApplication ; <nl> + import org . springframework . beans . factory . annotation . Autowired ; <nl> + import org . springframework . boot . test . web . client . TestRestTemplate ; <nl> 
mmm OutputStreamBuilder . java <nl> ppp OutputStreamBuilder . java <nl> 
mmm ServerManager . java <nl> ppp ServerManager . java <nl> + import org . jboss . netty . channel . ChannelException ; <nl> + import org . traccar . helper . Log ; <nl> + import java . net . BindException ; <nl> - server . start (); <nl> + try { <nl> + server . start (); <nl> + } catch ( ChannelException e ) { <nl> 
new file <nl> ppp ShadowArrayAdapter . java <nl> + package com . xtremelabs . robolectric . shadows ; <nl> + import android . content . Context ; <nl> + import android . widget . ArrayAdapter ; <nl> + import com . xtremelabs . robolectric . util . Implementation ; <nl> + import com . xtremelabs . robolectric . util . Implements ; <nl> 
mmm DashRule . java <nl> ppp DashRule . java <nl> - int pos = 0 ; <nl> - pos + = token . length (); <nl> 
mmm GoIcons . java <nl> ppp GoIcons . java <nl> 
mmm ClientConfigMerger . java <nl> ppp ClientConfigMerger . java <nl> - getStack () . push ( old ); <nl> + getObjects () . push ( old ); <nl> - getStack () . pop (); <nl> + getObjects () . pop (); <nl> 
mmm DynamicFieldsPanel . java <nl> ppp DynamicFieldsPanel . java <nl> - if ( fieldValues . containsKey ( f . getKey ())) <nl> - f . getValue () . setText ( fieldValues . get ( f . getKey ())); <nl> - else <nl> - f . getValue () . setText (""); <nl> + ZapTextField field = f . getValue (); <nl> + field . setText ( fieldValues . get ( f . getKey ())); <nl> 
mmm ExtendedInfoFormatter . java <nl> ppp ExtendedInfoFormatter . java <nl> + import java . util . Iterator ; <nl> - @ Override <nl> - public String toString () { <nl> + private String toXmlString () { <nl> + private String toJsonString () { <nl> + StringBuilder result = new StringBuilder (); <nl> + result . append ("{"); <nl> 
mmm TextViewDescriptor . java <nl> ppp TextViewDescriptor . java <nl> - if ( text . length () != 0 ) { <nl> + if ( text != null & & text . length () != 0 ) { <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 10 . 3 "; <nl> + public static final String VERSION = " 2 . 10 . 4 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 10 . 3 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 10 . 4 "; <nl> 
mmm PostgreSQLCopyParsedStatement . java <nl> ppp PostgreSQLCopyParsedStatement . java <nl> + import org . flywaydb . core . api . FlywayException ; <nl> - import org . postgresql . copy . CopyManager ; <nl> - import org . postgresql . core . BaseConnection ; <nl> - import java . io . IOException ; <nl> + import java . io . Reader ; <nl> 
mmm Person . java <nl> ppp Person . java <nl> - enum Gender { <nl> + public enum Gender { <nl> - if ( this == obj ) <nl> + if ( this == obj ) { <nl> - if ( obj == null ) <nl> + } <nl> + if ( obj == null ) { <nl> - if ( getClass () != obj . getClass ()) <nl> + } <nl> + if ( getClass () != obj . getClass ()) { <nl> 
mmm TimingTest . java <nl> ppp TimingTest . java <nl> + import java . text . DecimalFormat ; <nl> - assertEquals (" Wrong formatted time ", " 0 . 1 ", Timing . toSecondsString ( val3 )); <nl> + assertEquals (" Wrong formatted time ", new DecimalFormat (" 0 . 0 ") . format ( 0 . 1 ), Timing . toSecondsString ( val3 )); <nl> 
new file <nl> ppp ImmutablesGenerationTest . java <nl> + package io . swagger . jackson ; <nl> + import com . fasterxml . jackson . databind . ObjectMapper ; <nl> + import com . fasterxml . jackson . databind . annotation . JsonSerialize ; <nl> + import io . swagger . converter . ModelConverterContextImpl ; <nl> 
deleted file <nl> mmm AllAllTests . java <nl> - package com . dianping . cat ; <nl> - import org . junit . runner . RunWith ; <nl> - import org . junit . runners . Suite ; <nl> - import org . junit . runners . Suite . SuiteClasses ; <nl> - @ RunWith ( Suite . class ) <nl> - @ SuiteClasses ({ <nl> - com . dianping . cat . message . AllTests . class , <nl> 
mmm YamlTableRuleConfigurationTest . java <nl> ppp YamlTableRuleConfigurationTest . java <nl> - import io . shardingsphere . core . keygen . generator . SnowflakeKeyGenerator ; <nl> - result . getKeyGenerator () . setClassName ( SnowflakeKeyGenerator . class . getName ()); <nl> + result . getKeyGenerator () . setType (" SNOWFLAKE "); <nl> 
mmm RouteResult . java <nl> ppp RouteResult . java <nl> - import org . apache . shardingsphere . underlying . route . RouteUnit ; <nl> - import java . util . Collection ; <nl> - import java . util . LinkedHashSet ; <nl> 
mmm NewSymbol . java <nl> ppp NewSymbol . java <nl> + * @ deprecated since 6 . 1 Only supported to ease migration from old API . Please prefer other {@ code newReference ()} methods . <nl> + @ Deprecated <nl> 
new file <nl> ppp FillerRuleDefinitionTest . java <nl> + package org . apache . shardingsphere . core . parse . rule . registry . filler ; <nl> + import org . apache . shardingsphere . core . parse . filler . common . ddl . column . ColumnDefinitionFiller ; <nl> + import org . apache . shardingsphere . core . parse . rule . jaxb . entity . filler . FillerRuleDefinitionEntity ; <nl> 
mmm EclipseLinkHandler . java <nl> ppp EclipseLinkHandler . java <nl> + import javax . persistence . PersistenceException ; <nl> + import org . eclipse . persistence . config . HintValues ; <nl> - import org . eclipse . persistence . config . ResultSetType ; <nl> + boolean canUseCursor = false ; <nl> + try { <nl> 
new file <nl> ppp SecurityMockMvcRequestPostProcessorsTestSecurityContextStatelessTests . java <nl> + package org . springframework . security . test . web . servlet . request ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . springframework . beans . factory . annotation . Autowired ; <nl> 
new file <nl> ppp ExtendedAccountRegistrationWizard . java <nl> + package net . java . sip . communicator . service . gui ; <nl> + public interface ExtendedAccountRegistrationWizard <nl> + extends AccountRegistrationWizard <nl> + { <nl> + public boolean isSignupSupported (); <nl> + public void setCreateAccountView (); <nl> 
mmm GameFeaturesLibrary . java <nl> ppp GameFeaturesLibrary . java <nl> - public static void getPlayerData ( <nl> - Context context , JSONObject parameters , DaemonRequest . Callback callback ) { <nl> - DaemonRequest . executeAsync ( context , parameters , callback , SDKMessageEnum . GET _ PLAYER _ DATA ); <nl> 
mmm AbstractCommand . java <nl> ppp AbstractCommand . java <nl> + import org . neo4j . kernel . diagnostics . providers . SystemDiagnostics ; <nl> + import org . neo4j . kernel . internal . Version ; <nl> + import org . neo4j . logging . PrintStreamLogger ; <nl> + if ( verbose ) <nl> + { <nl> + printVerboseHeader (); <nl> 
mmm SourcePacketExtension . java <nl> ppp SourcePacketExtension . java <nl> - setAttribute ( SSRC _ ATTR _ NAME , Long . toString ( ssrc )); <nl> + setAttribute ( SSRC _ ATTR _ NAME , Long . toString ( 0xffffffffL & ssrc )); <nl> 
mmm GlueTypeEnum . java <nl> ppp GlueTypeEnum . java <nl> - GLUE _ POWERSHELL (" GLUE ( PowerShell )", true , " powershell ", " . ps1 "); <nl> + GLUE _ POWERSHELL (" GLUE ( PowerShell )", true , " powershell ", " . ps1 "); <nl> 
mmm EvernoteApi . java <nl> ppp EvernoteApi . java <nl> + import org . scribe . model . Verb ; <nl> + @ Override <nl> + protected Verb getRequestTokenVerb () <nl> + { <nl> + return Verb . GET ; <nl> + } <nl> + @ Override <nl> + protected Verb getAccessTokenVerb () <nl> + { <nl> + return Verb . GET ; <nl> + } <nl> 
mmm DefaultMountContentPool . java <nl> ppp DefaultMountContentPool . java <nl> - final int poolSize = lifecycle . poolSize (); <nl> - if ( poolSize != mPoolSize ) { <nl> - throw new RuntimeException ( <nl> - " Expected lifecycle poolSize for " <nl> - + lifecycle . getClass () . getSimpleName () <nl> - + " to match poolSize of recycle pool (" <nl> 
mmm CreatePrimaryKeyExtractHandler . java <nl> ppp CreatePrimaryKeyExtractHandler . java <nl> - import io . shardingsphere . core . parsing . parser . sql . SQLStatement ; <nl> - import io . shardingsphere . core . parsing . parser . sql . ddl . create . table . CreateTableStatement ; <nl> - public final class CreatePrimaryKeyExtractHandler implements ASTExtractHandler , ASTExtractHandler1 { <nl> 
new file <nl> ppp ThemeTests . java <nl> + package org . junit . platform . console . options ; <nl> + import static org . junit . jupiter . api . Assertions . assertAll ; <nl> + import static org . junit . jupiter . api . Assertions . assertEquals ; <nl> + import java . nio . charset . StandardCharsets ; <nl> 
mmm LanguageServerAbstractFileWatcherTest . java <nl> ppp LanguageServerAbstractFileWatcherTest . java <nl> - when ( languageServer . getWorkspaceService ()) . thenReturn ( workspaceService ); <nl> - when ( pathMatcher . matches ( tmpFilePath )) . thenReturn ( true ); <nl> + when ( pathMatcher . matches ( any ( Path . class ))) <nl> 
mmm TransactionProducer . java <nl> ppp TransactionProducer . java <nl> - LocalTransactionExecuter executor = new LocalTransactionExecuterImpl (); <nl> + LocalTransactionExecuter localTransactionExecuter = new LocalTransactionExecuterImpl (); <nl> - SendResult sendResult = producer . sendMessageInTransaction ( msg , executor , null ); <nl> 
mmm CcImportRule . java <nl> ppp CcImportRule . java <nl> + . add ( <nl> + attr (" system _ provided ", BOOLEAN )) <nl> - attr (" alwayslink ", BOOLEAN ) <nl> - . nonconfigurable (" value is referenced in an ImplicitOutputsFunction ")) <nl> + attr (" alwayslink ", BOOLEAN )) <nl> 
deleted file <nl> mmm Bug1429 . java <nl> - public class Bug1429 { <nl> - public Set < String > getAttributeTuples () { <nl> - return ( Set < String >) ( this . attributes == null ? Collections . < String > emptySet () : new HashSet < String >( <nl> - CollectionUtils . collect ( this . attributes . keySet (), new Transformer () { <nl> 
new file <nl> ppp Xor . java <nl> + package com . google . refine . expr . functions . booleans ; <nl> + import java . util . Properties ; <nl> + import org . json . JSONException ; <nl> + import org . json . JSONWriter ; <nl> + import com . google . refine . expr . EvalError ; <nl> + import com . google . refine . grel . ControlFunctionRegistry ; <nl> 
mmm StoredFieldVisitor . java <nl> ppp StoredFieldVisitor . java <nl> - * See {@ link DocumentStoredFieldVisitor }, which is a <nl> + * < p >< b > NOTE </ b >: a {@ code StoredFieldVisitor } implementation <nl> + * should not try to load or visit other stored documents in <nl> + * the same reader because the implementation of stored <nl> 
mmm GanttDto . java <nl> ppp GanttDto . java <nl> - this . taskNames = taskNames ;; <nl> + this . taskNames = taskNames ; <nl> 
mmm JvmMemoryMetrics . java <nl> ppp JvmMemoryMetrics . java <nl> + import io . micrometer . core . instrument . Tags ; <nl> - Iterable < Tag > tags = singletonList ( Tag . of (" id ", bufferPoolBean . getName ())); <nl> + Iterable < Tag > tags = Tags . zip (" id ", bufferPoolBean . getName ()); <nl> - registry . gauge (" jvm . buffer . memory . used ", tags , bufferPoolBean , BufferPoolMXBean :: getMemoryUsed ); <nl> 
mmm Factory . java <nl> ppp Factory . java <nl> - * } <nl> - * }</ code ></ pre > <nl> + * </ code ></ pre > <nl> 
mmm InstrumentedThreadFactoryTest . java <nl> ppp InstrumentedThreadFactoryTest . java <nl> - import static org . fest . assertions . api . Assertions . assertThat ; <nl> + import org . junit . Test ; <nl> - import java . util . concurrent . CountDownLatch ; <nl> - import java . util . concurrent . atomic . AtomicInteger ; <nl> 
new file <nl> ppp CreateFluidSourceTest . java <nl> + package net . minecraftforge . test ; <nl> + import net . minecraft . init . Blocks ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . world . BlockEvent . CreateFluidSourceEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - String VERSION = " 2 . 3 . 1 "; <nl> + String VERSION = " 2 . 4 . 0 "; <nl> - String VERSION _ SLASHY = " ExoPlayerLib / 2 . 3 . 1 "; <nl> + String VERSION _ SLASHY = " ExoPlayerLib / 2 . 4 . 0 "; <nl> - int VERSION _ INT = 2003001 ; <nl> 
mmm ServerInstanceTest . java <nl> ppp ServerInstanceTest . java <nl> + import java . net . InetAddress ; <nl> - public void testServerInstance () { <nl> + public void testServerInstance () <nl> + throws Exception { <nl> - assertEquals ( new ServerInstance (" localhost ", 8080 ), new ServerInstance (" 127 . 0 . 0 . 1 ", 8080 )); <nl> 
mmm PhoneGap . java <nl> ppp PhoneGap . java <nl> -  <nl> -  <nl> 
new file <nl> ppp AUC . java <nl> + package smile . validation ; <nl> + import smile . sort . QuickSort ; <nl> + public class AUC { <nl> + public AUC () { <nl> + } <nl> + public double measure ( int [] truth , double [] prediction ) { <nl> + if ( truth . length != prediction . length ) { <nl> + throw new IllegalArgumentException ( String . format (" The vector sizes don ' t match : % d != % d . ", truth . length , prediction . length )); <nl> 
mmm Jdbc3KeyGeneratorTest . java <nl> ppp Jdbc3KeyGeneratorTest . java <nl> - import org . apache . ibatis . io . Resources ; <nl> - import org . apache . ibatis . session . SqlSession ; <nl> - import org . apache . ibatis . session . SqlSessionFactory ; <nl> - import org . apache . ibatis . session . SqlSessionFactoryBuilder ; <nl> 
mmm YamlServerConfiguration . java <nl> ppp YamlServerConfiguration . java <nl> - import io . shardingsphere . core . rule . ProxyAuthority ; <nl> + import io . shardingsphere . core . rule . Authentication ; <nl> - private ProxyAuthority proxyAuthority = new ProxyAuthority (); <nl> + private Authentication authentication = new Authentication (); <nl> 
mmm IssuesModeTest . java <nl> ppp IssuesModeTest . java <nl> - perfRule . assertDurationAround ( duration , 4200L ); <nl> + perfRule . assertDurationAround ( duration , 3600L ); <nl> 
mmm LoadPackagesAsyncTask . java <nl> ppp LoadPackagesAsyncTask . java <nl> - labelsPackages . add ( new String []{ label . toString (), appInfo . packageName }); <nl> + String packageName = appInfo . packageName ; <nl> + if (! isHidden ( packageName )) { <nl> + labelsPackages . add ( new String []{ label . toString (), packageName }); <nl> 
mmm DataSourceBeanDefinitionParser . java <nl> ppp DataSourceBeanDefinitionParser . java <nl> + import com . google . common . base . Strings ; <nl> - factory . addConstructorArgReference ( element . getAttribute ( ShardingDataSourceBeanDefinitionParserTag . DATA _ SOURCE _ REF _ TAG )); <nl> - factory . addConstructorArgValue ( getOrchestrationConfiguration ( element )); <nl> 
mmm HBaseTables . java <nl> ppp HBaseTables . java <nl> 
mmm MeasureFilterExecutor . java <nl> ppp MeasureFilterExecutor . java <nl> + import org . slf4j . LoggerFactory ; <nl> + import javax . annotation . Nullable ; <nl> + Connection connection = null ; <nl> - Connection connection = session . getConnection (); <nl> + connection = session . getConnection (); <nl> 
new file <nl> ppp SimpleRegularExpression . java <nl> + package com . github . pedrovgs . problem33 ; <nl> + public class SimpleRegularExpression { <nl> + } <nl> 
mmm JWTTokenManager . java <nl> ppp JWTTokenManager . java <nl> - import java . io . UnsupportedEncodingException ; <nl> + import java . lang . IllegalArgumentException ; <nl> - } catch ( UnsupportedEncodingException e ) { <nl> + } catch ( IllegalArgumentException e ) { <nl> 
new file <nl> ppp Issue169 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import java . io . StringReader ; <nl> + import java . io . StringWriter ; <nl> + import junit . framework . TestCase ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSONReader ; <nl> + import com . alibaba . fastjson . JSONWriter ; <nl> 
mmm ProcessNotStartedException . java <nl> ppp ProcessNotStartedException . java <nl> - class ProcessNotStartedException extends RuntimeException { <nl> + public class ProcessNotStartedException extends RuntimeException { <nl> 
mmm Version . java <nl> ppp Version . java <nl> - public static final String VERSION = " 5 . 5 . 1 "; <nl> + public static final String VERSION = " 5 . 5 . 2 "; <nl> - public static final int RPC _ VERSION = 50501 ; <nl> + public static final int RPC _ VERSION = 50502 ; <nl> - public static final String BUILD _ VERSION = " 5 . 5 . 1 _ 20190222113128 "; <nl> 
mmm VertxHttpRestProducerTest . java <nl> ppp VertxHttpRestProducerTest . java <nl> + import java . io . InputStream ; <nl> + import org . apache . camel . Exchange ; <nl> + import org . apache . camel . Processor ; <nl> + import org . apache . camel . RoutesBuilder ; <nl> + import org . apache . camel . builder . RouteBuilder ; <nl> 
mmm OSDetection . java <nl> ppp OSDetection . java <nl> + if ( isWindows ()) { <nl> + String arch = System . getenv (" PROCESSOR _ ARCHITECTURE "); <nl> + String wow64Arch = System . getenv (" PROCESSOR _ ARCHITEW6432 "); <nl> + return arch != null & & arch . endsWith (" 64 ") || wow64Arch != null & & wow64Arch . endsWith (" 64 "); <nl> 
mmm GrpcMultiModuleQuarkusBuildTest . java <nl> ppp GrpcMultiModuleQuarkusBuildTest . java <nl> - final var buildResult = runGradleWrapper ( projectDir , ": application : quarkusBuild ", ": application : test "); <nl> + runGradleWrapper ( projectDir , ": application : quarkusBuild ", ": application : test "); <nl> 
new file <nl> ppp BlockReaderUtil . java <nl> + package org . apache . hadoop . hdfs ; <nl> + import java . io . IOException ; <nl> + class BlockReaderUtil { <nl> + public static int readAll ( BlockReader reader , <nl> + byte [] buf , int offset , int len ) throws IOException { <nl> + int n = 0 ; <nl> + for (;;) { <nl> 
new file <nl> ppp Issue1547 . java <nl> + package com . alibaba . json . bvt . kotlin ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + import org . apache . commons . io . IOUtils ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> 
mmm PersianSpaceBeforeRule . java <nl> ppp PersianSpaceBeforeRule . java <nl> - return " Fa _ SPACE _ BEFORE _ CONJUNCTION "; <nl> + return " FA _ SPACE _ BEFORE _ CONJUNCTION "; <nl> 
mmm TestRegistryCenter . java <nl> ppp TestRegistryCenter . java <nl> + @ Override <nl> + public String getDirectly ( final String key ) { <nl> + return ""; <nl> + } <nl> 
mmm InsertValuesToken . java <nl> ppp InsertValuesToken . java <nl> + public void addInsertColumnValue ( final List < SQLExpression > columnValues , final List < Object > columnParameters ) { <nl> + InsertColumnValue result = new InsertColumnValue (); <nl> + result . values . addAll ( columnValues ); <nl> 
mmm KeyValueStoreIterator . java <nl> ppp KeyValueStoreIterator . java <nl> - mPartitions = Preconditions . checkNotNull ( partitions ); <nl> + mPartitions = Preconditions . checkNotNull ( partitions , " partitions "); <nl> 
new file <nl> ppp PluginMethodHandleTest . java <nl> + package com . getcapacitor ; <nl> + import org . junit . Test ; <nl> + import java . lang . reflect . Method ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . mockito . BDDMockito . given ; <nl> + import static org . mockito . Mockito . mock ; <nl> 
new file <nl> ppp VBSymbolTokenizerTest . java <nl> + package org . opensolaris . opengrok . analysis . vb ; <nl> + import java . io . BufferedReader ; <nl> + import java . io . InputStream ; <nl> + import java . io . InputStreamReader ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> 
mmm NotYetImplemented . java <nl> ppp NotYetImplemented . java <nl> - * @ author Ilinca V . Hallberg <nl> - * @ author Bj ö rn Westlin <nl> + * @ author Ilinca V . Hallberg <nl> + * @ author Bj ö rn Westlin <nl> + * @ since 2 . 0 . 0 <nl> 
mmm StreamBitmapDecoder . java <nl> ppp StreamBitmapDecoder . java <nl> + private String id ; <nl> - return new StringBuilder () <nl> + if ( id == null ) { <nl> + id = new StringBuilder () <nl> + } <nl> + return id ; <nl> 
mmm HeadersBenchmark . java <nl> ppp HeadersBenchmark . java <nl> - import io . grpc . netty . Utils ; <nl> - @ Param ({" false ", " true "}) <nl> - public boolean validate ; <nl> - Utils . validateHeaders = validate ; <nl> - public Http2Headers convertHeaders () { <nl> + public Http2Headers convertClientHeaders () { <nl> 
new file <nl> ppp ConsoleAndOutUnitTest . java <nl> + package com . baeldung . consoleout ; <nl> + import static org . junit . jupiter . api . Assertions . assertThrows ; <nl> + import org . junit . jupiter . api . Test ; <nl> + class ConsoleAndOutUnitTest { <nl> + @ Test <nl> + void whenRetreivingConsole _ thenPrintConsoleObject () { <nl> 
mmm ActionInvoker . java <nl> ppp ActionInvoker . java <nl> + if (" POST " . equals ( httpMethod ) & & req . getHeader (" X - HTTP - Method - Override ") != null ) { <nl> + httpMethod = req . getHeader (" X - HTTP - Method - Override ") . toUpperCase (); <nl> + } <nl> 
mmm StatusBarUtils . java <nl> ppp StatusBarUtils . java <nl> + import android . support . annotation . ColorInt ; <nl> - public static void apply (@ NonNull final BaseActivity activity , final int color ) { <nl> + public static void apply (@ NonNull final BaseActivity activity , final @ ColorInt int color ) { <nl> 
mmm HttpStatusEntryPoint . java <nl> ppp HttpStatusEntryPoint . java <nl> - } <nl> + } <nl> 
new file <nl> ppp App2 . java <nl> + package com . baeldung . ebean . app ; <nl> + import java . util . Properties ; <nl> + import io . ebean . EbeanServer ; <nl> + import io . ebean . EbeanServerFactory ; <nl> + import io . ebean . config . ServerConfig ; <nl> + public class App2 { <nl> + public static void main ( String [] args ) { <nl> 
mmm BarCodeReadEvent . java <nl> ppp BarCodeReadEvent . java <nl> + import com . facebook . react . bridge . WritableArray ; <nl> + import com . google . zxing . ResultPoint ; <nl> + WritableArray resultPoints = Arguments . createArray (); <nl> + ResultPoint [] points = mBarCode . getResultPoints (); <nl> 
mmm LineRadarRenderer . java <nl> ppp LineRadarRenderer . java <nl> + import android . graphics . Paint ; <nl> + import android . graphics . PorterDuff ; <nl> + import android . graphics . PorterDuffXfermode ; <nl> - c . save (); <nl> - c . clipPath ( filledPath ); <nl> - drawable . setBounds (( int ) mViewPortHandler . contentLeft (), <nl> 
deleted file <nl> mmm RuleChangedListener . java <nl> - package io . shardingsphere . orchestration . internal . registry . config . listener ; <nl> - import io . shardingsphere . orchestration . internal . registry . config . event . MasterSlaveRuleChangedEvent ; <nl> - import io . shardingsphere . orchestration . internal . registry . config . event . ShardingRuleChangedEvent ; <nl> 
mmm PrivateInstanceMockingTest . java <nl> ppp PrivateInstanceMockingTest . java <nl> - @ Ignore <nl> - verifyPrivate ( tested ) . invocation (" doSayYear ", 50 , " Temp "); <nl> + verifyPrivate ( tested ) . invocation (" doSayYear ", 29 , " Johan "); <nl> + verifyPrivate ( tested ) . invocation (" doSayYear ", 12 , " test "); <nl> 
mmm PluginRequestHelper . java <nl> ppp PluginRequestHelper . java <nl> + if ( response == null ){ <nl> + throw new RuntimeException (" The plugin sent a null response "); <nl> + } <nl> 
mmm FMLClientLaunchProvider . java <nl> ppp FMLClientLaunchProvider . java <nl> - builder . addTransformationPath ( LibraryFinder . findJarPathFor (" com / mojang / realmsclient / RealmsVersion . class ", " realms ")); <nl> + builder . addTransformationPath ( LibraryFinder . findJarPathFor (" com / mojang / realmsclient / plugin / RealmsPluginImpl . class ", " realms ")); <nl> 

mmm AttributeUtil . java <nl> ppp AttributeUtil . java <nl> - return Long . compare ( an . longValue (), bn . longValue ()); <nl> + return Long . valueOf ( an . longValue ()) . compareTo ( Long . valueOf ( bn . longValue ())); <nl> 
mmm FindMin . java <nl> ppp FindMin . java <nl> 
mmm TestEmbeddedSolrServerSchemaAPI . java <nl> ppp TestEmbeddedSolrServerSchemaAPI . java <nl> + import java . util . List ; <nl> + import org . apache . solr . api . ApiBag ; <nl> + import org . apache . solr . client . solrj . impl . HttpSolrClient ; <nl> + import org . apache . solr . common . util . NamedList ; <nl> 
mmm TokensRegexDemo . java <nl> ppp TokensRegexDemo . java <nl> 
mmm VerboseCsrfProtectionFilter . java <nl> ppp VerboseCsrfProtectionFilter . java <nl> - super . filter ( rc ); <nl> + if (! rc . getHeaders () . containsKey (" X - Graylog - Collector - Version ")) { <nl> + super . filter ( rc ); <nl> + } <nl> 
mmm AbstractService . java <nl> ppp AbstractService . java <nl> - private AtomicBoolean isStarted ; <nl> + private final AtomicBoolean isStarted ; <nl> 
new file <nl> ppp NullRealm . java <nl> + package org . apache . catalina . realm ; <nl> + import java . security . Principal ; <nl> + public class NullRealm extends RealmBase { <nl> + private static final String NAME = " NullRealm "; <nl> + @ Override <nl> + protected String getName () { <nl> + return NAME ; <nl> 
mmm HelloLibOVR . java <nl> ppp HelloLibOVR . java <nl> - initParams . LogCallback ( callback . address ()); <nl> + initParams . LogCallback ( callback ); <nl> 
mmm ByteToByteCodec . java <nl> ppp ByteToByteCodec . java <nl> + import io . netty . buffer . ChannelBuf ; <nl> + @ Override <nl> + public void freeInboundBuffer ( ChannelHandlerContext ctx , ChannelBuf buf ) throws Exception { <nl> + decoder . freeInboundBuffer ( ctx , buf ); <nl> + } <nl> + @ Override <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm Chinese . java <nl> ppp Chinese . java <nl> + import org . languagetool . rules . zh . ChineseWordRepeatBeginningRule ; <nl> - return Arrays . asList ( DoublePunctuationRule . class , WhitespaceRule . class ); <nl> + return Arrays . asList ( DoublePunctuationRule . class , WhitespaceRule . class , ChineseWordRepeatBeginningRule . class ); <nl> 
mmm MapAppenderIntegrationTest . java <nl> ppp MapAppenderIntegrationTest . java <nl> - logger . error (" Error log message from {}", this . getClass () <nl> + logger . info (" Test from {}", this . getClass () <nl> 
mmm WatchAdviceListener . java <nl> ppp WatchAdviceListener . java <nl> - import com . taobao . arthas . core . advisor . ReflectAdviceListenerAdapter ; <nl> - import com . taobao . arthas . core . shell . command . CommandProcess ; <nl> + import com . taobao . arthas . core . advisor . ReflectAdviceListenerAdapter ; <nl> 
mmm DefaultModelResolver . java <nl> ppp DefaultModelResolver . java <nl> + import com . google . devtools . build . lib . bazel . repository . MavenConnector ; <nl> - try { <nl> - UrlModelSource urlModelSource = new UrlModelSource ( new URL ( repository . getUrl () <nl> - + groupId . replaceAll ("\\ . ", "/") + "/" + artifactId + "/" + version + "/" + artifactId <nl> 
mmm Application . java <nl> ppp Application . java <nl> - return async ( <nl> - future ( new Callable < Result >() { <nl> - @ Override <nl> - public Result call () { <nl> - final Random random = ThreadLocalRandom . current (); <nl> - final List < F . Promise <? extends World >> promises = new ArrayList < F . Promise <? extends World >>( queries ); <nl> 
new file <nl> ppp PsiLayoutSpecModelFactoryTest . java <nl> + @ com . facebook . litho . annotations . LayoutSpec ( value = " TestLayoutComponentName ") <nl> + static class TestLayoutSpec { <nl> + @ com . facebook . litho . annotations . OnCreateInitialState <nl> + static void createInitialState (@ com . facebook . litho . annotations . Prop int prop1 ) {} <nl> 
mmm PasswordPlaceholderConfigurer . java <nl> ppp PasswordPlaceholderConfigurer . java <nl> + import org . springframework . core . io . InputStreamResource ; <nl> + import org . springframework . core . io . Resource ; <nl> + import com . kylinolap . common . KylinConfig ; <nl> 
mmm TestingZooKeeperMain . java <nl> ppp TestingZooKeeperMain . java <nl> + import org . apache . zookeeper . server . ZKDatabase ; <nl> + import org . apache . zookeeper . server . ZooKeeperServer ; <nl> + try <nl> + { <nl> + Field cnxnFactoryField = ZooKeeperServerMain . class . getDeclaredField (" cnxnFactory "); <nl> 
mmm YamlEngineTest . java <nl> ppp YamlEngineTest . java <nl> - assertThat ( YamlEngine . marshal ( actual ), is (" password : pwd \ nauthorizedSchemas : db1 \ n ")); <nl> + assertThat ( YamlEngine . marshal ( actual ), is (" authorizedSchemas : db1 \ npassword : pwd \ n ")); <nl> 
mmm OsCpuLoggingTest . java <nl> ppp OsCpuLoggingTest . java <nl> - if (! Platform . isAix ()) { <nl> - output . shouldContain (" SafePoint Polling address "); <nl> - } <nl> + output . shouldContain (" SafePoint Polling address "); <nl> - pb = ProcessTools . createJavaProcessBuilder (" - Xlog : os ", " - version "); <nl> 
new file <nl> ppp ThymeleafArrayController . java <nl> + package com . baeldung . thymeleaf . controller ; <nl> + import org . springframework . stereotype . Controller ; <nl> + import org . springframework . ui . Model ; <nl> + import org . springframework . web . bind . annotation . GetMapping ; <nl> + @ Controller <nl> 

mmm TypedTableDefinition . java <nl> ppp TypedTableDefinition . java <nl> - long longCol ; <nl> 

mmm DefaultKnownBuildRuleTypes . java <nl> ppp DefaultKnownBuildRuleTypes . java <nl> - processMap . put ( <nl> - ProcessExecutorParams . builder () <nl> - . setCommand ( ImmutableList . of ( path + File . separator + python . getKey (), " - ")) <nl> - . build (), <nl> - new FakeProcess ( 0 , " CPython " + python . getValue () . replace (' . ', ' '), "")); <nl> 
mmm SeamlessPlayHelper . java <nl> ppp SeamlessPlayHelper . java <nl> - synchronized ( SeamlessPlayHelper . class ) { <nl> + synchronized ( PIPManager . class ) { <nl> 
mmm MainDemo . java <nl> ppp MainDemo . java <nl> + import javafx . stage . StageStyle ; <nl> 
new file <nl> ppp PanicResponderActivity . java <nl> + package org . shadowice . flocke . andotp . Activities ; <nl> + import android . app . Activity ; <nl> + import android . content . Intent ; <nl> + import android . content . SharedPreferences ; <nl> + import android . os . Build ; <nl> + import android . os . Bundle ; <nl> 
new file <nl> ppp SecretManagerTest . java <nl> + import com . example . secrets . *; <nl> + import software . amazon . awssdk . services . secretsmanager . SecretsManagerClient ; <nl> + import org . junit . jupiter . api . *; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import java . io . *; <nl> 
mmm BuilderFactoryTest . java <nl> ppp BuilderFactoryTest . java <nl> + build = BuilderFactory . DOUBLE . build (" inf " . getBytes ()); <nl> + assertEquals ( new Double ( Double . POSITIVE _ INFINITY ), build ); <nl> + build = BuilderFactory . DOUBLE . build (" + inf " . getBytes ()); <nl> + assertEquals ( new Double ( Double . POSITIVE _ INFINITY ), build ); <nl> 
new file <nl> ppp VKUtil . java <nl> + package org . lwjgl . vulkan ; <nl> + import static org . lwjgl . system . APIUtil . *; <nl> + import static org . lwjgl . vulkan . EXTDebugReport . *; <nl> + import static org . lwjgl . vulkan . KHRDisplaySwapchain . *; <nl> + import static org . lwjgl . vulkan . KHRSurface . *; <nl> 
mmm HttpResponseException . java <nl> ppp HttpResponseException . java <nl> - public abstract class HttpResponseException extends RuntimeException { <nl> + public class HttpResponseException extends RuntimeException { <nl> + public HttpResponseException ( int statusCode ) { <nl> + this ( HttpStatus . valueOf ( statusCode )); <nl> 
mmm TinyIntType . java <nl> ppp TinyIntType . java <nl> - if ( database instanceof DerbyDatabase || database instanceof PostgresDatabase || database instanceof FirebirdDatabase ) { <nl> + if ( database instanceof DerbyDatabase || database instanceof PostgresDatabase || database instanceof FirebirdDatabase <nl> 
mmm GuiButtonExt . java <nl> ppp GuiButtonExt . java <nl> + import net . minecraft . client . gui . widget . Widget ; <nl> 
mmm Annotations . java <nl> ppp Annotations . java <nl> 
new file <nl> ppp Cases . java <nl> + package org . immutables . cases ; <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Target ; <nl> + @ Target ({}) <nl> + public @ interface Cases { <nl> + @ Target ({ ElementType . PACKAGE , ElementType . TYPE }) <nl> + public @ interface Chain { <nl> 

mmm ControlSessionTest . java <nl> ppp ControlSessionTest . java <nl> 
new file <nl> ppp BuiltinKeyGeneratorType . java <nl> + package io . shardingsphere . core . keygen ; <nl> + public class BuiltinKeyGeneratorType { <nl> + } <nl> 
mmm DoubleToLongUnitTest . java <nl> ppp DoubleToLongUnitTest . java <nl> - Assert . assertEquals ( 9999L , Double . valueOf ( VALUE ) <nl> - . longValue ()); <nl> + Assert . assertEquals ( 9999L , Double . valueOf ( VALUE ) . longValue ()); <nl> - public void givenDoubleValue _ whenMathRoundUseds _ thenLongValueReturned () { <nl> 
new file <nl> ppp ReadOnlyMapTest2 . java <nl> + package com . alibaba . json . bvt . parser ; <nl> + import java . util . Map ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + public class ReadOnlyMapTest2 extends TestCase { <nl> 
mmm SelectItem . java <nl> ppp SelectItem . java <nl> 
mmm TransactionTemplate . java <nl> ppp TransactionTemplate . java <nl> + boolean oldAutocommit = true ; <nl> + oldAutocommit = connection . getAutoCommit (); <nl> - connection . setAutoCommit ( true ); <nl> + connection . setAutoCommit ( oldAutocommit ); <nl> - LOG . error (" Unable to restore connection to autocommit ", e ); <nl> 
mmm WorldDatabaseController . java <nl> ppp WorldDatabaseController . java <nl> - List < World > multipleQueries (@ RequestParam (" queries ") Integer rawQueryCount ) { <nl> + List < World > multipleQueries (@ RequestParam ( value =" queries ", required = false , defaultValue =" 1 ") String rawQueryCount ) { <nl> 
mmm ImaAdsMediaSource . java <nl> ppp ImaAdsMediaSource . java <nl> + import com . google . android . exoplayer2 . Timeline ; <nl> - public void prepareSource ( final ExoPlayer player , boolean isTopLevelSource , Listener listener ) { <nl> - adsMediaSource . prepareSource ( player , isTopLevelSource , listener ); <nl> 
mmm MessageBatch . java <nl> ppp MessageBatch . java <nl> - throw new UnsupportedOperationException (" TimeDelayLevel in not supported for batching "); <nl> + throw new UnsupportedOperationException (" TimeDelayLevel is not supported for batching "); <nl> 
mmm LcovMergerTest . java <nl> ppp LcovMergerTest . java <nl> - import com . google . devtools . build . lib . vfs . FileSystems ; <nl> + import com . google . devtools . build . lib . vfs . util . FileSystems ; <nl> - new Scratch ( FileSystemUtils . getWorkingDirectory ( FileSystems . initDefaultAsJavaIo ())); <nl> 
mmm RevolutAccountPayload . java <nl> ppp RevolutAccountPayload . java <nl> - return Res . get ( paymentMethodId ) + " - " + Res . getWithCol (" payment . account ") + accountId ; <nl> + return Res . get ( paymentMethodId ) + " - " + Res . getWithCol (" payment . account ") + " " + accountId ; <nl> 
mmm MeiligaoProtocolDecoderTest . java <nl> ppp MeiligaoProtocolDecoderTest . java <nl> + verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertArray ( <nl> + new int []{ 0x24 , 0x24 , 0x00 , 0x7f , 0x35 , 0x68 , 0x96 , 0x03 , 0x06 , 0x76 , 0x01 , 0x99 , 0x55 , 0x31 , 0x31 , 0x30 , 0x39 , 0x32 , 0x34 , 0x2e , 0x30 , 0x30 , 0x30 , 0x2c , 0x41 , 0x2c , 0x34 , 0x35 , 0x33 , 0x34 , 0x2e , 0x32 , 0x35 , 0x38 , 0x35 , 0x2c , 0x4e , 0x2c , 0x30 , 0x31 , 0x39 , 0x33 , 0x38 , 0x2e , 0x36 , 0x35 , 0x31 , 0x34 , 0x2c , 0x45 , 0x2c , 0x30 , 0x2e , 0x30 , 0x30 , 0x2c , 0x2c , 0x32 , 0x37 , 0x30 , 0x37 , 0x31 , 0x34 , 0x2c , 0x2c , 0x2c , 0x41 , 0x2a , 0x37 , 0x31 , 0x7c , 0x31 , 0x2e , 0x37 , 0x7c , 0x31 , 0x30 , 0x30 , 0x7c , 0x38 , 0x30 , 0x30 , 0x30 , 0x7c , 0x30 , 0x37 , 0x37 , 0x42 , 0x2c , 0x30 , 0x30 , 0x30 , 0x30 , 0x2c , 0x30 , 0x30 , 0x30 , 0x30 , 0x2c , 0x30 , 0x30 , 0x30 , 0x30 , 0x2c , 0x30 , 0x30 , 0x30 , 0x30 , 0x2c , 0x30 , 0x30 , 0x30 , 0x30 , 0x2c , 0x30 , 0x30 , 0x30 , 0x30 , 0x2c , 0x30 , 0x30 , 0x30 , 0x30 , 0x5d , 0xfc , 0x0d , 0x0a })))); <nl> 
mmm ThrowsException . java <nl> ppp ThrowsException . java <nl> - throwable . fillInStackTrace (); <nl> - filter . filter ( throwable ); <nl> - throw throwable ; <nl> + Throwable t = throwable . fillInStackTrace (); <nl> + if ( t == null ) { <nl> + throw throwable ; <nl> + } <nl> + filter . filter ( t ); <nl> 
mmm _ 279 . java <nl> ppp _ 279 . java <nl> - for ( int i = 1 ; i <= n ; i + + ) { <nl> + for ( int i = 1 ; i <= n ; i + + ) { <nl> - while ( i - j * j >= 0 ) { <nl> - min = Math . min ( min , dp [ i - j * j ] + 1 ); <nl> + while ( i - j * j >= 0 ) { <nl> + min = Math . min ( min , dp [ i - j * j ] + 1 ); <nl> 
new file <nl> ppp Issue1467Test . java <nl> + package com . github . javaparser . printer . lexicalpreservation ; <nl> + import org . junit . jupiter . api . Test ; <nl> + import com . github . javaparser . StaticJavaParser ; <nl> + import com . github . javaparser . ast . CompilationUnit ; <nl> + import com . github . javaparser . ast . Modifier . Keyword ; <nl> 
mmm SystemMessageServiceImpl . java <nl> ppp SystemMessageServiceImpl . java <nl> + import com . mongodb . DBCollection ; <nl> + import org . mongojack . DBSort ; <nl> + final DBCollection collection = this . collection ( SystemMessageImpl . class ); <nl> + collection . createIndex ( DBSort . desc (" timestamp ")); <nl> 
mmm AbstractWorker . java <nl> ppp AbstractWorker . java <nl> - List < ActorRef > avaibleWorks = WorkersRefCenter . INSTANCE . availableWorks ( targetWorkerProvider . roleName ()); <nl> - selector . select ( avaibleWorks , message ) . tell ( message , getSelf ()); <nl> + List < ActorRef > availableWorks = WorkersRefCenter . INSTANCE . availableWorks ( targetWorkerProvider . roleName ()); <nl> 
new file <nl> ppp RemoveInvalidParentheses . java <nl> + package stevesun . algorithms ; <nl> + import java . util . *; <nl> + public class RemoveInvalidParentheses { <nl> + public List < String > removeInvalidParentheses ( String s ) <nl> + { <nl> + List < String > result = new ArrayList <>(); <nl> + if ( s == null ) return result ; <nl> 
mmm URLConnectionInspectorHeaders . java <nl> ppp URLConnectionInspectorHeaders . java <nl> - if ( name . equals ( headerName ( i ))) { <nl> + if ( name . equalsIgnoreCase ( headerName ( i ))) { <nl> 
mmm RetryHandlingJobMasterClient . java <nl> ppp RetryHandlingJobMasterClient . java <nl> - return retryRPC ( new RpcCallable < Long >() { <nl> - public Long call () { <nl> - return mClient . registerJobWorker ( RegisterJobWorkerPRequest . newBuilder () <nl> - . setWorkerNetAddress ( GrpcUtils . toProto ( address )) . build ()) . getId (); <nl> 
new file <nl> ppp ZeppelinException . java <nl> + package com . nflabs . zeppelin ; <nl> + public class ZeppelinException extends Exception { <nl> + public ZeppelinException ( Throwable e ){ <nl> + super ( e ); <nl> + } <nl> +  <nl> + public ZeppelinException ( String s ){ <nl> + super ( s ); <nl> + } <nl> + } <nl> 
mmm ApiResourceController . java <nl> ppp ApiResourceController . java <nl> - Class swagger1Controller = classOrNull (" springfox . documentation . swagger1 . web . DefaultSwaggerController "); <nl> + Class swagger1Controller = classOrNull (" springfox . documentation . swagger1 . web . Swagger1Controller "); <nl> 
mmm WebsocketByteBufferEndpointTest . java <nl> ppp WebsocketByteBufferEndpointTest . java <nl> - private static final String WEBAPP _ SRC = " src / main / webapp "; <nl> -  <nl> - @ Deployment ( testable = false ) @ TargetsContainer (" wildfly - arquillian ") <nl> - public static WebArchive createDeployment (){ <nl> 
mmm TrackableSession . java <nl> ppp TrackableSession . java <nl> - logger . info (" Tracking {}", trackableResource . trackingID ()); <nl> + logger . debug (" Tracking {}", trackableResource . trackingID ()); <nl> - logger . info (" Lookup trackinID {}", trackingID ); <nl> + logger . debug (" Lookup trackinID {}", trackingID ); <nl> 
new file <nl> ppp TestParser . java <nl> + package org . apache . jasper . compiler ; <nl> + import java . io . File ; <nl> + import org . apache . catalina . startup . Tomcat ; <nl> + import org . apache . catalina . startup . TomcatBaseTest ; <nl> + import org . apache . tomcat . util . buf . ByteChunk ; <nl> 

deleted file <nl> mmm ConfigValidationTest . java <nl> - package com . google . checkstyle . test . base ; <nl> - import static com . puppycrawl . tools . checkstyle . utils . CommonUtils . EMPTY _ INTEGER _ OBJECT _ ARRAY ; <nl> - import static com . puppycrawl . tools . checkstyle . utils . CommonUtils . EMPTY _ STRING _ ARRAY ; <nl> 
new file <nl> ppp LoggingUtils . java <nl> + package io . moquette . logging ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collection ; <nl> + import io . moquette . interception . InterceptHandler ; <nl> + public class LoggingUtils { <nl> + public static < T extends InterceptHandler > Collection < String > getInterceptorIds ( Collection < T > handlers ) { <nl> 
mmm ActivityLog . java <nl> ppp ActivityLog . java <nl> + import android . widget . Toast ; <nl> + Toast . makeText ( this , getString ( R . string . title _ log _ info ), Toast . LENGTH _ SHORT ) . show (); <nl> 
mmm SameValueContextualRule . java <nl> ppp SameValueContextualRule . java <nl> - class SameValueContextualRule < CONFIRM extends Annotation , ORIGINAL extends Annotation , DATA _ TYPE > <nl> + class SameValueContextualRule < CONFIRM extends Annotation , SOURCE extends Annotation , DATA _ TYPE > <nl> - private Class < ORIGINAL > mOriginalClass ; <nl> 
mmm DefaultFrescoContext . java <nl> ppp DefaultFrescoContext . java <nl> - sInstance = createDefaultContext ( resources ); <nl> + initialize ( resources , null ); <nl> + public static synchronized void initialize ( <nl> + Resources resources , @ Nullable FrescoExperiments frescoExperiments ) { <nl> + set ( createDefaultContext ( resources , frescoExperiments )); <nl> 
mmm BsonJackson . java <nl> ppp BsonJackson . java <nl> - import de . undercouch . bson4jackson . BsonGenerator ; <nl> 
mmm ProfileApplicationInicationInitializer . java <nl> ppp ProfileApplicationInicationInitializer . java <nl> + public static final String ACTIVE _ PROFILES _ PROPERTY _ ENV _ NAME = " SPRING _ PROFILES _ ACTIVE "; <nl> - activeProfile = System . getenv ( ACTIVE _ PROFILES _ PROPERTY _ NAME ); <nl> + activeProfile = System . getenv ( ACTIVE _ PROFILES _ PROPERTY _ ENV _ NAME ); <nl> 
mmm QuickPatchThreadsFilter . java <nl> ppp QuickPatchThreadsFilter . java <nl> + static final boolean isJ9 ; <nl> + static { <nl> + isJ9 = System . getProperty (" java . vm . info ", "<?>") . contains (" IBM J9 "); <nl> + } <nl> + if ( isJ9 ) { <nl> + StackTraceElement [] stack = t . getStackTrace (); <nl> 
mmm LoggerContext . java <nl> ppp LoggerContext . java <nl> + import java . util . Map ; <nl> + import org . androidannotations . logger . appender . ConsoleAppender ; <nl> + public static final String LOG _ APPENDER _ CONSOLE = " logAppenderConsole "; <nl> + addConsoleAppender ( processingEnv ); <nl> - if ( processingEnv . getOptions () . containsKey ( LoggerContext . LOG _ LEVEL _ OPTION )) { <nl> 
mmm NoSonarSensor . java <nl> ppp NoSonarSensor . java <nl> + import java . util . stream . Stream ; <nl> - Files . lines ( inputFile . path (), context . fileSystem () . encoding ()) . forEachOrdered ( lineStr - > { <nl> - noSonarLines . add ( lineCounter [ 0 ]); <nl> - } <nl> - lineCounter [ 0 ] + + ; <nl> 
mmm BooleanPropertyConverter . java <nl> ppp BooleanPropertyConverter . java <nl> + public static String getVersion (){ return "$ Revision $";} <nl> +  <nl> 
new file <nl> ppp SeenDebugDrawer . java <nl> + package com . jakewharton . u2020 . data ; <nl> + import java . lang . annotation . Retention ; <nl> + import javax . inject . Qualifier ; <nl> + import static java . lang . annotation . RetentionPolicy . RUNTIME ; <nl> + @ Qualifier @ Retention ( RUNTIME ) <nl> 
mmm LocaleFieldTest . java <nl> ppp LocaleFieldTest . java <nl> - assertEquals (" China ", model2 . locale . getDisplayCountry ()); <nl> + assertEquals ( Locale . CHINA . getDisplayCountry (), model2 . locale . getDisplayCountry ()); <nl> 
mmm VpxLibrary . java <nl> ppp VpxLibrary . java <nl> - private static final LibraryLoader LOADER = new LibraryLoader (" vpx ", " vpxJNI "); <nl> + private static final LibraryLoader LOADER = new LibraryLoader (" vpx ", " vpxV2JNI "); <nl> 
mmm NamingHelperTest . java <nl> ppp NamingHelperTest . java <nl> + import com . orm . query . TestRecord ; <nl> + import com . orm . util . ReflectionUtil ; <nl> + import org . junit . Assert ; <nl> + import java . lang . reflect . Field ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> 
mmm Architecture . java <nl> ppp Architecture . java <nl> - import com . facebook . buck . log . Logger ; <nl> 
new file <nl> ppp Issue373Test . java <nl> + package org . languagetool . rules ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import org . languagetool . JLanguageTool ; <nl> + import org . languagetool . TestTools ; <nl> + import org . languagetool . chunking . ChunkTag ; <nl> 
mmm TimeHandler . java <nl> ppp TimeHandler . java <nl> 
mmm SeamlessPlayHelper . java <nl> ppp SeamlessPlayHelper . java <nl> - synchronized ( PIPManager . class ) { <nl> + synchronized ( SeamlessPlayHelper . class ) { <nl> 
mmm HttpConfig . java <nl> ppp HttpConfig . java <nl> - @ ConfigItem ( defaultValue = " localhost ") <nl> + @ ConfigItem ( defaultValue = " 0 . 0 . 0 . 0 ") <nl> 
new file <nl> ppp CreateClient . java <nl> + package aws . example . kms ; <nl> + import com . amazonaws . services . kms . AWSKMS ; <nl> + import com . amazonaws . services . kms . AWSKMSClientBuilder ; <nl> + public class CreateClient { <nl> + AWSKMS kmsClient = AWSKMSClientBuilder . standard () . build (); <nl> 
mmm ClipboardInterface . java <nl> ppp ClipboardInterface . java <nl> + } catch ( IllegalStateException ise ) { <nl> + Log . w ( TAG , " Clipboard bug ", ise ); <nl> 
mmm HeartbeatTaskManager . java <nl> ppp HeartbeatTaskManager . java <nl> - executorService . scheduleAtFixedRate ( heartbeatTask , interval , interval , TimeUnit . SECONDS ); <nl> + executorService . scheduleAtFixedRate ( heartbeatTask , 0L , interval , TimeUnit . SECONDS ); <nl> 
mmm CreateBucket . java <nl> ppp CreateBucket . java <nl> - " Ex : ListBuckets < unique - bucket - name >\ n "; <nl> + " Ex : CreateBucket < unique - bucket - name >\ n "; <nl> 
mmm RawParser . java <nl> ppp RawParser . java <nl> - import com . google . common . collect . Maps ; <nl> + import java . util . LinkedHashMap ; <nl> - Map < String , Object > out = Maps . newHashMap (); <nl> + Map < String , Object > out = new LinkedHashMap <>( json . getAsJsonObject () . entrySet () . size ()); <nl> 
new file <nl> ppp SizeBenchmark . java <nl> + package io . dropwizard . benchmarks . util ; <nl> + import io . dropwizard . util . Size ; <nl> + import org . openjdk . jmh . annotations . *; <nl> + import org . openjdk . jmh . runner . Runner ; <nl> + import org . openjdk . jmh . runner . options . OptionsBuilder ; <nl> 
new file <nl> ppp ClosestBinarySearchTreeValueII . java <nl> + package stevesun . algorithms ; <nl> + import stevesun . common . classes . TreeNode ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . Stack ; <nl> + public class ClosestBinarySearchTreeValueII { <nl> 
new file <nl> ppp FailoverAbortedException . java <nl> + package redis . clients . jedis . tests . utils ; <nl> + public class FailoverAbortedException extends RuntimeException { <nl> + private static final long serialVersionUID = 1925110762858409954L ; <nl> + public FailoverAbortedException ( String message ) { <nl> 
mmm ZookeeperConfiguration . java <nl> ppp ZookeeperConfiguration . java <nl> - private boolean useNative = true ; <nl> + private boolean useNative ; <nl> 
new file <nl> ppp MultipartConfigTestCase . java <nl> + package io . quarkus . undertow . test ; <nl> + import static io . restassured . RestAssured . given ; <nl> + import static org . hamcrest . Matchers . is ; <nl> + import java . io . IOException ; <nl> + import java . io . PrintWriter ; <nl> + import javax . servlet . ServletException ; <nl> 
mmm SubstringSearch . java <nl> ppp SubstringSearch . java <nl> - public boolean hasSubstring ( char [] str , char [] subString ){ <nl> + public boolean hasSubstring ( char [] text , char [] pattern ){ <nl> - while ( i < str . length & & j < subString . length ){ <nl> - if ( str [ i ] == subString [ j ]){ <nl> 
mmm ZipkinUiProperties . java <nl> ppp ZipkinUiProperties . java <nl> + private String instrumented = " . *"; <nl> + public String getInstrumented () { <nl> + return instrumented ; <nl> + } <nl> + public void setInstrumented ( String instrumented ) { <nl> + this . instrumented = instrumented ; <nl> + } <nl> 
mmm TestShardingEncryptor . java <nl> ppp TestShardingEncryptor . java <nl> - package org . apache . shardingsphere . util ; <nl> + package org . apache . shardingsphere . core . encrypt . fixture ; <nl> 
mmm MapAppenderIntegrationTest . java <nl> ppp MapAppenderIntegrationTest . java <nl> - logger . info (" Test from {}", this . getClass () <nl> + logger . error (" Error log message from {}", this . getClass () <nl> 
mmm SampleJmsMessageSender . java <nl> ppp SampleJmsMessageSender . java <nl> + System . out . println (" Jms Message Sender : " + employee ); <nl> + Map < String , Object > map = new HashMap <>(); <nl> + map . put (" name ", employee . getName ()); <nl> + map . put (" age ", employee . getAge ()); <nl> 
mmm SftpConnectDialog . java <nl> ppp SftpConnectDialog . java <nl> + import android . app . AlertDialog ; <nl> + import android . widget . EditText ; <nl> + import com . amaze . filemanager . activities . MainActivity ; <nl> + import com . amaze . filemanager . database . UtilsHandler ; <nl> + import net . schmizz . sshj . SSHClient ; <nl> 
mmm ShiftReduceOptions . java <nl> ppp ShiftReduceOptions . java <nl> + } else if ( args [ i ] . equalsIgnoreCase (" - oracleShiftToBinary ")) { <nl> + trainOptions () . oracleShiftToBinary = true ; <nl> + i + + ; <nl> + } else if ( args [ i ] . equalsIgnoreCase (" - oracleBinaryToShift ")) { <nl> + trainOptions () . oracleBinaryToShift = true ; <nl> 
mmm PatternMapBuilder . java <nl> ppp PatternMapBuilder . java <nl> - " Multiple matching properties for name \"" + matched . getPropertyName () + "\""); <nl> + " Multiple matching properties for name \"" + matched . getPropertyName () <nl> + + "\" property was matched by both " + container . findField () + " and " + matched . findField () <nl> 
mmm GermanTokenizerPostProcessor . java <nl> ppp GermanTokenizerPostProcessor . java <nl> + public HashSet < String > germanAbbreviations = new HashSet <>( Arrays . asList ( <nl> + " bzw ", " jap ", " usw ", " ca ")); <nl> - if ( emptyAfter & & ( ordinalMerge || numberToHyphenMerge || hyphenToNumberMerge )) { <nl> 
mmm NameValue . java <nl> ppp NameValue . java <nl> - protected N name ; <nl> - protected V value ; <nl> + protected final N name ; <nl> + protected final V value ; <nl> - public NameValue () { <nl> + public static < T , R > NameValue of ( T name , R value ) { <nl> + return new NameValue <>( name , value ); <nl> 
mmm TaskMessage . java <nl> ppp TaskMessage . java <nl> - final int SHORT _ SIZE = 2 ; <nl> - final int INT _ SIZE = 4 ; <nl> - ByteBuffer bb = ByteBuffer . allocate ( _ message . length + SHORT _ SIZE + INT _ SIZE ); <nl> + ByteBuffer bb = ByteBuffer . allocate ( _ message . length + 2 ); <nl> - if ( _ message == null ) <nl> 
new file <nl> ppp MicronautSubstitutions . java <nl> + package io . micronaut . http . netty . graal ; <nl> + import com . oracle . svm . core . annotate . Alias ; <nl> + import com . oracle . svm . core . annotate . RecomputeFieldValue ; <nl> + import com . oracle . svm . core . annotate . RecomputeFieldValue . Kind ; <nl> 
mmm AlertSummaryExecutor . java <nl> ppp AlertSummaryExecutor . java <nl> + import com . dianping . cat . helper . TimeHelper ; <nl> - public static final long SUMMARY _ DURATION = 5 * 60 * 1000L ; <nl> + public static final long SUMMARY _ DURATION = 5 * TimeHelper . ONE _ MINUTE ; <nl> - public static final long ALTERATION _ DURATION = 30 * 60 * 1000L ; <nl> 
deleted file <nl> mmm MatchCounter . java <nl> - package com . jayway . android . robotium . solo ; <nl> - class MatchCounter { <nl> -  <nl> - private int totalAmountOfMatches ; <nl> -  <nl> -  <nl> - public MatchCounter (){ <nl> - totalAmountOfMatches = 0 ; <nl> - } <nl> -  <nl> - public void resetCount (){ <nl> 
mmm AccessorClassGenerationRule . java <nl> ppp AccessorClassGenerationRule . java <nl> - final ASTArguments callArguments = ( ASTArguments ) node . jjtGetChild ( 1 ); <nl> - final ClassScope enclosingScope = node . getScope () . getEnclosingScope ( ClassScope . class ); <nl> - for ( final ASTConstructorDeclaration cd : constructors ) { <nl> 
mmm TraceIdGenerator . java <nl> ppp TraceIdGenerator . java <nl> - public static void main ( String [] args ){ <nl> - System . out . printf ( generate ()); <nl> - } <nl> 
mmm SDCardUtils . java <nl> ppp SDCardUtils . java <nl> - * desc : SD 卡 相关 工具 类 <nl> + * desc : utils about sdcard <nl> - @ SuppressWarnings (" TryWithIdenticalCatches ") <nl> - @ SuppressWarnings (" TryWithIdenticalCatches ") <nl> 
mmm SpanRegexQuery . java <nl> ppp SpanRegexQuery . java <nl> + public Term getTerm () { return term ; } <nl> 
mmm UploadObject . java <nl> ppp UploadObject . java <nl> - metadata . addUserMetadata (" x - amz - meta - title ", " someTitle "); <nl> + metadata . addUserMetadata (" title ", " someTitle "); <nl> 
mmm DerivedIdentitySimpleParentSimpleDepTest . java <nl> ppp DerivedIdentitySimpleParentSimpleDepTest . java <nl> - import org . hibernate . test . annotations . derivedidentities . e1 . b . Dependent ; <nl> - import org . hibernate . test . annotations . derivedidentities . e1 . b . DependentId ; <nl> - import org . hibernate . test . annotations . derivedidentities . e1 . b . Employee ; <nl> 
mmm Literals . java <nl> ppp Literals . java <nl> - import java . util . Locale ; <nl> + import com . google . common . annotations . VisibleForTesting ; <nl> - return String . format ( Locale . ENGLISH , "' % s '", escapeStringLiteral ( literal )); <nl> + return "'" + escapeStringLiteral ( literal ) + "'"; <nl> 
new file <nl> ppp ITextureProvider . java <nl> + package net . minecraft . src . forge ; <nl> + public interface ITextureProvider { <nl> + public String getTextureFile (); <nl> + } <nl> 
mmm DataSourceStateChangedListener . java <nl> ppp DataSourceStateChangedListener . java <nl> - import com . google . common . base . Strings ; <nl> + import io . shardingsphere . orchestration . internal . registry . state . node . StateNodeStatus ; <nl> - return ! Strings . isNullOrEmpty ( event . getValue ()) & & ChangedType . UPDATED == event . getChangedType () <nl> 
mmm HttpClientResponseException . java <nl> ppp HttpClientResponseException . java <nl> - if ( body . isPresent ()) { <nl> + if ( body . isPresent () & & body . get () . getMessage () != null ) { <nl> 
mmm JSR223Sampler . java <nl> ppp JSR223Sampler . java <nl> - private static final byte [] EMPTY _ BA = new byte [ 0 ]; <nl> 
mmm RussianUnpairedBracketsRule . java <nl> ppp RussianUnpairedBracketsRule . java <nl> - Example . fixed ("Самоотверженный поступок Оленина < marker >(</ marker >подарок Лукашке коня вызывает лишь удивление и усиливает недоверие к нему станичников . ")); <nl> + Example . fixed ("Самоотверженный поступок Оленина < marker >(</ marker >подарок Лукашке коня) вызывает лишь удивление и усиливает недоверие к нему станичников . ")); <nl> 
mmm IntegrationTest . java <nl> ppp IntegrationTest . java <nl> - . contains (" Binding interceptor is not supported when AOP is disabled . "); <nl> + . contains (" Binding interceptor is not supported when bytecode generation is disabled . "); <nl> 
new file <nl> ppp StubConfigTest . java <nl> + package com . google . net . stubby . stub ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import com . google . net . stubby . Call ; <nl> + import com . google . net . stubby . Channel ; <nl> + import com . google . net . stubby . MethodDescriptor ; <nl> 
mmm Integers . java <nl> ppp Integers . java <nl> - int bits = ( int ) Math . ceil ( Math . log10 ( integer ) / Math . log10 ( 2 )); <nl> - for ( int i = 0 ; i < bits ; i + + ) { <nl> + while ( integer > 0 ) { <nl> 
mmm Gl100ProtocolDecoderTest . java <nl> ppp Gl100ProtocolDecoderTest . java <nl> + verifyPosition ( decoder , text ( <nl> + " + RESP : GTLGL , 359464030492644 , 1 , 2 , 1 , 0 , 0 . 4 , 0 , 299 . 7 , 1 , 5 . 455551 , 51 . 449776 , 20160311083229 , 0204 , 0016 , 03EC , BD94 , 00 , 0036 , 0102090501 ")); <nl> 
mmm TableToken . java <nl> ppp TableToken . java <nl> - public int getLength () { <nl> - return ownerLength + tableName . length () + quoteCharacter . getStartDelimiter () . length () + quoteCharacter . getEndDelimiter () . length (); <nl> - } <nl> 
mmm FilesSample . java <nl> ppp FilesSample . java <nl> - params . put (" fileOne ", createTempFile (" fileOne ", 20 )); <nl> - params . put (" fileTwo ", createTempFile (" fileTwo ", 30 )); <nl> - params . put (" fileThree ", createTempFile (" fileThree ", 40 )); <nl> - params . put (" fileFour ", createTempFile (" fileFour ", 50 )); <nl> 
mmm SchemaStoreTest . java <nl> ppp SchemaStoreTest . java <nl> - import static org . hamcrest . CoreMatchers . is ; <nl> - import static org . hamcrest . CoreMatchers . not ; <nl> - import static org . hamcrest . CoreMatchers . nullValue ; <nl> + import static org . hamcrest . CoreMatchers . *; <nl> - assertThat ( restoredSchema . getSchema () . equals ( this . schemaStore . getSchema ()), is ( true )); <nl> 
mmm FibonacciSequence . java <nl> ppp FibonacciSequence . java <nl> - while ( n - 2 > 0 ) { <nl> + int counter = n - 1 ; <nl> + while ( counter > 0 ) { <nl> - n - = ( n == 0 )? 2 : 1 ; <nl> + counter - = ( counter ==( n - 1 ))? 2 : 1 ; <nl> 
new file <nl> ppp OrchestrationSpringBootDataJpaMain . java <nl> + package io . shardingsphere . example . orchestration . spring . boot . jpa ; <nl> + import io . shardingsphere . example . orchestration . spring . boot . jpa . service . DemoService ; <nl> + import org . springframework . boot . SpringApplication ; <nl> 
mmm AggregateDataEnvelope . java <nl> ppp AggregateDataEnvelope . java <nl> - if ( index instanceof MVSpatialIndex ) { <nl> + if ( index instanceof MVSpatialIndex & & index . isFirstColumn ( column )) { <nl> 
new file <nl> ppp UnEscape . java <nl> + package org . apache . jmeter . functions ; <nl> + import java . io . Serializable ; <nl> + import java . util . Collection ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> + import org . apache . commons . lang . StringEscapeUtils ; <nl> 
mmm ExtractorMetrics . java <nl> ppp ExtractorMetrics . java <nl> - public ExtractorMetrics ( Map < String , Object > total , Map < String , Object > converters ) { <nl> - } <nl> 
mmm JDBCBackendDataSource . java <nl> ppp JDBCBackendDataSource . java <nl> + import io . shardingsphere . core . exception . ShardingException ; <nl> - import lombok . extern . slf4j . Slf4j ; <nl> - @ Slf4j <nl> - log . warn (" Can not build {} failed with {}", entry . getKey (), ex ); <nl> + throw new ShardingException ( String . format (" Can not build data source , name is ` % s ` . ", entry . getKey ()), ex ); <nl> 
mmm MainApplication . java <nl> ppp MainApplication . java <nl> - @ Command ( name = " OhMyAgent ", mixinStandardHelpOptions = true , version = " 1 . 2 . 0 ", description = " OhMyScheduler - Worker 代理 ") <nl> + @ Command ( name = " OhMyAgent ", mixinStandardHelpOptions = true , version = " 1 . 2 . 0 ", description = " OhMyScheduler - Worker agent ") <nl> 
mmm TwitterRestClient . java <nl> ppp TwitterRestClient . java <nl> - client . get ( getAbsoluteUrl ( url ), params , responseHandler ); <nl> + client . post ( getAbsoluteUrl ( url ), params , responseHandler ); <nl> 
mmm BaseComponentDeclarer . java <nl> ppp BaseComponentDeclarer . java <nl> + import java . util . logging . Logger ; <nl> + private static final Logger LOG = Logger . getLogger ( BaseComponentDeclarer . class . getName ()); <nl> + if ( entry . getKey () == null ) { <nl> + LOG . warning (" ignore : config key is null "); <nl> 
mmm MaxFreeAllocatorTest . java <nl> ppp MaxFreeAllocatorTest . java <nl> - public class MaxFreeAllocatorTest extends AllocatorTestBase { <nl> + public final class MaxFreeAllocatorTest extends AllocatorTestBase { <nl> 
mmm ShadowTypedArray . java <nl> ppp ShadowTypedArray . java <nl> + @ Implementation <nl> + public int getInt ( int index , int defValue ) { <nl> + return defValue ; <nl> + } <nl> 
mmm NetworkBitmapHunter . java <nl> ppp NetworkBitmapHunter . java <nl> - InputStream is = null ; <nl> + InputStream is = response . getInputStream (); <nl> - is = response . getInputStream (); <nl> 
mmm PublisherEncoder . java <nl> ppp PublisherEncoder . java <nl> + import org . particleframework . core . async . subscriber . CompletionAwareSubscriber ; <nl> - publisher . subscribe ( new Subscriber < Object >() { <nl> - Subscription subscription ; <nl> - AtomicBoolean complete = new AtomicBoolean ( false ); <nl> 
mmm ArabicWordCoherencyRuleTest . java <nl> ppp ArabicWordCoherencyRuleTest . java <nl> - assertError ("أنا أظن أن هذا ممكن لكنني أضن أنني كنت مخطئا"); <nl> - } <nl> + assertError ("أنا أظن أن هذا ممكن لكنني أضن أنني كنت مخطئا"); <nl> + } <nl> 
new file <nl> ppp CxxDependentOnPyEndToEndTest . java <nl> + package com . facebook . buck . cxx ; <nl> + import com . facebook . buck . testutil . ProcessResult ; <nl> + import com . facebook . buck . testutil . endtoend . EndToEndEnvironment ; <nl> + import com . facebook . buck . testutil . endtoend . EndToEndRunner ; <nl> 
new file <nl> ppp GPUImageLuminanceThresholdFilter . java <nl> + package jp . co . cyberagent . android . gpuimage . filter ; <nl> + import android . opengl . GLES20 ; <nl> + public class GPUImageLuminanceThresholdFilter extends GPUImageFilter { <nl> + public static final String LUMINANCE _ THRESHOLD _ FRAGMENT _ SHADER = "" + <nl> 
mmm ConfigView . java <nl> ppp ConfigView . java <nl> - * < pre >{@ code <nl> - * @ Value . Immutable ( builder = false , copy = false ) <nl> - * @ BuckStyleImmutable <nl> - * abstract class AbstractFooConfigView implements ConfigView < FooConfig > { <nl> - * <nl> - * } <nl> - * <nl> - * }</ pre > <nl> + * < pre > <nl> 
mmm TypePoolDefaultMethodDescriptionTest . java <nl> ppp TypePoolDefaultMethodDescriptionTest . java <nl> + import org . junit . Ignore ; <nl> + @ Override <nl> + public void testSyntethicParameter () throws Exception { <nl> + super . testSyntethicParameter (); <nl> + } <nl> 
mmm ClientReportDataSizeServiceImpl . java <nl> ppp ClientReportDataSizeServiceImpl . java <nl> + int minSize = 100 ; <nl> + if ( costMapSize < minSize & & valueMapSize < minSize & & exceptionMapSize < minSize & & collectMapSize < minSize ) { <nl> + return ; <nl> + } <nl> 
mmm CityDao . java <nl> ppp CityDao . java <nl> 
mmm ModelService . java <nl> ppp ModelService . java <nl> - public static final int ANALYZER _ COUNT = 2 ; <nl> 
new file <nl> ppp Issue3436 . java <nl> + package com . alibaba . json . bvt . issue _ 3400 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . annotation . JSONCreator ; <nl> + import com . alibaba . fastjson . annotation . JSONType ; <nl> + import com . alibaba . fastjson . serializer . SerializeConfig ; <nl> 
mmm ListenableFutureTest . java <nl> ppp ListenableFutureTest . java <nl> - final Future < Response > future = (( ListenableFuture < Response >) ahc . prepareGet ( getTargetUrl ()) . execute ()); <nl> + final Future < Response > future = ahc . prepareGet ( getTargetUrl ()) . execute (); <nl> 
mmm ValencianCatalan . java <nl> ppp ValencianCatalan . java <nl> - " EVITA _ PRONOMS _ VALENCIANS ", " EVITA _ DEMOSTRATIUS _ EIXE ", " VOCABULARI _ VALENCIA "); <nl> + " EVITA _ PRONOMS _ VALENCIANS ", " EVITA _ DEMOSTRATIUS _ EIXE ", " VOCABULARI _ VALENCIA ", <nl> + " EXIGEIX _ US "); <nl> 
mmm AstLambdaExpression . java <nl> ppp AstLambdaExpression . java <nl> - if ( formalParamNodes == null || formalParamNodes . length == 0 ) { <nl> - return invoke ( ctx , null , null ); <nl> - } else { <nl> - List < String > formalParameters = <nl> - new ArrayList <>( formalParamNodes . length ); <nl> + List < String > formalParameters = new ArrayList <>(); <nl> 
mmm SchemaChange . java <nl> ppp SchemaChange . java <nl> + SQL _ BLACKLIST . add ( Pattern . compile ("^ REPAIR \\ s + ", Pattern . CASE _ INSENSITIVE )); <nl> 
mmm readLineBug . java <nl> ppp readLineBug . java <nl> - import java . *; <nl> 
mmm TestShardingEncryptor . java <nl> ppp TestShardingEncryptor . java <nl> + import java . util . Properties ; <nl> 
mmm WbStringVariable . java <nl> ppp WbStringVariable . java <nl> - if ( cell != null ) { <nl> + if ( cell != null & & ! cell . value . toString () . isEmpty ()) { <nl> 
mmm ItalianTest . java <nl> ppp ItalianTest . java <nl> - String s = " Inserite qui il vostro testo . . . oppure controlate direttamente questo ed avrete un assaggio di quali errori possono essere identificati con LanguageTool . "; <nl> + String s = " Inserite qui il vostro testo . . . Oppure controlate direttamente questo ed avrete un assaggio di quali errori possono essere identificati con LanguageTool . "; <nl> 
mmm RestApi . java <nl> ppp RestApi . java <nl> - static final String API _ URL _ GET _ USER _ LIST = API _ BASE _ URL + " users . json "; <nl> + String API _ URL _ GET _ USER _ LIST = API _ BASE _ URL + " users . json "; <nl> - static final String API _ URL _ GET _ USER _ DETAILS = API _ BASE _ URL + " user _ "; <nl> 
mmm XpMapper . java <nl> ppp XpMapper . java <nl> + @ Mapping ( target = " time ", ignore = true ) <nl> 
mmm ProtobufVarint32FrameDecoder . java <nl> ppp ProtobufVarint32FrameDecoder . java <nl> 
mmm YamlEncryptorConfigurationTest . java <nl> ppp YamlEncryptorConfigurationTest . java <nl> - public void asserttSetColumns () { <nl> + public void assertSetColumns () { <nl> - public void testSetAssistedQueryColumns () { <nl> + public void assertSetAssistedQueryColumns () { <nl> + yamlEncryptorConfiguration . setAssistedQueryColumns (" pwd1 _ index "); <nl> 
mmm AWSEmailNotifier . java <nl> ppp AWSEmailNotifier . java <nl> - if ( emailPattern . matcher ( email ) . matches ()) { <nl> - return true ; <nl> - } else { <nl> + if (! emailPattern . matcher ( email ) . matches ()) { <nl> + if ( email . equals (" foo @ bar . com ")) { <nl> + LOGGER . error ( String . format (" Email address not changed from default ; treating as invalid : % s ", email )); <nl> 
mmm StoreStatsServiceTest . java <nl> ppp StoreStatsServiceTest . java <nl> 
mmm LithoSampleApplication . java <nl> ppp LithoSampleApplication . java <nl> - import com . facebook . flipper . plugins . console . JavascriptEnvironment ; <nl> - client . addPlugin ( <nl> - new InspectorFlipperPlugin ( this , descriptorMapping , new JavascriptEnvironment ())); <nl> + client . addPlugin ( new InspectorFlipperPlugin ( this , descriptorMapping )); <nl> 
mmm AnalyticsApplication . java <nl> ppp AnalyticsApplication . java <nl> - analytics . getLogger () . setLogLevel ( Logger . LogLevel . VERBOSE ); <nl> 
new file <nl> ppp DependencyReportMergerTest . java <nl> + package com . dianping . cat . consumer . dependency ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import org . unidal . webres . helper . Files ; <nl> + import com . dianping . cat . consumer . dependency . model . entity . DependencyReport ; <nl> 
mmm DenormaliserMetaInjectionIT . java <nl> ppp DenormaliserMetaInjectionIT . java <nl> - package org . pentaho . di . trans . steps . denormaliser ; <nl> - import static org . junit . Assert . assertEquals ; <nl> - import org . junit . Before ; <nl> - import org . junit . BeforeClass ; <nl> - import org . junit . Test ; <nl> 
mmm RepairAI . java <nl> ppp RepairAI . java <nl> - } else { <nl> + } <nl> + if ( target . within ( unit , unit . type () . range )){ <nl> 
mmm DemoService . java <nl> ppp DemoService . java <nl> - package me . jessyan . mvparms . demo . app . receiver ; <nl> + package me . jessyan . mvparms . demo . app . service ; <nl> 
deleted file <nl> mmm CaseChangingCharStream . java <nl> - package org . antlr . v4 . runtime ; <nl> - import org . antlr . v4 . runtime . misc . Interval ; <nl> - public class CaseChangingCharStream implements CharStream { <nl> - final CharStream stream ; <nl> - final boolean upper ; <nl> - public CaseChangingCharStream ( CharStream stream , boolean upper ) { <nl> 
deleted file <nl> mmm OAuth2ExchangeFilterFunctions . java <nl> - package org . springframework . security . oauth2 . client . web . reactive . function . client ; <nl> - import org . springframework . security . oauth2 . client . web . OAuth2AuthorizedClientRepository ; <nl> - import org . springframework . web . reactive . function . client . WebClient ; <nl> 
mmm GroupDefinition . java <nl> ppp GroupDefinition . java <nl> 

new file <nl> ppp HelloPlain . java <nl> + package hello . pages ; <nl> + import org . apache . tapestry5 . StreamResponse ; <nl> + import org . apache . tapestry5 . annotations . PageLoaded ; <nl> + import org . apache . tapestry5 . util . TextStreamResponse ; <nl> + public class HelloPlain <nl> + { <nl> + private TextStreamResponse response ; <nl> 
mmm StreamsTest . java <nl> ppp StreamsTest . java <nl> - String saucePassword = System . getenv (" SAUCE _ USERNAME "); <nl> + String saucePassword = System . getenv (" SAUCE _ ACCESS _ KEY "); <nl> 
mmm ConnectionOptions . java <nl> ppp ConnectionOptions . java <nl> - public Boolean getCloseSocket () { <nl> - return closeSocket ; <nl> + public Boolean getKeepAliveOverride () { <nl> + return keepAliveOverride ; <nl> 
mmm BaseLuceneTest . java <nl> ppp BaseLuceneTest . java <nl> - System . out . println (" db . getURL () = " + db . getURL ()); <nl> 
new file <nl> ppp CatalanWordRepeatRuleTest . java <nl> + package org . languagetool . rules . ca ; <nl> + import junit . framework . TestCase ; <nl> + import org . languagetool . JLanguageTool ; <nl> + import org . languagetool . TestTools ; <nl> + import org . languagetool . language . Catalan ; <nl> + import org . languagetool . rules . RuleMatch ; <nl> 
mmm NumberTest . java <nl> ppp NumberTest . java <nl> 
mmm RedirectAuthenticationSuccessHandler . java <nl> ppp RedirectAuthenticationSuccessHandler . java <nl> + public RedirectAuthenticationSuccessHandler () {} <nl> + public RedirectAuthenticationSuccessHandler ( String location ) { <nl> + this . location = URI . create ( location ); <nl> + } <nl> 
mmm DownloadActionButton . java <nl> ppp DownloadActionButton . java <nl> - Toast . makeText ( context , R . string . status _ downloading _ label , Toast . LENGTH _ SHORT ) . show (); <nl> 
mmm ViewResource . java <nl> ppp ViewResource . java <nl> - return new View ("/ views / ftl / utf8 . ftl ", Charsets . UTF _ 8 ) { <nl> + return new View ("/ views / mustache / utf8 . mustache ", Charsets . UTF _ 8 ) { <nl> - return new View ("/ views / ftl / iso88591 . ftl ", Charsets . ISO _ 8859 _ 1 ) { <nl> 
new file <nl> ppp CamelZipDeflaterTest . java <nl> + package org . apache . camel . itest . karaf ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . ops4j . pax . exam . junit . PaxExam ; <nl> + @ RunWith ( PaxExam . class ) <nl> + public class CamelZipDeflaterTest extends BaseKarafTest { <nl> 
mmm JerseyPubSub . java <nl> ppp JerseyPubSub . java <nl> 
mmm ProtoUtils . java <nl> ppp ProtoUtils . java <nl> 
mmm PanmirrorCrossrefServer . java <nl> ppp PanmirrorCrossrefServer . java <nl> - public Promise < JavaScriptObject > crossrefWorks ( String query ) <nl> + public Promise < JavaScriptObject > works ( String query ) <nl> 
mmm CombatLevel . java <nl> ppp CombatLevel . java <nl> + import java . text . DecimalFormat ; <nl> + private final DecimalFormat decimalFormat = new DecimalFormat (" # . # # # "); <nl> - combatLevelWidget . setText (" Combat Lvl : " + combatLevelPrecise ); <nl> + combatLevelWidget . setText (" Combat Lvl : " + decimalFormat . format ( combatLevelPrecise )); <nl> 
mmm KafkaTestResource . java <nl> ppp KafkaTestResource . java <nl> - props . setProperty (" zookeeper . connection . timeout . ms ", " 30000 "); <nl> + props . setProperty (" zookeeper . connection . timeout . ms ", " 45000 "); <nl> 
new file <nl> ppp DetectModerationLabels . java <nl> + package com . example . rekognition ; <nl> + import software . amazon . awssdk . core . SdkBytes ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . rekognition . RekognitionClient ; <nl> 
mmm PeriodsHolderImpl . java <nl> ppp PeriodsHolderImpl . java <nl> - checkArgument ( newPeriods [( arrayIndex )] == null , " More than one period has the index " + period . getIndex ()); <nl> - newPeriods [( arrayIndex )] = period ; <nl> + checkArgument ( newPeriods [ arrayIndex ] == null , " More than one period has the index " + period . getIndex ()); <nl> 
mmm DumpingSteps . java <nl> ppp DumpingSteps . java <nl> - import com . github . javaparser . ast . CompilationUnit ; <nl> - import com . github . javaparser . ast . visitor . DumpVisitor ; <nl> + import com . github . javaparser . ast . Node ; <nl> - private CompilationUnit compilationUnit ; <nl> + private Node resultNode ; <nl> 
new file <nl> ppp ItalianRuleDisambiguator . java <nl> + package org . languagetool . tagging . disambiguation . rules . it ; <nl> + import java . io . IOException ; <nl> + import org . languagetool . AnalyzedSentence ; <nl> + import org . languagetool . language . Italian ; <nl> + import org . languagetool . tagging . disambiguation . Disambiguator ; <nl> 
mmm Environment . java <nl> ppp Environment . java <nl> - private String id ; <nl> + private final String id ; <nl> 
mmm DispatcherServletConfiguration . java <nl> ppp DispatcherServletConfiguration . java <nl> - import org . apache . commons . lang3 . CharEncoding ; <nl> - import org . springframework . context . MessageSource ; <nl> - import org . springframework . context . support . ReloadableResourceBundleMessageSource ; <nl> 
new file <nl> ppp ManageSpaceActivity . java <nl> + package com . owncloud . android . ui . activity ; <nl> + import android . os . Bundle ; <nl> + import android . support . v7 . app . AppCompatActivity ; <nl> + import com . owncloud . android . R ; <nl> + public class ManageSpaceActivity extends AppCompatActivity { <nl> 
new file <nl> ppp TransitionUtils . java <nl> + package com . facebook . rendercore . transitions ; <nl> + public class TransitionUtils {} <nl> 
mmm MetricsTracker . java <nl> ppp MetricsTracker . java <nl> - public int getIdleConnections () <nl> - { <nl> - return pool . getIdleConnections (); <nl> - } <nl> - public int getActiveConnections () <nl> - { <nl> - return pool . getActiveConnections (); <nl> - } <nl> - public int getTotalConnections () <nl> - { <nl> 
mmm JsonResource . java <nl> ppp JsonResource . java <nl> - private final Map < String , String > MESSAGE = new HashMap < String , String >(); <nl> + public final static class HelloMessage { <nl> + public final String message ; <nl> - public JsonResource () <nl> - { <nl> - MESSAGE . put (" message ", " Hello , world !"); <nl> 
new file <nl> ppp StreamAlertService . java <nl> + package org . graylog2 . restclient . models . alerts ; <nl> + import org . graylog2 . restclient . lib . ApiClient ; <nl> + import javax . inject . Inject ; <nl> + public class StreamAlertService { <nl> + private final ApiClient api ; <nl> + @ Inject <nl> + public StreamAlertService ( ApiClient api ) { <nl> 
mmm SocketIOChatAtmosphereHandler . java <nl> ppp SocketIOChatAtmosphereHandler . java <nl> - if ( event . isSuspended ()) { <nl> + if ( event . isSuspended () & & event . getMessage () != null ) { <nl> 
mmm FeePolicy . java <nl> ppp FeePolicy . java <nl> 
mmm IncompleteExecutionException . java <nl> ppp IncompleteExecutionException . java <nl> 
mmm ClientId . java <nl> ppp ClientId . java <nl> + import javax . inject . Qualifier ; <nl> + import java . lang . annotation . Retention ; <nl> + import static java . lang . annotation . RetentionPolicy . RUNTIME ; <nl> + @ Qualifier @ Retention ( RUNTIME ) <nl> 
mmm HttpClientDownloader . java <nl> ppp HttpClientDownloader . java <nl> + import org . apache . http . Header ; <nl> + import org . apache . http . HeaderElement ; <nl> + import org . apache . http . client . entity . GzipDecompressingEntity ; <nl> + String encoding = site . getEncoding (); <nl> - if ( site . getEncoding () == null ){ <nl> 
mmm Version . java <nl> ppp Version . java <nl> - public static final String VERSION = " 5 . 3 . 0 "; <nl> + public static final String VERSION = " 5 . 3 . 1 "; <nl> - public static final int RPC _ VERSION = 50300 ; <nl> + public static final int RPC _ VERSION = 50301 ; <nl> - public static final String BUILD _ VERSION = " 5 . 3 . 0 _ 20180413110000 "; <nl> 
mmm Bootstrap . java <nl> ppp Bootstrap . java <nl> + System . setProperty (" sun . nio . ch . maxCompletionHandlersOnStack "," 8 "); <nl> 

mmm Lgo . java <nl> ppp Lgo . java <nl> + String GRANULARITY = " granularity "; <nl> + String END = " end "; <nl> + String START = " start "; <nl> - @ QueryParam (" start ") String startTime , <nl> - @ QueryParam (" end ") String endTime , <nl> - @ QueryParam (" granularity ") int granularity ) <nl> + @ QueryParam ( START ) String startTime , <nl> 
mmm FibonacciSeries . java <nl> ppp FibonacciSeries . java <nl> - int a = 1 ; <nl> - int b = 1 ; <nl> - int c = 1 ; <nl> + int n1 = 0 , n2 = 1 ; <nl> + int sum ; <nl> + if ( n == n1 || n == n2 ) { <nl> + return n ; <nl> + } <nl> - c = a + b ; <nl> - a = b ; <nl> - b = c ; <nl> + sum = n1 + n2 ; <nl> + n1 = n2 ; <nl> 
mmm DCLIntegrateTestCaseAssertion . java <nl> ppp DCLIntegrateTestCaseAssertion . java <nl> - @ XmlAttribute ( name = " init - sql ") <nl> - private String initSQL ; <nl> + @ XmlAttribute ( name = " init - sqls ") <nl> + private String initSQLs ; <nl> - @ XmlAttribute ( name = " clean - sql ") <nl> - private String cleanSQL ; <nl> 
mmm ServerCookieEncoderTest . java <nl> ppp ServerCookieEncoderTest . java <nl> - assertTrue ( Math . abs ( diff - maxAge ) <= 1 ); <nl> + assertTrue ( Math . abs ( diff - maxAge ) <= 2 ); <nl> 
mmm CmdReceiver . java <nl> ppp CmdReceiver . java <nl> - InstallResult installResult = VirtualCore . get () . installPackage ( apkPath , InstallStrategy . COMPARE _ VERSION ); <nl> + InstallResult installResult = VirtualCore . get () . installPackage ( apkPath , InstallStrategy . UPDATE _ IF _ EXIST ); <nl> 
mmm AllTests . java <nl> ppp AllTests . java <nl> + suite . addTestSuite ( OptionalBinderTest . class ); <nl> 
deleted file <nl> mmm AppendLicense . java <nl> - package com . alibaba . nacos . common ; <nl> - import java . io . File ; <nl> - import java . io . FileInputStream ; <nl> - import java . io . FileOutputStream ; <nl> - import java . util . ArrayList ; <nl> - import java . util . Iterator ; <nl> - import java . util . LinkedList ; <nl> 
mmm BigDecimalMath . java <nl> ppp BigDecimalMath . java <nl> - public static final int DIVISION _ EXTRA _ PRECISION = SystemUtil . getIntegerSafe (" groovy . division . extra . precision ", 32 ); <nl> + public static final int DIVISION _ EXTRA _ PRECISION = SystemUtil . getIntegerSafe (" groovy . division . extra . precision ", 10 ); <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 11 . 6 "; <nl> + public static final String VERSION = " 2 . 11 . 7 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 11 . 6 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 11 . 7 "; <nl> 
mmm QueryRow . java <nl> ppp QueryRow . java <nl> - import java . util . Collection ; <nl> + @ RequiredArgsConstructor <nl> - private final Collection < Integer > distinctColumnIndexes = new LinkedList <>(); <nl> + private final List < Integer > distinctColumnIndexes = new LinkedList <>(); <nl> - public QueryRow ( final List < Object > rowData ) { <nl> 
mmm JSONPParseTest2 . java <nl> ppp JSONPParseTest2 . java <nl> - String json = JSON . toJSONString ( jsonpObject ); <nl> - assertEquals (" parent . callback ({\" name \":\" idonans \",\" id \": 1 })", json ); <nl> + String json = JSON . toJSONString ( jsonpObject , SerializerFeature . MapSortField ); <nl> 
mmm AsmIntelLexerTest . java <nl> ppp AsmIntelLexerTest . java <nl> 
mmm VarHandleInvokeHandle . java <nl> ppp VarHandleInvokeHandle . java <nl> - super ( accessModeType . insertParameterTypes ( 0 , VarHandle . class ), null , accessMode . methodName (), kind , PUBLIC _ FINAL _ NATIVE , null ); <nl> - this . defc = VarHandle . class ; <nl> + super ( accessModeType . insertParameterTypes ( 0 , VarHandle . class ), VarHandle . class , accessMode . methodName (), kind , PUBLIC _ FINAL _ NATIVE , null ); <nl> 
mmm UploadCommand . java <nl> ppp UploadCommand . java <nl> + import java . util . concurrent . atomic . AtomicBoolean ; <nl> + import io . onedev . commons . utils . command . ExecuteResult ; <nl> - cmd . execute ( output , new LineConsumer () { <nl> + AtomicBoolean toleratedErrors = new AtomicBoolean ( false ); <nl> 
deleted file <nl> mmm FSDirectoryTestCase . java <nl> - package org . apache . lucene . index . store ; <nl> - import junit . framework . TestCase ; <nl> - import org . apache . lucene . store . FSDirectory ; <nl> - import java . io . IOException ; <nl> - abstract public class FSDirectoryTestCase extends TestCase { <nl> 
mmm VertxThreadFactory . java <nl> ppp VertxThreadFactory . java <nl> 
mmm ModelGenerator . java <nl> ppp ModelGenerator . java <nl> 
mmm BoundaryErrorMapTest . java <nl> ppp BoundaryErrorMapTest . java <nl> - public void testSingleDirectMap () { <nl> + public void testClassDelegateSingleDirectMap () { <nl> - @ Deployment ( resources =" org / activiti / engine / test / bpmn / event / error / mapError / BoundaryErrorMapTest . testSingleDirectMap . bpmn20 . xml ") <nl> 
mmm PicassoSampleAdapter . java <nl> ppp PicassoSampleAdapter . java <nl> + import android . app . PendingIntent ; <nl> + import android . os . Build ; <nl> + Intent intent = new Intent ( activity , SampleGridViewActivity . class ); <nl> + . setContentIntent ( PendingIntent . getActivity ( activity , - 1 , intent , 0 )) <nl> 
mmm CassandraTicketRegistryConfiguration . java <nl> ppp CassandraTicketRegistryConfiguration . java <nl> - @ Qualifier (" ticketSerializationManager ;") <nl> + @ Qualifier (" ticketSerializationManager ") <nl> 
mmm Pow2 . java <nl> ppp Pow2 . java <nl> - public class Pow2 { <nl> + public final class Pow2 { <nl> + private Pow2 () { <nl> + } <nl> + public static long align ( final long value , final int alignment ) { <nl> + if (! isPowerOfTwo ( alignment )) { <nl> + throw new IllegalArgumentException (" alignment must be a power of 2 :" + alignment ); <nl> 
mmm OptionalConsumer . java <nl> ppp OptionalConsumer . java <nl> + import org . apache . flink . util . function . ThrowingRunnable ; <nl> - public OptionalConsumer < T > ifNotPresent ( Runnable r ) { <nl> + public < E extends Exception > OptionalConsumer < T > ifNotPresent ( ThrowingRunnable < E > r ) throws E { <nl> 
mmm J2clEqualitySameRewriterPass . java <nl> ppp J2clEqualitySameRewriterPass . java <nl> 
new file <nl> ppp Issue1303 . java <nl> + package com . alibaba . json . bvt . issue _ 1300 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONArray ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import com . alibaba . fastjson . annotation . JSONCreator ; <nl> 
mmm UserMap . java <nl> ppp UserMap . java <nl> - import org . acegisecurity . userdetails . User ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - public User getUser ( String username ) throws UsernameNotFoundException { <nl> 
mmm HomepageForwardingFilter . java <nl> ppp HomepageForwardingFilter . java <nl> + @ Override <nl> + public void init ( FilterConfig filterConfig ) { <nl> + } <nl> + @ Override <nl> + public void destroy () { <nl> + } <nl> 
mmm ProgressBarComponent . java <nl> ppp ProgressBarComponent . java <nl> - DecimalFormat df = new DecimalFormat (" # . 00 "); <nl> - textToWrite = df . format ( progress ) + " % "; <nl> + DecimalFormat df = new DecimalFormat (" # 0 "); <nl> + textToWrite = df . format ( Math . floor ( progress )) + " % "; <nl> 
mmm GcmAvailableHelper . java <nl> ppp GcmAvailableHelper . java <nl> - } catch ( Exception e ) { <nl> + } catch ( Throwable t ) { <nl> - Cat . w ( e ); <nl> + Cat . w ( t ); <nl> 
mmm JerseyServerMetricsAutoConfiguration . java <nl> ppp JerseyServerMetricsAutoConfiguration . java <nl> + import io . micrometer . core . instrument . config . MeterFilter ; <nl> + import io . micrometer . spring . autoconfigure . OnlyOnceLoggingDenyMeterFilter ; <nl> + import org . springframework . core . annotation . Order ; <nl> 
deleted file <nl> mmm CustomPackageResolver . java <nl> - package io . ballerina . projects . internal . environment ; <nl> - import io . ballerina . projects . Module ; <nl> - import io . ballerina . projects . Package ; <nl> - import io . ballerina . projects . PackageId ; <nl> - import io . ballerina . projects . Project ; <nl> 
mmm EasyRulesTestSuite . java <nl> ppp EasyRulesTestSuite . java <nl> + import org . easyrules . util . UtilsTest ; <nl> + BasicRuleTest . class , <nl> + SkipOnFirstNonTrigeredRuleTest . class , <nl> + RuleProxyTest . class , <nl> + RulesEngineBuilderTest . class , <nl> - DefaultRulesEngineTest . class }) <nl> 
mmm MictrackProtocol . java <nl> ppp MictrackProtocol . java <nl> - import io . netty . handler . codec . LineBasedFrameDecoder ; <nl> - pipeline . addLast ( new LineBasedFrameDecoder ( 1024 )); <nl> 
mmm H2DataSourceMetaData . java <nl> ppp H2DataSourceMetaData . java <nl> - private final Pattern pattern = Pattern . compile (" jdbc : h2 :( mem |~)[:/]([\\ w \\ - ] + );?\\ w *"); <nl> + private final Pattern pattern = Pattern . compile (" jdbc : h2 :( mem |~)[:/]([\\ w \\ - ] + );?\\ w *", Pattern . CASE _ INSENSITIVE ); <nl> 
deleted file <nl> mmm ExceptionTypeChecking . java <nl> - package net . sourceforge . pmd . rules . strictexception ; <nl> - import net . sourceforge . pmd . AbstractRule ; <nl> - import net . sourceforge . pmd . RuleContext ; <nl> - import net . sourceforge . pmd . ast . ASTBlock ; <nl> - import net . sourceforge . pmd . ast . ASTCastExpression ; <nl> 
new file <nl> ppp JpKorjarProtocolDecoder . java <nl> + package org . traccar . protocol ; <nl> + import org . jboss . netty . channel . Channel ; <nl> + import org . traccar . BaseProtocolDecoder ; <nl> + import org . traccar . DeviceSession ; <nl> + import org . traccar . helper . DateBuilder ; <nl> + import org . traccar . model . Position ; <nl> 
mmm ProcessExecutor . java <nl> ppp ProcessExecutor . java <nl> - final String error = readString ( process . getInputStream ()); <nl> + final String error = readString ( process . getErrorStream ()); <nl> + processBuilder . redirectErrorStream ( true ); <nl> - StringBuilder result = new StringBuilder (); <nl> 
mmm AppShortcutIconGenerator . java <nl> ppp AppShortcutIconGenerator . java <nl> - import android . graphics . drawable . ScaleDrawable ; <nl> - import android . graphics . drawable . ShapeDrawable ; <nl> - import android . graphics . drawable . shapes . RectShape ; <nl> - import android . graphics . drawable . shapes . Shape ; <nl> 
new file <nl> ppp SpringInjector . java <nl> + package org . atmosphere . spring ; <nl> + import org . atmosphere . di . Injector ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + import org . springframework . web . context . support . SpringBeanAutowiringSupport ; <nl> 
mmm NewInstanceServiceLoaderTest . java <nl> ppp NewInstanceServiceLoaderTest . java <nl> + import io . shardingsphere . spi . transaction . xa . DataSourceMapConverter ; <nl> + import java . util . Collection ; <nl> + import static org . hamcrest . CoreMatchers . instanceOf ; <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> 
mmm DutchTagger . java <nl> ppp DutchTagger . java <nl> + @ Override <nl> + public String getManualRemovalsFileName () { <nl> + return "/ nl / removed . txt "; <nl> + } <nl> 
mmm RadioTransportProvider . java <nl> ppp RadioTransportProvider . java <nl> - return new AMQPProducer ( configuration , metricRegistry ); <nl> + return new AMQPProducer ( metricRegistry , configuration , serverStatus ); <nl> 
mmm FuriganaFilters . java <nl> ppp FuriganaFilters . java <nl> - private static final String RUBY = AnkiDroidApp . SDK _ VERSION >= 11 ? "< ruby >< rb >$ 1 </ rb >< rt >$ 2 </ rt ></ ruby >" <nl> + private static final String RUBY = AnkiDroidApp . SDK _ VERSION >= 11 ? "< ruby >$ 1 < rt >$ 2 </ rt ></ ruby >" <nl> 
new file <nl> ppp EncryptColumnPlaceholder . java <nl> + package org . apache . shardingsphere . core . rewrite . placeholder ; <nl> + import lombok . Getter ; <nl> + import lombok . RequiredArgsConstructor ; <nl> + @ RequiredArgsConstructor <nl> + @ Getter <nl> + public final class EncryptColumnPlaceholder implements ShardingPlaceholder { <nl> 
new file <nl> ppp TotalHammingDistance . java <nl> + package stevesun . algorithms ; <nl> + public class TotalHammingDistance { <nl> + public int totalHammingDistance ( int [] nums ) { <nl> + int r = 0 ; <nl> + for ( int i = 0 ; i < 32 ; i + + ){ <nl> + int one = 0 , zero = 0 ; <nl> + int bit = 1 << i ; <nl> 
mmm FlickrApi . java <nl> ppp FlickrApi . java <nl> - import org . scribe . builder . api . DefaultApi10a ; <nl> - import org . scribe . utils . OAuthEncoder ; <nl> - public String getRequestTokenEndpoint ( String callbackUrl ) <nl> - { <nl> - return String . format (" % s ? oauth _ callback = % s ", getRequestTokenEndpoint (), OAuthEncoder . encode ( callbackUrl )); <nl> 
mmm PreOrderArrayToBST . java <nl> ppp PreOrderArrayToBST . java <nl> + public Node toBSTIterative ( int preorder []){ <nl> + return null ; <nl> + } <nl> +  <nl> 
mmm PhoneDirectory . java <nl> ppp PhoneDirectory . java <nl> - public class PhoneDirectory { <nl> + import java . util . HashSet ; <nl> + import java . util . LinkedList ; <nl> + import java . util . Queue ; <nl> + import java . util . Set ; <nl> + public class PhoneDirectory { <nl> + public PhoneDirectory _ use _ set ( int maxNumbers ) { <nl> 

mmm OpenCVFaceRecognizer . java <nl> ppp OpenCVFaceRecognizer . java <nl> - import static org . bytedeco . javacpp . opencv _ face . *; <nl> - import static org . bytedeco . javacpp . opencv _ core . *; <nl> - import static org . bytedeco . javacpp . opencv _ imgcodecs . *; <nl> + import static org . bytedeco . javacpp . opencv _ core . CV _ 32SC1 ; <nl> 
mmm GoSafeProtocolDecoderTest . java <nl> ppp GoSafeProtocolDecoderTest . java <nl> + verifyNothing ( decoder , text ( <nl> + "* GS02 , 358696043774648 ")); <nl> + verifyNothing ( decoder , text ( <nl> + "* GS02 , 358696043774648 , GPS : 230040 ; A ; S1 . 166829 ; E36 . 934287 ; 0 ; 0 ; 170116 , STT : 20 ; 0 , MGR : 32755204 , ADC : 0 ; 11 . 2 ; 1 ; 28 . 3 ; 2 ; 4 . 1 , GFS : 0 ; 0 ")); <nl> 
mmm TwitterRestClientUsage . java <nl> ppp TwitterRestClientUsage . java <nl> - ExampleRestClient . get (" statuses / public _ timeline . json ", null , new JsonHttpResponseHandler () { <nl> + TwitterRestClient . get (" statuses / public _ timeline . json ", null , new JsonHttpResponseHandler () { <nl> 
mmm WebMvcConfig . java <nl> ppp WebMvcConfig . java <nl> + @ EnableWebMvc <nl> 
deleted file <nl> mmm TestMethodResultMapBuilder . java <nl> - package com . facebook . buck . event . listener ; <nl> - import com . facebook . buck . test . TestCaseSummary ; <nl> - import com . facebook . buck . test . TestResultSummary ; <nl> - import com . google . common . base . Joiner ; <nl> - import com . google . common . collect . ImmutableList ; <nl> 
new file <nl> ppp VavrSampler . java <nl> + package com . baeldung . samples . java . vavr ; <nl> + import io . vavr . collection . Stream ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import java . util . stream . IntStream ; <nl> + public class VavrSampler { <nl> 
mmm ScheduledObserver . java <nl> ppp ScheduledObserver . java <nl> + import java . util . concurrent . ConcurrentLinkedQueue ; <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> - import rx . concurrency . Schedulers ; <nl> + private final ConcurrentLinkedQueue < Notification < T >> queue = new ConcurrentLinkedQueue < Notification < T >>(); <nl> 
mmm DynamicResourceAllocationPolicy . java <nl> ppp DynamicResourceAllocationPolicy . java <nl> - Long . parseLong (( String ) policyConfig . getConfig ( HEALTH _ POLICY _ INTERVAL . key (), " 60000 "))); <nl> + ( int ) policyConfig . getConfig ( HEALTH _ POLICY _ INTERVAL . key (), 60000 )); <nl> 
mmm StructureFieldOrderTest . java <nl> ppp StructureFieldOrderTest . java <nl> + import com . sun . jna . platform . win32 . DBT ; <nl> 
mmm Simple . java <nl> ppp Simple . java <nl> 
mmm IdAnnotationHelper . java <nl> ppp IdAnnotationHelper . java <nl> - int idValue = extractAnnotationValue ( element ); <nl> + int idValue = this . < Integer > extractAnnotationValue ( element ); <nl> 
mmm OptionalTypeCoercer . java <nl> ppp OptionalTypeCoercer . java <nl> - public class OptionalTypeCoercer < T > extends LeafTypeCoercer < Optional < T >> { <nl> + public class OptionalTypeCoercer < T > implements TypeCoercer < Optional < T >> { <nl> + @ Override <nl> + public boolean hasElementClass ( Class <?> . . . types ) { <nl> 
mmm RendererMain . java <nl> ppp RendererMain . java <nl> + printWriter . println (); <nl> + printWriter . println (); <nl> + printWriter . println (); <nl> 
new file <nl> ppp CryptoTest . java <nl> + package org . openj9 . test . openssl ; <nl> + import java . security . KeyFactory ; <nl> + public class CryptoTest { <nl> + public static void main ( String [] args ) { <nl> + try { <nl> + KeyFactory . getInstance (" RSA "); <nl> + System . out . println (" Crypto test COMPLETED "); <nl> 
deleted file <nl> mmm MqttServerSideRpcIntegrationTest . java <nl> - package org . thingsboard . server . mqtt . rpc ; <nl> - import lombok . extern . slf4j . Slf4j ; <nl> - import org . eclipse . paho . client . mqttv3 . *; <nl> - import org . junit . Assert ; <nl> - import org . junit . Before ; <nl> - import org . junit . Test ; <nl> 
mmm AnnotationRule . java <nl> ppp AnnotationRule . java <nl> - super ( Reflector . getAttributeValue ( ruleAnnotation , " sequence ", Integer . TYPE )); <nl> + super ( ruleAnnotation != null ? <nl> + Reflector . getAttributeValue ( ruleAnnotation , " sequence ", Integer . TYPE ) : - 1 ); <nl> 
mmm OkExStreamingExchange . java <nl> ppp OkExStreamingExchange . java <nl> 
mmm MimeMessage . java <nl> ppp MimeMessage . java <nl> - public class MimeMessage { <nl> + public class MimeMessage implements MimePart { <nl> 
mmm LocationAvailability . java <nl> ppp LocationAvailability . java <nl> + import org . microg . safeparcel . SafeParceled ; <nl> + @ SafeParceled ( 1000 ) <nl> + private int versionCode = 1 ; <nl> + @ SafeParceled ( 1 ) <nl> + private int cellStatus ; <nl> + @ SafeParceled ( 2 ) <nl> + private int wifiStatus ; <nl> 
new file <nl> ppp _ 705 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + public class _ 705 { <nl> + public static class Solution1 { <nl> + class MyHashSet { <nl> + Map < Integer , Integer > map ; <nl> + public MyHashSet () { <nl> 
mmm AbstractRequestParameterAllowFromStrategy . java <nl> ppp AbstractRequestParameterAllowFromStrategy . java <nl> - return " ALLOW - FROM " + allowFromOrigin ; <nl> + return allowFromOrigin ; <nl> 
mmm AHBottomNavigationFABBehavior . java <nl> ppp AHBottomNavigationFABBehavior . java <nl> + import android . support . design . widget . CoordinatorLayout ; <nl> + import android . support . design . widget . FloatingActionButton ; <nl> + import android . support . design . widget . Snackbar ; <nl> + import android . view . View ; <nl> 
mmm ExopackageMode . java <nl> ppp ExopackageMode . java <nl> + MODULES ( 8 ), <nl> + public static boolean enabledForModules ( EnumSet < ExopackageMode > modes ) { <nl> + return modes . contains ( MODULES ); <nl> + } <nl> 
mmm KafkaStreamsRuntimeConfig . java <nl> ppp KafkaStreamsRuntimeConfig . java <nl> - @ ConfigItem <nl> + @ ConfigItem ( defaultValue = "${ quarkus . application . name }") <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 6 . 1 "); <nl> + public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 7 . 0 "); <nl> 
mmm PluginDefaultGroovyMethods . java <nl> ppp PluginDefaultGroovyMethods . java <nl> + import java . util . List ; <nl> + import java . util . Set ; <nl> + import java . util . stream . Collectors ; <nl> + import java . util . stream . Stream ; <nl> + public static < T > List < T > toList ( Stream < T > stream ) { <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final int VERSION _ INT = 001005000 ; <nl> + public static final int VERSION _ INT = 001005000 ; <nl> 
new file <nl> ppp Issue1367 _ jaxrs . java <nl> + package com . alibaba . json . bvt . issue _ 1300 ; <nl> + import com . alibaba . fastjson . support . jaxrs . FastJsonProvider ; <nl> + import org . glassfish . jersey . client . ClientConfig ; <nl> + import org . glassfish . jersey . server . ResourceConfig ; <nl> 
mmm FileSystemMasterClientServiceProcessor . java <nl> ppp FileSystemMasterClientServiceProcessor . java <nl> 
mmm Main . java <nl> ppp Main . java <nl> - import org . apache . flink . api . java . operators . DataSource ; <nl> - DataSource < String > data = env . fromElements ( WORDS ); <nl> - data . flatMap ( new FlatMapFunction < String , Tuple2 < String , Integer >>() { <nl> - @ Override <nl> - public void flatMap ( String value , Collector < Tuple2 < String , Integer >> out ) throws Exception { <nl> 
new file <nl> ppp DeleteCluster . java <nl> + package com . example . redshift ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . redshift . RedshiftClient ; <nl> + import software . amazon . awssdk . services . redshift . model . DeleteClusterRequest ; <nl> 
mmm GlobalLetQueryStep . java <nl> ppp GlobalLetQueryStep . java <nl> + import java . util . Collections ; <nl> 
deleted file <nl> mmm GetSimpleSystemsManagementParas . java <nl> - package com . example . ssm ; <nl> - import software . amazon . awssdk . regions . Region ; <nl> - import software . amazon . awssdk . services . ssm . SsmClient ; <nl> - import software . amazon . awssdk . services . ssm . model . DescribeParametersRequest ; <nl> 
mmm Mock . java <nl> ppp Mock . java <nl> 
mmm UnderFileSystemConfigurationTest . java <nl> ppp UnderFileSystemConfigurationTest . java <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . fail ; <nl> 
new file <nl> ppp EventTemplateAction . java <nl> + package com . facebook . litho . intellij . actions . templates ; <nl> + public class EventTemplateAction extends NewTemplateAction { <nl> + @ Override <nl> + String getTemplateName () { <nl> + return " Event "; <nl> + } <nl> + @ Override <nl> + String getSuffix () { <nl> 
new file <nl> ppp ConvertDateTimeUnitTest . java <nl> + package com . baeldung . convert ; <nl> + import org . joda . time . Instant ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import java . time . LocalDateTime ; <nl> + import java . time . ZoneId ; <nl> + import java . time . ZonedDateTime ; <nl> 
mmm SectionUseActivity . java <nl> ppp SectionUseActivity . java <nl> - Toast . makeText ( this , mData . get ( position ) . t . getName (), Toast . LENGTH _ LONG ) . show (); <nl> + MySection mySection = mData . get ( position ); <nl> + if ( mySection . isHeader ) <nl> + Toast . makeText ( this , mySection . header , Toast . LENGTH _ LONG ) . show (); <nl> 
mmm LookBehavior . java <nl> ppp LookBehavior . java <nl> + private LookBehavior () {} <nl> 
mmm AvroPrimitiveTypes . java <nl> ppp AvroPrimitiveTypes . java <nl> - BIGINT _ UNSIGNED (" long "); <nl> + BIGINT _ UNSIGNED (" long "), <nl> + YEAR (" int "); <nl> 
mmm HavingElement . java <nl> ppp HavingElement . java <nl> - public HavingElement ( QueryElement < E > query , <nl> - Set < HavingElement < E >> elements , <nl> - Condition <?,?> condition , <nl> - LogicalOperator operator ) { <nl> + HavingElement ( QueryElement < E > query , <nl> + Set < HavingElement < E >> elements , <nl> 
new file <nl> ppp UIController . java <nl> + package com . just . agentweb . sample . common ; <nl> + public class UIController { <nl> + } <nl> 
new file <nl> ppp SendGridEmailService . java <nl> + package example . mail . sendgrid ; <nl> + import com . sendgrid . *; <nl> + import example . api . v1 . Email ; <nl> + import example . mail . EmailService ; <nl> + import example . mail . MailController ; <nl> + import org . particleframework . context . annotation . Requires ; <nl> 
new file <nl> ppp JSONPath _ set _ test6 . java <nl> + package com . alibaba . json . bvt . path ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . JSONObject ; <nl> + import com . alibaba . fastjson . JSONPath ; <nl> + import junit . framework . TestCase ; <nl> + import org . junit . Assert ; <nl> 
mmm BenchmarkTest . java <nl> ppp BenchmarkTest . java <nl> - import static ai . grakn . test . benchmark . BenchmarkTest . DEFAULT _ FORK ; <nl> - import static ai . grakn . test . benchmark . BenchmarkTest . DEFAULT _ MEASURE _ ITERATIONS ; <nl> - import static ai . grakn . test . benchmark . BenchmarkTest . DEFAULT _ WARMUP _ ITERATIONS ; <nl> 
mmm GoConstants . java <nl> ppp GoConstants . java <nl> 
mmm EmployeeSpringFunctionalIntegrationTest . java <nl> ppp EmployeeSpringFunctionalIntegrationTest . java <nl> - import static org . mockito . BDDMockito . given ; <nl> - import static org . mockito . Mockito . verify ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> + import com . baeldung . webflux . Employee ; <nl> 
mmm SlidingWindowReservoir . java <nl> ppp SlidingWindowReservoir . java <nl> - measurements [(( int ) count + + % measurements . length )] = value ; <nl> + measurements [( int ) ( count + + % measurements . length )] = value ; <nl> 
mmm TrainCRFClassifierSlowITest . java <nl> ppp TrainCRFClassifierSlowITest . java <nl> - Assert . assertEquals (" F1 outside target range ", 0 . 7958 , f1 , 0 . 001 ); <nl> + Assert . assertEquals (" F1 outside target range ", 0 . 7969 , f1 , 0 . 001 ); <nl> 
mmm TrayIconController . java <nl> ppp TrayIconController . java <nl> + import org . apache . commons . lang3 . SystemUtils ; <nl> + import java . awt . event . ActionEvent ; <nl> + import java . awt . event . MouseAdapter ; <nl> + import java . awt . event . MouseEvent ; <nl> -  <nl> -  <nl> + if ( SystemUtils . IS _ OS _ WINDOWS ) { <nl> 
mmm OrchestrationType . java <nl> ppp OrchestrationType . java <nl> + import com . google . common . base . Optional ; <nl> + import com . google . common . base . Predicate ; <nl> + import com . google . common . collect . Iterators ; <nl> + import lombok . RequiredArgsConstructor ; <nl> + import java . util . Arrays ; <nl> 
mmm DatabaseHintSQLRouterTest . java <nl> ppp DatabaseHintSQLRouterTest . java <nl> - private ShardingRule shardingRule ; <nl> - private boolean showSQL ; <nl> - shardingRule = new ShardingRule ( shardingRuleConfig , Arrays . asList (" ds0 ", " ds1 ")); <nl> - showSQL = true ; <nl> - databaseHintSQLRouter = new DatabaseHintSQLRouter ( shardingRule , showSQL ); <nl> 
mmm ExpectedTokens . java <nl> ppp ExpectedTokens . java <nl> + @ XmlElement ( name = " aggregation - distinct - token ") <nl> + private List < ExpectedAggregationDistinctToken > aggregationDistinctTokens = new LinkedList <>(); <nl> 
mmm ShiroAuthorizationFilter . java <nl> ppp ShiroAuthorizationFilter . java <nl> - import org . apache . shiro . subject . Subject ; <nl> + import org . graylog2 . rest . RestTools ; <nl> - final Subject subject = context . getSubject (); <nl> + final String userName = RestTools . getUserNameFromRequest ( requestContext ); <nl> 
mmm BinarySearch . java <nl> ppp BinarySearch . java <nl> 
mmm DrawOperation . java <nl> ppp DrawOperation . java <nl> - long l = array . get ( i ); <nl> - array . set ( i , TileOp . get ( TileOp . x ( l ), TileOp . y ( l ), TileOp . type ( l ), get ( editor . tile ( TileOp . x ( l ), TileOp . y ( l )), TileOp . type ( l )))); <nl> - set ( editor , editor . tile ( TileOp . x ( l ), TileOp . y ( l )), TileOp . type ( l ), TileOp . value ( l )); <nl> 
mmm ChooseExistingVaultController . java <nl> ppp ChooseExistingVaultController . java <nl> + import javafx . fxml . FXML ; <nl> + import javafx . scene . control . TextField ; <nl> + @ FXML <nl> + public TextField textField ; <nl> - window . setWidth ( 100 ); <nl> + textField . setText ( file . getAbsolutePath ()); <nl> 
mmm _ 90 . java <nl> ppp _ 90 . java <nl> - import com . fishercoder . common . utils . CommonUtils ; <nl> - public static List < List < Integer >> subsetsWithDup ( int [] nums ) { <nl> - List < List < Integer >> result = new ArrayList (); <nl> - List < Integer > empty = new ArrayList (); <nl> - result . add ( empty ); <nl> 
mmm ApolloCodeGenInstallTask . java <nl> ppp ApolloCodeGenInstallTask . java <nl> + import com . squareup . moshi . JsonAdapter ; <nl> + import com . squareup . moshi . Moshi ; <nl> + static class PackageJson { <nl> + String version ; <nl> + } <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 2 . 0 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 2 . 0 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 2 . 0 . 99 "); <nl> 
mmm Main . java <nl> ppp Main . java <nl> 
mmm PGConnectToStatement . java <nl> ppp PGConnectToStatement . java <nl> 
new file <nl> ppp ZigzagIterator . java <nl> + package stevesun . algorithms ; <nl> + import java . util . Iterator ; <nl> + import java . util . List ; <nl> + public class ZigzagIterator { <nl> + private Iterator < Integer > i , j , tmp ; <nl> + public ZigzagIterator ( List < Integer > v1 , List < Integer > v2 ) { <nl> 
new file <nl> ppp OOperationResponseTest . java <nl> + package com . orientechnologies . orient . distributed . impl . coordinator . network ; <nl> + import com . orientechnologies . orient . distributed . impl . coordinator . ONodeResponse ; <nl> + import com . orientechnologies . orient . distributed . impl . coordinator . OSubmitResponse ; <nl> 
mmm NativeScreenCapture . java <nl> ppp NativeScreenCapture . java <nl> - public static native boolean grabScreen ( int display , int x , int y , int width , int height , <nl> - byte output []); <nl> + public static native boolean grabScreen ( int display , int x , int y , <nl> + int width , int height , byte output []); <nl> 
mmm ShortCodeUtil . java <nl> ppp ShortCodeUtil . java <nl> - if ( bareNumber . length () <= 6 & & " DE " . equals ( localCountryCode )) { <nl> + if ( bareNumber . length () <= 6 & & (" DE " . equals ( localCountryCode ) || " FI " . equals ( localCountryCode ))) { <nl> 
mmm LoginPresenter . java <nl> ppp LoginPresenter . java <nl> 
mmm InvalidAttributesException . java <nl> ppp InvalidAttributesException . java <nl> - public static final String DBNAME _ IS _ EMPTY _ OR _ NOT _ DEFINED = " dbname is empty or not defined in litepal . xml file "; <nl> + public static final String DBNAME _ IS _ EMPTY _ OR _ NOT _ DEFINED = " dbname is empty or not defined in litepal . xml file , or your litepal . xml file is missing . "; <nl> 
new file <nl> ppp LibPhoneNumberUnitTest . java <nl> + package com . baeldung . libphonenumber ; <nl> + import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + import org . junit . Test ; <nl> + import com . google . i18n . phonenumbers . NumberParseException ; <nl> 
new file <nl> ppp BogoSort . java <nl> + package Sorts ; <nl> + import java . util . Random ; <nl> + public class BogoSort { <nl> + private static < T > void swap ( T array [], int first , int second ){ <nl> + T randomElement = array [ first ]; <nl> + array [ first ] = array [ second ]; <nl> + array [ second ] = randomElement ; <nl> 
new file <nl> ppp Modals . java <nl> + package com . avocadojs . plugin ; <nl> + import android . Manifest ; <nl> + import android . content . Context ; <nl> + import android . content . pm . PackageManager ; <nl> + import android . os . Build ; <nl> + import android . os . VibrationEffect ; <nl> + import android . os . Vibrator ; <nl> 
new file <nl> ppp FileHandler . java <nl> + package io . undertow . server . handlers . file ; <nl> + import java . io . File ; <nl> + import io . undertow . UndertowLogger ; <nl> + import io . undertow . UndertowMessages ; <nl> + import io . undertow . server . HttpCompletionHandler ; <nl> + import io . undertow . server . HttpHandler ; <nl> 
mmm EurekaClientConfiguration . java <nl> ppp EurekaClientConfiguration . java <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm GraknClient . java <nl> ppp GraknClient . java <nl> + import java . util . stream . Collectors ; <nl> - throw new GraknClientException (" Failed graqlExecute . Error status : " + status . getStatusCode () + ", error info : " + entity , response . getStatusInfo ()); <nl> + String queries = queryList . stream () . map ( Object :: toString ) . collect ( Collectors . joining ("\ n ")); <nl> 
mmm ClientDetailsUserDetailsService . java <nl> ppp ClientDetailsUserDetailsService . java <nl> + import org . springframework . security . crypto . password . PasswordEncoder ; <nl> + private String emptyPassword = ""; <nl> +  <nl> +  <nl> + public void setPasswordEncoder ( PasswordEncoder passwordEncoder ) { <nl> 
mmm TableDataManagerImpl . java <nl> ppp TableDataManagerImpl . java <nl> - entityToTableNameMap . put ( CmmnDeploymentEntity . class , " ACT _ CMMN _ RE _ DEPLOYMENT "); <nl> - entityToTableNameMap . put ( CmmnResourceEntity . class , " ACT _ CMMN _ RE _ DEPLOYMENT _ RESOURCE "); <nl> - entityToTableNameMap . put ( CaseDefinitionEntity . class , " ACT _ CMMN _ RE _ CASEDEF "); <nl> 
mmm StringUnsafeTest . java <nl> ppp StringUnsafeTest . java <nl> + import java . nio . ByteOrder ; <nl> - assertThat ( ByteBuffer . wrap ( stringUnsafe . getByteArray (" lambda λ"))) <nl> - . isEqualTo ( StandardCharsets . UTF _ 16LE . encode (" lambda λ")); <nl> + if ( ByteOrder . nativeOrder () . equals ( ByteOrder . BIG _ ENDIAN )) { <nl> 
new file <nl> ppp TestSpanFirstQuery . java <nl> + package org . apache . lucene . search . spans ; <nl> + import org . apache . lucene . analysis . Analyzer ; <nl> + import org . apache . lucene . analysis . MockAnalyzer ; <nl> + import org . apache . lucene . analysis . MockTokenizer ; <nl> + import org . apache . lucene . document . Document ; <nl> 
mmm HeartBeatDetectNoticeEvent . java <nl> ppp HeartBeatDetectNoticeEvent . java <nl> - import lombok . Getter ; <nl> - @ Getter <nl> 
mmm MediaScanner . java <nl> ppp MediaScanner . java <nl> + private ScanCallback scanCallback ; <nl> - public void scanFile ( String filePath , String fileType ) { <nl> + public void scanFile ( String filePath , String fileType , ScanCallback callback ) { <nl> + this . scanCallback = callback ; <nl> - public void scanFile ( String [] filePaths , String fileType ) { <nl> 
mmm FeedController . java <nl> ppp FeedController . java <nl> - log . warn ( null , e ); <nl> + log . warn ( e . getMessage ()); <nl> - log . warn ( null , e ); <nl> + log . warn ( e . getMessage ()); <nl> - log . warn ( null , e ); <nl> + log . warn ( e . getMessage ()); <nl> 
mmm AliasKeyManagerUnitTest . java <nl> ppp AliasKeyManagerUnitTest . java <nl> + import static org . mockito . Mockito . doReturn ; <nl> + import static org . mockito . Mockito . spy ; <nl> + import java . security . cert . X509Certificate ; <nl> - import org . mockito . Mock ; <nl> - import org . mockito . MockitoAnnotations ; <nl> 
mmm ClassRoutingHandler . java <nl> ppp ClassRoutingHandler . java <nl> + import javax . ws . rs . NotFoundException ; <nl> - event . next (); <nl> + requestContext . setThrowable ( new NotFoundException ()); <nl> - event . next (); <nl> + requestContext . setThrowable ( new NotFoundException ()); <nl> 
mmm AddUniqueConstraintGenerator . java <nl> ppp AddUniqueConstraintGenerator . java <nl> - if ( database instanceof OracleDatabase ) { <nl> - if ( statement . isDeferrable () || statement . isInitiallyDeferred ()) { <nl> - if ( statement . isDeferrable ()) { <nl> - sql + = " DEFERRABLE "; <nl> - } <nl> + if ( database instanceof OracleDatabase || database instanceof PostgresDatabase ) { <nl> 
mmm NotRanChangeSetFilter . java <nl> ppp NotRanChangeSetFilter . java <nl> - & & ranChangeSet . getChangeLog () . replaceFirst ("^ classpath :", "") . equalsIgnoreCase ( changeSet . getFilePath ())) { <nl> + & & ranChangeSet . getChangeLog () . replaceFirst ("^ classpath :", "") . equalsIgnoreCase ( changeSet . getFilePath () . replaceFirst ("^ classpath :", ""))) { <nl> 
deleted file <nl> mmm ShiroInterceptor . java <nl> - package org . atmosphere . interceptor ; <nl> - import org . apache . shiro . SecurityUtils ; <nl> - import org . apache . shiro . UnavailableSecurityManagerException ; <nl> - import org . apache . shiro . subject . Subject ; <nl> - import org . apache . shiro . web . env . WebEnvironment ; <nl> 
mmm AHBottomNavigationAdapter . java <nl> ppp AHBottomNavigationAdapter . java <nl> + import android . support . annotation . ColorInt ; <nl> + setupWithBottomNavigation ( ahBottomNavigation , null ); <nl> + } <nl> + public void setupWithBottomNavigation ( AHBottomNavigation ahBottomNavigation , @ ColorInt int [] colors ) { <nl> 
new file <nl> ppp FindRunningInstances . java <nl> + package com . example . ec2 ; <nl> + import software . amazon . awssdk . services . ec2 . Ec2Client ; <nl> + import software . amazon . awssdk . services . ec2 . model . *; <nl> + public class FindRunningInstances { <nl> + public static void main ( String [] args ) { <nl> 
mmm SkillAbbreviations . java <nl> ppp SkillAbbreviations . java <nl> + RUNECRAFTING (" Runecraft "), <nl> 
mmm TrayContractTest . java <nl> ppp TrayContractTest . java <nl> - import org . mockito . Mockito ; <nl> - import android . content . Context ; <nl> - uri = TrayContract . generateContentUri ( Mockito . mock ( Context . class )); <nl> + uri = TrayContract . generateContentUri ( getContext ()); <nl> - uri = TrayContract . generateInternalContentUri ( Mockito . mock ( Context . class )); <nl> 
mmm CacheConfig . java <nl> ppp CacheConfig . java <nl> + import javax . cache . configuration . Configuration ; <nl> + import javax . cache . configuration . MutableConfiguration ; <nl> + import org . springframework . boot . autoconfigure . cache . CacheManagerCustomizer ; <nl> - import org . springframework . context . annotation . Configuration ; <nl> 
deleted file <nl> mmm AntTaskTest . java <nl> - package dagger . androidmanifest ; <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import org . apache . tools . ant . Project ; <nl> - import org . apache . tools . ant . ProjectHelper ; <nl> - import org . codehaus . plexus . util . FileUtils ; <nl> 
mmm TestJava9AttachAPI . java <nl> ppp TestJava9AttachAPI . java <nl> - static final String ATTACH _ ENABLE _ PROPERTY = " - Dcom . ibm . tools . attach . enable = yes "; <nl> + static final String ATTACH _ ENABLE _ PROPERTY = " - Dcom . ibm . tools . attach . enable ="; <nl> 
mmm Priority . java <nl> ppp Priority . java <nl> - IMMEDIATE ; <nl> + IMMEDIATE <nl> 
mmm Rfc3339DateJsonAdapterTest . java <nl> ppp Rfc3339DateJsonAdapterTest . java <nl> - import com . squareup . moshi . adapters . Rfc3339DateJsonAdapter ; <nl> 
mmm TocModule . java <nl> ppp TocModule . java <nl> + import io . material . catalog . transition . TransitionFragment ; <nl> + TransitionFragment . Module . class <nl> 
new file <nl> ppp SingleVertexIT . java <nl> + package com . thinkaurelius . titan . pkgtest ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . lang . ProcessBuilder . Redirect ; <nl> + import java . util . Properties ; <nl> 
mmm GeoHelper . java <nl> ppp GeoHelper . java <nl> + locationPluginIntent . putExtra (" jid ", conversation . getJid () . toString ()); <nl> 
mmm RexsterServerClientTest . java <nl> ppp RexsterServerClientTest . java <nl> + rexsterConfig . addProperty (" script - engines . script - engine . name ", " gremlin - groovy "); <nl> - @ Ignore <nl> 
new file <nl> ppp LeafSpanTestCase . java <nl> + package org . skywalking . apm . agent . core . context ; <nl> + import java . util . Map ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + public class LeafSpanTestCase { <nl> + @ Test <nl> + public void testLeaf () { <nl> + LeafSpan span = new LeafSpan ( 0 , " serviceA ", System . currentTimeMillis ()); <nl> 
mmm WordListValidatorTest . java <nl> ppp WordListValidatorTest . java <nl> + "µ g ", <nl> + "µ l ", <nl> 
new file <nl> ppp App . java <nl> + package com . baeldung ; <nl> + import groovy . lang . *; <nl> + import groovy . util . GroovyScriptEngine ; <nl> + import groovy . util . ResourceException ; <nl> + import groovy . util . ScriptException ; <nl> + import org . codehaus . groovy . jsr223 . GroovyScriptEngineFactory ; <nl> 
mmm HttpSnoopServerInitializer . java <nl> ppp HttpSnoopServerInitializer . java <nl> 
mmm DefaultServerIntrospector . java <nl> ppp DefaultServerIntrospector . java <nl> - ServerIntrospectorProperties serverIntrospectorProperties ; <nl> + private ServerIntrospectorProperties serverIntrospectorProperties ; <nl> 
mmm CredentialSourceDependency . java <nl> ppp CredentialSourceDependency . java <nl> + import java . util . function . Supplier ; <nl> + import org . wildfly . clustering . service . ServiceSupplierDependency ; <nl> + @ Override <nl> + public < V > Supplier < V > requires ( ServiceName name ) { <nl> + SupplierDependency < V > dependency = new ServiceSupplierDependency <>( name ); <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 2 . 9 . 0 "; <nl> + public static final String VERSION = " 2 . 9 . 1 "; <nl> - public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 9 . 0 "; <nl> + public static final String VERSION _ SLASHY = " ExoPlayerLib / 2 . 9 . 1 "; <nl> 
mmm ShardingDataSourceBeanDefinitionParserTag . java <nl> ppp ShardingDataSourceBeanDefinitionParserTag . java <nl> - public static final String ENCRYPT _ RULES _ TAG = " encrypt - rules "; <nl> 
mmm TextNodeRenderer . java <nl> ppp TextNodeRenderer . java <nl> + HtmlEscapers . htmlEscaper () . escape ( node . getText ()) <nl> + "</ pre ></ html >"; <nl> - JBLabel result = new JBLabel ( message , icon , SwingConstants . HORIZONTAL ); <nl> + JBLabel result = new JBLabel ( message , icon , SwingConstants . LEFT ); <nl> 
mmm InsertValuesToken . java <nl> ppp InsertValuesToken . java <nl> - public InsertValuesToken ( final int startIndex ) { <nl> - super ( startIndex , startIndex ); <nl> + public InsertValuesToken ( final int startIndex , final int stopIndex ) { <nl> + super ( startIndex , stopIndex ); <nl> 
mmm HelloDbController . java <nl> ppp HelloDbController . java <nl> - world . randomNumber = ThreadLocalRandom . current () . nextInt (); <nl> + world . randomNumber = ThreadLocalRandom . current () . nextInt ( DB _ ROWS ) + 1 ; <nl> 
mmm AnomalyFilterWrapper . java <nl> ppp AnomalyFilterWrapper . java <nl> + if ( this . metricUrn != null ){ <nl> + properties . put ( PROP _ METRIC _ URN , this . metricUrn ); <nl> + } <nl> 
mmm AvailableCiphersUnitTest . java <nl> ppp AvailableCiphersUnitTest . java <nl> - . flatMap ( provider - > provider . getServices () . stream ()) <nl> - . filter ( service - > " Cipher " . equals ( service . getType ())) <nl> - . map ( Provider . Service :: getAlgorithm ) <nl> - . collect ( Collectors . toList ()); <nl> 
new file <nl> ppp CustomAdapterWithDelegate . java <nl> + package com . squareup . moshi . recipes ; <nl> + import com . squareup . moshi . FromJson ; <nl> + import com . squareup . moshi . Json ; <nl> + import com . squareup . moshi . JsonAdapter ; <nl> + import com . squareup . moshi . Moshi ; <nl> + import com . squareup . moshi . JsonReader ; <nl> 
new file <nl> ppp Issue1701 . java <nl> + package com . alibaba . json . bvt . issue _ 1700 ; <nl> + import com . alibaba . fastjson . support . spring . FastJsonHttpMessageConverter ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> 
mmm SpecFilter . java <nl> ppp SpecFilter . java <nl> + if ( definitions == null ) { <nl> + return null ; <nl> + } <nl> 
mmm ConversationListLoader . java <nl> ppp ConversationListLoader . java <nl> - 0 , null , 0 , - 1 , 0 , 0 , 0 , - 1 }); <nl> + 0 , null , null , null , 0 , - 1 , 0 , 0 , 0 , - 1 }); <nl> 
mmm SingleNodeTypeValidator . java <nl> ppp SingleNodeTypeValidator . java <nl> - validator . accept (( N ) node , problemReporter ); <nl> + validator . accept ( type . cast ( node ), problemReporter ); <nl> 
mmm OConstants . java <nl> ppp OConstants . java <nl> - public static final String ORIENT _ VERSION = " 2 . 2 . 0 - beta "; <nl> + public static final String ORIENT _ VERSION = " 2 . 2 . 0 - SNAPSHOT "; <nl> 
mmm SnapshotManagerTest . java <nl> ppp SnapshotManagerTest . java <nl> + mock ( GenesisTxInfo . class ), <nl> 
mmm GoDuplicateFieldsInspection . java <nl> ppp GoDuplicateFieldsInspection . java <nl> - public void visitStructType (@ NotNull GoStructType o ) { <nl> + public void visitStructType (@ NotNull final GoStructType type ) { <nl> - o . accept ( new GoRecursiveVisitor () { <nl> + type . accept ( new GoRecursiveVisitor () { <nl> 
mmm ElasticsearchBackendTestBase . java <nl> ppp ElasticsearchBackendTestBase . java <nl> - import com . google . common . base . Charsets ; <nl> + import java . nio . charset . StandardCharsets ; <nl> - return new String ( bytes , Charsets . UTF _ 8 ); <nl> + return new String ( bytes , StandardCharsets . UTF _ 8 ); <nl> 
mmm WatchProtocolDecoderTest . java <nl> ppp WatchProtocolDecoderTest . java <nl> - verifyNothing ( decoder , text ( <nl> + verifyAttributes ( decoder , text ( <nl> 
mmm OperatorSubscribeOn . java <nl> ppp OperatorSubscribeOn . java <nl> - inner . unsubscribe (); <nl> 
mmm AvoidGlobalModifierRule . java <nl> ppp AvoidGlobalModifierRule . java <nl> 
mmm KillWorkers . java <nl> ppp KillWorkers . java <nl> - conf . put ( Config . STORM _ LOCAL _ DIR , new File (( String ) conf . get ( Config . STORM _ LOCAL _ DIR )) . getCanonicalPath ()); <nl> 
mmm BufferingFlux . java <nl> ppp BufferingFlux . java <nl> - final Flux < String > hearbeat = Flux . interval ( Duration . ofMillis ( maxMillisecondsBetweenEmits )) <nl> + final Flux < String > heartbeat = Flux . interval ( Duration . ofMillis ( maxMillisecondsBetweenEmits )) <nl> - . mergeWith ( hearbeat ); <nl> 
deleted file <nl> mmm EncryptSelectItem . java <nl> - package org . apache . shardingsphere . core . parsing . parser . context . selectitem ; <nl> - import com . google . common . base . Optional ; <nl> - import com . google . common . base . Strings ; <nl> - import lombok . RequiredArgsConstructor ; <nl> 
new file <nl> ppp Test11 . java <nl> + package org . joor . test ; <nl> + public class Test11 { <nl> + public static final int SF _ INT1 = new Integer ( 0 ); <nl> + public static final Integer SF _ INT2 = new Integer ( 0 ); <nl> + public final int F _ INT1 = new Integer ( 0 ); <nl> + public final Integer F _ INT2 = new Integer ( 0 ); <nl> 
mmm OpenSSLUtil . java <nl> ppp OpenSSLUtil . java <nl> + if ( managers == null ) { <nl> + return null ; <nl> + } <nl> + @ Override <nl> + public KeyManager [] getKeyManagers () throws Exception { <nl> + if ( certificate . getCertificateFile () == null ) { <nl> + return super . getKeyManagers (); <nl> + } else { <nl> 
mmm NuspecParseException . java <nl> ppp NuspecParseException . java <nl> - * @ param cause the cause ( which is saved for later retrieval by the <nl> - * {@ link java . lang . Throwable # getCause ()} method ) . ( A < code > null </ code > value is permitted , <nl> - * and indicates that the cause is nonexistent or unknown ) . <nl> 
mmm CheckedProviderSubject . java <nl> ppp CheckedProviderSubject . java <nl> - import com . google . common . truth . FailureStrategy ; <nl> + import com . google . common . truth . FailureMetadata ; <nl> - import com . google . common . truth . SubjectFactory ; <nl> - extends SubjectFactory < CheckedProviderSubject < T , P >, P > { <nl> 

new file <nl> ppp ABTest . java <nl> + package org . parceler ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . robolectric . RobolectricTestRunner ; <nl> + import org . robolectric . annotation . Config ; <nl> + import java . util . Collections ; <nl> + import java . util . List ; <nl> 
mmm JavaNCSSCheckTest . java <nl> ppp JavaNCSSCheckTest . java <nl> + import static org . junit . Assert . fail ; <nl> 
new file <nl> ppp AbstractCodecTest . java <nl> + package com . alibaba . dubbo . remoting . transport ; <nl> + import java . io . IOException ; <nl> + import com . alibaba . dubbo . common . URL ; <nl> + import com . alibaba . dubbo . remoting . Channel ; <nl> + import junit . framework . TestCase ; <nl> + import static org . easymock . EasyMock . createMock ; <nl> 
new file <nl> ppp TesterMockRequest . java <nl> + package org . apache . catalina . connector ; <nl> + public class TesterMockRequest extends Request { <nl> + @ Override <nl> + public String getScheme () { <nl> + return " http "; <nl> + } <nl> + @ Override <nl> + public String getServerName () { <nl> + return " localhost "; <nl> 
mmm SupportsPipelining . java <nl> ppp SupportsPipelining . java <nl> + * @ deprecated Rule pipelining couples rules in a way that makes it very easy to violate buck ' s <nl> + * assumptions and makes it nearly impossible for buck to understand and restrict what rules are <nl> + * doing . <nl> + @ Deprecated <nl> 
mmm AcFunDanmakuParser . java <nl> ppp AcFunDanmakuParser . java <nl> - return null ; <nl> + return new Danmakus (); <nl> - Danmakus danmakus = null ; <nl> - if ( jsonArray != null & & jsonArray . length () > 0 ) <nl> - danmakus = new Danmakus (); <nl> + Danmakus danmakus = new Danmakus (); <nl> + if ( jsonArray == null || jsonArray . length () == 0 ) { <nl> 
mmm _ 219Test . java <nl> ppp _ 219Test . java <nl> + @ Test <nl> + public void test3 () { <nl> + nums = new int []{ 1 , 2 , 3 , 1 , 2 , 3 }; <nl> + assertEquals ( false , solution2 . containsNearbyDuplicate ( nums , 2 )); <nl> + } <nl> 
mmm EventModelServiceTest . java <nl> ppp EventModelServiceTest . java <nl> - Assert . assertEquals ( true , response . getModel () != null ); <nl> + Assert . assertEquals ( true , response != null ); <nl> 
mmm Target . java <nl> ppp Target . java <nl> + import android . support . annotation . Nullable ; <nl> - void onBitmapFailed ( Exception e , Drawable errorDrawable ); <nl> + void onBitmapFailed ( Exception e , @ Nullable Drawable errorDrawable ); <nl> - void onPrepareLoad ( Drawable placeHolderDrawable ); <nl> 
deleted file <nl> mmm GroovyRunner . java <nl> - package org . codehaus . groovy . plugin ; <nl> - @ Deprecated <nl> - public interface GroovyRunner extends org . apache . groovy . plugin . GroovyRunner { <nl> - } <nl> 
new file <nl> ppp ManifestTests . java <nl> + package platform . tooling . support . tests ; <nl> + import static org . junit . jupiter . api . Assertions . assertEquals ; <nl> + import java . io . File ; <nl> + import java . lang . module . ModuleFinder ; <nl> + import java . nio . file . Path ; <nl> + import java . nio . file . Paths ; <nl> 
mmm Overview . java <nl> ppp Overview . java <nl> + import java . text . SimpleDateFormat ; <nl> + import java . util . Date ; <nl> + import de . danielnaber . languagetool . JLanguageTool ; <nl> + System . out . println (" Rules in LanguageTool " + JLanguageTool . VERSION + "< br />"); <nl> + System . out . println (" Date : " + new SimpleDateFormat (" yyyy - MM - dd ") . format ( new Date ()) + "< br />< br />\ n "); <nl> 
mmm Tool . java <nl> ppp Tool . java <nl> 
new file <nl> ppp SpringBootStarterTransactionExample . java <nl> + package io . shardingsphere . example . spring . boot . mybatis . nodep ; <nl> + import org . mybatis . spring . annotation . MapperScan ; <nl> + import org . springframework . boot . SpringApplication ; <nl> + import org . springframework . boot . autoconfigure . SpringBootApplication ; <nl> 
mmm CommandMarker . java <nl> ppp CommandMarker . java <nl> + import java . lang . ProcessBuilder . Redirect ; <nl> - processBuilder = new ProcessBuilder ( createMongocryptdSpawnArgs ( options )); <nl> + processBuilder = new ProcessBuilder ( createMongocryptdSpawnArgs ( options )) <nl> + . redirectOutput ( Redirect . DISCARD ) <nl> 
mmm BaseTest . java <nl> ppp BaseTest . java <nl> + config . setThreads ( 10 ); <nl> 
mmm SecureServletTest . java <nl> ppp SecureServletTest . java <nl> + import java . io . File ; <nl> + private static final String WEBAPP _ SRC = " src / main / webapp "; <nl> - . addClass ( SecureServlet . class ); <nl> + . addClass ( SecureServlet . class ) <nl> + . addAsWebInfResource (( new File ( WEBAPP _ SRC + "/ WEB - INF ", " web . xml "))); <nl> 
mmm NullOutputStream . java <nl> ppp NullOutputStream . java <nl> 
mmm ASTModuleDeclarationTest . java <nl> ppp ASTModuleDeclarationTest . java <nl> - ASTCompilationUnit ast = java9 . parseResource (" jdk9 _ module _ info . java "); <nl> + ASTCompilationUnit ast = java9 . parseResource (" jdkversiontests / jdk9 _ module _ info . java "); <nl> 
mmm SmartTextContentAdapter . java <nl> ppp SmartTextContentAdapter . java <nl> - if ( i > 0 & & contentsUC . startsWith ( prefix )) { <nl> + if ( i == 0 & & contentsUC . startsWith ( prefix )) { <nl> 
mmm MySQLTypeConverterTest . java <nl> ppp MySQLTypeConverterTest . java <nl> - assertEquals (" TEXT ", new MySQLTypeConverter () . getClobType () . toString ()); <nl> + assertEquals (" LONGTEXT ", new MySQLTypeConverter () . getClobType () . toString ()); <nl> 
mmm FacebookSdkVersion . java <nl> ppp FacebookSdkVersion . java <nl> - public static final String BUILD = " 6 . 5 . 0 "; <nl> + public static final String BUILD = " 6 . 5 . 1 "; <nl> 
mmm ScheduledReporterTest . java <nl> ppp ScheduledReporterTest . java <nl> - verify ( reporter , timeout ( 500 ) . times ( 2 )) . report ( <nl> + Thread . sleep ( 500 ); <nl> + verify ( reporter , times ( 2 )) . report ( <nl> 
mmm EclipseLinkHandler . java <nl> ppp EclipseLinkHandler . java <nl> + import javax . persistence . PersistenceException ; <nl> + import org . eclipse . persistence . config . HintValues ; <nl> - import org . eclipse . persistence . config . ResultSetType ; <nl> + boolean canUseCursor = false ; <nl> + try { <nl> 
mmm EntitySupport . java <nl> ppp EntitySupport . java <nl> 
deleted file <nl> mmm FaviconConfiguration . java <nl> - package com . baeldung . springbootmvc . config ; <nl> - import java . util . Arrays ; <nl> - import java . util . Collections ; <nl> - import java . util . List ; <nl> - import org . springframework . context . annotation . Bean ; <nl> - import org . springframework . context . annotation . Configuration ; <nl> 
mmm SpringVersion . java <nl> ppp SpringVersion . java <nl> 
mmm SwitchEntryContext . java <nl> ppp SwitchEntryContext . java <nl> + if ( typeUsageOfTypeDeclaration . getTypeDeclaration () . asEnum () . hasEnumConstant ( name )) { <nl> + return SymbolReference . solved ( typeUsageOfTypeDeclaration . getTypeDeclaration () . asEnum () . getEnumConstant ( name )); <nl> 
mmm OrderExtractorsRequest . java <nl> ppp OrderExtractorsRequest . java <nl> - import java . util . HashMap ; <nl> 
mmm NativeImageMojo . java <nl> ppp NativeImageMojo . java <nl> - Process process = Runtime . getRuntime () . exec ( command . toArray ( new String [ 0 ]), new String []{}, outputDirectory ); <nl> + Process process = Runtime . getRuntime () . exec ( command . toArray ( new String [ 0 ]), null , outputDirectory ); <nl> 
mmm CsvReporterFactory . java <nl> ppp CsvReporterFactory . java <nl> - . convertDurationsTo ( getRateUnit ()) <nl> + . convertRatesTo ( getRateUnit ()) <nl> 
new file <nl> ppp GenericAnnotationSerializer . java <nl> + package edu . stanford . nlp . pipeline ; <nl> + import edu . stanford . nlp . pipeline . Annotation ; <nl> + import edu . stanford . nlp . pipeline . AnnotationSerializer ; <nl> + import java . io . *; <nl> + public class GenericAnnotationSerializer implements AnnotationSerializer { <nl> 
mmm TaskConsumer . java <nl> ppp TaskConsumer . java <nl> - import com . dianping . cat . message . MessageProducer ; <nl> 
mmm StreamFilter . java <nl> ppp StreamFilter . java <nl> 
mmm TestCompressorDecompressor . java <nl> ppp TestCompressorDecompressor . java <nl> - public void testCompressorDecompressorWithExeedBufferLimit () { <nl> - int BYTE _ SIZE = 100 * 1024 ; <nl> - byte [] rawData = generate ( BYTE _ SIZE ); <nl> + public void testCompressorDecompressorWithExceedBufferLimit () { <nl> 
mmm FacebookSdkVersion . java <nl> ppp FacebookSdkVersion . java <nl> - public static final String BUILD = " 7 . 0 . 0 "; <nl> + public static final String BUILD = " 7 . 0 . 1 "; <nl> 
mmm MainActivity . java <nl> ppp MainActivity . java <nl> - import android . widget . Button ; <nl> - Button cameraButton = ( Button ) findViewById ( R . id . button _ camera ); <nl> - cameraButton . setOnClickListener ( this ); <nl> - Button contactsButton = ( Button ) findViewById ( R . id . button _ contacts ); <nl> 
new file <nl> ppp DurationBenchmark . java <nl> + package io . dropwizard . benchmarks . util ; <nl> + import io . dropwizard . util . Duration ; <nl> + import org . openjdk . jmh . annotations . *; <nl> + import org . openjdk . jmh . runner . Runner ; <nl> + import org . openjdk . jmh . runner . options . OptionsBuilder ; <nl> 
mmm MainActivityTest . java <nl> ppp MainActivityTest . java <nl> + @ Test public void testQueryParamsWithBracket () { <nl> + DeepLinkActivity deepLinkActivity = Robolectric . buildActivity ( DeepLinkActivity . class ) <nl> + . withIntent ( intent ) . create () . get (); <nl> + ShadowActivity shadowActivity = shadowOf ( deepLinkActivity ); <nl> 
mmm CodeSignIdentityStoreFactory . java <nl> ppp CodeSignIdentityStoreFactory . java <nl> - private static final Logger LOG = Logger . get ( CodeSignIdentityStore . class ); <nl> + private static final Logger LOG = Logger . get ( CodeSignIdentityStoreFactory . class ); <nl> 
deleted file <nl> mmm EmailAddressList . java <nl> - package com . fsck . k9 . activity ; <nl> - import android . content . Intent ; <nl> - import android . os . Bundle ; <nl> - import android . view . View ; <nl> - import android . widget . AdapterView ; <nl> - import android . widget . ArrayAdapter ; <nl> 
mmm Server . java <nl> ppp Server . java <nl> - System . out . println (" Server started , version 0 . 6 "); <nl> + System . out . println (" Server started , version 0 . 7 - SNAPSHOT "); <nl> 
mmm TestShardingEncryptor . java <nl> ppp TestShardingEncryptor . java <nl> - return new Properties (); <nl> + Properties result = new Properties (); <nl> + result . setProperty (" key1 ", " value1 "); <nl> + return result ; <nl> 
mmm ThemeUtil . java <nl> ppp ThemeUtil . java <nl> + R . style . Theme _ Dark _ Black , <nl> 
mmm SpringMasterSlaveDataSource . java <nl> ppp SpringMasterSlaveDataSource . java <nl> + import java . util . LinkedHashMap ; <nl> - public SpringMasterSlaveDataSource ( final Map < String , DataSource > dataSourceMap , final String name , final String masterDataSourceName , final Collection < String > slaveDataSourceNames , <nl> 
mmm RealmValidationListGenerator . java <nl> ppp RealmValidationListGenerator . java <nl> - import java . util . *; <nl> - import java . io . BufferedWriter ; <nl> - import java . io . IOException ; <nl> - import com . google . common . base . Joiner ; <nl> + import java . io . BufferedWriter ; <nl> + import java . io . IOException ; <nl> 
mmm CheckConfiguration . java <nl> ppp CheckConfiguration . java <nl> 
mmm SentenceAnnotator . java <nl> ppp SentenceAnnotator . java <nl> 
mmm ServerConfigValidator . java <nl> ppp ServerConfigValidator . java <nl> - import com . dianping . cat . configuration . server . entity . Ldap ; <nl> - if ( config . getLdap ()== null ){ <nl> - config . setLdap ( new Ldap ()); <nl> - } <nl> -  <nl> 
new file <nl> ppp FakeSourcePathResolver . java <nl> + package com . facebook . buck . rules ; <nl> + import com . facebook . buck . model . BuildTarget ; <nl> + import java . nio . file . Path ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + public final class FakeSourcePathResolver extends SourcePathResolver { <nl> 
deleted file <nl> mmm ZookeeperBeanDefinitionParser . java <nl> - package io . shardingsphere . jdbc . orchestration . spring . namespace . parser ; <nl> - import com . google . common . base . Strings ; <nl> - import io . shardingsphere . jdbc . orchestration . spring . namespace . constants . ZookeeperRegistryCenterBeanDefinitionParserTag ; <nl> 
mmm RocketMQTopicProvisioner . java <nl> ppp RocketMQTopicProvisioner . java <nl> - logger . error (" topic check error : " + topic , e ); <nl> + throw new AssertionError ( e ); <nl> 
mmm ThreeTabsActivity . java <nl> ppp ThreeTabsActivity . java <nl> - import android . util . Log ; <nl> - Log . d (" DJSD ", " ONTABSELECTED "); <nl> 
mmm ListenerAnnotations . java <nl> ppp ListenerAnnotations . java <nl> - static Stream < Class <? extends Annotation >> jpaAnnotationClasses () { <nl> + private static Stream < Class <? extends Annotation >> jpaAnnotationClasses () { <nl> - static Stream < Class <? extends Annotation >> annotationClasses () { <nl> 
new file <nl> ppp CompileDynamicProcessor . java <nl> + package org . codehaus . groovy . transform ; <nl> + import groovy . transform . CompileStatic ; <nl> + import groovy . transform . TypeCheckingMode ; <nl> + import org . codehaus . groovy . ast . AnnotatedNode ; <nl> + import org . codehaus . groovy . ast . AnnotationNode ; <nl> 
mmm MD5ShardingEncryptorTest . java <nl> ppp MD5ShardingEncryptorTest . java <nl> + assertThat ( encryptor . decode (" test ") . toString (), is (" 098f6bcd4621d373cade4e832627b4f6 ")); <nl> 
new file <nl> ppp ConsumeMessageOrderlyServiceTest . java <nl> + package org . apache . rocketmq . client . impl . consumer ; <nl> + import java . util . HashMap ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import org . apache . rocketmq . client . consumer . DefaultMQPushConsumer ; <nl> 
mmm KoreanNumberFilterFactory . java <nl> ppp KoreanNumberFilterFactory . java <nl> + * @ lucene . spi {@ value # NAME } <nl> + public static final String NAME = " koreanNumber "; <nl> 
mmm DefaultKeyGeneratorTest . java <nl> ppp DefaultKeyGeneratorTest . java <nl> - Set < Number > generatedKeys = new HashSet <>(); <nl> + Set < Number > actual = new HashSet <>(); <nl> - generatedKeys . add ( executor . submit ( new Callable < Number >() { <nl> + actual . add ( executor . submit ( new Callable < Number >() { <nl> 
mmm MoreFutures . java <nl> ppp MoreFutures . java <nl> - if ( future . isDone ()) { <nl> - try { <nl> - future . get (); <nl> - return true ; <nl> - } catch ( ExecutionException e ) { <nl> - return false ; <nl> - } catch ( CancellationException e ) { <nl> - return false ; <nl> - } catch ( InterruptedException e ) { <nl> 
deleted file <nl> mmm MessageSavingHandler . java <nl> - package alluxio . testutils . network ; <nl> - import alluxio . network . protocol . RPCMessage ; <nl> - import io . netty . channel . ChannelHandler ; <nl> - import io . netty . channel . ChannelHandlerContext ; <nl> - import io . netty . channel . SimpleChannelInboundHandler ; <nl> 
mmm DartTokenizerTest . java <nl> ppp DartTokenizerTest . java <nl> + @ Test <nl> + public void testEscapedDollar () { <nl> + doTest (" escaped _ dollar "); <nl> + } <nl> 
mmm SeataHandlerInterceptor . java <nl> ppp SeataHandlerInterceptor . java <nl> + import io . seata . common . util . StringUtils ; <nl> - import org . springframework . util . StringUtils ; <nl> 
mmm ResetPasswordViewModel . java <nl> ppp ResetPasswordViewModel . java <nl> - } <nl> - @ Override <nl> - public void onCreate ( final @ NonNull Context context , @ Nullable Bundle savedInstanceState ) { <nl> - super . onCreate ( context , savedInstanceState ); <nl> 
new file <nl> ppp MaximalRectangle . java <nl> + package stevesun . algorithms ; <nl> + import java . util . Arrays ; <nl> + public class MaximalRectangle { <nl> + public int maximalRectangle ( char [][] matrix ) { <nl> + if ( matrix . length == 0 ) return 0 ; <nl> + int m = matrix . length , n = matrix [ 0 ] . length ; <nl> 
mmm SparkSQLTwitter . java <nl> ppp SparkSQLTwitter . java <nl> + import org . apache . spark . api . java . JavaRDD ; <nl> + import org . apache . spark . api . java . function . Function ; <nl> + JavaRDD < String > topTweetText = topTweets . map ( new Function < Row , String >() { <nl> + public String call ( Row row ) { <nl> 
mmm BuilderImpl . java <nl> ppp BuilderImpl . java <nl> + return build ( builder ); <nl> + } <nl> + public TopologyBuilder build ( TopologyBuilder builder ) { <nl> 
new file <nl> ppp JavadocNodeImplTest . java <nl> + package com . puppycrawl . tools . checkstyle . checks . javadoc ; <nl> + import com . puppycrawl . tools . checkstyle . api . JavadocTokenTypes ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + public class JavadocNodeImplTest { <nl> 
mmm OrchestrationFacadeTest . java <nl> ppp OrchestrationFacadeTest . java <nl> + import io . shardingsphere . orchestration . config . OrchestrationConfiguration ; <nl> + import io . shardingsphere . orchestration . reg . api . RegistryCenterConfiguration ; <nl> + import java . util . Arrays ; <nl> + orchestrationFacade = new OrchestrationFacade ( getOrchestrationConfiguration (), Arrays . asList (" sharding _ db ", " masterslave _ db ")); <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm FakeCompoundButton . java <nl> ppp FakeCompoundButton . java <nl> - private boolean mmChecked ; <nl> + private boolean mChecked ; <nl> - setChecked (! mmChecked ); <nl> + setChecked (! mChecked ); <nl> - return mmChecked ; <nl> + return mChecked ; <nl> - if ( mmChecked != checked ) { <nl> - mmChecked = checked ; <nl> 
deleted file <nl> mmm IDynamicType . java <nl> - package clojure . lang ; <nl> - public interface IDynamicType { <nl> - Keyword getDynamicType (); <nl> - Object getDynamicField ( Keyword k , Object notFound ); <nl> - IPersistentMap getExtensionMap (); <nl> - } <nl> 
mmm SecSecurityConfig . java <nl> ppp SecSecurityConfig . java <nl> 
mmm Tuple . java <nl> ppp Tuple . java <nl> - return ( new PersistentArray ( this )) . set ( i , val ); <nl> + Object [] newArray = array . clone (); <nl> + newArray [ i ] = val ; <nl> + return new Tuple ( newArray ); <nl> 
mmm DbCategory . java <nl> ppp DbCategory . java <nl> - public interface DB2 extends CommercialDB {} <nl> - public interface Oracle extends CommercialDB {} <nl> - public interface SQLServer extends CommercialDB {} <nl> + public interface DB2 extends CommercialDB {} <nl> + public interface Oracle extends CommercialDB {} <nl> 
mmm GruntMojo . java <nl> ppp GruntMojo . java <nl> + @ Parameter <nl> + private String options ; <nl> 
mmm BenchmarkTestHelper . java <nl> ppp BenchmarkTestHelper . java <nl> + public static void initComponentStateValues ( ComponentContext c , Component component ) { <nl> + component . updateInternalChildState ( c ); <nl> + } <nl> 
mmm ActivityWithGenerics . java <nl> ppp ActivityWithGenerics . java <nl> + import java . util . List ; <nl> +  <nl> +  <nl> + } <nl> + @ Background <nl> + < T extends Number > void emptyBackgroundMethod ( T param , List < T > param2 ) { <nl> 
mmm BaseEntity . java <nl> ppp BaseEntity . java <nl> - public class BaseEntity implements Serializable { <nl> + public class BaseEntity { <nl> 
new file <nl> ppp StatViewServletTest . java <nl> + package com . alibaba . druid . bvt . support . http ; <nl> + import static org . hamcrest . CoreMatchers . equalTo ; <nl> + import static org . junit . Assert . assertThat ; <nl> + import java . net . ServerSocket ; <nl> + import java . util . Map ; <nl> 
mmm AplicomProtocolDecoderTest . java <nl> ppp AplicomProtocolDecoderTest . java <nl> + verifyPosition ( decoder , binary ( <nl> + " 44c3014645e8e91b66002300a21f0b01f056d3e62856d3e626031f845f00c6ee440800000000000000000017bd1cb30000 ")); <nl> + verifyPosition ( decoder , binary ( <nl> + " 44c3014645e8e91b66002300a21f0b00f056d3e64756d3e646031f845f00c6ee440800000000000000000017bd1cb30001 ")); <nl> 
mmm EsOpenFilesNotification . java <nl> ppp EsOpenFilesNotification . java <nl> - " open file limit . This will be causing problems that can be hard to diagnose . " + <nl> + " open file limit . ( below 64000 ) This will be causing problems that can be hard to diagnose . " + <nl> 
new file <nl> ppp CSharpTarget . java <nl> + package org . antlr . v4 . codegen ; <nl> + import org . antlr . v4 . tool . ast . GrammarAST ; <nl> + public class CSharpTarget extends Target { <nl> + public CSharpTarget ( CodeGenerator gen ) { <nl> + super ( gen , " CSharp "); <nl> + targetCharValueEscape [ 0 ] = "\\ 0 "; <nl> 
mmm DeribitMarketdataDemo . java <nl> ppp DeribitMarketdataDemo . java <nl> + import org . knowm . xchange . deribit . v2 . dto . Kind ; <nl> - DeribitOrderBook orderBook = service . getDeribitOrderBook ( instrumentName ); <nl> + DeribitOrderBook orderBook = service . getDeribitOrderBook ( instrumentName , null ); <nl> 
mmm OpenLinkAction . java <nl> ppp OpenLinkAction . java <nl> - String url = null ; <nl> + String url ; <nl> 
deleted file <nl> mmm MessageCodecBuildItem . java <nl> - package io . quarkus . vertx . core . deployment ; <nl> - import io . quarkus . builder . item . MultiBuildItem ; <nl> - public final class MessageCodecBuildItem extends MultiBuildItem { <nl> - private final String type ; <nl> - private final String codec ; <nl> 
mmm IMetricsContext . java <nl> ppp IMetricsContext . java <nl> + import backtype . storm . metric . api . CombinedMetric ; <nl> + import backtype . storm . metric . api . ICombiner ; <nl> + import backtype . storm . metric . api . IMetric ; <nl> + import backtype . storm . metric . api . IReducer ; <nl> + import backtype . storm . metric . api . ReducedMetric ; <nl> 

mmm DataSourceOrchestrationListenerTest . java <nl> ppp DataSourceOrchestrationListenerTest . java <nl> + dataSourceOrchestrationListener = new DataSourceOrchestrationListener (" test ", regCenter , " sharding _ db "); <nl> 
mmm DefinitionLoader . java <nl> ppp DefinitionLoader . java <nl> - import java . io . FileReader ; <nl> + import java . io . BufferedReader ; <nl> + import java . io . InputStreamReader ; <nl> - properties . load ( new FileReader ( definitionFileURL . getPath ())); <nl> + BufferedReader bufferedReader = new BufferedReader ( new InputStreamReader ( definitionFileURL . openStream ())); <nl> 
new file <nl> ppp Issue3375 . java <nl> + package com . alibaba . json . bvt . issue _ 3300 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import junit . framework . TestCase ; <nl> + import java . util . ArrayList ; <nl> + import java . util . HashMap ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> 
mmm UndoVariableReplacement . java <nl> ppp UndoVariableReplacement . java <nl> - StringProperty newProp = new StringProperty ( prop . getName (), input ); <nl> - return newProp ; <nl> + return new StringProperty ( prop . getName (), input ); <nl> 
mmm Main . java <nl> ppp Main . java <nl> - package com . zhisheng . cep ; <nl> - import com . zhisheng . common . model . MetricEvent ; <nl> - import com . zhisheng . common . utils . ExecutionEnvUtil ; <nl> - import com . zhisheng . common . utils . KafkaConfigUtil ; <nl> - import org . apache . flink . api . java . utils . ParameterTool ; <nl> 
deleted file <nl> mmm PermissionUtils . java <nl> - package permissions . dispatcher ; <nl> - import android . app . Activity ; <nl> - import android . content . Context ; <nl> - import android . support . v4 . app . Fragment ; <nl> - public final class PermissionUtils { <nl> - private PermissionUtils () { <nl> 
new file <nl> ppp SentenceUtilsITest . java <nl> + package edu . stanford . nlp . ling ; <nl> + import edu . stanford . nlp . pipeline . *; <nl> + import junit . framework . TestCase ; <nl> + import java . io . *; <nl> + import java . util . *; <nl> + public class SentenceUtilsITest extends TestCase { <nl> + public void testRebuildingMWTText () throws IOException { <nl> 
mmm AbbreviationMatcher . java <nl> ppp AbbreviationMatcher . java <nl> - next _ key : <nl> - int matchCount = 1 ; <nl> - int keyChunk = 1 ; <nl> - for ( int i = 1 ; i < abbreviatedKeyChunks . size (); i + + ) { <nl> - boolean found = false ; <nl> - for ( int j = keyChunk ; j < keyChunks . size (); j + + ) { <nl> 
mmm DemoUtil . java <nl> ppp DemoUtil . java <nl> + samples . add ( <nl> + new MediaItem . Builder () <nl> + . setTitle (" Widevine DASH cenc : Tears ") <nl> + . setMimeType ( MIME _ TYPE _ DASH ) <nl> + . setDrmConfiguration ( <nl> + new DrmConfiguration ( <nl> + C . WIDEVINE _ UUID , <nl> + Collections . emptyMap ())) <nl> 
mmm LinkPreview . java <nl> ppp LinkPreview . java <nl> + if ( description . equals ( title )) { <nl> + return ""; <nl> + } <nl> 
new file <nl> ppp ChineseStringUtilsTest . java <nl> + package edu . stanford . nlp . trees . international . pennchinese ; <nl> + import edu . stanford . nlp . ling . CoreAnnotations ; <nl> + import edu . stanford . nlp . ling . CoreLabel ; <nl> + import edu . stanford . nlp . sequences . SeqClassifierFlags ; <nl> 
mmm DeferredReleaser . java <nl> ppp DeferredReleaser . java <nl> - public void release (); <nl> + void release (); <nl> - mPendingReleasables = new HashSet < Releasable >(); <nl> + mPendingReleasables = new HashSet <>(); <nl> 
mmm FailureModelGenerator . java <nl> ppp FailureModelGenerator . java <nl> + ModelRequest request = new ModelRequest ( domain , getMillsOfMinutePastCurrentHour ( 0 )) <nl> + . setProperty (" queryType ", null ); <nl> - long endMills = endTime . getTime (); <nl> - if ( endMills >= getMillsOfMinutePastCurrentHour ( 5 )) { <nl> 
mmm FinalRClassBuilder . java <nl> ppp FinalRClassBuilder . java <nl> - import com . github . javaparser . ast . NodeList ; <nl> - import com . github . javaparser . ast . expr . Expression ; <nl> - import java . util . Optional ; <nl> - Type type = field . getType (); <nl> + Type type = field . getElementType (); <nl> 
new file <nl> ppp SQLEditorInputFactory . java <nl> + package org . jkiss . dbeaver . ui . editors . sql ; <nl> + import org . eclipse . ui . IFileEditorInput ; <nl> + import org . eclipse . ui . part . FileEditorInput ; <nl> + import org . jkiss . dbeaver . Log ; <nl> + import org . eclipse . core . resources . IFile ; <nl> 
mmm Release . java <nl> ppp Release . java <nl> 
mmm CalendarClient . java <nl> ppp CalendarClient . java <nl> - String query _ input _ data = " What is on my Google calendar for this week ?"; <nl> + String query _ input _ data = " What is on my Google calendar for last week ?"; <nl> 
mmm LoginPresenter . java <nl> ppp LoginPresenter . java <nl> + String fingerprint = BuildConfig . APPLICATION _ ID + " - " + uuid ; <nl> - LoginProvider . getLoginRestService ( authToken ) . login ( BuildConfig . GITHUB _ CLIENT _ ID , uuid . toString (), authModel ); <nl> + LoginProvider . getLoginRestService ( authToken ) . login ( BuildConfig . GITHUB _ CLIENT _ ID , <nl> 
mmm ArrayNodeToIterableConverter . java <nl> ppp ArrayNodeToIterableConverter . java <nl> - import javax . inject . Provider ; <nl> 
new file <nl> ppp AggregationDistinctPlaceholder . java <nl> + package io . shardingsphere . core . rewrite . placeholder ; <nl> + import lombok . Getter ; <nl> + import lombok . RequiredArgsConstructor ; <nl> + @ RequiredArgsConstructor <nl> + @ Getter <nl> + public final class AggregationDistinctPlaceholder implements ShardingPlaceholder { <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 7 . 0 "); <nl> + public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 7 . 1 "); <nl> 
mmm JSONPostITest . java <nl> ppp JSONPostITest . java <nl> - @ Ignore (" Not yet supported ") <nl> - public void bodyHamcrestMatchingWhenPost () throws Exception { <nl> - expect () . body ( containsString (" winning - numbers ")) . when () . post ("/ lotto "); <nl> + public void uriNotFoundTWhenPost () throws Exception { <nl> 
new file <nl> ppp LongestValidParentheses . java <nl> + package stevesun . algorithms ; <nl> + import java . util . Stack ; <nl> + public class LongestValidParentheses { <nl> + public int longestValidParentheses ( String s ) { <nl> + int result = 0 ; <nl> + Stack < Integer > stack = new Stack <>(); <nl> + stack . push ( - 1 ); <nl> 
mmm MeteorTest . java <nl> ppp MeteorTest . java <nl> - protected static void assertEquals ( final SopremoPlan expectedPlan , final SopremoPlan actualPlan ) { <nl> + protected static void assertPlanEquals ( final SopremoPlan expectedPlan , final SopremoPlan actualPlan ) { <nl> 
mmm InternalProperties . java <nl> ppp InternalProperties . java <nl> - String ES _ INDEX _ INITIALIZING _ PREFIX = " es . initializing . "; <nl> 
mmm GoLiveTemplateTest . java <nl> ppp GoLiveTemplateTest . java <nl> - myFixture . checkResult (" package main ; func main () { name := < caret > }"); <nl> + myFixture . checkResult (" package main ; func main () {\ n \ tname := }"); <nl> 
mmm BlockOption . java <nl> ppp BlockOption . java <nl> 
mmm HierarchyViewerActivityTest . java <nl> ppp HierarchyViewerActivityTest . java <nl> - public void activity _ subclass _ in _ manifest _ compiles () { <nl> + public void hierarchy _ viewer _ activity _ compiles () { <nl> - public void activity _ in _ manifest _ does _ not _ compile () throws IOException { <nl> 
new file <nl> ppp DecodeKotlinTest . java <nl> + package brut . androlib ; <nl> + import brut . directory . ExtFile ; <nl> + import brut . common . BrutException ; <nl> + import brut . util . OS ; <nl> + import org . apache . commons . io . FileUtils ; <nl> + import org . junit . AfterClass ; <nl> + import org . junit . BeforeClass ; <nl> 
mmm AggregationDistinctPlaceholder . java <nl> ppp AggregationDistinctPlaceholder . java <nl> 
mmm SkipExpressionUtil . java <nl> ppp SkipExpressionUtil . java <nl> - if ( isSkipExpressionEnabled != null & & isSkipExpressionEnabled instanceof Boolean ) { <nl> + if ( isSkipExpressionEnabled instanceof Boolean ) { <nl> 
mmm TimerangeSelector . java <nl> ppp TimerangeSelector . java <nl> - put ( 5 * 60 , " 5 min "); <nl> - put ( 15 * 60 , " 15 min "); <nl> - put ( 30 * 60 , " 30 min "); <nl> + put ( 5 * 60 , " 5 minutes "); <nl> + put ( 15 * 60 , " 15 minutes "); <nl> + put ( 30 * 60 , " 30 minutes "); <nl> - options . append (">"); <nl> 
mmm ShardingContext . java <nl> ppp ShardingContext . java <nl> - import io . shardingsphere . core . constant . ShardingConstant ; <nl> + import lombok . AccessLevel ; <nl> + import java . util . Properties ; <nl> 
mmm CannonSpots . java <nl> ppp CannonSpots . java <nl> - TROLLS ( new WorldPoint ( 2401 , 3856 , 0 )), <nl> + TROLLS ( new WorldPoint ( 2401 , 3856 , 0 ), new WorldPoint ( 1242 , 3517 , 0 )), <nl> 
mmm RtmpDataSource . java <nl> ppp RtmpDataSource . java <nl> + import static com . google . android . exoplayer2 . util . Util . castNonNull ; <nl> - private RtmpClient rtmpClient ; <nl> - private Uri uri ; <nl> + @ Nullable private RtmpClient rtmpClient ; <nl> + @ Nullable private Uri uri ; <nl> - int bytesRead = rtmpClient . read ( buffer , offset , readLength ); <nl> 
mmm FixCommand . java <nl> ppp FixCommand . java <nl> - import java . lang . ProcessBuilder . Redirect ; <nl> + import java . util . EnumSet ; <nl> + import java . util . Optional ; <nl> 
new file <nl> ppp AwaitilityReturnValuesTest . java <nl> + package com . jayway . awaitility ; <nl> + import com . jayway . awaitility . classes . Asynch ; <nl> + import com . jayway . awaitility . classes . FakeRepository ; <nl> + import com . jayway . awaitility . classes . FakeRepositoryImpl ; <nl> + import org . junit . Before ; <nl> 
mmm KeepOneFilterTest . java <nl> ppp KeepOneFilterTest . java <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . collect . Iterables ; <nl> + import javax . annotation . Nullable ; <nl> + import static com . google . common . collect . Lists . newArrayList ; <nl> 
new file <nl> ppp ConcurrentHashMapTest . java <nl> + package com . alibaba . json . bvt . serializer ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> + import java . util . concurrent . ConcurrentHashMap ; <nl> + import java . util . concurrent . atomic . AtomicLong ; <nl> 
deleted file <nl> mmm MessageFilterHook . java <nl> - package org . graylog2 . messagehandlers . common ; <nl> - import java . util . regex . Matcher ; <nl> - import java . util . regex . Pattern ; <nl> - import org . graylog2 . Main ; <nl> - import org . graylog2 . messagehandlers . gelf . GELFMessage ; <nl> 
mmm MainActivity . java <nl> ppp MainActivity . java <nl> - new BottomBarFragment ( SampleFragment . newInstance (" Content for nearby stuff . "), R . drawable . ic _ nearby , " Nearby ") <nl> + new BottomBarFragment ( SampleFragment . newInstance (" Content for nearby stuff . "), R . drawable . ic _ nearby , " Nearby "), <nl> 
new file <nl> ppp _ 58Test . java <nl> + package com . fishercoder ; <nl> + import com . fishercoder . solutions . _ 58 ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + public class _ 58Test { <nl> + private static _ 58 . Solution1 solution1 ; <nl> 
mmm Http2Server . java <nl> ppp Http2Server . java <nl> - . setHandler ( resource ( new FileResourceManager ( new File ( System . getProperty (" user . home ")), 100 )) <nl> + . setHandler ( resource ( new FileResourceManager ( new File ( System . getProperty (" example . directory ", System . getProperty (" user . home "))), 100 )) <nl> 
mmm NacosDataPropertiesParser . java <nl> ppp NacosDataPropertiesParser . java <nl> - result . put ( dataLine . substring ( 0 , index ), dataLine . substring ( index + 1 )); <nl> + String key = dataLine . substring ( 0 , index ); <nl> + String value = dataLine . substring ( index + 1 ); <nl> + result . put ( key . trim (), value . trim ()); <nl> 
mmm NodeTraversor . java <nl> ppp NodeTraversor . java <nl> + traverse ( visitor , root ); <nl> + } <nl> + public static void traverse ( NodeVisitor visitor , Node root ) { <nl> 
mmm CryptoTest . java <nl> ppp CryptoTest . java <nl> - import junit . framework . Test ; <nl> 
new file <nl> ppp InsertionSortTest . java <nl> + package com . github . pedrovgs . problem76 ; <nl> + import com . github . pedrovgs . sortingalgorithm . SortingAlgorithm ; <nl> + import com . github . pedrovgs . sortingalgorithms . SortingAlgorithmTest ; <nl> + public class InsertionSortTest extends SortingAlgorithmTest { <nl> 
mmm IconTextView . java <nl> ppp IconTextView . java <nl> + attributes . recycle (); <nl> 
mmm ApplyOperationsCommand . java <nl> ppp ApplyOperationsCommand . java <nl> - import org . json . JSONArray ; <nl> - import org . json . JSONException ; <nl> - import org . json . JSONObject ; <nl> + import com . fasterxml . jackson . databind . node . ArrayNode ; <nl> + import com . fasterxml . jackson . databind . node . ObjectNode ; <nl> 
mmm StringOutputStream . java <nl> ppp StringOutputStream . java <nl> + @ Override <nl> 
deleted file <nl> mmm LinkedList . java <nl> - package DataStructures . HashMap . Hashing ; <nl> - class LinkedList { <nl> - private Node Head ; <nl> - private int size ; <nl> - public LinkedList () { <nl> - Head = null ; <nl> - size = 0 ; <nl> - } <nl> - public void insert ( int data ) { <nl> - Node newnode = new Node ( data ); <nl> 
mmm SampleSenderFactory . java <nl> ppp SampleSenderFactory . java <nl> - throw new IllegalArgumentException ( e . getMessage ()); <nl> + throw new IllegalArgumentException ( e . getMessage (), e ); <nl> 
mmm RealizationRegistryTest . java <nl> ppp RealizationRegistryTest . java <nl> - import static org . junit . Assert . *; <nl> - import java . util . Set ; <nl> - import org . junit . Test ; <nl> + import org . junit . Test ; <nl> + import java . util . Set ; <nl> + import static org . junit . Assert . assertEquals ; <nl> 
mmm CycleDetection . java <nl> ppp CycleDetection . java <nl> 
mmm BaseProtocolEncoder . java <nl> ppp BaseProtocolEncoder . java <nl> + import org . traccar . helper . Log ; <nl> + import org . traccar . model . Position ; <nl> - return encodeCommand (( Command ) msg ); <nl> + Command command = ( Command ) msg ; <nl> + Object encodedCommand = encodeCommand ( command ); <nl> 
deleted file <nl> mmm HibernateUtil . java <nl> - package com . baeldung . hibernate ; <nl> - import java . io . FileInputStream ; <nl> - import java . io . IOException ; <nl> - import java . net . URL ; <nl> - import java . util . Properties ; <nl> - import org . apache . commons . lang3 . StringUtils ; <nl> 
mmm FastNeuralEnglishCorefBenchmarkSlowITest . java <nl> ppp FastNeuralEnglishCorefBenchmarkSlowITest . java <nl> - EXPECTED _ F1 _ SCORE = 60 . 12 ; <nl> + EXPECTED _ F1 _ SCORE = 59 . 22 ; <nl> 
mmm MySqlUtils . java <nl> ppp MySqlUtils . java <nl> - com . mysql . jdbc . ConnectionImpl mysqlConn = ( com . mysql . jdbc . ConnectionImpl ) physicalConn ; <nl> + com . mysql . jdbc . Connection mysqlConn = ( com . mysql . jdbc . Connection ) physicalConn ; <nl> 
mmm BaseLanguageModel . java <nl> ppp BaseLanguageModel . java <nl> 
new file <nl> ppp TestStressReflectiveCode . java <nl> + package compiler . arguments ; <nl> + public class TestStressReflectiveCode { <nl> + public static void main ( String [] args ) { <nl> + VALUES . clone (); <nl> + } <nl> + private static final int [] VALUES = new int []{ 3 , 4 , 5 }; <nl> + } <nl> 
mmm ShBinaryRuleIntegrationTest . java <nl> ppp ShBinaryRuleIntegrationTest . java <nl> + import com . facebook . buck . util . environment . Platform ; <nl> + import org . junit . Assume ; <nl> + Assume . assumeTrue ( Platform . detect () != Platform . WINDOWS ); <nl> + Assume . assumeTrue ( Platform . detect () != Platform . WINDOWS ); <nl> 
mmm Slf4jLogger . java <nl> ppp Slf4jLogger . java <nl> + import java . text . MessageFormat ; <nl> + String message = MessageFormat . format ( format , params ); <nl> - logger . trace ( format , params ); <nl> + logger . trace ( message ); <nl> - logger . debug ( format , params ); <nl> + logger . debug ( message ); <nl> 
mmm BinaryTreePostOrderTraversal . java <nl> ppp BinaryTreePostOrderTraversal . java <nl> 
mmm OpenSamlInitializationServiceTests . java <nl> ppp OpenSamlInitializationServiceTests . java <nl> - registry . setParserPool ( null ); <nl> - OpenSamlInitializationService . initialize (); <nl> - assertThat ( registry . getParserPool ()) . isNull (); <nl> 
mmm Duration . java <nl> ppp Duration . java <nl> - return DurationUtils . INSTANCE . startTimeToTimestamp ( step , end ); <nl> + return DurationUtils . INSTANCE . endTimeToTimestamp ( step , end ); <nl> 
mmm RxAndroidPluginsTest . java <nl> ppp RxAndroidPluginsTest . java <nl> - import org . junit . After ; <nl> - import org . junit . Before ; <nl> - import static org . junit . Assert . assertEquals ; <nl> - @ Before @ After <nl> - public void setUpAndTearDown () { <nl> - RxAndroidPlugins . getInstance () . reset (); <nl> 
mmm PersistableList . java <nl> ppp PersistableList . java <nl> - ",\ n toProto =" + toProto + <nl> 
mmm CalendarAppWidgetProvider . java <nl> ppp CalendarAppWidgetProvider . java <nl> + import android . app . PendingIntent ; <nl> + import android . content . Intent ; <nl> + import me . zhanghai . android . douya . link . UriHandlerActivity ; <nl> + PendingIntent moviePendingIntent = PendingIntent . getActivity ( context , <nl> 
new file <nl> ppp JniLifecycleListener . java <nl> + package org . apache . catalina . core ; <nl> + import org . apache . catalina . Lifecycle ; <nl> + import org . apache . catalina . LifecycleEvent ; <nl> + import org . apache . catalina . LifecycleListener ; <nl> + import org . apache . juli . logging . Log ; <nl> 
mmm HelloWebServer . java <nl> ppp HelloWebServer . java <nl> + import io . netty . channel . epoll . EpollChannelOption ; <nl> - doRun ( new EpollEventLoopGroup (), EpollServerSocketChannel . class ); <nl> + doRun ( new EpollEventLoopGroup (), EpollServerSocketChannel . class , true ); <nl> - doRun ( new NioEventLoopGroup (), NioServerSocketChannel . class ); <nl> 
mmm ProviderMeta . java <nl> ppp ProviderMeta . java <nl> - public static final int DB _ VERSION = 28 ; <nl> + public static final int DB _ VERSION = 29 ; <nl> 
mmm ConfigThread . java <nl> ppp ConfigThread . java <nl> - private JLanguageTool langTool ; <nl> 
mmm EntityParceler . java <nl> ppp EntityParceler . java <nl> - String name = ( String ) in . readValue ( null ); <nl> + String name = ( String ) in . readValue ( getClass () . getClassLoader ()); <nl> - value = in . readValue ( null ); <nl> + value = in . readValue ( getClass () . getClassLoader ()); <nl> 
mmm SearchGroup . java <nl> ppp SearchGroup . java <nl> - class SearchGroup { <nl> + public class SearchGroup { <nl> 
new file <nl> ppp TravisFoldListener . java <nl> + package com . mysema . testutil ; <nl> + import org . junit . runner . Description ; <nl> + import org . junit . runner . Result ; <nl> + import org . junit . runner . notification . RunListener ; <nl> + public class TravisFoldListener extends RunListener { <nl> 
deleted file <nl> mmm CryptoModeSelector . java <nl> - package com . fsck . k9 . view ; <nl> - public interface CryptoModeSelector { <nl> - void setCryptoStatusListener ( CryptoStatusSelectedListener cryptoStatusListener ); <nl> - void setCryptoStatus ( CryptoModeSelectorState status ); <nl> - interface CryptoStatusSelectedListener { <nl> 
mmm URLConverterTest . java <nl> ppp URLConverterTest . java <nl> + import jodd . util . SystemUtil ; <nl> + import org . junit . jupiter . params . ParameterizedTest ; <nl> + import org . junit . jupiter . params . provider . Arguments ; <nl> + import org . junit . jupiter . params . provider . MethodSource ; <nl> 
deleted file <nl> mmm AtomicFieldUpdaterUtil . java <nl> - package io . netty . util . internal ; <nl> - import java . util . concurrent . atomic . AtomicIntegerFieldUpdater ; <nl> - import java . util . concurrent . atomic . AtomicReferenceFieldUpdater ; <nl> - final class AtomicFieldUpdaterUtil { <nl> - private static final boolean AVAILABLE ; <nl> 
mmm AbstractPythonVersion . java <nl> ppp AbstractPythonVersion . java <nl> + @ AddToRuleKey <nl> 
mmm InlineShardingStrategy . java <nl> ppp InlineShardingStrategy . java <nl> - import groovy . lang . Binding ; <nl> - import lombok . Getter ; <nl> - import org . slf4j . LoggerFactory ; <nl> - @ Getter <nl> - private final Closure <?> closureTemplate ; <nl> - private final String logRoot = " logRoot "; <nl> 
mmm WebServiceUELTest . java <nl> ppp WebServiceUELTest . java <nl> - import org . activiti . engine . impl . bpmn . SimpleStructureDefinition ; <nl> + import org . activiti . engine . impl . cfg . RepositorySession ; <nl> + import org . activiti . engine . impl . db . DbRepositorySessionFactory ; <nl> + import org . activiti . engine . repository . ProcessDefinition ; <nl> 
mmm TestVersion . java <nl> ppp TestVersion . java <nl> - import java . lang . annotation . Annotation ; <nl> - final Annotation ann = Version . class . getField ( values [ i ] . name ()) . getAnnotation ( Deprecated . class ); <nl> + final Deprecated ann = Version . class . getField ( values [ i ] . name ()) . getAnnotation ( Deprecated . class ); <nl> 
mmm ApexParserTest . java <nl> ppp ApexParserTest . java <nl> - ASTUserClass rootNode = parse (" public class HelloWorld { public void foo () {} private static int bar () { return 1 ; }"); <nl> + ASTUserClass rootNode = parse (" public class HelloWorld { public void foo () {} private static int bar () { return 1 ; } }"); <nl> 
mmm HBaseIDAllocationTest . java <nl> ppp HBaseIDAllocationTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore public void testLocalPartitionAcquisition () {} <nl> 
mmm IOUtil . java <nl> ppp IOUtil . java <nl> + import java . io . BufferedWriter ; <nl> + import java . io . FileWriter ; <nl> + import java . io . OutputStreamWriter ; <nl> + public static Writer createWriter () { <nl> + return new OutputStreamWriter ( System . out ); <nl> + } <nl> + public static Writer createWriter ( String reportFile ) { <nl> 
mmm MutableInt . java <nl> ppp MutableInt . java <nl> + @ Override <nl> + public boolean equals ( Object o ) { <nl> + if ( o instanceof Number ) return v == (( Number ) o ) . intValue (); <nl> + return false ; <nl> + } <nl> + @ Override public int hashCode () { return v ; } <nl> 
mmm Application . java <nl> ppp Application . java <nl> 
mmm BazelJavaSemanticsTest . java <nl> ppp BazelJavaSemanticsTest . java <nl> + import static org . junit . Assert . assertEquals ; <nl> - import junit . framework . TestCase ; <nl> + import org . junit . Test ; <nl> + import org . junit . runner . RunWith ; <nl> + import org . junit . runners . JUnit4 ; <nl> 
deleted file <nl> mmm WeightedSurfacePattern . java <nl> - package edu . stanford . nlp . patterns . surface ; <nl> - import java . text . DecimalFormat ; <nl> - public class WeightedSurfacePattern extends SurfacePattern { <nl> - private static final long serialVersionUID = 1L ; <nl> - double [] prevContextWts ; <nl> 
mmm ZipkinSpanReporterInRegistryTest . java <nl> ppp ZipkinSpanReporterInRegistryTest . java <nl> - import org . apache . camel . BindToRegistry ; <nl> - import org . apache . camel . impl . JndiRegistry ; <nl> 
mmm WordListValidatorTest . java <nl> ppp WordListValidatorTest . java <nl> + " cm ²", <nl> + " cm ³", <nl> 
mmm GzipITest . java <nl> ppp GzipITest . java <nl> + import static org . hamcrest . Matchers . equalTo ; <nl> + @ Test public void <nl> + returns _ json _ body _ when _ content _ encoding _ is _ gzip _ but _ body _ is _ json () { <nl> + when () . <nl> + get ("/ gzip - json ") . <nl> + then () . <nl> + statusCode ( 200 ) . <nl> 
mmm GoogleAnalyticsApiFacadeTest . java <nl> ppp GoogleAnalyticsApiFacadeTest . java <nl> - import org . junit . Rule ; <nl> - import org . junit . rules . ExpectedException ; <nl> - import org . junit . runner . RunWith ; <nl> - import org . junit . runners . Parameterized ; <nl> - import org . pentaho . di . core . exception . KettleFileException ; <nl> 
mmm InstrumentedConnectionFactory . java <nl> ppp InstrumentedConnectionFactory . java <nl> - import java . lang . reflect . InvocationTargetException ; <nl> - import java . lang . reflect . Method ; <nl> - import java . util . Collections ; <nl> - private Method getProtocols ; <nl> - try { <nl> - getProtocols = connectionFactory . getClass () . getMethod (" getProtocols "); <nl> 
mmm FactorySupport . java <nl> ppp FactorySupport . java <nl> - public static Object createFactory ( PrivilegedExceptionAction action ) throws ParserConfigurationException { <nl> + private static Object createFactory ( PrivilegedExceptionAction action ) throws ParserConfigurationException { <nl> 
mmm Unknown . java <nl> ppp Unknown . java <nl> - import org . apache . tomcat . util . bcel . Constants ; <nl> - public Unknown ( int name _ index , int length , byte [] bytes , ConstantPool constant _ pool ) { <nl> - super ( name _ index , length , constant _ pool ); <nl> - this . bytes = bytes ; <nl> - name = (( ConstantUtf8 ) constant _ pool . getConstant ( name _ index , Constants . CONSTANT _ Utf8 )) <nl> 
mmm AbstractAsyncProducer . java <nl> ppp AbstractAsyncProducer . java <nl> - messageLatencyTimer . update ( Math . max ( 0L , currentTime - message . eventTimeMS ), TimeUnit . MILLISECONDS ); <nl> + messageLatencyTimer . update ( Math . max ( 0L , currentTime - message . eventTimeMS - 500L ), TimeUnit . MILLISECONDS ); <nl> 
new file <nl> ppp ApplicationDiscoveryTest . java <nl> + package org . activiti . application ; <nl> + import java . io . IOException ; <nl> + import java . util . List ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + import org . mockito . InjectMocks ; <nl> + import org . mockito . Mock ; <nl> 
new file <nl> ppp BackportEnglish . java <nl> + package org . apache . tomcat . buildutil . translate ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> + import java . util . Properties ; <nl> + public class BackportEnglish { <nl> 
mmm LeaderCommandIntegrationTest . java <nl> ppp LeaderCommandIntegrationTest . java <nl> - public final class LeaderCommandTest extends AbstractAlluxioShellTest { <nl> + public final class LeaderCommandIntegrationTest extends AbstractAlluxioShellTest { <nl> 
mmm Fingerprinter . java <nl> ppp Fingerprinter . java <nl> 
mmm SystemOutPrintlnUnitTest . java <nl> ppp SystemOutPrintlnUnitTest . java <nl> + import org . junit . jupiter . api . AfterEach ; <nl> - @ BeforeEach <nl> + @ AfterEach <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm AttributeSmelter . java <nl> ppp AttributeSmelter . java <nl> - public void placed (){ <nl> - super . placed (); <nl> + public void onProximityUpdate (){ <nl> + super . onProximityUpdate (); <nl> - } <nl> + } <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 6 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm MakingRequestsWithIAMTempCredentials . java <nl> ppp MakingRequestsWithIAMTempCredentials . java <nl> - import com . amazonaws . AmazonServiceException ; <nl> - import com . amazonaws . SdkClientException ; <nl> - import com . amazonaws . auth . AWSStaticCredentialsProvider ; <nl> - import com . amazonaws . auth . BasicSessionCredentials ; <nl> 
new file <nl> ppp _ 38Test . java <nl> + package com . fishercoder ; <nl> + import com . fishercoder . solutions . _ 38 ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + public class _ 38Test { <nl> + private static _ 38 . Solution1 solution1 ; <nl> 
new file <nl> ppp FormTest . java <nl> + package org . javaee7 . servlet . security . form . based ; <nl> + import com . gargoylesoftware . htmlunit . FailingHttpStatusCodeException ; <nl> + import com . gargoylesoftware . htmlunit . WebClient ; <nl> + import com . gargoylesoftware . htmlunit . html . HtmlForm ; <nl> 
mmm FIFOSchedulingPriorityStrategy . java <nl> ppp FIFOSchedulingPriorityStrategy . java <nl> 
mmm JndiRegistryTest . java <nl> ppp JndiRegistryTest . java <nl> + @ SuppressWarnings (" deprecation ") <nl> 
mmm MainService . java <nl> ppp MainService . java <nl> - import static com . google . common . base . Preconditions . checkState ; <nl> - import java . time . Duration ; <nl> + import java . util . Arrays ; <nl> - import com . google . common . base . Splitter ; <nl> - import com . google . common . collect . ImmutableList ; <nl> 
mmm NGramStats . java <nl> ppp NGramStats . java <nl> - System . out . println (" ' phrase ' is a 2 or 3 - word phrase , e . g . \" the tall boy \" ( include the quotes )"); <nl> + System . out . println (" ' phrase ' is a 2 or 3 - word case - sensitive phrase , e . g . \" the tall boy \" ( include the quotes )"); <nl> 
mmm BazelAarImportRule . java <nl> ppp BazelAarImportRule . java <nl> - return builder . build (); <nl> + return builder <nl> + . removeAttribute (" javacopts ") <nl> + . removeAttribute (" plugins ") <nl> + . build (); <nl> 
new file <nl> ppp SingleVertexIT . java <nl> + package com . thinkaurelius . titan . pkgtest ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . lang . ProcessBuilder . Redirect ; <nl> + import java . util . Properties ; <nl> 
mmm TakerProcessesInputsForDepositTxResponse . java <nl> ppp TakerProcessesInputsForDepositTxResponse . java <nl> - log . debug (" current trade state " + trade . getState ()); <nl> - InputsForDepositTxResponse inputsForDepositTxResponse = ( InputsForDepositTxResponse ) processModel . getTradeMessage (); <nl> 
mmm BlockMasterClientServiceHandler . java <nl> ppp BlockMasterClientServiceHandler . java <nl> - Preconditions . checkNotNull ( blockMaster ); <nl> + Preconditions . checkNotNull ( blockMaster , " blockMaster "); <nl> 
new file <nl> ppp Issue3952 . java <nl> + package com . alibaba . druid . bvt . bug ; <nl> + import com . alibaba . druid . sql . SQLUtils ; <nl> + import com . alibaba . druid . sql . ast . SQLStatement ; <nl> + import com . alibaba . druid . sql . ast . statement . SQLJoinTableSource ; <nl> + import com . alibaba . druid . sql . ast . statement . SQLSelectQueryBlock ; <nl> 
mmm WorldResource . java <nl> ppp WorldResource . java <nl> + import com . google . common . primitives . Ints ; <nl> - public World [] dbTest (@ QueryParam (" queries ") Optional < Integer > queries ) { <nl> + public Object dbTest (@ QueryParam (" queries ") Optional < String > queries ) { <nl> + if (! queries . isPresent ()) { <nl> 
mmm AutoRestartBackpressureContainerPolicy . java <nl> ppp AutoRestartBackpressureContainerPolicy . java <nl> + import com . twitter . heron . healthmgr . detectors . ProcessingRateSkewDetector ; <nl> + ProcessingRateSkewDetector processingRateSkewDetector , <nl> - registerDetectors ( backPressureDetector , waitQueueDisparityDetector ); <nl> 
mmm FunctionalInterfaceLogic . java <nl> ppp FunctionalInterfaceLogic . java <nl> + public static boolean isFunctionalInterfaceType ( Type type ) { <nl> + return getFunctionalMethod ( type ) . isPresent (); <nl> + } <nl> 
mmm StatefulProcessorNode . java <nl> ppp StatefulProcessorNode . java <nl> 
mmm BaseApplication . java <nl> ppp BaseApplication . java <nl> + AutoSizeConfig . getInstance () <nl> + . setCustomFragment ( true ) <nl> + ; <nl> 
mmm TrustedSocketFactory . java <nl> ppp TrustedSocketFactory . java <nl> - import java . net . SocketAddress ; <nl> - @ Override <nl> - @ Override <nl> - @ Override <nl> - public boolean isSecure ( Socket arg0 ) throws IllegalArgumentException { <nl> - return false ; <nl> + public boolean isSecure ( Socket sock ) throws IllegalArgumentException { <nl> 
mmm InstanceStateService . java <nl> ppp InstanceStateService . java <nl> - public void persistShardingInstanceOnline () { <nl> - regCenter . persistEphemeral ( stateNode . getInstancesNodeFullPath ( instance . getInstanceId ()), ""); <nl> - } <nl> - public void persistMasterSlaveInstanceOnline () { <nl> - regCenter . persistEphemeral ( stateNode . getInstancesNodeFullPath ( instance . getInstanceId ()), ""); <nl> 
mmm MongoIntegrationTest . java <nl> ppp MongoIntegrationTest . java <nl> + import org . immutables . criteria . backend . Backend ; <nl> - private final BackendResource backend ; <nl> + private final Backend backend ; <nl> - this . backend = new BackendResource ( database ); <nl> + this . backend = new BackendResource ( database ) . backend (); <nl> 
mmm JavaImportBaseRule . java <nl> ppp JavaImportBaseRule . java <nl> 
mmm IntegerFieldDeserializerTest2 . java <nl> ppp IntegerFieldDeserializerTest2 . java <nl> - public void f _ test _ integer _ 2 () throws Exception { <nl> + public void test _ integer _ 2 () throws Exception { <nl> +  <nl> + public void test _ integer _ 3 () throws Exception { <nl> + String text = "{\" value \":{\" valueA \":{\" column1 \":\" aa \"}, \" valueB \":{\" column1 \":\" bb \"}}}"; <nl> 
mmm Application . java <nl> ppp Application . java <nl> - import com . alibaba . nacos . api . config . listener . Listener ; <nl> + import java . io . IOException ; <nl> + import java . io . StringReader ; <nl> + import java . util . Properties ; <nl> + import java . util . concurrent . Executor ; <nl> - import java . util . HashMap ; <nl> 
mmm ActivitiesWebServiceMediumTest . java <nl> ppp ActivitiesWebServiceMediumTest . java <nl> - System . out . println (" result = " + result . outputAsString ()); <nl> 
deleted file <nl> mmm SviasProtocolDecoderTest . java <nl> - package org . traccar . protocol ; <nl> - import org . junit . Test ; <nl> - import org . traccar . ProtocolTest ; <nl> - public class SviasProtocolDecoderTest extends ProtocolTest { <nl> - @ Test <nl> - public void testDecode () throws Exception { <nl> 
mmm OptimisticBulkOperationsTest . java <nl> ppp OptimisticBulkOperationsTest . java <nl> 
mmm InstanceInfoFactory . java <nl> ppp InstanceInfoFactory . java <nl> - import lombok . extern . apachecommons . CommonsLog ; <nl> + import lombok . extern . apachecommons . CommonsLog ; <nl> 
mmm MountSpecMethodAnnotationsProvider . java <nl> ppp MountSpecMethodAnnotationsProvider . java <nl> + import com . facebook . litho . annotations . OnMount ; <nl> + ANNOTATION _ QUALIFIED _ NAMES . add ( OnMount . class . getTypeName ()); <nl> 
mmm Headers . java <nl> ppp Headers . java <nl> - * @ return this instance of the Headers , once the header is added . <nl> + * @ return this instance of the Headers , once the header is removed . <nl> 
new file <nl> ppp Issue1668 . java <nl> + package com . github . javaparser . symbolsolver ; <nl> + import com . github . javaparser . *; <nl> + import com . github . javaparser . ast . CompilationUnit ; <nl> + import com . github . javaparser . ast . body . VariableDeclarator ; <nl> + import com . github . javaparser . ast . expr . VariableDeclarationExpr ; <nl> 
mmm GisExpressionFunctions . java <nl> ppp GisExpressionFunctions . java <nl> - import graphql . execution . nextgen . Common ; <nl> 
mmm DefaultWebSocketManager . java <nl> ppp DefaultWebSocketManager . java <nl> - import java . util . Iterator ; <nl> + import org . apache . wicket . protocol . ws . api . registry . IKey ; <nl> - private final Map < PageKey , Collection < String >> observables = new ConcurrentHashMap <>(); <nl> + private final Map < String , Map < IKey , Collection < String >>> observables = new ConcurrentHashMap <>(); <nl> 
mmm ElasticSchedulerTest . java <nl> ppp ElasticSchedulerTest . java <nl> - while ((( ElasticScheduler ) s ) . cache . isEmpty ()); <nl> + while ((( ElasticScheduler ) s ) . cache . peek () == null ); <nl> - while (!(( ElasticScheduler ) s ) . cache . isEmpty ()){ <nl> + while ((( ElasticScheduler ) s ) . cache . peek () != null ){ <nl> 
mmm ShardingDataSourceBeanDefinitionParserTag . java <nl> ppp ShardingDataSourceBeanDefinitionParserTag . java <nl> - public static final String ENCRYPTOR _ TYPE _ ATTRIBUTE = " type "; <nl> - public static final String ENCRYPTOR _ COLUMNS _ ATTRIBUTE = " columns "; <nl> - public static final String ENCRYPTOR _ ASSISTED _ QUERY _ COLUMNS _ ATTRIBUTE = " assisted - query - columns "; <nl> 
mmm ConfigRecorder . java <nl> ppp ConfigRecorder . java <nl> - throw new DeploymentException ( e ); <nl> + throw new DeploymentException ( <nl> + " Failed to load config value of type " + entry . getValue () + " for : " + entry . getKey (), e ); <nl> 
new file <nl> ppp InjectWorkService . java <nl> + package com . aws . jdbc ; <nl> + import java . sql . Connection ; <nl> + import java . sql . PreparedStatement ; <nl> + import java . text . SimpleDateFormat ; <nl> + import java . time . LocalDateTime ; <nl> + import java . time . format . DateTimeFormatter ; <nl> 
mmm DefaultPaths . java <nl> ppp DefaultPaths . java <nl> - public static final String DEFAULT _ KBP _ SEMGREX _ DIR = " edu / stanford / nlp / models / kbp / semgrex "; <nl> - public static final String DEFAULT _ KBP _ TOKENSREGEX _ DIR = " edu / stanford / nlp / models / kbp / tokensregex "; <nl> + public static final String DEFAULT _ KBP _ SEMGREX _ DIR = " edu / stanford / nlp / models / kbp / english / semgrex "; <nl> 
deleted file <nl> mmm ProxyConfigurationRepresenter . java <nl> - package io . shardingsphere . orchestration . internal . yaml . representer ; <nl> - import lombok . SneakyThrows ; <nl> - import org . yaml . snakeyaml . introspector . Property ; <nl> - import org . yaml . snakeyaml . nodes . Node ; <nl> - import org . yaml . snakeyaml . nodes . Tag ; <nl> 
mmm ProxyListener . java <nl> ppp ProxyListener . java <nl> - * The {@ code HttpMessage } {@ code msg } can be modified , if the response is set <nl> - * it will be used instead of forwarding the request to the server . If the <nl> - * return value is {@ code true } the message < i > may be </ i > forwarded and the <nl> 
mmm URLFileInput . java <nl> ppp URLFileInput . java <nl> + import java . io . FileNotFoundException ; <nl> - return url . openStream (); <nl> + try { <nl> + return url . openStream (); <nl> + } catch ( FileNotFoundException e ) { <nl> + return null ; <nl> + } <nl> 
deleted file <nl> mmm DubboConfigAliasPostProcessor . java <nl> - package org . apache . dubbo . config . spring . beans . factory . annotation ; <nl> - import org . apache . dubbo . config . AbstractConfig ; <nl> - import org . apache . dubbo . config . spring . context . annotation . DubboConfigConfigurationRegistrar ; <nl> 
mmm FileUtils . java <nl> ppp FileUtils . java <nl> + if (! Files . isDirectory ( dirPath . getParent ())) { <nl> + getOrCreateDirectory ( dirPath . getParent (), " parent of " + dirLabel ); <nl> + } <nl> 
mmm TracingLogger . java <nl> ppp TracingLogger . java <nl> - @ LogMessage ( level = WARN ) <nl> + @ LogMessage ( level = DEBUG ) <nl> 
mmm GsonHelper . java <nl> ppp GsonHelper . java <nl> - . registerTypeAdapter ( Integer . class , new IntegerDeserializer ()) <nl> + . registerTypeAdapter ( Long . class , new LongDeserializer ()) <nl> - private static class IntegerDeserializer implements JsonDeserializer < Integer > { <nl> + private static class LongDeserializer implements JsonDeserializer < Long > { <nl> 
mmm UserDetailsActivityTest . java <nl> ppp UserDetailsActivityTest . java <nl> - import static com . google . android . apps . common . testing . ui . espresso . Espresso . onView ; <nl> - import static com . google . android . apps . common . testing . ui . espresso . assertion . ViewAssertions . matches ; <nl> 
mmm Type . java <nl> ppp Type . java <nl> + public int getArrayLevel () { <nl> + if ( this instanceof ArrayType ) { <nl> + return 1 + (( ArrayType ) this ) . getComponentType () . getArrayLevel (); <nl> + } else { <nl> + return 0 ; <nl> + } <nl> + } <nl> 
mmm ExampleTagBase . java <nl> ppp ExampleTagBase . java <nl> - import javax . servlet . jsp . PageContext ; <nl> - @ Override <nl> - public void setPageContext ( PageContext pageContext ) { <nl> - this . pageContext = pageContext ; <nl> - } <nl> - protected PageContext pageContext ; <nl> 
mmm DiscoveryPresenter . java <nl> ppp DiscoveryPresenter . java <nl> - private final PublishSubject < Void > paginationSubject = PublishSubject . create (); <nl> + private final PublishSubject < Void > nextPage = PublishSubject . create (); <nl> - paginationSubject . onNext ( null ); <nl> + nextPage . onNext ( null ); <nl> 
mmm HealthChecks . java <nl> ppp HealthChecks . java <nl> - import com . yammer . metrics . core . DeadlockHealthCheck ; <nl> - static { <nl> - registerHealthCheck ( new DeadlockHealthCheck ()); <nl> - } <nl> 
mmm WebClientConfig . java <nl> ppp WebClientConfig . java <nl> + import org . springframework . context . annotation . Configuration ; <nl> + @ Configuration <nl> 
mmm FunctionPathToken . java <nl> ppp FunctionPathToken . java <nl> - param . setLateBinding ( new PathLateBindingValue ( param . getType (), param . getPath (), ctx . rootDocument (), ctx . configuration ())); <nl> + param . setLateBinding ( new PathLateBindingValue ( param . getPath (), ctx . rootDocument (), ctx . configuration ())); <nl> 
mmm CalAmpProtocolDecoderTest . java <nl> ppp CalAmpProtocolDecoderTest . java <nl> + verify ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertHexString ( <nl> + " 830543321494860101010a0c215608b6680ead5ada1bed88d300000049801f000500000300003cf33200000000000000008b0ce101 ")))); <nl> 
mmm RxBusFrag2 . java <nl> ppp RxBusFrag2 . java <nl> + import java . util . concurrent . TimeUnit ; <nl> + import rx . schedulers . Schedulers ; <nl> - private Subscription _ subscription ; <nl> + private Subscription _ subscription1 _ tapListen ; <nl> - AndroidObservable . bindFragment ( this , _ rxBus . toObserverable ()) . subscribe ( new Action1 < Object >() { <nl> 
mmm AuthorMapper . java <nl> ppp AuthorMapper . java <nl> - import org . apache . ibatis . annotations . Param ; <nl> 
deleted file <nl> mmm PermissionsDispatcherIssueRegistryTest . java <nl> - package permissions . dispatcher ; <nl> - import org . junit . Test ; <nl> - import static com . google . common . truth . Truth . assertThat ; <nl> - public final class PermissionsDispatcherIssueRegistryTest { <nl> - @ Test <nl> - public void issues () { <nl> 
new file <nl> ppp OnOutOfMemoryErrorTest . java <nl> + class OnOutOfMemoryErrorTest { <nl> + public static void main ( String [] args ) { <nl> + Object test = new double [ Integer . MAX _ VALUE ]; <nl> + } <nl> + } <nl> 
mmm JsonHttpResponseHandler . java <nl> ppp JsonHttpResponseHandler . java <nl> + } else { <nl> + throw new JSONException (" Unexpected type " + jsonResponse . getClass () . getName ()); <nl> 
mmm PostTest . java <nl> ppp PostTest . java <nl> + public String m _ localhost = " localhost : 2765 "; <nl> + public String m _ online = " 114 . 80 . 165 . 63 "; <nl> + String host = m _ online ; <nl> - Thread . sleep ( 20 * 1000 ); <nl> + Thread . sleep ( 20 * 1000 ); <nl> 
mmm ClassAccess . java <nl> ppp ClassAccess . java <nl> - public static final ObjectSet < String > allowedClassNames = ObjectSet . with (" arc . Core ", " arc . struct . Array ", " arc . struct . Array $ ArrayIterable ", " arc . struct . ArrayMap ", " arc . struct . ArrayMap $ Entries ", " arc . struct . ArrayMap $ Keys ", " arc . struct . ArrayMap $ Values ", " arc . struct . AtomicQueue ", " arc . struct . BinaryHeap ", " arc . struct . BinaryHeap $ Node ", " arc . struct . Bits ", " arc . struct . BooleanArray ", " arc . struct . ByteArray ", " arc . struct . CharArray ", " arc . struct . ComparableTimSort ", " arc . struct . DelayedRemovalArray ", " arc . struct . EnumSet ", " arc . struct . EnumSet $ EnumSetIterator ", " arc . struct . FloatArray ", " arc . struct . GridBits ", " arc . struct . GridMap ", " arc . struct . IdentityMap ", " arc . struct . IdentityMap $ Entries ", " arc . struct . IdentityMap $ Entry ", " arc . struct . IdentityMap $ Keys ", " arc . struct . IdentityMap $ Values ", " arc . struct . IntArray ", " arc . struct . IntFloatMap ", " arc . struct . IntFloatMap $ Entries ", " arc . struct . IntFloatMap $ Entry ", " arc . struct . IntFloatMap $ Keys ", " arc . struct . IntFloatMap $ Values ", " arc . struct . IntIntMap ", " arc . struct . IntIntMap $ Entries ", " arc . struct . IntIntMap $ Entry ", " arc . struct . IntIntMap $ Keys ", " arc . struct . IntIntMap $ Values ", " arc . struct . IntMap ", " arc . struct . IntMap $ Entries ", " arc . struct . IntMap $ Entry ", " arc . struct . IntMap $ Keys ", " arc . struct . IntMap $ Values ", " arc . struct . IntQueue ", " arc . struct . IntSet ", " arc . struct . IntSet $ IntSetIterator ", " arc . struct . LongArray ", " arc . struct . LongMap ", " arc . struct . LongMap $ Entries ", " arc . struct . LongMap $ Entry ", " arc . struct . LongMap $ Keys ", " arc . struct . LongMap $ Values ", " arc . struct . LongQueue ", " arc . struct . ObjectFloatMap ", " arc . struct . ObjectFloatMap $ Entries ", " arc . struct . ObjectFloatMap $ Entry ", " arc . struct . ObjectFloatMap $ Keys ", " arc . struct . ObjectFloatMap $ Values ", " arc . struct . ObjectIntMap ", " arc . struct . ObjectIntMap $ Entries ", " arc . struct . ObjectIntMap $ Entry ", " arc . struct . ObjectIntMap $ Keys ", " arc . struct . ObjectIntMap $ Values ", " arc . struct . ObjectMap ", " arc . struct . ObjectMap $ Entries ", " arc . struct . ObjectMap $ Entry ", " arc . struct . ObjectMap $ Keys ", " arc . struct . ObjectMap $ Values ", " arc . struct . ObjectSet ", " arc . struct . ObjectSet $ ObjectSetIterator ", " arc . struct . OrderedMap ", " arc . struct . OrderedMap $ OrderedMapEntries ", " arc . struct . OrderedMap $ OrderedMapKeys ", " arc . struct . OrderedMap $ OrderedMapValues ", " arc . struct . OrderedSet ", " arc . struct . OrderedSet $ OrderedSetIterator ", " arc . struct . PooledLinkedList ", " arc . struct . PooledLinkedList $ Item ", " arc . struct . Queue ", " arc . struct . Queue $ QueueIterable ", " arc . struct . ShortArray ", " arc . struct . SnapshotArray ", " arc . struct . Sort ", " arc . struct . SortedIntList ", " arc . struct . SortedIntList $ Iterator ", " arc . struct . SortedIntList $ Node ", " arc . struct . StringMap ", " arc . struct . TimSort ", " arc . func . Boolc ", " arc . func . Boolf ", " arc . func . Boolf2 ", " arc . func . Boolp ", " arc . func . Cons ", " arc . func . Cons2 ", " arc . func . Floatc ", " arc . func . Floatc2 ", " arc . func . Floatc4 ", " arc . func . Floatf ", " arc . func . Floatp ", " arc . func . Func ", " arc . func . Func2 ", " arc . func . Func3 ", " arc . func . Intc ", " arc . func . Intc2 ", " arc . func . Intc4 ", " arc . func . Intf ", " arc . func . Intp ", " arc . func . Prov ", " arc . graphics . Color ", " arc . graphics . Pixmap ", " arc . graphics . Texture ", " arc . graphics . TextureData ", " arc . graphics . g2d . Draw ", " arc . graphics . g2d . Fill ", " arc . graphics . g2d . Lines ", " arc . graphics . g2d . TextureAtlas ", " arc . graphics . g2d . TextureAtlas $ AtlasRegion ", " arc . graphics . g2d . TextureRegion ", " arc . math . Angles ", " arc . math . Mathf ", " arc . scene . Action ", " arc . scene . Element ", " arc . scene . Group ", " arc . scene . Scene ", " arc . scene . actions . Actions ", " arc . scene . actions . AddAction ", " arc . scene . actions . AddListenerAction ", " arc . scene . actions . AfterAction ", " arc . scene . actions . AlphaAction ", " arc . scene . actions . ColorAction ", " arc . scene . actions . DelayAction ", " arc . scene . actions . DelegateAction ", " arc . scene . actions . FloatAction ", " arc . scene . actions . IntAction ", " arc . scene . actions . LayoutAction ", " arc . scene . actions . MoveByAction ", " arc . scene . actions . MoveToAction ", " arc . scene . actions . OriginAction ", " arc . scene . actions . ParallelAction ", " arc . scene . actions . RelativeTemporalAction ", " arc . scene . actions . RemoveAction ", " arc . scene . actions . RemoveActorAction ", " arc . scene . actions . RemoveListenerAction ", " arc . scene . actions . RepeatAction ", " arc . scene . actions . RotateByAction ", " arc . scene . actions . RotateToAction ", " arc . scene . actions . RunnableAction ", " arc . scene . actions . ScaleByAction ", " arc . scene . actions . ScaleToAction ", " arc . scene . actions . SequenceAction ", " arc . scene . actions . SizeByAction ", " arc . scene . actions . SizeToAction ", " arc . scene . actions . TemporalAction ", " arc . scene . actions . TimeScaleAction ", " arc . scene . actions . TouchableAction ", " arc . scene . actions . TranslateByAction ", " arc . scene . actions . VisibleAction ", " arc . scene . event . ChangeListener ", " arc . scene . event . ChangeListener $ ChangeEvent ", " arc . scene . event . ClickListener ", " arc . scene . event . DragListener ", " arc . scene . event . DragScrollListener ", " arc . scene . event . ElementGestureListener ", " arc . scene . event . EventListener ", " arc . scene . event . FocusListener ", " arc . scene . event . FocusListener $ FocusEvent ", " arc . scene . event . FocusListener $ FocusEvent $ Type ", " arc . scene . event . HandCursorListener ", " arc . scene . event . IbeamCursorListener ", " arc . scene . event . InputEvent ", " arc . scene . event . InputEvent $ Type ", " arc . scene . event . InputListener ", " arc . scene . event . SceneEvent ", " arc . scene . event . Touchable ", " arc . scene . event . VisibilityEvent ", " arc . scene . event . VisibilityListener ", " arc . scene . style . BaseDrawable ", " arc . scene . style . Drawable ", " arc . scene . style . NinePatchDrawable ", " arc . scene . style . ScaledNinePatchDrawable ", " arc . scene . style . Style ", " arc . scene . style . TextureRegionDrawable ", " arc . scene . style . TiledDrawable ", " arc . scene . style . TransformDrawable ", " arc . scene . ui . Button ", " arc . scene . ui . Button $ ButtonStyle ", " arc . scene . ui . ButtonGroup ", " arc . scene . ui . CheckBox ", " arc . scene . ui . CheckBox $ CheckBoxStyle ", " arc . scene . ui . ColorImage ", " arc . scene . ui . Dialog ", " arc . scene . ui . Dialog $ DialogStyle ", " arc . scene . ui . Image ", " arc . scene . ui . ImageButton ", " arc . scene . ui . ImageButton $ ImageButtonStyle ", " arc . scene . ui . KeybindDialog ", " arc . scene . ui . KeybindDialog $ KeybindDialogStyle ", " arc . scene . ui . Label ", " arc . scene . ui . Label $ LabelStyle ", " arc . scene . ui . ProgressBar ", " arc . scene . ui . ProgressBar $ ProgressBarStyle ", " arc . scene . ui . ScrollPane ", " arc . scene . ui . ScrollPane $ ScrollPaneStyle ", " arc . scene . ui . SettingsDialog ", " arc . scene . ui . SettingsDialog $ SettingsTable ", " arc . scene . ui . SettingsDialog $ SettingsTable $ CheckSetting ", " arc . scene . ui . SettingsDialog $ SettingsTable $ Setting ", " arc . scene . ui . SettingsDialog $ SettingsTable $ SliderSetting ", " arc . scene . ui . SettingsDialog $ StringProcessor ", " arc . scene . ui . Slider ", " arc . scene . ui . Slider $ SliderStyle ", " arc . scene . ui . TextArea ", " arc . scene . ui . TextArea $ TextAreaListener ", " arc . scene . ui . TextButton ", " arc . scene . ui . TextButton $ TextButtonStyle ", " arc . scene . ui . TextField ", " arc . scene . ui . TextField $ DefaultOnscreenKeyboard ", " arc . scene . ui . TextField $ OnscreenKeyboard ", " arc . scene . ui . TextField $ TextFieldClickListener ", " arc . scene . ui . TextField $ TextFieldFilter ", " arc . scene . ui . TextField $ TextFieldListener ", " arc . scene . ui . TextField $ TextFieldStyle ", " arc . scene . ui . TextField $ TextFieldValidator ", " arc . scene . ui . Tooltip ", " arc . scene . ui . Tooltip $ Tooltips ", " arc . scene . ui . Touchpad ", " arc . scene . ui . Touchpad $ TouchpadStyle ", " arc . scene . ui . TreeElement ", " arc . scene . ui . TreeElement $ Node ", " arc . scene . ui . TreeElement $ TreeStyle ", " arc . scene . ui . layout . Cell ", " arc . scene . ui . layout . Collapser ", " arc . scene . ui . layout . HorizontalGroup ", " arc . scene . ui . layout . Scl ", " arc . scene . ui . layout . Stack ", " arc . scene . ui . layout . Table ", " arc . scene . ui . layout . Table $ DrawRect ", " arc . scene . ui . layout . VerticalGroup ", " arc . scene . ui . layout . WidgetGroup ", " arc . scene . utils . ArraySelection ", " arc . scene . utils . Cullable ", " arc . scene . utils . Disableable ", " arc . scene . utils . DragAndDrop ", " arc . scene . utils . DragAndDrop $ Payload ", " arc . scene . utils . DragAndDrop $ Source ", " arc . scene . utils . DragAndDrop $ Target ", " arc . scene . utils . Elements ", " arc . scene . utils . Layout ", " arc . scene . utils . Selection ", " arc . util . I18NBundle ", " arc . util . Time ", " mindustry . Vars ", " mindustry . ai . BlockIndexer ", " mindustry . ai . Pathfinder ", " mindustry . ai . Pathfinder $ PathData ", " mindustry . ai . Pathfinder $ PathTarget ", " mindustry . ai . Pathfinder $ PathTileStruct ", " mindustry . ai . WaveSpawner ", " mindustry . content . Blocks ", " mindustry . content . Bullets ", " mindustry . content . Fx ", " mindustry . content . Items ", " mindustry . content . Liquids ", " mindustry . content . Loadouts ", " mindustry . content . Mechs ", " mindustry . content . StatusEffects ", " mindustry . content . TechTree ", " mindustry . content . TechTree $ TechNode ", " mindustry . content . TypeIDs ", " mindustry . content . UnitTypes ", " mindustry . content . Zones ", " mindustry . core . ContentLoader ", " mindustry . core . Control ", " mindustry . core . FileTree ", " mindustry . core . GameState ", " mindustry . core . GameState $ State ", " mindustry . core . Logic ", " mindustry . core . Platform ", " mindustry . core . Renderer ", " mindustry . core . UI ", " mindustry . core . Version ", " mindustry . core . World ", " mindustry . core . World $ Raycaster ", " mindustry . ctype . Content ", " mindustry . ctype . Content $ ModContentInfo ", " mindustry . ctype . ContentList ", " mindustry . ctype . ContentType ", " mindustry . ctype . MappableContent ", " mindustry . ctype . UnlockableContent ", " mindustry . editor . DrawOperation ", " mindustry . editor . DrawOperation $ OpType ", " mindustry . editor . DrawOperation $ TileOpStruct ", " mindustry . editor . EditorTile ", " mindustry . editor . EditorTool ", " mindustry . editor . MapEditor ", " mindustry . editor . MapEditor $ Context ", " mindustry . editor . MapEditorDialog ", " mindustry . editor . MapGenerateDialog ", " mindustry . editor . MapInfoDialog ", " mindustry . editor . MapLoadDialog ", " mindustry . editor . MapRenderer ", " mindustry . editor . MapResizeDialog ", " mindustry . editor . MapSaveDialog ", " mindustry . editor . MapView ", " mindustry . editor . OperationStack ", " mindustry . editor . WaveInfoDialog ", " mindustry . entities . Damage ", " mindustry . entities . Damage $ PropCellStruct ", " mindustry . entities . Effects ", " mindustry . entities . Effects $ Effect ", " mindustry . entities . Effects $ EffectContainer ", " mindustry . entities . Effects $ EffectProvider ", " mindustry . entities . Effects $ EffectRenderer ", " mindustry . entities . Effects $ ScreenshakeProvider ", " mindustry . entities . Entities ", " mindustry . entities . EntityCollisions ", " mindustry . entities . EntityGroup ", " mindustry . entities . Predict ", " mindustry . entities . TargetPriority ", " mindustry . entities . Units ", " mindustry . entities . bullet . ArtilleryBulletType ", " mindustry . entities . bullet . BasicBulletType ", " mindustry . entities . bullet . BombBulletType ", " mindustry . entities . bullet . BulletType ", " mindustry . entities . bullet . FlakBulletType ", " mindustry . entities . bullet . HealBulletType ", " mindustry . entities . bullet . LiquidBulletType ", " mindustry . entities . bullet . MassDriverBolt ", " mindustry . entities . bullet . MissileBulletType ", " mindustry . entities . effect . Decal ", " mindustry . entities . effect . Fire ", " mindustry . entities . effect . GroundEffectEntity ", " mindustry . entities . effect . GroundEffectEntity $ GroundEffect ", " mindustry . entities . effect . ItemTransfer ", " mindustry . entities . effect . Lightning ", " mindustry . entities . effect . Puddle ", " mindustry . entities . effect . RubbleDecal ", " mindustry . entities . effect . ScorchDecal ", " mindustry . entities . traits . AbsorbTrait ", " mindustry . entities . traits . BelowLiquidTrait ", " mindustry . entities . traits . BuilderMinerTrait ", " mindustry . entities . traits . BuilderTrait ", " mindustry . entities . traits . BuilderTrait $ BuildDataStatic ", " mindustry . entities . traits . BuilderTrait $ BuildRequest ", " mindustry . entities . traits . DamageTrait ", " mindustry . entities . traits . DrawTrait ", " mindustry . entities . traits . Entity ", " mindustry . entities . traits . HealthTrait ", " mindustry . entities . traits . KillerTrait ", " mindustry . entities . traits . MinerTrait ", " mindustry . entities . traits . MoveTrait ", " mindustry . entities . traits . SaveTrait ", " mindustry . entities . traits . Saveable ", " mindustry . entities . traits . ScaleTrait ", " mindustry . entities . traits . ShooterTrait ", " mindustry . entities . traits . SolidTrait ", " mindustry . entities . traits . SpawnerTrait ", " mindustry . entities . traits . SyncTrait ", " mindustry . entities . traits . TargetTrait ", " mindustry . entities . traits . TeamTrait ", " mindustry . entities . traits . TimeTrait ", " mindustry . entities . traits . TypeTrait ", " mindustry . entities . traits . VelocityTrait ", " mindustry . entities . type . BaseEntity ", " mindustry . entities . type . BaseUnit ", " mindustry . entities . type . Bullet ", " mindustry . entities . type . DestructibleEntity ", " mindustry . entities . type . EffectEntity ", " mindustry . entities . type . Player ", " mindustry . entities . type . SolidEntity ", " mindustry . entities . type . TileEntity ", " mindustry . entities . type . TimedEntity ", " mindustry . entities . type . Unit ", " mindustry . entities . type . base . BaseDrone ", " mindustry . entities . type . base . BuilderDrone ", " mindustry . entities . type . base . FlyingUnit ", " mindustry . entities . type . base . GroundUnit ", " mindustry . entities . type . base . HoverUnit ", " mindustry . entities . type . base . MinerDrone ", " mindustry . entities . type . base . RepairDrone ", " mindustry . entities . units . StateMachine ", " mindustry . entities . units . Statuses ", " mindustry . entities . units . Statuses $ StatusEntry ", " mindustry . entities . units . UnitCommand ", " mindustry . entities . units . UnitDrops ", " mindustry . entities . units . UnitState ", " mindustry . game . DefaultWaves ", " mindustry . game . Difficulty ", " mindustry . game . EventType ", " mindustry . game . EventType $ BlockBuildBeginEvent ", " mindustry . game . EventType $ BlockBuildEndEvent ", " mindustry . game . EventType $ BlockDestroyEvent ", " mindustry . game . EventType $ BlockInfoEvent ", " mindustry . game . EventType $ BuildSelectEvent ", " mindustry . game . EventType $ ClientLoadEvent ", " mindustry . game . EventType $ CommandIssueEvent ", " mindustry . game . EventType $ ContentReloadEvent ", " mindustry . game . EventType $ CoreItemDeliverEvent ", " mindustry . game . EventType $ DepositEvent ", " mindustry . game . EventType $ DisposeEvent ", " mindustry . game . EventType $ GameOverEvent ", " mindustry . game . EventType $ LaunchEvent ", " mindustry . game . EventType $ LaunchItemEvent ", " mindustry . game . EventType $ LineConfirmEvent ", " mindustry . game . EventType $ LoseEvent ", " mindustry . game . EventType $ MapMakeEvent ", " mindustry . game . EventType $ MapPublishEvent ", " mindustry . game . EventType $ MechChangeEvent ", " mindustry . game . EventType $ PlayEvent ", " mindustry . game . EventType $ PlayerBanEvent ", " mindustry . game . EventType $ PlayerChatEvent ", " mindustry . game . EventType $ PlayerConnect ", " mindustry . game . EventType $ PlayerIpBanEvent ", " mindustry . game . EventType $ PlayerIpUnbanEvent ", " mindustry . game . EventType $ PlayerJoin ", " mindustry . game . EventType $ PlayerLeave ", " mindustry . game . EventType $ PlayerUnbanEvent ", " mindustry . game . EventType $ ResearchEvent ", " mindustry . game . EventType $ ResetEvent ", " mindustry . game . EventType $ ResizeEvent ", " mindustry . game . EventType $ ServerLoadEvent ", " mindustry . game . EventType $ StateChangeEvent ", " mindustry . game . EventType $ TapConfigEvent ", " mindustry . game . EventType $ TapEvent ", " mindustry . game . EventType $ TileChangeEvent ", " mindustry . game . EventType $ Trigger ", " mindustry . game . EventType $ TurretAmmoDeliverEvent ", " mindustry . game . EventType $ UnitCreateEvent ", " mindustry . game . EventType $ UnitDestroyEvent ", " mindustry . game . EventType $ UnlockEvent ", " mindustry . game . EventType $ WaveEvent ", " mindustry . game . EventType $ WinEvent ", " mindustry . game . EventType $ WithdrawEvent ", " mindustry . game . EventType $ WorldLoadEvent ", " mindustry . game . EventType $ ZoneConfigureCompleteEvent ", " mindustry . game . EventType $ ZoneRequireCompleteEvent ", " mindustry . game . Gamemode ", " mindustry . game . GlobalData ", " mindustry . game . LoopControl ", " mindustry . game . MusicControl ", " mindustry . game . Objective ", " mindustry . game . Objectives ", " mindustry . game . Objectives $ Launched ", " mindustry . game . Objectives $ Unlock ", " mindustry . game . Objectives $ Wave ", " mindustry . game . Objectives $ ZoneObjective ", " mindustry . game . Objectives $ ZoneWave ", " mindustry . game . Rules ", " mindustry . game . Saves ", " mindustry . game . Saves $ SaveSlot ", " mindustry . game . Schematic ", " mindustry . game . Schematic $ Stile ", " mindustry . game . Schematics ", " mindustry . game . SoundLoop ", " mindustry . game . SpawnGroup ", " mindustry . game . Stats ", " mindustry . game . Stats $ Rank ", " mindustry . game . Stats $ RankResult ", " mindustry . game . Team ", " mindustry . game . Teams ", " mindustry . game . Teams $ BrokenBlock ", " mindustry . game . Teams $ TeamData ", " mindustry . game . Tutorial ", " mindustry . game . Tutorial $ TutorialStage ", " mindustry . gen . BufferItem ", " mindustry . gen . Call ", " mindustry . gen . Call ", " mindustry . gen . Icon ", " mindustry . gen . Icon ", " mindustry . gen . MethodHash ", " mindustry . gen . Musics ", " mindustry . gen . Musics ", " mindustry . gen . PathTile ", " mindustry . gen . PropCell ", " mindustry . gen . RemoteReadClient ", " mindustry . gen . RemoteReadServer ", " mindustry . gen . Serialization ", " mindustry . gen . Sounds ", " mindustry . gen . Sounds ", " mindustry . gen . Tex ", " mindustry . gen . Tex ", " mindustry . gen . TileOp ", " mindustry . graphics . BlockRenderer ", " mindustry . graphics . Bloom ", " mindustry . graphics . CacheLayer ", " mindustry . graphics . Drawf ", " mindustry . graphics . FloorRenderer ", " mindustry . graphics . IndexedRenderer ", " mindustry . graphics . Layer ", " mindustry . graphics . LightRenderer ", " mindustry . graphics . MenuRenderer ", " mindustry . graphics . MinimapRenderer ", " mindustry . graphics . MultiPacker ", " mindustry . graphics . MultiPacker $ PageType ", " mindustry . graphics . OverlayRenderer ", " mindustry . graphics . Pal ", " mindustry . graphics . Pixelator ", " mindustry . graphics . Shaders ", " mindustry . input . Binding ", " mindustry . input . DesktopInput ", " mindustry . input . InputHandler ", " mindustry . input . InputHandler $ PlaceLine ", " mindustry . input . MobileInput ", " mindustry . input . PlaceMode ", " mindustry . input . Placement ", " mindustry . input . Placement $ DistanceHeuristic ", " mindustry . input . Placement $ NormalizeDrawResult ", " mindustry . input . Placement $ NormalizeResult ", " mindustry . input . Placement $ TileHueristic ", " mindustry . maps . Map ", " mindustry . maps . Maps ", " mindustry . maps . Maps $ MapProvider ", " mindustry . maps . Maps $ ShuffleMode ", " mindustry . maps . Maps $ ShuffleMode ", " mindustry . maps . filters . BlendFilter ", " mindustry . maps . filters . ClearFilter ", " mindustry . maps . filters . DistortFilter ", " mindustry . maps . filters . FilterOption ", " mindustry . maps . filters . FilterOption $ BlockOption ", " mindustry . maps . filters . FilterOption $ SliderOption ", " mindustry . maps . filters . GenerateFilter ", " mindustry . maps . filters . GenerateFilter $ GenerateInput ", " mindustry . maps . filters . GenerateFilter $ GenerateInput $ TileProvider ", " mindustry . maps . filters . MedianFilter ", " mindustry . maps . filters . MirrorFilter ", " mindustry . maps . filters . NoiseFilter ", " mindustry . maps . filters . OreFilter ", " mindustry . maps . filters . OreMedianFilter ", " mindustry . maps . filters . RiverNoiseFilter ", " mindustry . maps . filters . ScatterFilter ", " mindustry . maps . filters . TerrainFilter ", " mindustry . maps . generators . BasicGenerator ", " mindustry . maps . generators . BasicGenerator $ DistanceHeuristic ", " mindustry . maps . generators . BasicGenerator $ TileHueristic ", " mindustry . maps . generators . Generator ", " mindustry . maps . generators . MapGenerator ", " mindustry . maps . generators . MapGenerator $ Decoration ", " mindustry . maps . generators . RandomGenerator ", " mindustry . maps . zonegen . DesertWastesGenerator ", " mindustry . maps . zonegen . OvergrowthGenerator ", " mindustry . type . Category ", " mindustry . type . ErrorContent ", " mindustry . type . Item ", " mindustry . type . ItemStack ", " mindustry . type . ItemType ", " mindustry . type . Liquid ", " mindustry . type . LiquidStack ", " mindustry . type . Mech ", " mindustry . type . Publishable ", " mindustry . type . StatusEffect ", " mindustry . type . StatusEffect $ TransitionHandler ", " mindustry . type . TypeID ", " mindustry . type . UnitType ", " mindustry . type . Weapon ", " mindustry . type . WeatherEvent ", " mindustry . type . Zone ", " mindustry . ui . Bar ", " mindustry . ui . BorderImage ", " mindustry . ui . Cicon ", " mindustry . ui . ContentDisplay ", " mindustry . ui . Fonts ", " mindustry . ui . GridImage ", " mindustry . ui . IconSize ", " mindustry . ui . IntFormat ", " mindustry . ui . ItemDisplay ", " mindustry . ui . ItemImage ", " mindustry . ui . ItemsDisplay ", " mindustry . ui . Links ", " mindustry . ui . Links $ LinkEntry ", " mindustry . ui . LiquidDisplay ", " mindustry . ui . Minimap ", " mindustry . ui . MobileButton ", " mindustry . ui . MultiReqImage ", " mindustry . ui . ReqImage ", " mindustry . ui . Styles ", " mindustry . ui . dialogs . AboutDialog ", " mindustry . ui . dialogs . AdminsDialog ", " mindustry . ui . dialogs . BansDialog ", " mindustry . ui . dialogs . ColorPicker ", " mindustry . ui . dialogs . ContentInfoDialog ", " mindustry . ui . dialogs . ControlsDialog ", " mindustry . ui . dialogs . CustomGameDialog ", " mindustry . ui . dialogs . CustomRulesDialog ", " mindustry . ui . dialogs . DatabaseDialog ", " mindustry . ui . dialogs . DeployDialog ", " mindustry . ui . dialogs . DeployDialog $ View ", " mindustry . ui . dialogs . DeployDialog $ ZoneNode ", " mindustry . ui . dialogs . DiscordDialog ", " mindustry . ui . dialogs . FileChooser ", " mindustry . ui . dialogs . FileChooser $ FileHistory ", " mindustry . ui . dialogs . FloatingDialog ", " mindustry . ui . dialogs . GameOverDialog ", " mindustry . ui . dialogs . HostDialog ", " mindustry . ui . dialogs . JoinDialog ", " mindustry . ui . dialogs . JoinDialog $ Server ", " mindustry . ui . dialogs . LanguageDialog ", " mindustry . ui . dialogs . LoadDialog ", " mindustry . ui . dialogs . LoadoutDialog ", " mindustry . ui . dialogs . MapPlayDialog ", " mindustry . ui . dialogs . MapsDialog ", " mindustry . ui . dialogs . MinimapDialog ", " mindustry . ui . dialogs . ModsDialog ", " mindustry . ui . dialogs . PaletteDialog ", " mindustry . ui . dialogs . PausedDialog ", " mindustry . ui . dialogs . SaveDialog ", " mindustry . ui . dialogs . SchematicsDialog ", " mindustry . ui . dialogs . SchematicsDialog $ SchematicImage ", " mindustry . ui . dialogs . SchematicsDialog $ SchematicInfoDialog ", " mindustry . ui . dialogs . SettingsMenuDialog ", " mindustry . ui . dialogs . TechTreeDialog ", " mindustry . ui . dialogs . TechTreeDialog $ LayoutNode ", " mindustry . ui . dialogs . TechTreeDialog $ TechTreeNode ", " mindustry . ui . dialogs . TechTreeDialog $ View ", " mindustry . ui . dialogs . TraceDialog ", " mindustry . ui . dialogs . ZoneInfoDialog ", " mindustry . ui . fragments . BlockConfigFragment ", " mindustry . ui . fragments . BlockInventoryFragment ", " mindustry . ui . fragments . ChatFragment ", " mindustry . ui . fragments . FadeInFragment ", " mindustry . ui . fragments . Fragment ", " mindustry . ui . fragments . HudFragment ", " mindustry . ui . fragments . LoadingFragment ", " mindustry . ui . fragments . MenuFragment ", " mindustry . ui . fragments . OverlayFragment ", " mindustry . ui . fragments . PlacementFragment ", " mindustry . ui . fragments . PlayerListFragment ", " mindustry . ui . fragments . ScriptConsoleFragment ", " mindustry . ui . layout . BranchTreeLayout ", " mindustry . ui . layout . BranchTreeLayout $ TreeAlignment ", " mindustry . ui . layout . BranchTreeLayout $ TreeLocation ", " mindustry . ui . layout . RadialTreeLayout ", " mindustry . ui . layout . TreeLayout ", " mindustry . ui . layout . TreeLayout $ TreeNode ", " mindustry . world . Block ", " mindustry . world . BlockStorage ", " mindustry . world . Build ", " mindustry . world . CachedTile ", " mindustry . world . DirectionalItemBuffer ", " mindustry . world . DirectionalItemBuffer $ BufferItemStruct ", " mindustry . world . Edges ", " mindustry . world . ItemBuffer ", " mindustry . world . LegacyColorMapper ", " mindustry . world . LegacyColorMapper $ LegacyBlock ", " mindustry . world . Pos ", " mindustry . world . StaticTree ", " mindustry . world . Tile ", " mindustry . world . WorldContext ", " mindustry . world . blocks . Attributes ", " mindustry . world . blocks . Autotiler ", " mindustry . world . blocks . Autotiler $ AutotilerHolder ", " mindustry . world . blocks . BlockPart ", " mindustry . world . blocks . BuildBlock ", " mindustry . world . blocks . BuildBlock $ BuildEntity ", " mindustry . world . blocks . DoubleOverlayFloor ", " mindustry . world . blocks . Floor ", " mindustry . world . blocks . ItemSelection ", " mindustry . world . blocks . LiquidBlock ", " mindustry . world . blocks . OreBlock ", " mindustry . world . blocks . OverlayFloor ", " mindustry . world . blocks . PowerBlock ", " mindustry . world . blocks . RespawnBlock ", " mindustry . world . blocks . Rock ", " mindustry . world . blocks . StaticWall ", " mindustry . world . blocks . TreeBlock ", " mindustry . world . blocks . defense . DeflectorWall ", " mindustry . world . blocks . defense . DeflectorWall $ DeflectorEntity ", " mindustry . world . blocks . defense . Door ", " mindustry . world . blocks . defense . Door $ DoorEntity ", " mindustry . world . blocks . defense . ForceProjector ", " mindustry . world . blocks . defense . ForceProjector $ ForceEntity ", " mindustry . world . blocks . defense . ForceProjector $ ShieldEntity ", " mindustry . world . blocks . defense . MendProjector ", " mindustry . world . blocks . defense . MendProjector $ MendEntity ", " mindustry . world . blocks . defense . OverdriveProjector ", " mindustry . world . blocks . defense . OverdriveProjector $ OverdriveEntity ", " mindustry . world . blocks . defense . ShockMine ", " mindustry . world . blocks . defense . SurgeWall ", " mindustry . world . blocks . defense . Wall ", " mindustry . world . blocks . defense . turrets . ArtilleryTurret ", " mindustry . world . blocks . defense . turrets . BurstTurret ", " mindustry . world . blocks . defense . turrets . ChargeTurret ", " mindustry . world . blocks . defense . turrets . ChargeTurret $ LaserTurretEntity ", " mindustry . world . blocks . defense . turrets . CooledTurret ", " mindustry . world . blocks . defense . turrets . DoubleTurret ", " mindustry . world . blocks . defense . turrets . ItemTurret ", " mindustry . world . blocks . defense . turrets . ItemTurret $ ItemEntry ", " mindustry . world . blocks . defense . turrets . ItemTurret $ ItemTurretEntity ", " mindustry . world . blocks . defense . turrets . LaserTurret ", " mindustry . world . blocks . defense . turrets . LaserTurret $ LaserTurretEntity ", " mindustry . world . blocks . defense . turrets . LiquidTurret ", " mindustry . world . blocks . defense . turrets . PowerTurret ", " mindustry . world . blocks . defense . turrets . Turret ", " mindustry . world . blocks . defense . turrets . Turret $ AmmoEntry ", " mindustry . world . blocks . defense . turrets . Turret $ TurretEntity ", " mindustry . world . blocks . distribution . ArmoredConveyor ", " mindustry . world . blocks . distribution . BufferedItemBridge ", " mindustry . world . blocks . distribution . BufferedItemBridge $ BufferedItemBridgeEntity ", " mindustry . world . blocks . distribution . Conveyor ", " mindustry . world . blocks . distribution . Conveyor $ ConveyorEntity ", " mindustry . world . blocks . distribution . Conveyor $ ItemPos ", " mindustry . world . blocks . distribution . ExtendingItemBridge ", " mindustry . world . blocks . distribution . ItemBridge ", " mindustry . world . blocks . distribution . ItemBridge $ ItemBridgeEntity ", " mindustry . world . blocks . distribution . Junction ", " mindustry . world . blocks . distribution . Junction $ JunctionEntity ", " mindustry . world . blocks . distribution . MassDriver ", " mindustry . world . blocks . distribution . MassDriver $ DriverBulletData ", " mindustry . world . blocks . distribution . MassDriver $ DriverState ", " mindustry . world . blocks . distribution . MassDriver $ MassDriverEntity ", " mindustry . world . blocks . distribution . OverflowGate ", " mindustry . world . blocks . distribution . OverflowGate $ OverflowGateEntity ", " mindustry . world . blocks . distribution . Router ", " mindustry . world . blocks . distribution . Router $ RouterEntity ", " mindustry . world . blocks . distribution . Sorter ", " mindustry . world . blocks . distribution . Sorter $ SorterEntity ", " mindustry . world . blocks . liquid . ArmoredConduit ", " mindustry . world . blocks . liquid . Conduit ", " mindustry . world . blocks . liquid . Conduit $ ConduitEntity ", " mindustry . world . blocks . liquid . LiquidBridge ", " mindustry . world . blocks . liquid . LiquidExtendingBridge ", " mindustry . world . blocks . liquid . LiquidJunction ", " mindustry . world . blocks . liquid . LiquidOverflowGate ", " mindustry . world . blocks . liquid . LiquidRouter ", " mindustry . world . blocks . liquid . LiquidTank ", " mindustry . world . blocks . logic . LogicBlock ", " mindustry . world . blocks . logic . MessageBlock ", " mindustry . world . blocks . logic . MessageBlock $ MessageBlockEntity ", " mindustry . world . blocks . power . Battery ", " mindustry . world . blocks . power . BurnerGenerator ", " mindustry . world . blocks . power . ConditionalConsumePower ", " mindustry . world . blocks . power . DecayGenerator ", " mindustry . world . blocks . power . ImpactReactor ", " mindustry . world . blocks . power . ImpactReactor $ FusionReactorEntity ", " mindustry . world . blocks . power . ItemLiquidGenerator ", " mindustry . world . blocks . power . ItemLiquidGenerator $ ItemLiquidGeneratorEntity ", " mindustry . world . blocks . power . LightBlock ", " mindustry . world . blocks . power . LightBlock $ LightEntity ", " mindustry . world . blocks . power . NuclearReactor ", " mindustry . world . blocks . power . NuclearReactor $ NuclearReactorEntity ", " mindustry . world . blocks . power . PowerDiode ", " mindustry . world . blocks . power . PowerDistributor ", " mindustry . world . blocks . power . PowerGenerator ", " mindustry . world . blocks . power . PowerGenerator $ GeneratorEntity ", " mindustry . world . blocks . power . PowerGraph ", " mindustry . world . blocks . power . PowerNode ", " mindustry . world . blocks . power . SingleTypeGenerator ", " mindustry . world . blocks . power . SolarGenerator ", " mindustry . world . blocks . power . ThermalGenerator ", " mindustry . world . blocks . production . Cultivator ", " mindustry . world . blocks . production . Cultivator $ CultivatorEntity ", " mindustry . world . blocks . production . Drill ", " mindustry . world . blocks . production . Drill $ DrillEntity ", " mindustry . world . blocks . production . Fracker ", " mindustry . world . blocks . production . Fracker $ FrackerEntity ", " mindustry . world . blocks . production . GenericCrafter ", " mindustry . world . blocks . production . GenericCrafter $ GenericCrafterEntity ", " mindustry . world . blocks . production . GenericSmelter ", " mindustry . world . blocks . production . Incinerator ", " mindustry . world . blocks . production . Incinerator $ IncineratorEntity ", " mindustry . world . blocks . production . LiquidConverter ", " mindustry . world . blocks . production . Pump ", " mindustry . world . blocks . production . Separator ", " mindustry . world . blocks . production . SolidPump ", " mindustry . world . blocks . production . SolidPump $ SolidPumpEntity ", " mindustry . world . blocks . sandbox . ItemSource ", " mindustry . world . blocks . sandbox . ItemSource $ ItemSourceEntity ", " mindustry . world . blocks . sandbox . ItemVoid ", " mindustry . world . blocks . sandbox . LiquidSource ", " mindustry . world . blocks . sandbox . LiquidSource $ LiquidSourceEntity ", " mindustry . world . blocks . sandbox . PowerSource ", " mindustry . world . blocks . sandbox . PowerVoid ", " mindustry . world . blocks . storage . CoreBlock ", " mindustry . world . blocks . storage . CoreBlock $ CoreEntity ", " mindustry . world . blocks . storage . LaunchPad ", " mindustry . world . blocks . storage . StorageBlock ", " mindustry . world . blocks . storage . StorageBlock $ StorageBlockEntity ", " mindustry . world . blocks . storage . Unloader ", " mindustry . world . blocks . storage . Unloader $ UnloaderEntity ", " mindustry . world . blocks . storage . Vault ", " mindustry . world . blocks . units . CommandCenter ", " mindustry . world . blocks . units . CommandCenter $ CommandCenterEntity ", " mindustry . world . blocks . units . MechPad ", " mindustry . world . blocks . units . MechPad $ MechFactoryEntity ", " mindustry . world . blocks . units . RallyPoint ", " mindustry . world . blocks . units . RepairPoint ", " mindustry . world . blocks . units . RepairPoint $ RepairPointEntity ", " mindustry . world . blocks . units . UnitFactory ", " mindustry . world . blocks . units . UnitFactory $ UnitFactoryEntity ", " mindustry . world . consumers . Consume ", " mindustry . world . consumers . ConsumeItemFilter ", " mindustry . world . consumers . ConsumeItems ", " mindustry . world . consumers . ConsumeLiquid ", " mindustry . world . consumers . ConsumeLiquidBase ", " mindustry . world . consumers . ConsumeLiquidFilter ", " mindustry . world . consumers . ConsumePower ", " mindustry . world . consumers . ConsumeType ", " mindustry . world . consumers . Consumers ", " mindustry . world . meta . Attribute ", " mindustry . world . meta . BlockBars ", " mindustry . world . meta . BlockFlag ", " mindustry . world . meta . BlockGroup ", " mindustry . world . meta . BlockStat ", " mindustry . world . meta . BlockStats ", " mindustry . world . meta . BuildVisibility ", " mindustry . world . meta . PowerType ", " mindustry . world . meta . Producers ", " mindustry . world . meta . StatCategory ", " mindustry . world . meta . StatUnit ", " mindustry . world . meta . StatValue ", " mindustry . world . meta . values . AmmoListValue ", " mindustry . world . meta . values . BooleanValue ", " mindustry . world . meta . values . BoosterListValue ", " mindustry . world . meta . values . ItemFilterValue ", " mindustry . world . meta . values . ItemListValue ", " mindustry . world . meta . values . LiquidFilterValue ", " mindustry . world . meta . values . LiquidValue ", " mindustry . world . meta . values . NumberValue ", " mindustry . world . meta . values . StringValue ", " mindustry . world . modules . BlockModule ", " mindustry . world . modules . ConsumeModule ", " mindustry . world . modules . ItemModule ", " mindustry . world . modules . ItemModule $ ItemCalculator ", " mindustry . world . modules . ItemModule $ ItemConsumer ", " mindustry . world . modules . LiquidModule ", " mindustry . world . modules . LiquidModule $ LiquidCalculator ", " mindustry . world . modules . LiquidModule $ LiquidConsumer ", " mindustry . world . modules . PowerModule ", " mindustry . world . producers . Produce ", " mindustry . world . producers . ProduceItem ", " java . io . PrintStream ", " java . lang . Object ", " java . lang . Runnable ", " java . lang . String ", " java . lang . System "); <nl> 
mmm MorfologikGermanyGermanSpellerRuleTest . java <nl> ppp MorfologikGermanyGermanSpellerRuleTest . java <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + import static org . junit . Assert . assertThat ; <nl> - System . out . println ( speller . getFrequency (" ich ")); <nl> + assertThat ( speller . getFrequency (" der "), is ( 25 )); <nl> 
mmm FacebookOAuthConfig . java <nl> ppp FacebookOAuthConfig . java <nl> - return ImmutableMap . of (" PHOTOS ", ImmutableSet . of (" user _ photos ")); <nl> + return ImmutableMap . < String , Set < String >> builder () <nl> + . put (" PHOTOS ", ImmutableSet . of (" user _ photos ")) <nl> + . put (" VIDEOS ", ImmutableSet . of (" user _ videos ")) <nl> 
mmm OAuth2Recorder . java <nl> ppp OAuth2Recorder . java <nl> - } else { <nl> - validatorBuilder . useSslContext ( SSLContext . getDefault ()); <nl> 
mmm Channel . java <nl> ppp Channel . java <nl> - @ Deprecated <nl> - public final < RequestT , ResponseT > ClientCall < RequestT , ResponseT > newCall ( <nl> - MethodDescriptor < RequestT , ResponseT > methodDescriptor ) { <nl> - return newCall ( methodDescriptor , CallOptions . DEFAULT ); <nl> - } <nl> 
mmm ProcessInstanceCreateTransformer . java <nl> ppp ProcessInstanceCreateTransformer . java <nl> - if ( ActivitiEventType . ENTITY _ CREATED . equals ( event . getType ()) & & <nl> + if ( ActivitiEventType . ENTITY _ INITIALIZED . equals ( event . getType ()) & & <nl> 
mmm IsBST . java <nl> ppp IsBST . java <nl> + import java . util . Deque ; <nl> + import java . util . LinkedList ; <nl> 
new file <nl> ppp FailureAnaylzerStoreTestConfigurator . java <nl> + package com . dianping . cat . message . consumer . model . failure ; <nl> + import java . io . File ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import com . dianping . cat . message . consumer . model . failure . FailureReportAnalyzer . Handler ; <nl> 
new file <nl> ppp UfsInputStreamManagerTest . java <nl> + package alluxio . worker . block ; <nl> + import alluxio . ConfigurationRule ; <nl> + import alluxio . PropertyKey ; <nl> + import alluxio . underfs . SeekableUnderFileInputStream ; <nl> + import alluxio . underfs . UnderFileSystem ; <nl> + import alluxio . underfs . options . OpenOptions ; <nl> 
mmm AlertServer . java <nl> ppp AlertServer . java <nl> - import cn . escheduler . dao . DaoFactory ; <nl> + import org . springframework . beans . factory . annotation . Autowired ; <nl> + import org . springframework . boot . CommandLineRunner ; <nl> + import org . springframework . boot . SpringApplication ; <nl> 
mmm ZooKeeperUpdatingListener . java <nl> ppp ZooKeeperUpdatingListener . java <nl> 
deleted file <nl> mmm list _ user _ docs . java <nl> - package com . example . workdocs ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - import software . amazon . awssdk . services . workdocs . WorkDocsClient ; <nl> - import software . amazon . awssdk . services . workdocs . model . DescribeFolderContentsRequest ; <nl> 
mmm SelectionSort . java <nl> ppp SelectionSort . java <nl> - public static < T extends Comparable < T >> void sort ( T [] arr ){ <nl> + public static void sort ( Comparable [] arr ){ <nl> 
mmm MapperProxy . java <nl> ppp MapperProxy . java <nl> - private boolean isDefaultMethod ( Method method ) { <nl> - return ( method . getModifiers () <nl> - & ( Modifier . ABSTRACT | Modifier . PUBLIC | Modifier . STATIC )) == Modifier . PUBLIC <nl> - & & method . getDeclaringClass () . isInterface (); <nl> 
new file <nl> ppp BsqParserTest . java <nl> + package io . bisq . core . dao . blockchain . parse ; <nl> + import io . bisq . common . proto . persistable . PersistenceProtoResolver ; <nl> + import io . bisq . core . dao . blockchain . vo . *; <nl> + import mockit . Expectations ; <nl> + import mockit . Injectable ; <nl> 
mmm FormattedEmailAlertSender . java <nl> ppp FormattedEmailAlertSender . java <nl> - import org . graylog2 . streams . StreamRuleService ; <nl> + import org . graylog2 . streams . StreamRuleService ; <nl> + private final Engine engine = new Engine (); <nl> - Engine engine = new Engine (); <nl> 
mmm CStringFieldFormatter . java <nl> ppp CStringFieldFormatter . java <nl> - public class CStringFieldFormatter extends BaseFieldFormatter <nl> + public class CStringFieldFormatter extends BaseFieldFormatter <nl> -  <nl> - throws CorruptDataException <nl> -  <nl> - if ( parser . getCoreType () . equals (" char ") & & parser . getSuffix () . equals ("*")) { <nl> 
mmm ValueRecorder . java <nl> ppp ValueRecorder . java <nl> - throw new IllegalStateException (" can not found call # " + index + " on stack . Invalid call of record method ?"); <nl> + throw new IllegalStateException (" Did not find call # " + index + " on stack . Invalid call of record method ?"); <nl> 
new file <nl> ppp GrammarLetterGenerator . java <nl> + package com . github . javaparser . generator . core . other ; <nl> + import java . util . function . Function ; <nl> + public class GrammarLetterGenerator { <nl> + public static void main ( String [] args ) { <nl> + generate (" LETTER ", c - > Character . isJavaIdentifierStart ( c ) || Character . isHighSurrogate (( char ) ( int ) c ) || Character . isLowSurrogate (( char ) ( int ) c )); <nl> 
mmm French . java <nl> ppp French . java <nl> - return null ; <nl> + return new String []{" Agnes Souque ", " Hugo Voisard "}; <nl> 
mmm ContinueCheck . java <nl> ppp ContinueCheck . java <nl> + import org . sonar . check . Priority ; <nl> - @ Rule ( key = " AvoidUsageOfContinue ", name = " AvoidUsageOfContinue ", isoCategory = IsoCategory . Maintainability ) <nl> + @ Rule ( key = " AvoidContinueStatement ", name = " Avoid using ' continue ' branching statement ", isoCategory = IsoCategory . Maintainability , <nl> 
new file <nl> ppp JavaCCTest . java <nl> + package com . facebook . buck . javacc ; <nl> + import org . junit . Test ; <nl> + import java . io . StringReader ; <nl> + public class JavaCCTest { <nl> + @ Test <nl> + public void test1 () throws ParseException { <nl> + Simple1 parser1 = new Simple1 ( new StringReader ("{}\ n ")); <nl> 
mmm PollexorRequestTransformerTest . java <nl> ppp PollexorRequestTransformerTest . java <nl> - @ Test public void centerCropRequestsAreNotTransformed () { <nl> - Request input = new Request . Builder ( IMAGE _ URI ) . resize ( 50 , 50 ) . centerCrop () . build (); <nl> - Request output = transformer . transformRequest ( input ); <nl> 
mmm ExtensionFactory . java <nl> ppp ExtensionFactory . java <nl> + import org . apache . dubbo . common . extension . SPI ; <nl> + @ SPI <nl> 
new file <nl> ppp OrchestrationNamespaceHandler . java <nl> + package io . shardingsphere . jdbc . orchestration . spring . namespace . handler ; <nl> + import io . shardingsphere . jdbc . orchestration . spring . namespace . constants . OrchestrationBeanDefinitionParserTag ; <nl> + import io . shardingsphere . jdbc . orchestration . spring . namespace . parser . OrchestrationBeanDefinitionParser ; <nl> 
mmm AnyValueWriter . java <nl> ppp AnyValueWriter . java <nl> 
mmm RequestHandler . java <nl> ppp RequestHandler . java <nl> - void handle ( Request request , Response response ) throws Exception ; <nl> + void handle ( Request wsRequest , Response wsResponse ) throws Exception ; <nl> 
mmm Validator . java <nl> ppp Validator . java <nl> - Pattern . compile ("\\ b ^[ A - Z0 - 9 . _ % + - ] + @([ A - Z0 - 9 . - ] + \\ . )?\\ d { 1 , 3 }[ . ]\\ d { 1 , 3 }[ . ]\\ d { 1 , 3 }[ . ]\\ d { 1 , 3 }\\ b $|^[ A - Z0 - 9 . _ % + - ] + @[ A - Z0 - 9 . - ] + \\ . [ A - Z ]{ 2 , 6 }$", Pattern . CASE _ INSENSITIVE ); <nl> 
mmm TitanGraphStepStrategyTest . java <nl> ppp TitanGraphStepStrategyTest . java <nl> + import com . thinkaurelius . titan . blueprints . InMemoryGraphProvider ; <nl> + import com . thinkaurelius . titan . core . TitanGraph ; <nl> + import org . apache . tinkerpop . gremlin . GraphProviderClass ; <nl> + import org . apache . tinkerpop . gremlin . process . ProcessStandardSuite ; <nl> 
mmm QuarkusEnvironment . java <nl> ppp QuarkusEnvironment . java <nl> - import java . util . HashMap ; <nl> + import java . util . Collections ; <nl> - private static final CoreMessageLogger LOG = Logger . getMessageLogger ( CoreMessageLogger . class , Environment . class . getName ()); <nl> + final CoreMessageLogger LOG = Logger . getMessageLogger ( CoreMessageLogger . class , Environment . class . getName ()); <nl> 
mmm SingleBlockingChannelEventLoop . java <nl> ppp SingleBlockingChannelEventLoop . java <nl> + processTaskQueue (); <nl> - for (;;) { <nl> - Runnable task = pollTask (); <nl> - if ( task == null ) { <nl> - break ; <nl> - } <nl> - task . run (); <nl> - } <nl> + processTaskQueue (); <nl> + private void processTaskQueue () { <nl> 
mmm EchoServer . java <nl> ppp EchoServer . java <nl> + } else { <nl> + buffer . flip (); <nl> + client . write ( buffer ); <nl> + buffer . clear (); <nl> - buffer . flip (); <nl> - client . write ( buffer ); <nl> - buffer . clear (); <nl> 
mmm JspFile . java <nl> ppp JspFile . java <nl> - PROJECT _ ALL ("/ jsp / system / project . jsp "), <nl> + PROJECT _ ALL ("/ jsp / system / project / project . jsp "), <nl> - PROJECT _ UPATE ("/ jsp / system / projectUpdate . jsp "), <nl> + PROJECT _ UPATE ("/ jsp / system / project / projectUpdate . jsp "), <nl> 
mmm SqlResultSetReader . java <nl> ppp SqlResultSetReader . java <nl> - import tech . tablesaw . io . TypeUtils ; <nl> 
mmm Gps103ProtocolEncoder . java <nl> ppp Gps103ProtocolEncoder . java <nl> - return formatCommand ( command , "**, imei :{ % s }, 111 ", Command . KEY _ UNIQUE _ ID ); <nl> + return formatCommand ( command , "**, imei :{ % s }, L ", Command . KEY _ UNIQUE _ ID ); <nl> - return formatCommand ( command , "**, imei :{ % s }, 112 ", Command . KEY _ UNIQUE _ ID ); <nl> 
mmm ShardingExecuteCallback . java <nl> ppp ShardingExecuteCallback . java <nl> + import java . util . Map ; <nl> - O execute ( I input , boolean isTrunkThread ) throws SQLException ; <nl> + O execute ( I input , boolean isTrunkThread , Map < String , Object > shardingExecuteDataMap ) throws SQLException ; <nl> 
mmm Tags . java <nl> ppp Tags . java <nl> 
mmm BasicLoadWholeCsv . java <nl> ppp BasicLoadWholeCsv . java <nl> - master , " basicjoincsv ", System . getenv (" SPARK _ HOME "), System . getenv (" JARS ")); <nl> + master , " loadwholecsv ", System . getenv (" SPARK _ HOME "), System . getenv (" JARS ")); <nl> 
mmm LongArray . java <nl> ppp LongArray . java <nl> - * {@ link # size ()} <nl> + * {@ link # size ()} . <nl> - throw new IndexOutOfBoundsException (" Invalid size " + index + ", size is " + size ); <nl> + throw new IndexOutOfBoundsException (" Invalid index " + index + ", size is " + size ); <nl> 
mmm OzoneClientUtils . java <nl> ppp OzoneClientUtils . java <nl> + bucketInfo . setAcls ( bucket . getAcls ()); <nl> 
mmm QueryTransformerLimit . java <nl> ppp QueryTransformerLimit . java <nl> + import net . sf . jsqlparser . statement . select . PlainSelect ; <nl> + import net . sf . jsqlparser . statement . select . Select ; <nl> - if (! plainSelect ) { <nl> + if (! plainSelect || (( PlainSelect )(( Select ) query . getStatement ()) . getSelectBody ()) . isForUpdate ()) { <nl> 
mmm EurekaDiscoveryClientConfigServiceBootstrapConfiguration . java <nl> ppp EurekaDiscoveryClientConfigServiceBootstrapConfiguration . java <nl> + import org . springframework . cloud . netflix . eureka . EurekaDiscoveryClientConfiguration ; <nl> - @ Import ({ EurekaClientAutoConfiguration . class }) <nl> 
mmm MockCall . java <nl> ppp MockCall . java <nl> + import okio . Timeout ; <nl> + @ Override <nl> + public Timeout timeout () { <nl> + throw new UnsupportedOperationException (" Not supported yet . "); <nl> + } <nl> 
mmm PersistenceManagerTest . java <nl> ppp PersistenceManagerTest . java <nl> + import static org . powermock . PowerMock . createMockAndExpectNew ; <nl> + @ Test <nl> + public void testCreateDirectoryStructure _ usingCreateMockAndExpectNew () throws Exception { <nl> + final String path = " directoryPath "; <nl> 
mmm RuptelaProtocolDecoderTest . java <nl> ppp RuptelaProtocolDecoderTest . java <nl> + verifyAttributes ( decoder , binary ( <nl> + " 002e000315bc70d3e2ff0f4f42443130302e30312e30382e30300000c2b30ea77e430000601b000001f40000003c00144aa0 ")); <nl> 
mmm Tuple0Test . java <nl> ppp Tuple0Test . java <nl> - import javaslang . collection . Stream ; <nl> 
mmm ServerAliasKeyManager . java <nl> ppp ServerAliasKeyManager . java <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 1 . 2 . 0 "; <nl> + public static final String VERSION = " 1 . 3 . 0 "; <nl> - public static final int VERSION _ INT = 001002000 ; <nl> + public static final int VERSION _ INT = 001003000 ; <nl> 
mmm FluxSource . java <nl> ppp FluxSource . java <nl> - class FluxSource < I , O > extends Flux < O > implements Backpressurable , Receiver { <nl> + public class FluxSource < I , O > extends Flux < O > implements Backpressurable , Receiver { <nl> 
mmm AndroidPrebuiltAarIntegrationTest . java <nl> ppp AndroidPrebuiltAarIntegrationTest . java <nl> + import static org . hamcrest . Matchers . containsString ; <nl> + import static org . junit . Assert . assertThat ; <nl> + @ Test <nl> + public void testPrebuiltRDotTxtContainsTransitiveDependencies () throws IOException { <nl> 
new file <nl> ppp _ 399 . java <nl> + package com . fishercoder . solutions ; <nl> + import java . util . *; <nl> + public class _ 399 { <nl> + public double [] calcEquation ( String [][] equations , double [] values , String [][] queries ) { <nl> + Map < String , ArrayList < String >> pairs = new HashMap <>(); <nl> 
mmm BitcoinCliHelper . java <nl> ppp BitcoinCliHelper . java <nl> - fail ( format (" Could generate new bitcoin address : % n % s ", newAddress . getErrorMessage ())); <nl> + fail ( format (" Could not generate new bitcoin address : % n % s ", newAddress . getErrorMessage ())); <nl> 
mmm RawRulePredicates . java <nl> ppp RawRulePredicates . java <nl> - import com . google . common . base . Preconditions ; <nl> - import com . google . common . collect . ImmutableSet ; <nl> - public static RawRulePredicate matchName ( final String fullyQualifiedName ) { <nl> - Preconditions . checkNotNull ( fullyQualifiedName ); <nl> 
mmm AndroidFunctionalTest . java <nl> ppp AndroidFunctionalTest . java <nl> + private DatabaseSource dataSource ; <nl> - DatabaseSource dataSource = new DatabaseSource ( context , model , dbName , 1 ); <nl> + dataSource = new DatabaseSource ( context , model , dbName , 1 ); <nl> + @ Override <nl> + public void teardown () { <nl> 
deleted file <nl> mmm Assertor . java <nl> - package org . mockitoutil ; <nl> - public interface Assertor < T > { <nl> - void assertValue ( T value ); <nl> - } <nl> 
mmm MigrationVersion . java <nl> ppp MigrationVersion . java <nl> - v1 _ 6 (" 1 . 6 "); <nl> + v1 _ 6 (" 1 . 6 "), <nl> + v1 _ 7 (" 1 . 7 "); <nl> 
mmm Wtsapi32Test . java <nl> ppp Wtsapi32Test . java <nl> + import com . sun . jna . Native ; <nl> - import sun . awt . windows . WComponentPeer ; <nl> - private long peer = 0 ; <nl> + private final long peer ; <nl> - private HWND hwnd ; <nl> + private final HWND hwnd ; <nl> - this . peer = (( WComponentPeer ) frame . getPeer ()) . getHWnd (); <nl> 
mmm OrchestrationSpringBootShardingTest . java <nl> ppp OrchestrationSpringBootShardingTest . java <nl> + import io . shardingsphere . jdbc . orchestration . internal . OrchestrationShardingDataSource ; <nl> - assertTrue ( dataSource instanceof ShardingDataSource ); <nl> + assertTrue ( dataSource instanceof OrchestrationShardingDataSource ); <nl> 
mmm RemoveTypes . java <nl> ppp RemoveTypes . java <nl> + import com . google . javascript . rhino . JSDocInfoBuilder ; <nl> + import com . google . javascript . rhino . JSTypeExpression ; <nl> + import com . google . javascript . rhino . Token ; <nl> + import javax . annotation . Nullable ; <nl> - if ( jsdoc != null & & jsdoc . getLicense () == null ) { <nl> 
mmm OpenObjectConsoleHandler . java <nl> ppp OpenObjectConsoleHandler . java <nl> + import org . jkiss . utils . CommonUtils ; <nl> - String sql = generator . getResult (); <nl> + String sql = CommonUtils . notEmpty ( generator . getResult ()); <nl> 
mmm ExtraActionFactory . java <nl> ppp ExtraActionFactory . java <nl> - String command = commandHelper . resolveCommandAndExpandLabels ( <nl> + String command = context . attributes () . get (" cmd ", Type . STRING ); <nl> - command = context . getExpander ( makeVariableContext ) . expand (" cmd ", command ); <nl> 
new file <nl> ppp _ 689 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 689 { <nl> + public static class Solution1 { <nl> + public int [] maxSumOfThreeSubarrays ( int [] nums , int k ) { <nl> + return new int []{}; <nl> + } <nl> + } <nl> + } <nl> 
mmm ShardingDataSourceMetaDataTest . java <nl> ppp ShardingDataSourceMetaDataTest . java <nl> + Map < String , String > masterSlaveShardingDataSourceURLs = new LinkedHashMap <>(); <nl> + Map < String , String > shardingDataSourceURLs = new LinkedHashMap < String , String >(); <nl> - MasterSlaveRuleConfiguration MasterSlaveConfig0 = new MasterSlaveRuleConfiguration (" ms _ 0 ", " master _ 0 ", Arrays . asList (" slave _ 0 ")); <nl> 
new file <nl> ppp WaitForAtomicBooleanTest . java <nl> + package com . jayway . awaitility ; <nl> + import org . junit . Test ; <nl> + import java . util . concurrent . Callable ; <nl> + import java . util . concurrent . atomic . AtomicBoolean ; <nl> + import static com . jayway . awaitility . Awaitility . await ; <nl> 
mmm BlockHeartbeatReport . java <nl> ppp BlockHeartbeatReport . java <nl> 
mmm TextInputEditText . java <nl> ppp TextInputEditText . java <nl> + import android . os . Build ; <nl> + @ Override <nl> + protected void onAttachedToWindow () { <nl> + super . onAttachedToWindow (); <nl> + TextInputLayout layout = getTextInputLayout (); <nl> + if ( layout != null <nl> + & & layout . isProvidingHint () <nl> 
mmm Origin . java <nl> ppp Origin . java <nl> + boolean isWarmServerAvailable (); <nl> 
mmm SqlSessionFactory . java <nl> ppp SqlSessionFactory . java <nl> 
mmm ManagedPooledDataSource . java <nl> ppp ManagedPooledDataSource . java <nl> - @ Override <nl> + @ SuppressWarnings (" override ") <nl> 
mmm RegexSelector . java <nl> ppp RegexSelector . java <nl> 
mmm MetricsSystemTest . java <nl> ppp MetricsSystemTest . java <nl> - public void metricsSystemTest () { <nl> + public void metricsSystem () { <nl> 
mmm ContainerTestSuite . java <nl> ppp ContainerTestSuite . java <nl> + boolean skipTailChildContainers = Boolean . valueOf ( System . getProperty (" blackBoxTests . skipTailChildContainers ")); <nl> - . withTailChildContainers ( true ) <nl> + . withTailChildContainers (! skipTailChildContainers ) <nl> 
mmm Bug _ for _ issue _ 331 . java <nl> ppp Bug _ for _ issue _ 331 . java <nl> - import com . alibaba . fastjson . serializer . JSONSerializer ; <nl> - import com . alibaba . fastjson . serializer . SerializeWriter ; <nl> 
mmm WorldProvider . java <nl> ppp WorldProvider . java <nl> + File readme ; <nl> + readme = directory ; <nl> + readme = Baritone . INSTANCE . getDir (); <nl> - try ( FileOutputStream out = new FileOutputStream ( new File ( directory , " readme . txt "))) { <nl> + try ( FileOutputStream out = new FileOutputStream ( new File ( readme , " readme . txt "))) { <nl> 
mmm RecentEmojiPageModel . java <nl> ppp RecentEmojiPageModel . java <nl> - Log . i ( TAG , " onCodePointSelected (" + emoji + ")"); <nl> 
mmm AllInternalTests . java <nl> ppp AllInternalTests . java <nl> - import io . shardingsphere . jdbc . orchestration . internal . jdbc . AllJdbcTests ; <nl> + import io . shardingsphere . jdbc . orchestration . internal . config . ConfigurationNodeTest ; <nl> - @ Suite . SuiteClasses ( AllJdbcTests . class ) <nl> 
mmm AggregationDistinctQueryMetaDataTest . java <nl> ppp AggregationDistinctQueryMetaDataTest . java <nl> + Collection < String > actual = distinctQueryMetaData . getAggregationDistinctColumnLabels (); <nl> + Collection < String > expected = Arrays . asList (" c ", " a "); <nl> + assertThat ( actual . size (), is ( 2 )); <nl> 
mmm PerlAnalyzerFactory . java <nl> ppp PerlAnalyzerFactory . java <nl> - " PM " <nl> + " PM ", <nl> + " PH " <nl> 
mmm ShellExecStatementTest . java <nl> ppp ShellExecStatementTest . java <nl> + Z . configure (); <nl> 
new file <nl> ppp CelebrityInfo . java <nl> + package com . example . rekognition ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . rekognition . RekognitionClient ; <nl> + import software . amazon . awssdk . services . rekognition . model . GetCelebrityInfoRequest ; <nl> 
mmm DataSourceListenerManager . java <nl> ppp DataSourceListenerManager . java <nl> + import io . shardingsphere . orchestration . internal . event . config . DataSourceChangedEvent ; <nl> - private void watch ( final String path ) { <nl> - regCenter . watch ( path , new EventListener () { <nl> + private void watch () { <nl> 
new file <nl> ppp JavadocExclude . java <nl> + package org . mockito . javadoc ; <nl> + import com . sun . javadoc . *; <nl> + import com . sun . tools . doclets . formats . html . HtmlDoclet ; <nl> + import java . lang . reflect . InvocationHandler ; <nl> + import java . lang . reflect . Method ; <nl> + import java . lang . reflect . Proxy ; <nl> 
mmm HttpUtilsTest . java <nl> ppp HttpUtilsTest . java <nl> - } <nl> + } <nl> 
mmm ArrayToListConversionUnitTest . java <nl> ppp ArrayToListConversionUnitTest . java <nl> + import org . hamcrest . CoreMatchers ; <nl> + import static org . hamcrest . MatcherAssert . assertThat ; <nl> + import static org . junit . Assert . assertArrayEquals ; <nl> - System . out . println ( stringList ); <nl> 
new file <nl> ppp TypeCastCodeAction . java <nl> + package org . ballerinalang . langserver . codeaction . providers ; <nl> + import io . ballerina . compiler . syntax . tree . ExpressionNode ; <nl> + import io . ballerina . compiler . syntax . tree . SyntaxKind ; <nl> + import io . ballerina . compiler . syntax . tree . VariableDeclarationNode ; <nl> 
mmm StreamPump . java <nl> ppp StreamPump . java <nl> - throw new RuntimeException (" Inside " + this + " for " + name , e ); <nl> 
mmm DataSourceConverter . java <nl> ppp DataSourceConverter . java <nl> - Map < String , DataSourceParameter > result = new HashMap <>( dataSourceConfigurationMap . size (), 1 ); <nl> - for ( Entry < String , DataSourceConfiguration > entry : dataSourceConfigurationMap . entrySet ()) { <nl> - result . put ( entry . getKey (), getDataSourceParameter ( entry . getValue ())); <nl> 
mmm EFragmentHandler . java <nl> ppp EFragmentHandler . java <nl> - validatorHelper . hasEmptyConstructor ( element , valid ); <nl> + validatorHelper . isAbstractOrHasEmptyConstructor ( element , valid ); <nl> 
mmm AuthenticationManagerFactoryBean . java <nl> ppp AuthenticationManagerFactoryBean . java <nl> - public static final String MISSING _ BEAN _ ERROR _ MESSAGE = " Did you forget to add a gobal < authentication - manager > element " <nl> + public static final String MISSING _ BEAN _ ERROR _ MESSAGE = " Did you forget to add a global < authentication - manager > element " <nl> 
mmm BlockedThreadChecker . java <nl> ppp BlockedThreadChecker . java <nl> - private Map < VertxThread , Object > threads = new WeakHashMap <>(); <nl> + private final Map < VertxThread , Object > threads = new WeakHashMap <>(); <nl> - long now = System . nanoTime (); <nl> - for ( VertxThread thread : threads . keySet ()) { <nl> 
mmm SpanSetTagInterceptor . java <nl> ppp SpanSetTagInterceptor . java <nl> - * @ return true if this tag is a host related . <nl> + * @ return true if this tag is host related . <nl> 
mmm FilterType . java <nl> ppp FilterType . java <nl> - INF , INFO , INI , INV , ISO , J2 , JAR , JAVA , JPE , JPG , JS , JSON , JSP , JSX , <nl> + INF , INFO , INI , INV , ISO , J2 , JAR , JAR _ ZIP , JAVA , JPE , JPG , JS , JSON , JSP , JSX , <nl> 
mmm WebSocketProcessorFactory . java <nl> ppp WebSocketProcessorFactory . java <nl> - private Map < AtmosphereFramework , WebSocketProcessor > processors = new WeakHashMap < AtmosphereFramework , WebSocketProcessor >(); <nl> + private final Map < AtmosphereFramework , WebSocketProcessor > processors = new WeakHashMap < AtmosphereFramework , WebSocketProcessor >(); <nl> 
mmm QuotaByStorageTypeEntry . java <nl> ppp QuotaByStorageTypeEntry . java <nl> - import org . apache . hadoop . hdfs . StorageType ; <nl> + import org . apache . hadoop . fs . StorageType ; <nl> - public class QuotaByStorageTypeEntry { <nl> + public class QuotaByStorageTypeEntry { <nl> 
mmm SwaggerPlugin . java <nl> ppp SwaggerPlugin . java <nl> - dependencies . add ( project . getDependencies () . create (" io . swagger . core . v3 : swagger - jaxrs2 : 2 . 1 . 3 - SNAPSHOT ")); <nl> + dependencies . add ( project . getDependencies () . create (" io . swagger . core . v3 : swagger - jaxrs2 : 2 . 1 . 3 ")); <nl> 
mmm ChineseTokenizationITest . java <nl> ppp ChineseTokenizationITest . java <nl> - String RESOURCE _ DIR = "/ scr / nlp / data / stanford - corenlp - testing /"; <nl> + String RESOURCE _ DIR = "/ u / scr / nlp / data / stanford - corenlp - testing /"; <nl> 

mmm LoggerFactory . java <nl> ppp LoggerFactory . java <nl> - return ( Logger ) ClassUtils . forName ( implClass ) . getConstructor ( String . class ) . newInstance ( name ); <nl> + Object logInstance = ClassUtils . forName ( implClass , Logger . class . getClassLoader ()) <nl> + . getConstructor ( String . class ) <nl> 
mmm SysNodeResiliencyIntegrationTest . java <nl> ppp SysNodeResiliencyIntegrationTest . java <nl> + waitNoPendingTasksOnAll (); <nl> 
mmm ControllerTenantNameBuilder . java <nl> ppp ControllerTenantNameBuilder . java <nl> - if ( tenantName . endsWith ( REALTIME _ TENANT _ SUFFIX )) { <nl> - return tenantName . substring ( 0 , tenantName . length () - REALTIME _ TENANT _ SUFFIX . length ()); <nl> + if ( tenantName . endsWith ( ServerType . REALTIME . toString ())) { <nl> 
mmm AbstractSourceWithFlagsList . java <nl> ppp AbstractSourceWithFlagsList . java <nl> - @ Value . Immutable <nl> + @ Value . Immutable ( builder = false , copy = false ) <nl> - public static final SourceWithFlagsList EMPTY = <nl> - SourceWithFlagsList . ofUnnamedSources ( ImmutableSortedSet . of ()); <nl> 
deleted file <nl> mmm Generic15Test . java <nl> - package com . mysema . query . domain ; <nl> - import javax . persistence . Entity ; <nl> - import javax . persistence . MappedSuperclass ; <nl> - import java . util . HashSet ; <nl> - import java . util . Set ; <nl> - import org . junit . Test ; <nl> - import static org . junit . Assert . assertEquals ; <nl> 
mmm NationalAccountIdValidatorTest . java <nl> ppp NationalAccountIdValidatorTest . java <nl> - assertEquals (" N ú mero de CBU must consist of 22 numbers . ", validator . validate ( wrongNationalAccountId ) . errorMessage ); <nl> + assertEquals (" CBU number must consist of 22 numbers . ", validator . validate ( wrongNationalAccountId ) . errorMessage ); <nl> 
mmm Px500Example . java <nl> ppp Px500Example . java <nl> - import org . scribe . model . OAuthRequest ; <nl> - import org . scribe . model . Response ; <nl> - import org . scribe . model . Token ; <nl> - import org . scribe . model . Verb ; <nl> - import org . scribe . model . Verifier ; <nl> + import org . scribe . model . *; <nl> 
deleted file <nl> mmm DynamicFilter . java <nl> - package io . micronaut . http . filter ; <nl> - public interface DynamicFilter { <nl> - } <nl> 
mmm FromMeasure . java <nl> ppp FromMeasure . java <nl> - public @ interface FromMeasure { <nl> - } <nl> + public @ interface FromMeasure {} <nl> 
mmm PhantomNodeLogic . java <nl> ppp PhantomNodeLogic . java <nl> - private static final Map < Object , Boolean > isPhantomNodeCache = synchronizedMap ( new IdentityHashMap <>()); <nl> + private static final Map < Node , Boolean > isPhantomNodeCache = synchronizedMap ( new IdentityHashMap <>()); <nl> 
new file <nl> ppp SecondTestRegistryCenter . java <nl> + package io . shardingsphere . orchestration . registry ; <nl> + import io . shardingsphere . orchestration . reg . api . RegistryCenter ; <nl> + import io . shardingsphere . orchestration . reg . api . RegistryCenterConfiguration ; <nl> + import io . shardingsphere . orchestration . reg . listener . EventListener ; <nl> 
new file <nl> ppp gomi002 . java <nl> + package com . ibm . jvmti . tests . getOwnedMonitorInfo ; <nl> + public class gomi002 <nl> + { <nl> + static Object lock = new Object (); <nl> + static boolean running = false ; <nl> + static volatile boolean stop = false ; <nl> +  <nl> + native static void callGet ( Thread t ); <nl> 
deleted file <nl> mmm MemoryStrictlyStatementExecutor . java <nl> - package io . shardingsphere . core . executor . statement ; <nl> - import io . shardingsphere . core . constant . SQLType ; <nl> - import io . shardingsphere . core . executor . sql . execute . SQLExecuteCallback ; <nl> - import io . shardingsphere . core . executor . sql . execute . SQLExecuteTemplate ; <nl> 
mmm CurrentUser . java <nl> ppp CurrentUser . java <nl> + case FIREBIRD : <nl> 
mmm NetUtilsTest . java <nl> ppp NetUtilsTest . java <nl> + import org . apache . flink . util . OperatingSystem ; <nl> - assertTrue ( System . currentTimeMillis () - start < 8000 ); <nl> + assertTrue ( System . currentTimeMillis () - start < ( OperatingSystem . isWindows () ? 30000 : 8000 )); <nl> 
mmm YamlEncryptorConfigurationTest . java <nl> ppp YamlEncryptorConfigurationTest . java <nl> + assertThat ( yamlEncryptorConfiguration . getType (), is (" test ")); <nl> - public void testGetColumns () { <nl> + public void assertGetColumns () { <nl> + assertThat ( yamlEncryptorConfiguration . getColumns (), is (" pwd1 , pwd2 ")); <nl> 
new file <nl> ppp OptionDefaultValueConversionTest . java <nl> + package com . google . devtools . common . options ; <nl> + import com . google . common . flogger . GoogleLogger ; <nl> + import com . google . devtools . build . lib . util . Classpath ; <nl> + import com . google . devtools . build . lib . util . Classpath . ClassPathException ; <nl> 
mmm ProjectIntentActionTest . java <nl> ppp ProjectIntentActionTest . java <nl> - import com . kickstarter . services . DiscoveryParams ; <nl> 
mmm ArchiveUtil . java <nl> ppp ArchiveUtil . java <nl> - static int recordingOffset ( <nl> - final int termOffset , <nl> - final int termId , <nl> - final int initialTermId , <nl> - final int termsMask , <nl> - final int termBufferLength ) <nl> - { <nl> - return (( termId - initialTermId ) & termsMask ) * termBufferLength + termOffset ; <nl> 
mmm ShardingConfigurationRepresenter . java <nl> ppp ShardingConfigurationRepresenter . java <nl> 
new file <nl> ppp Actor . java <nl> + package co . paralleluniverse . actors ; <nl> + public class Actor { <nl> + } <nl> 
mmm MySQLChangeColumnExtractHandler . java <nl> ppp MySQLChangeColumnExtractHandler . java <nl> + import org . antlr . v4 . runtime . ParserRuleContext ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . ASTExtractHandler1 ; <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . handler . result . ColumnDefinitionExtractResult ; <nl> 
mmm KeyRemappingListenerTest . java <nl> ppp KeyRemappingListenerTest . java <nl> + import java . awt . event . KeyEvent ; <nl> + import net . runelite . api . GameState ; <nl> + import net . runelite . client . config . ModifierlessKeybind ; <nl> + @ Mock <nl> + @ Bind <nl> + private KeyRemappingPlugin keyRemappingPlugin ; <nl> 
mmm AnalysisFailureInfoApi . java <nl> ppp AnalysisFailureInfoApi . java <nl> - doc = <nl> - " Encapsulates information about an analysis - phase error which would have occurred during " <nl> - + " a build . In most builds , an analysis - phase error would result in a build failure " <nl> - + " and the error description would be output to the console . However , if " <nl> 
new file <nl> ppp Issue1668 . java <nl> + package com . github . javaparser . symbolsolver ; <nl> + import com . github . javaparser . *; <nl> + import com . github . javaparser . ast . CompilationUnit ; <nl> + import com . github . javaparser . ast . body . VariableDeclarator ; <nl> + import com . github . javaparser . ast . expr . VariableDeclarationExpr ; <nl> 
mmm Downloader . java <nl> ppp Downloader . java <nl> - @ SuppressWarnings (" UnusedDeclaration ") InputStream getInputStream () { <nl> + @ SuppressWarnings (" UnusedDeclaration ") public InputStream getInputStream () { <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final String CONFIG _ PHASE _ RUNTIME _ ILLUSTRATION = " icon : gears []"; <nl> - public static final String CONFIG _ PHASE _ BUILD _ TIME _ ILLUSTRATION = " icon : archive []"; <nl> + public static final String CONFIG _ PHASE _ RUNTIME _ ILLUSTRATION = " icon : gears [ title = Overridable at runtime ]"; <nl> 
mmm SpringCloudConfiguration . java <nl> ppp SpringCloudConfiguration . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger LOGGER = LoggerFactory . getLogger ( SpringCloudConfiguration . class ); <nl> - throw new UnsupportedOperationException (); <nl> 
mmm BuckConstant . java <nl> ppp BuckConstant . java <nl> - public static final String NON _ COMMAND _ LOG _ FILE _ SUFFIX = " non - command . log "; <nl> - private static final String TRASH _ DIR = getBuckOutputDirectory () + "/ . trash "; <nl> - public static String getTrashDir () { <nl> - return TRASH _ DIR ; <nl> 
mmm JavaModelUtils . java <nl> ppp JavaModelUtils . java <nl> + import javax . lang . model . element . Element ; <nl> - enclosingElement = ( TypeElement ) enclosingElement . getEnclosingElement (); <nl> - nestingKind = enclosingElement . getNestingKind (); <nl> + Element enclosing = enclosingElement . getEnclosingElement (); <nl> 
mmm MountSpecMethodAnnotationsProvider . java <nl> ppp MountSpecMethodAnnotationsProvider . java <nl> + import com . facebook . litho . annotations . OnBoundsDefined ; <nl> + ANNOTATION _ QUALIFIED _ NAMES . add ( OnBoundsDefined . class . getTypeName ()); <nl> 
mmm DruidSpringAopConfiguration . java <nl> ppp DruidSpringAopConfiguration . java <nl> - @ Value ("${ spring . aop . proxy - target - class : false }") <nl> - private boolean proxyTargetClass ; <nl> - advisorAutoProxyCreator . setProxyTargetClass ( proxyTargetClass ); <nl> + advisorAutoProxyCreator . setProxyTargetClass ( true ); <nl> 
mmm MyUserDetailsService . java <nl> ppp MyUserDetailsService . java <nl> - package org . baeldung . spring ; <nl> + package com . baeldung . spring ; <nl> 
mmm GetClusteringFunctionsAndDistancesCommandTest . java <nl> ppp GetClusteringFunctionsAndDistancesCommandTest . java <nl> - assertTrue ( Arrays . asList ( JSONUtilities . getStringArray ( result , " keyers ")) . contains (" metaphone ")); <nl> + assertTrue ( Arrays . asList ( JSONUtilities . getStringArray ( result , " keyers ")) . contains (" metaphone3 ")); <nl> 
mmm ShareUtils . java <nl> ppp ShareUtils . java <nl> - shareLink ( context , feed . getLink ()); <nl> + shareLink ( context , feed . getTitle () + ": " + feed . getLink ()); <nl> - shareLink ( context , feed . getDownload _ url ()); <nl> + shareLink ( context , feed . getTitle () + ": " + feed . getDownload _ url ()); <nl> 
new file <nl> ppp CheckView . java <nl> + package com . lxj . xpopupdemo ; <nl> + import android . content . Context ; <nl> + import android . graphics . Canvas ; <nl> + import android . graphics . Color ; <nl> + import android . graphics . Paint ; <nl> + import android . graphics . Path ; <nl> + import android . util . AttributeSet ; <nl> 
mmm HttpHelloWorldServerHandler . java <nl> ppp HttpHelloWorldServerHandler . java <nl> - import static io . netty . handler . codec . http . HttpVersion . HTTP _ 1 _ 1 ; <nl> + import static io . netty . handler . codec . http . HttpVersion . *; <nl> - Unpooled . unreleasableBuffer ( Unpooled . buffer () . writeBytes (" Hello World " . getBytes ( CharsetUtil . US _ ASCII ))); <nl> 
mmm TestMethodExpressionImpl . java <nl> ppp TestMethodExpressionImpl . java <nl> + assertEquals (" Hello JUnit from Tomcat ", me2 . invoke ( context , new Object [] { null })); <nl> + assertEquals (" Hello null from Tomcat ", me3 . invoke ( context , new Object [] { null })); <nl> 
mmm PerpetualCache . java <nl> ppp PerpetualCache . java <nl> - private final Map < Object , Object > cache = new HashMap <>(); <nl> + private Map < Object , Object > cache = new HashMap <>(); <nl> 
mmm DirectMessagesResourcesTest . java <nl> ppp DirectMessagesResourcesTest . java <nl> + import org . junit . Test ; <nl> - public void testDirectMessages () throws Exception { <nl> + @ Test <nl> + public void directMessages () throws Exception { <nl> 
mmm ShadowNativeAllocationRegistry . java <nl> ppp ShadowNativeAllocationRegistry . java <nl> + import libcore . util . NativeAllocationRegistry . Allocator ; <nl> + import org . robolectric . annotation . Implementation ; <nl> - @ Implements ( value = NativeAllocationRegistry . class , callThroughByDefault = false , minSdk = N , isInAndroidSdk = false ) <nl> 
mmm _ 190 . java <nl> ppp _ 190 . java <nl> - public class ReverseBits { <nl> + public class _ 190 { <nl> 
new file <nl> ppp InteractivePositionalParam . java <nl> + package picocli . examples . interactive ; <nl> + import picocli . CommandLine . Command ; <nl> + import java . security . MessageDigest ; <nl> + import java . util . Arrays ; <nl> + import java . util . Base64 ; <nl> + import java . util . concurrent . Callable ; <nl> 
mmm SystemTestHelper . java <nl> ppp SystemTestHelper . java <nl> - final BooleanSupplier condition , final IntConsumer consumer , final int maxIterations , final long timeout ) <nl> + final BooleanSupplier condition , <nl> + final IntConsumer iterationConsumer , <nl> + final int maxIterations , <nl> + final long timeoutNs ) <nl> 
new file <nl> ppp DupClassNameTest . java <nl> + public class DupClassNameTest { <nl> + public static void getStackTrace () { <nl> + System . out . println (" running method getStackTrace of DupClassNameTest version2 :"); <nl> + StackTraceElement [] st = Thread . currentThread () . getStackTrace (); <nl> + } <nl> 
new file <nl> ppp TravisEnvCondition . java <nl> + package org . particleframework . inject . configurations . requiresconditionclass ; <nl> + import org . particleframework . context . condition . Condition ; <nl> + import org . particleframework . context . condition . ConditionContext ; <nl> + public class TravisEnvCondition implements Condition < ConditionContext > { <nl> 
mmm TransSupplier . java <nl> ppp TransSupplier . java <nl> + import org . pentaho . di . i18n . BaseMessages ; <nl> + private static final Class <?> PKG = TransSupplier . class ; <nl> + private static final String MSG _ KETTLE _ ENGINE = " TransSupplier . SelectedEngine . Kettle "; <nl> + private static final String MSG _ SPARK _ ENGINE = " TransSupplier . SelectedEngine . Spark "; <nl> 
mmm SimpleReplaceRuleTest . java <nl> ppp SimpleReplaceRuleTest . java <nl> - public void testRule () throws IOException { <nl> - SimpleReplaceRule rule = new SimpleReplaceRule ( TestTools . getEnglishMessages ()); <nl> + public void testRule () throws IOException { <nl> + SimpleReplaceRule rule = new SimpleReplaceRule ( TestTools . getEnglishMessages ()); <nl> 
mmm GroupByAggregateBreakerTest . java <nl> ppp GroupByAggregateBreakerTest . java <nl> - import org . junit . Before ; <nl> - RamAccountingContext . FLUSH _ BUFFER _ SIZE = 24 ; <nl> - @ Before <nl> - public void initTestData () { <nl> - Setup setup = new Setup ( sqlExecutor ); <nl> - setup . setUpEmployees (); <nl> 
mmm DraweeHierarchyFragment . java <nl> ppp DraweeHierarchyFragment . java <nl> + import android . support . v7 . widget . SwitchCompat ; <nl> - final SimpleDraweeView draweeView = ( SimpleDraweeView ) view . findViewById ( R . id . drawee ); <nl> + final SimpleDraweeView draweeView = view . findViewById ( R . id . drawee ); <nl> 
mmm GeneralDCLIntegrateTest . java <nl> ppp GeneralDCLIntegrateTest . java <nl> - dropUserIfExisted ( connection ); <nl> + dropUserIfExisted ( connection ); <nl> 
mmm ClassFilter . java <nl> ppp ClassFilter . java <nl> - List < String > newlist = new ArrayList <>(); <nl> + List < String > newList = new ArrayList <>(); <nl> - newlist . add ( item ); <nl> + newList . add ( item ); <nl> - if (! newlist . isEmpty ()) { <nl> - return newlist . toArray ( ArrayUtils . EMPTY _ STRING _ ARRAY ); <nl> 
mmm VertxLoggerFormatter . java <nl> ppp VertxLoggerFormatter . java <nl> - import java . text . SimpleDateFormat ; <nl> - import java . util . Date ; <nl> + import java . time . Instant ; <nl> + import java . time . OffsetDateTime ; <nl> + import java . time . ZoneId ; <nl> + import java . time . format . DateTimeFormatter ; <nl> 
mmm OperatorMatrixGenerator . java <nl> ppp OperatorMatrixGenerator . java <nl> - try ( PrintWriter out = new PrintWriter ( Files . newBufferedWriter ( Paths . get (" docs ", " Operator - Matrix . md "), StandardOpenOption . CREATE ))) { <nl> + try ( PrintWriter out = new PrintWriter ( Files . newBufferedWriter ( Paths . get (" docs ", " Operator - Matrix . md "), StandardOpenOption . CREATE , StandardOpenOption . TRUNCATE _ EXISTING ))) { <nl> 
new file <nl> ppp SelfSignedCertEnvProvider . java <nl> + package org . eclipse . che . api . workspace . server . spi . provision . env ; <nl> + public class SelfSignedCertEnvProvider { <nl> + } <nl> 
mmm AbstractShardingJDBCDatabaseAndTableTest . java <nl> ppp AbstractShardingJDBCDatabaseAndTableTest . java <nl> 
mmm _ 553 . java <nl> ppp _ 553 . java <nl> 
mmm ShiftReduceParserTest . java <nl> ppp ShiftReduceParserTest . java <nl> - public class TrainParserTest extends TestCase { <nl> + public class ShiftReduceParserTest extends TestCase { <nl> 
mmm IdempotentOperations . java <nl> ppp IdempotentOperations . java <nl> + if ( lhs . findChildrenOfType ( ASTPrimarySuffix . class ) . size () != rhs . findChildrenOfType ( ASTPrimarySuffix . class ) . size ()) { <nl> + return super . visit ( node , data ); <nl> + } <nl> 
mmm _ 673 . java <nl> ppp _ 673 . java <nl> - int longest = findLongestLIS ( nums ); <nl> - if ( longest == 1 ) { <nl> - return nums . length ; <nl> - } <nl> - int result = 0 ; <nl> - for ( int i = 0 ; i < nums . length ; i + + ) { <nl> - if ( i + longest > nums . length ) { <nl> - break ; <nl> + int n = nums . length ; <nl> 
mmm ThanksViewModelTest . java <nl> ppp ThanksViewModelTest . java <nl> + koalaTest . assertValues (" Checkout Show Share Sheet "); <nl> + koalaTest . assertValues (" Checkout Show Share Sheet ", " Checkout Show Share "); <nl> + koalaTest . assertValues (" Checkout Show Share Sheet ", " Checkout Show Share ", " Checkout Show Share "); <nl> 
new file <nl> ppp WebappSessionConfigIntegrationTest . java <nl> + package com . thoughtworks . go . server . web ; <nl> + import org . apache . commons . io . FileUtils ; <nl> + import org . eclipse . jetty . server . Server ; <nl> + import org . eclipse . jetty . webapp . WebAppContext ; <nl> + import org . junit . Before ; <nl> 
new file <nl> ppp DemoListComponentTest . java <nl> + package com . facebook . samples . litho ; <nl> + import android . support . v7 . widget . OrientationHelper ; <nl> + import com . facebook . litho . Component ; <nl> + import com . facebook . litho . testing . ComponentsRule ; <nl> + import com . facebook . litho . testing . SubComponent ; <nl> 
new file <nl> ppp BaseRefreshView . java <nl> + package com . zjx . vcars . common . mvp ; <nl> + import java . util . List ; <nl> + public interface BaseRefreshView < T > extends BaseRefreshContract . View { <nl> + void refreshData ( List < T > data ); <nl> + void loadMoreData ( List < T > data ); <nl> + } <nl> 
mmm SelectItemsSegment . java <nl> ppp SelectItemsSegment . java <nl> + @ SuppressWarnings (" unchecked ") <nl> + public < T extends SelectItemSegment > Collection < T > findSelectItemSegments ( final Class < T > selectItemSegmentType ) { <nl> + Collection < T > result = new LinkedList <>(); <nl> + for ( SelectItemSegment each : selectItems ) { <nl> 
mmm EnglishWordRepeatRuleTest . java <nl> ppp EnglishWordRepeatRuleTest . java <nl> - assertGood (" Not all options or implications had had been fully considered "); <nl> + assertGood (" Alice and Bob had had a long - standing relationship . "); <nl> 
new file <nl> ppp HcorefChineseAPIExampleTest . java <nl> + package edu . stanford . nlp . hcoref ; <nl> + import edu . stanford . nlp . hcoref . CorefCoreAnnotations ; <nl> + import edu . stanford . nlp . hcoref . data . CorefChain ; <nl> + import edu . stanford . nlp . hcoref . data . Mention ; <nl> + import edu . stanford . nlp . ling . CoreAnnotations ; <nl> 
mmm TestELParser . java <nl> ppp TestELParser . java <nl> - } <nl> + testExpression (" # ", " # "); <nl> + testExpression (" # # ", " # # "); <nl> + testExpression (" # # # ", " # # # "); <nl> + testExpression ("$", "$"); <nl> + testExpression ("$$", "$$"); <nl> + testExpression ("$$$", "$$$"); <nl> + testExpression (" # $", " # $"); <nl> 
mmm SomeUnitTest . java <nl> ppp SomeUnitTest . java <nl> - assertEquals ( 1 , 0 ); <nl> + assertEquals ( 1 , 1 ); <nl> 
mmm UnknownCompressionTest . java <nl> ppp UnknownCompressionTest . java <nl> 
mmm BreezeSerialization . java <nl> ppp BreezeSerialization . java <nl> + public static int DEFAULT _ BUFFER _ SIZE = 1024 ; <nl> - BreezeBuffer buffer = new BreezeBuffer ( 512 ); <nl> + BreezeBuffer buffer = new BreezeBuffer ( DEFAULT _ BUFFER _ SIZE ); <nl> - BreezeBuffer buffer = new BreezeBuffer ( 512 ); <nl> 
mmm DrmSessionManager . java <nl> ppp DrmSessionManager . java <nl> + import androidx . annotation . IntDef ; <nl> + import java . lang . annotation . Documented ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + @ Documented <nl> + @ Retention ( RetentionPolicy . SOURCE ) <nl> 
mmm Application . java <nl> ppp Application . java <nl> + import com . alibaba . nacos . api . config . listener . Listener ; <nl> + import org . springframework . beans . factory . annotation . Autowired ; <nl> + import org . springframework . cloud . alibaba . nacos . NacosConfigProperties ; <nl> + import java . util . HashMap ; <nl> 
mmm JavascriptClientFilter . java <nl> ppp JavascriptClientFilter . java <nl> - if ( request . getHeader (" User - Agent ") != null & & request . getAttribute (" X - Atmosphere - Transport ") == null <nl> - || request . getAttribute (" X - Atmosphere - Transport ") != null & & (( String ) request . getAttribute (" X - Atmosphere - Transport ")) . equalsIgnoreCase (" long - polling ")) { <nl> 
deleted file <nl> mmm RxExamples . java <nl> - package rx . examples . java ; <nl> - import rx . Observable ; <nl> - import rx . util . functions . Action1 ; <nl> - public class RxExamples { <nl> - public static void main ( String args []) { <nl> - hello (" Ben ", " George "); <nl> - } <nl> - public static void hello ( String . . . names ) { <nl> 
new file <nl> ppp KeyValueTest . java <nl> + package org . apache . kafka . streams ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + public class KeyValueTest { <nl> + private KeyValue < String , Long > kv1a = new KeyValue <>(" key1 ", 1L ); <nl> 
new file <nl> ppp ServiceTestController . java <nl> + package org . apache . dubbo . admin . controller ; <nl> + import org . springframework . web . bind . annotation . RequestMapping ; <nl> + import org . springframework . web . bind . annotation . RestController ; <nl> + @ RestController <nl> + @ RequestMapping ("/ api /{ env }/ test ") <nl> 
mmm RegexMatching . java <nl> ppp RegexMatching . java <nl> 
mmm TestConfig . java <nl> ppp TestConfig . java <nl> - @ ConfigItem ( defaultValue = " test ") <nl> - String profile ; <nl> 
mmm InvalidIndexActionException . java <nl> ppp InvalidIndexActionException . java <nl> 
mmm StaticFileWithResourcesTest . java <nl> ppp StaticFileWithResourcesTest . java <nl> + import java . text . DateFormat ; <nl> + import java . text . SimpleDateFormat ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Date ; <nl> + import java . util . List ; <nl> + import java . util . Locale ; <nl> 
new file <nl> ppp DebugFlags . java <nl> + package io . objectbox ; <nl> + public final class DebugFlags { <nl> + private DebugFlags () { } <nl> + public static final int LOG _ TRANSACTIONS = 1 ; <nl> + public static final int LOG _ QUERIES = 2 ; <nl> + public static final String [] names = { " LOG _ TRANSACTIONS ", " LOG _ QUERIES ", }; <nl> 
mmm IdToken . java <nl> ppp IdToken . java <nl> - this . claims = Collections . unmodifiableMap ( new LinkedHashMap <>( claims )); <nl> + this . claims = Collections . unmodifiableMap ( new LinkedHashMap <>( this . sanitize ( claims ))); <nl> + private Map < String , Object > sanitize ( Map < String , Object > claims ) { <nl> 
mmm AbstractRegexNamingConventionsRule . java <nl> ppp AbstractRegexNamingConventionsRule . java <nl> - protected static final String CAMEL _ CASE = "[ a - z ][ a - zA - Z0 - 9 ]*"; <nl> - protected static final String PASCAL _ CASE = "[ A - Z ][ a - zA - Z0 - 9 ]*"; <nl> + protected static final Pattern CAMEL _ CASE = Pattern . compile ("[ a - z ][ a - zA - Z0 - 9 ]*"); <nl> 
mmm ExtTestPlanTestCaseMapper . java <nl> ppp ExtTestPlanTestCaseMapper . java <nl> - import io . metersphere . base . domain . Workspace ; <nl> - import io . metersphere . track . request . testplancase . QueryTestPlanCaseRequest ; <nl> + import io . metersphere . track . request . testplancase . QueryTestPlanCaseRequest ; <nl> 
mmm CasHibernateJpaBeanFactory . java <nl> ppp CasHibernateJpaBeanFactory . java <nl> + properties . put ( Environment . AUTOCOMMIT , jpaProperties . isAutocommit ()); <nl> 
new file <nl> ppp UseDynamoMapping . java <nl> + package aws . example . dynamodb ; <nl> + import com . amazonaws . services . dynamodbv2 . AmazonDynamoDB ; <nl> + import com . amazonaws . services . dynamodbv2 . AmazonDynamoDBClientBuilder ; <nl> + import com . amazonaws . services . dynamodbv2 . datamodeling . DynamoDBAttribute ; <nl> 
mmm DemoUtil . java <nl> ppp DemoUtil . java <nl> - public static final int TYPE _ WEBM = 5 ; <nl> - public static final int TYPE _ TS = 6 ; <nl> - public static final int TYPE _ AAC = 7 ; <nl> + public static final int TYPE _ WEBM = 6 ; <nl> + public static final int TYPE _ TS = 7 ; <nl> + public static final int TYPE _ AAC = 8 ; <nl> 
mmm KrakenStreamingExchange . java <nl> ppp KrakenStreamingExchange . java <nl> + @ Override <nl> + public Observable < Object > connectionSuccess () { <nl> + return streamingService . subscribeConnectionSuccess (); <nl> + } <nl> + @ Override <nl> + public Observable < Throwable > reconnectFailure () { <nl> 
mmm JMeterTestUtils . java <nl> ppp JMeterTestUtils . java <nl> - private static String filePrefix ; <nl> + private static volatile String filePrefix ; <nl> - if ( JMeterUtils . getJMeterProperties () == null ) { <nl> + if ( filePrefix == null ) { <nl> 
mmm WebMvcConfig . java <nl> ppp WebMvcConfig . java <nl> + import org . springframework . beans . factory . annotation . Qualifier ; <nl> - @ Bean <nl> - public ContentNegotiatingViewResolver contentViewResolver () throws Exception { <nl> - ContentNegotiationManagerFactoryBean contentNegotiationManager = new ContentNegotiationManagerFactoryBean (); <nl> 
mmm Client . java <nl> ppp Client . java <nl> - vertx . deployVerticle (" service : io . vertx . mongo - embedded - db ", db - > { <nl> + vertx . deployVerticle (" service : io . vertx . vertx - mongo - embedded - db ", db - > { <nl> 
mmm TargetActionTest . java <nl> ppp TargetActionTest . java <nl> - import static org . mockito . Matchers . any ; <nl> - tr . complete ( BITMAP _ 1 , any ( Picasso . LoadedFrom . class )); <nl> + tr . complete ( BITMAP _ 1 , MEMORY ); <nl> 
mmm VersionManager . java <nl> ppp VersionManager . java <nl> + versionIQ . setOs ( System . getProperty (" os . name ")); <nl> 
mmm KubernetesMockServerTestResource . java <nl> ppp KubernetesMockServerTestResource . java <nl> - configureMockServer ( mockServer ); <nl> - public void configureMockServer ( KubernetesMockServer mockServer ) { <nl> - } <nl> - } <nl> + } <nl> 
mmm PointerBuffer . java <nl> ppp PointerBuffer . java <nl> + String getStringASCII (); <nl> + String getStringUTF8 (); <nl> + String getStringUTF16 (); <nl> + String getStringASCII ( int index ); <nl> + String getStringUTF8 ( int index ); <nl> + String getStringUTF16 ( int index ); <nl> 
new file <nl> ppp Issue1668 . java <nl> + package com . github . javaparser . symbolsolver ; <nl> + import com . github . javaparser . *; <nl> + import com . github . javaparser . ast . CompilationUnit ; <nl> + import com . github . javaparser . ast . body . VariableDeclarator ; <nl> + import com . github . javaparser . ast . expr . VariableDeclarationExpr ; <nl> 
mmm OAuth2BodyExtractorsTests . java <nl> ppp OAuth2BodyExtractorsTests . java <nl> - import org . springframework . http . codec . xml . Jaxb2XmlDecoder ; <nl> - messageReaders . add ( new DecoderHttpMessageReader <>( new Jaxb2XmlDecoder ())); <nl> 
mmm NonGrouped . java <nl> ppp NonGrouped . java <nl> + import org . immutables . value . Json ; <nl> + @ Json . Marshaled <nl> + @ Json . Marshaled <nl> 
mmm ComposerException . java <nl> ppp ComposerException . java <nl> + private static final long serialVersionUID = 1L ; <nl> 
mmm ActuatorApplicationTest . java <nl> ppp ActuatorApplicationTest . java <nl> + import org . flowable . spring . boot . actuate . info . FlowableInfoContributor ; <nl> - . containsExactly ( entry (" version ", FlowableVersions . CURRENT _ VERSION )); <nl> + . containsExactly ( <nl> + entry (" dbVersion ", FlowableVersions . CURRENT _ VERSION ), <nl> 
mmm AgentPackagePath . java <nl> ppp AgentPackagePath . java <nl> + import java . net . URISyntaxException ; <nl> - agentJarFile = new File ( new URL ( urlString ) . getFile ()); <nl> + agentJarFile = new File ( new URL ( urlString ) . toURI ()); <nl> + } catch ( URISyntaxException e ) { <nl> + logger . error ( e , " Can not locate agent jar file by url :" + urlString ); <nl> 
mmm IBasicBolt . java <nl> ppp IBasicBolt . java <nl> 
mmm K9ChooserTargetService . java <nl> ppp K9ChooserTargetService . java <nl> + import com . fsck . k9 . mail . Address ; <nl> - String address = recipient . address . getAddress (); <nl> - String displayNameOrAddress = recipient . getDisplayNameOrAddress (); <nl> + Address address = recipient . address ; <nl> 
mmm UserController . java <nl> ppp UserController . java <nl> - @ ApiImplicitParam ( name = " id ", value = " 用户 ID ", required = true , dataType = " Long ") <nl> + @ ApiImplicitParam ( name = " id ", value = " 用户 ID ", required = true , dataType = " Long ", paramType = " path ") <nl> - @ ApiImplicitParam ( name = " id ", value = " 用户 ID ", required = true , dataType = " Long "), <nl> 
mmm DecoderConfig . java <nl> ppp DecoderConfig . java <nl> 
mmm ShiftTransition . java <nl> ppp ShiftTransition . java <nl> 
mmm TreeProps . java <nl> ppp TreeProps . java <nl> + import android . support . annotation . Nullable ; <nl> + @ Nullable <nl> 
mmm OptionalNumberMatcher . java <nl> ppp OptionalNumberMatcher . java <nl> - interface NullableTemplate < R , V extends Number & Comparable <? super V >> extends OptionalNumberMatcher < R , V >, WithMatcher < R , Self < V >>, <nl> - NotMatcher < R , Self < V >>, Projection < V >, Aggregation . NumberTemplate < V , Double , Double >{} <nl> 
new file <nl> ppp ParameterNamesInClassesTest . java <nl> + package io . reactivex . rxjava3 . validators ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import org . junit . Test ; <nl> + public class ParameterNamesInClassesTest { <nl> + void method ( int paramName ) { <nl> + } <nl> + @ Test <nl> 
mmm DefaultConfigurationRepresenter . java <nl> ppp DefaultConfigurationRepresenter . java <nl> - Node valueNode = tuple . getValueNode (); <nl> 
mmm _ 357 . java <nl> ppp _ 357 . java <nl> - public class CountNumbersWithUniqueDigits { <nl> + public class _ 357 { <nl> 
mmm CompoundTypeTest . java <nl> ppp CompoundTypeTest . java <nl> - import com . google . devtools . j2objc . util . BindingUtil ; <nl> - import org . eclipse . jdt . core . dom . ITypeBinding ; <nl> + " default Test < T > thenTesting ( Test <? super T > other ) { " <nl> - ITypeBinding binding = method . getReturnType () . getTypeBinding (); <nl> 
mmm ShiftReduceParserTest . java <nl> ppp ShiftReduceParserTest . java <nl> - String [] expectedSeparators = { "[ NONE ]", "[ NONE , NONE ]", "[ HEAD , NONE , NONE ]", "[ NONE , HEAD , NONE , NONE ]", "[ LEFT , NONE , NONE ]", "[ LEFT , NONE ]", "[ NONE , LEFT , NONE ]", "[ LEFT , NONE ]", "[ LEFT ]", "[ LEFT ]", "[ LEFT ]", "[ LEFT ]" }; <nl> 
mmm RegexQuery . java <nl> ppp RegexQuery . java <nl> 
mmm QueryResponsePackets . java <nl> ppp QueryResponsePackets . java <nl> - @ Getter <nl> + @ Getter <nl> 
new file <nl> ppp AddingNewLineToString . java <nl> + package com . baeldung . string ; <nl> + public class AddingNewLineToString { <nl> +  <nl> + public static void main ( String [] args ) { <nl> + String line1 = " Humpty Dumpty sat on a wall . "; <nl> + String line2 = " Humpty Dumpty had a great fall . "; <nl> 
mmm DefaultConsentEngineTests . java <nl> ppp DefaultConsentEngineTests . java <nl> + import org . apereo . inspektr . common . web . ClientInfo ; <nl> + import org . apereo . inspektr . common . web . ClientInfoHolder ; <nl> + import org . junit . jupiter . api . BeforeAll ; <nl> + import org . springframework . mock . web . MockHttpServletRequest ; <nl> 
mmm AndroidLauncher . java <nl> ppp AndroidLauncher . java <nl> + import android . Manifest ; <nl> + import android . content . pm . PackageManager ; <nl> + import android . os . Build ; <nl> + int WRITE _ REQUEST _ CODE = 1 ; <nl> + if ( Build . VERSION . SDK _ INT >= Build . VERSION _ CODES . M ) { <nl> + if ( this . checkSelfPermission ( Manifest . permission . WRITE _ EXTERNAL _ STORAGE ) != PackageManager . PERMISSION _ GRANTED ) { <nl> 
deleted file <nl> mmm TestTriangleStrip . java <nl> - package jme3test . conversion ; <nl> - import com . jme3 . app . SimpleApplication ; <nl> - import com . jme3 . material . Material ; <nl> - import com . jme3 . math . Quaternion ; <nl> - import com . jme3 . math . Vector3f ; <nl> - import com . jme3 . scene . Geometry ; <nl> 
mmm JupiterEngineExecutionContextTests . java <nl> ppp JupiterEngineExecutionContextTests . java <nl> - import org . junit . platform . engine . UniqueId ; <nl> 
mmm PBECredentialHandler . java <nl> ppp PBECredentialHandler . java <nl> + log . warn (" pbeCredentialHandler . invalidKeySpec ", e ); <nl> 
mmm ResizeComponentListener . java <nl> ppp ResizeComponentListener . java <nl> 
mmm AbstractAndroidNdk . java <nl> ppp AbstractAndroidNdk . java <nl> + @ Value . Auxiliary <nl> 
mmm ExecutionTreeNode . java <nl> ppp ExecutionTreeNode . java <nl> 
mmm PostgreDialect . java <nl> ppp PostgreDialect . java <nl> + addSQLKeyword (" SHOW "); <nl> 

mmm ShardingOnlyWithDatabasesAndTables . java <nl> ppp ShardingOnlyWithDatabasesAndTables . java <nl> - import io . shardingsphere . repository . common . repository . DataRepository ; <nl> + import io . shardingsphere . example . repository . common . repository . DataRepository ; <nl> 
mmm TramigoProtocolDecoderTest . java <nl> ppp TramigoProtocolDecoderTest . java <nl> + verifyNull ( decoder , binary ( ByteOrder . LITTLE _ ENDIAN , <nl> + " 80003d1ac0001c00010100000367152b13bc1d5970696e6720454f46 ")); <nl> 
mmm OGremlinEngineThreadLocal . java <nl> ppp OGremlinEngineThreadLocal . java <nl> - import com . orientechnologies . orient . core . OOrientShutdownListener ; <nl> - import com . orientechnologies . orient . core . OOrientStartupListener ; <nl> - if ( currGraph == iGraph || ( currGraph != null & & currGraph . getRawGraph () . getURL () . equals ( iGraph . getRawGraph () . getURL ()))) <nl> 
new file <nl> ppp DataSourcePropertyManager . java <nl> + package io . shardingsphere . core . property ; <nl> + import io . shardingsphere . core . constant . DatabaseType ; <nl> + import javax . sql . DataSource ; <nl> + import java . util . LinkedHashMap ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> 
mmm AgentCLI . java <nl> ppp AgentCLI . java <nl> - jCommander . usage ( out ); <nl> + jCommander . getUsageFormatter () . usage ( out ); <nl> 
mmm TestUtil . java <nl> ppp TestUtil . java <nl> 
mmm _ 375 . java <nl> ppp _ 375 . java <nl> - public class GuessNumberHigherOrLowerII { <nl> + public class _ 375 { <nl> 
mmm ResourceLoader . java <nl> ppp ResourceLoader . java <nl> + import java . io . FileFilter ; <nl> - viewLoader . addResourceXmlDir ( new File ( resourceDir , " layout ")); <nl> + File [] layoutDirs = resourceDir . listFiles ( new FileFilter () { <nl> + @ Override <nl> + public boolean accept ( File pathname ) { <nl> 
mmm ByteArrayEncoderTest . java <nl> ppp ByteArrayEncoderTest . java <nl> + import org . junit . After ; <nl> - import static org . hamcrest . core . Is . *; <nl> - import static org . hamcrest . core . IsNull . *; <nl> + import static org . hamcrest . CoreMatchers . *; <nl> - @ SuppressWarnings (" ZeroLengthArrayAllocation ") <nl> 
mmm GnirehtetActivity . java <nl> ppp GnirehtetActivity . java <nl> - private VpnConfiguration config ; <nl> + private VpnConfiguration requestedConfig ; <nl> - this . config = config ; <nl> + this . requestedConfig = config ; <nl> - GnirehtetService . start ( this , config ); <nl> + GnirehtetService . start ( this , requestedConfig ); <nl> 
mmm TestAnalyzeTableTx . java <nl> ppp TestAnalyzeTableTx . java <nl> + @ Override <nl> + public boolean isEnabled () { <nl> + if ( config . networked & & config . big ) { <nl> + return false ; <nl> + } <nl> + return true ; <nl> + } <nl> 
mmm Timing . java <nl> ppp Timing . java <nl> - bootStartTime = - 1 ; <nl> - bootStopTime = - 1 ; <nl> 
deleted file <nl> mmm ContactManager . java <nl> - package com . phonegap . demo ; <nl> - import android . provider . Contacts . People ; <nl> - import android . content . ContentResolver ; <nl> - import android . content . ContentUris ; <nl> - import android . net . Uri ; <nl> - import android . database . Cursor ; <nl> 
mmm UtilsTest . java <nl> ppp UtilsTest . java <nl> - import java . util . Calendar ; <nl> 
mmm SRXSentenceTokenizer . java <nl> ppp SRXSentenceTokenizer . java <nl> - import java . io . UnsupportedEncodingException ; <nl> 
new file <nl> ppp AuthenticationYamlSwapperTest . java <nl> + package org . apache . shardingsphere . core . yaml . swapper . impl ; <nl> + import org . apache . shardingsphere . core . rule . Authentication ; <nl> + import org . apache . shardingsphere . core . rule . ProxyUser ; <nl> + import org . apache . shardingsphere . core . yaml . config . common . YamlAuthenticationConfiguration ; <nl> 
mmm BroadcastEventListener . java <nl> ppp BroadcastEventListener . java <nl> + import javax . annotation . concurrent . GuardedBy ; <nl> + import javax . annotation . concurrent . ThreadSafe ; <nl> + @ ThreadSafe <nl> + @ GuardedBy (" this ") <nl> - public void broadcast ( BroadcastEvent event ) { <nl> + public synchronized void broadcast ( BroadcastEvent event ) { <nl> 
mmm RelativeRange . java <nl> ppp RelativeRange . java <nl> - public DateTime getFrom () { <nl> - if ( range () > 0 ) { <nl> - return Tools . nowUTC () . minus ( Seconds . seconds ( range ())); <nl> - } <nl> - return new DateTime ( 0 , DateTimeZone . UTC ); <nl> - } <nl> + public DateTime getFrom () { return from (); } <nl> 
mmm AbstractClangCxxCompilationDatabaseEntry . java <nl> ppp AbstractClangCxxCompilationDatabaseEntry . java <nl> - import com . fasterxml . jackson . annotation . JsonIgnore ; <nl> - @ JsonIgnore <nl> - public abstract ImmutableList < String > getArgs (); <nl> + public abstract ImmutableList < String > getArguments (); <nl> 
mmm SampleApplication . java <nl> ppp SampleApplication . java <nl> + import io . undertow . Undertow ; <nl> + import io . undertow . UndertowOptions ; <nl> + import org . xnio . Options ; <nl> + import org . springframework . boot . context . embedded . undertow . UndertowBuilderCustomizer ; <nl> + import org . springframework . boot . context . embedded . undertow . UndertowEmbeddedServletContainerFactory ; <nl> 
mmm VERSION . java <nl> ppp VERSION . java <nl> + import java . io . IOException ; <nl> + import java . net . JarURLConnection ; <nl> + import java . net . URL ; <nl> + import java . util . Iterator ; <nl> + import java . util . Map ; <nl> + import java . util . jar . Manifest ; <nl> - public final static int MajorVersion = 0 ; <nl> 
deleted file <nl> mmm AutocryptPreferEncryptDialog . java <nl> - package com . fsck . k9 . ui . dialog ; <nl> - import android . annotation . SuppressLint ; <nl> - import android . app . AlertDialog ; <nl> - import android . app . Dialog ; <nl> - import android . content . Context ; <nl> - import android . content . DialogInterface ; <nl> 
mmm Encryption . java <nl> ppp Encryption . java <nl> - interface Encryption { <nl> + public interface Encryption { <nl> 
mmm About . java <nl> ppp About . java <nl> - String text = String . format ( res . getString ( R . string . about _ content ) + "</ p ></ body ></ html >", <nl> - "< html >< body >< h2 >" + res . getString ( R . string . app _ name ) + ":< br />", <nl> - "< a href =\"" + res . getString ( R . string . link _ anki ) + "\">", <nl> 
new file <nl> ppp ListADVideoPlayer . java <nl> + package com . example . gsyvideoplayer . video ; <nl> + import android . content . Context ; <nl> + import android . util . AttributeSet ; <nl> + import com . shuyu . gsyvideoplayer . video . GSYADVideoPlayer ; <nl> + public class ListADVideoPlayer extends GSYADVideoPlayer { <nl> 
new file <nl> ppp SQL . java <nl> + package io . shardingsphere . dbtest . cases . authority ; <nl> + import lombok . Getter ; <nl> + import javax . xml . bind . annotation . XmlAccessType ; <nl> + import javax . xml . bind . annotation . XmlAccessorType ; <nl> + import javax . xml . bind . annotation . XmlAttribute ; <nl> 
mmm IPlayerTracker . java <nl> ppp IPlayerTracker . java <nl> - void onPlayerRespawn ( EntityPlayer player ); <nl> + void onPlayerRespawn ( EntityPlayer player ); <nl> 
mmm InputEventListener . java <nl> ppp InputEventListener . java <nl> - e . printStackTrace (); <nl> + LOG . warn (" Received InputCreated event but could not find Input : ", e ); <nl> - e . printStackTrace (); <nl> + LOG . warn (" Newly created input is of invalid type : " + input . getType (), e ); <nl> 
mmm PublicSuffixPatterns . java <nl> ppp PublicSuffixPatterns . java <nl> - TrieParser . parseTrie (" OYKOT ? a & 12oa08 - - nx ? 2eyh3la2ckx - - nx ? 32wqq1 - - nx ? 6 & 1f4a3abgm - - nx ? lbgw - - nx ?? 883xnn - - nx ? b ! . & asnu ? gro ? ibnu ? lim ? moc ? oc ? sr ? ten ? ude ? vog ??? c ! . & b & a ? m ? n ?? c & b ? g ? q ?? ep ? fn ? k & s ? y ?? ln ? no ? oc , sn ? t & n ? opsgolb ,? un ??? d & neit ? om ?? g ? hskihs ? isa ? jnin ? k & dov ? usto ?? l ! . & c , gro ? moc ? ofni ? rep ? t & en ? ni ?? ude ? vog ??? m ! . & ca ? gro ? oc ? sserp ? ten ? vog ?? ahokoy ? e00sf7vqn - - nx ?? n ! . & ac ? cc ? eman ? gro ? ibom ? loohcs ? moc ? ni ? o & c ? fni ? rp ?? r & d ? o ?? s & u ? w ?? vt ? xm ??? p ! . & bog ? ca ? d & em ? ls ?? g & ni ? ro ?? mo & c ? n ?? oba ? ten ? ude ?? g7hyabgm - - nx ? ra ! . & 461e ? 6pi ? iru ? nru ? rdda - ni ? siri ???? q ! . & eman ? gro ? hcs ? lim ? moc ? ten ? ude ? vog ??? r & emac ? f4a3abgm - - nx ?? s ! . & bup ? dem ? gro ? hcs ? moc ? ten ? ude ? vog ?? ac ?? u ! . & a & cinniv ? emirc ? i & hzhziropaz ? stynniv ?? s & edo ? sedo ?? tlay ? vatlop ?? bs ? cinimod ? d & argovorik ? o ! roghzu ??? e & hzhziropaz ? nvir ? t ?? fi ? g & l ? ro ?? hk ? i & stvinrehc ? ykstynlemhk ?? k & c ? m ? s & nagul ? t & enod ? ul ?? v & iknarf - onavi ? orteporp & end ? ind ????? l & iponret ? opotsa & bes ? ves ?? p ?? m & k ? oc ? s ? yrk ?? n & c ? d ? i ? osrehk ? v ? ylov ?? o & c ? nvor ?? p & d ? p ? z ?? r & c ? imotihz ? k ? ymotyhz ?? sk ? t & en ? l ? z ?? ude ? v & c ? e & alokin ? ik ?? i & alokym ? hinrehc ? krahk ? vl ? yk ?? k ? l ? o & g ! inrehc ?? krahk ?? r ?? y & ikstinlemhk ? mus ? s & akrehc ? sakrehc ? tvonrehc ??? zu ??? v ? waniko ? x & a ? iacal ?? yogan ?? b & 125qhx - - nx ? 3jca1d - - nx ? 4 & 6 & 1rfz - - nx ? qif - - nx ?? 96rzc - - nx ?? a & 0dc4xbgm - - nx ? c ?? b ! . & erots ? gro ? moc ? ofni ? ten ? ude ? vog ? zib ??? dhesa08 - - nx ? g ? l ! . & gro ? moc ? ten ? ude ? vog ??? s ! . & gro ? moc ? ten ? ude ? vog ??? u & lc ? p ??? c & 1 & 1q54 - - nx ? hbgw - - nx ?? 2e9c2czf - - nx ? 4byj9q - - nx ? 9jr & b & 2h - - nx ? 54 - - nx ? 9s - - nx ?? ceg - - nx ?? a ! . & gro ? lim ? moc ? ten ? ude ? vog ?? 3a09 - - nx ?? bf76a0c7ylqbgm - - nx ? c ! . & gnipparcs , revres - emag , s & otohpym , seccaptf ,?? 0atf7b45 - - nx ? a1l - - nx ?? e ! . & 21k ? bog ? dem ? gro ? lim ? moc ? nif ? o & fni ? rp ?? ten ? ude ? vog ?? beuq ?? l ! . & gro ? moc ? oc ? ten ? ude ? vog ??? m ! . & mt ? ossa ??? n ! . ossa ?? s ! . & gro ? moc ? ten ? ude ? vog ??? t ! w ?? v ! . & gro ? lim ? moc ? ten ? ude ? vog ???? d & 2urzc - - nx ? 3 & 1wrpk - - nx ? c9jrcpf - - nx ?? 5xq55 - - nx ? 75yrpk - - nx ? a ! . mon ?? b2babgm - - nx ? c ! . vog ? g9a2g2b0ae0chclc - - nx ?? e & r ! k ?? sopxe ? w ?? g ? i ! . & bew ? ca ? hcs ? lim ? o & c ? g ?? ro ? ten ? ym ? zib ?? b ?? liub ? m ? nal ! raas ?? rk ? s ! . & dem ? gro ? moc ? ofni ? ten ? ude ? v & og ? t ???? t ! . topsgolb ,? za5cbgn - - nx ?? e & 17a1hbbgm - - nx ? 2a6a1b6b1i - - nx ? 707b0e3 - - nx ? a ! . & ca ? gro ? hcs ? lim ? oc ? ten ? vog ??? b ! . & ca ? topsgolb ,?? cnad ? d ! . & edaregtmueart , keegnietsi , moc , n & esgnutiel , iemtsi ,? topsgolb , zten & mitbel , sadtretteuf ,?? iug ? on - - nx ?? e ! . & bil ? dem ? eif ? gro ? irp ? kiir ? moc ? pia ? ude ? vog ?? ffoc ? gg ?? g ! . & gro ? lim ? moc ? t & en ? vp ?? ude ? vog ?? ayov ? elloc ?? i ! . & topsgolb , vog ??? j ! . & gro ? oc ? ten ??? kib ? m ! . & ca ? gro ? oc ? sti ? ten ? ude ? v & irp ? og ??? an ! . & reh . togrof , sih . togrof ,??? n ! oz ?? om ? p ! . & bog ? gro ? lim ? mo & c ? n ?? ten ? ude ??? r ! . & mo & c ? n ?? ossa ? topsgolb ,?? s ! . & a ? b ! ibnal ? rofmok ?? c ! a ?? d ! b ? n & arb ? ubroflanummok ??? e ? f ? g ! ro ?? h ! f ?? i ! trap ?? k ! shf ?? l ? m ! t ?? n ! hss ? mygskurbrutan ?? o ? p ! p ?? r ? s ! serp ?? t ! opsgolb ,? u ? vhf ? w ? x ! uvmok ?? y ? z ?? roh ? uoh ?? t & atse ? ov ? utitsni ?? u & lb ? qituob ?? v ! . & 21e ? bew ? gro ? lim ? moc ? o & c ? fni ?? ten ? ude ? vog ??? xul ?? f & 7vqn - - nx ? a ! . & gro ? moc ? ten ? ude ? vog ??? b ! . vog ? wa9bgm - - nx ?? c ! . topsgolb , a1p - - nx ?? g ? n ! . & bew ? cer ? erots ? m & oc ? rif ?? ofni ? re & hto ? p ?? stra ? ten ??? p ! . & gro ? moc ? ude ??? t ? w ?? g & 2 & 4wq55 - - nx ? 8zrf6 - - nx ?? 3 & 44sd3 - - nx ? 91w6j - - nx ?? 455ses - - nx ? 69vqhr - - nx ? 78a4d5a4prebgm - - nx ? a ! . & gro ? mo & c ? n ?? oc ? ten ??? b ! . & 0 ? 1 ? 2 ? 3 ? 4 ? 5 ? 6 ? 7 ? 8 ? 9 ? a ? b ? c ? d ? e ? f ? g ? h ? i ? j ? k ? l ? m ? n ? o ? p ? q ? r ? s ? t ? u ? v ? w ? x ? y ? z ??? c ! za9a0cbgm - - nx ?? e ! . & eman ? gro ? ics ? lim ? moc ? nue ? ten ? ude ? vog ??? g ! . & gro ? oc ? ten ??? k ! . & gro ? lim ? moc ? ten ? ude ? vog ??? m ! . & drp ? gro ? lim ? m & o & c ? n ?? t ?? ude ? vog ??? n ! . & eman ? gro ? hcs ? ibom ? lim ? moc ? ten ? ude ? vog ?? aw ? i & bmulp ? h & sif ? tolc ?? kooc ? n & aelc ? iart ?? retac ? t & ad ? ekram ? hgil ? lusnoc ? ov ???? ro ! . & az , d & ab - yrev - si , e & sufnocsim , vas - si ,? nuof - si , oog - yrev - si ,? e & a , cin - yrev - si , las - 4 - ffuts , m & - morf , agevres , ohruoyslles ,? nozdop , rehwongniogyldlob , t & adidnac - a - si , is & - ybboh , golb ,??? fehc - a - si , golbymdaer , keeg - a & - si , si ,? live - yrev - si , naf & s & citlec - a - si , niurb - a - si , tap - a - si ,? xos - a - si ,? ojodsnd , p & ifles , ohbew , tfe & moh , vres ,?? resu - xunil - a - si , s & aila & nyd , snd ,? bbevres , nd & emoh , golb , mood , nyd : . & emoh , og ,?, rvd , tog ,? sa - skcik , u ,? t & e & ews - yrev - si , nretni & ehtfodne , fodne ,?? hgink - a - si , s & ixetn & od , seod ,? o & h - emag , l - si ,??? x & inuemoh , unilemoh ,??? s ! . & gro ? moc ? rep ? t & en ? opsgolb ,? ude ? vog ??? t ? u ! . & c & a ? s ?? en ? gro ? moc ? o & c ? g ?? ro ??? v ! a1c - - nx ?? wsa08 - - nx ?? h & 0ee5a3ld2ckx - - nx ? 4wc3o - - nx ? 8a7maabgm - - nx ? b ! . & gro ? moc ? ten ? ude ? vog ??? c ! . topsgolb , ir ? taw ?? d0sbgp - - nx ? g ! . & gro ? lim ? moc ? ude ? vog ??? m ! a1j - - nx ?? p ! . & gro ? i ? lim ? moc ? ogn ? ten ? ude ? vog ??? s ! . & gro ? lim ? moc ? ten ? vog ?? anom ? if ?? t ! . & ca ? im ? ni ? o & c ? g ?? ro ? ten ??? vo ?? i & 7a0oi - - nx ? a ! . & ffo ? gro ? moc ? ten ?? 1p - - nx ?? b ! . & gro ? moc ? oc ? ro ? ude ?? om ?? c ! . & ayb - tropora - - nx ? ca ? d & e ? m ?? esserp ? gro ? moc ? o & c ? g ? ssa ?? ro ? t & en ? ni ? ropor é a ?? ude ? vuog ??? f ! . & dnala ? iki , topsgolb ,?? g ! . & d & om ? tl ?? gro ? moc ? ude ? vog ??? k ! . & gro ? moc ? ofni ? ten ? ude ? vog ? zib ?? b4gc - - nx ? iw ?? l ? maim ? nim ? s ! ed ?? v ! . & 21k ? gro ? moc ? oc ? ten ??? wik ? xarp ?? j & 8da1tabbgl - - nx ? b ! . & ossa ? topsgolb , uaerrab ? vuog ??? d ? s ? t ! . & bew ? c & a ? in ?? eman ? gro ? lim ? moc ? o & c ? g ?? t & en ? ni ? set ?? ude ? vog ? zib ???? k & ca & bdeef ? lb ?? d ! . topsgolb ,? h ! . & a & 4ya0cu - - nx ? 5wqmg - - nx ?? b3qa0do - - nx ? d & 2 & 2svcw - - nx ? 3rvcl - - nx ?? 5xq55 - - nx ?? g & a0nt - - nx ? la0do - - nx ? ro ?? i & 050qmg - - nx ? 7a0oi - - nx ? xa0km - - nx ?? m & 1qtxm - - nx ? oc ?? npqic - - nx ? t & en ? opsgolb ,? ude ? v & di ? og ? ta0cu - - nx ?? xva0fz - - nx ? 人 & 个 ? 個 ? 箇 ?? 司 公 ? 府 政 ? 絡 & 網 ? 网 ?? 織 & 組 ? 组 ?? 织 & 組 ? 组 ?? 络 & 網 ? 网 ?? 育 & 敎 ? 教 ???? l ! . & bew ? cos ? dtl ? gro ? hcs ? letoh ? moc ? nssa ? ogn ? prg ? t & en ? ni ?? ude ? vog ??? m ! . & eman ? fni ? gro ? moc ? ten ? ude ? vog ??? ni ! l ? p ?? p ! . & b & ew ? og ?? gro ? kog ? m & af ? oc ?? nog ? ofni ? pog ? sog ? ten ? ude ? vog ? zib ??? row ! ten ?? s ! . topsgolb ,? t ? u . oc . topsgolb ,? l & a ! . & gro ? lim ? moc ? ten ? ude ? vog ?? g ? icos ? noitanretni ?? c ! . & bog ? lim ? oc ? vog ??? e & t ? vart ?? f8f & pbgo - - nx ? tbgm - - nx ?? g ? i & . oc . topsgolb , ame ? m ?? m ! . & esserp ? gro ? moc ? ten ? ude ? v & og ? uog ???? n ! . & oc , topsgolb , vb ?? o ?? o & btuf ? oc ?? p ! . & a & cin & diws ? gel ?? d & g ? ortso ? urawon ?? i & dem ? mraw ? nydg ?? k & elo & guld ? rtso ?? slopolam ? tsu ? ytsyrut ?? l & ip ? o & kzs ? w & - awolats ? oksnok ???? nimg ? rog & - ai & bab ? nelej ?? j ? z ?? syn ? tsaim ? w & a & l & eib ? i ? o ?? zsraw ?? onamil ?? z & eiwolaib ? mol ??? c & e & iw & alselob ? o & nsos ? rtso ??? le & im ? zrogz ??? orw ? p ? ri ?? d & em ? ia ? ragrats ?? e & c & i & lrog ? w & ilg ? o & hc & arats ? orp ?? klop ? tak ???? ldeis ? yzreibok ?? i & csjuoniws ? ksromop ? saldop ?? l & ahdop ? opo ?? n & apokaz ? ob & 6 ? m ??? tatselaer ? z & romop ? swozam ??? g & alble ? ezrbo & lok ? nrat ?? ro ?? hcyzrblaw ? i & csomohcurein ? grat ? klawus ?? k & e & rut ? walcolw ?? inbyr ? le ? o & nas ? tsylaib ?? rob & el ? lam ?? s & als ? jazel ? nadg ? puls ? rowezrp ??? l & colw ? e & r ? vart ?? i & am ? m ??? m & o & c ? dar ? n ? tyb ?? s & g ? iruot ?? t ! a ??? n & a & gaz ? nzop ?? i & bul ? cezczs ? molow ? nok ? zd & eb ? obeiws ??? uleiw ? y & tzslo ? z & rtek ? seic ???? o & c , fni ? gn ? k & celo ? zdolk ?? lkan ? n & leim ? pek ? t & uk ? yzczs ?? z & copo ? eing ? rowaj ??? rga ? tua ? w & ejarg ? ogarm ??? p & elks ? klwwortso ? ohs ?? romophcaz ? sos ? t & aiwop ? en ! esu ?? opos ? ra ? sezc ?? ude ? v & irp ? og ! . & ap ? gu ? mu ? o & p ? s ? wtsorats ?? rs ? w & opu ? u ????? w & a & l & corw ? sizdow ?? w ?? o & golg ? k & ark ? ul ? zsurp ?? r & az ? gew ?? tsugua ? z & coks ? sezr ???? xes ? y & buzsak ? d & azczseib ? ikseb ?? hcyt ? n & jes ? lod - zreimizak ?? pal ? r & ogt ? uzam ?? walup ? zutrak ?? z & am - awar ? c & aprak ? iwol ? zsogdyb ?? dalezc ? ib ? s & i & lak ? p ?? uklo ????? s ! . & gro ? moc ? ten ? ude ? vog ??? t ! . vog ?? x3b689qq6 - - nx ?? m & 00tsb3 - - nx ? a ? b ! . & gro ? moc ? ten ? ude ? vog ??? c ! . vog ?? d ! . & gro ? moc ? ten ? ude ? vog ??? f ? g ? h ? i ! . & ca ? gro ? moc ? oc ! . & clp ? dtl ??? t & en ? t ?? vt ?? k ? rbg4 - - nx ?? k ! . & drp ? e & rianiretev ? sserp ?? gro ? lim ? m & o & c ? n ?? t ?? nicedem ? ossa ? pooc ? s & eriaton ? neicamrahp ? sa ?? ude ? v & og ? uog ???? o ! . & dem ? gro ? m & oc ? uesum ?? o & c ? rp ?? ten ? ude ? vog ?? c ! . & a & c - morf , g & - morf , oy - sehcaet ,? i - morf , m & - morf , all & - a - si , amai ,?? p & - morf , c - a - si ,? s , v - morf , w - morf , z ,? b & ew - sndnyd , g ,? c & d - morf , n - morf , q , s - morf ,? d & e & ifitrec - & si , ton - si ,? llortnocduolc ,? i - morf , m - morf , n & - morf , abeht - htiw - si ,? s - morf , uolchr ,? e & ciffo - sndnyd , d : - morf , ocelgoog ,, erf - sndnyd , i & hcet - a - si , p - sekil ,? lgooghtiw , m & ina - otni - si , oh - & sndnyd , ta - sndnyd ,?? n & - morf , og - si ,? rihcec , s : run - a - si ,, t & i & nuarepo , s - ybboh ,? omer - sndnyd ,? v & als - elcibuc - a - si , itavresnoc - a - si ,?? fehc - a - si , golb & - sndnyd , sihtsetirw ,? h & n - morf , o - morf ,? i & h - morf , kiw - sndnyd , m - morf , r - morf , w - morf ,? jn - morf , k & a - morf , cils - si , eeg - a & - si , si ,? latsnaebcitsale , o - morf , row - & sndnyd , ta - sndnyd ,? u ,? l & a & - morf , rebil - a - si ,? f - morf , i & - morf , am - sndnyd ,? ru - & elpmis , taen ,? ssukoreh ,? mn - morf , n & a & cilbuper - a - si , f & - sllub - a - si , racsan - a - si ,? i & cisum - a - si , ratrebil - a - si ,?? c , eerg - a - si , i - morf , m - morf , o & isam - al - a - tse , rtap - el - tse , siam - al - a - tse ,? pj , t - morf ,? o & jodsnd , m - morf , n , r ,? p & i & - sndnyd , fles , ymteg ,? pa & lortnocduolc , ukoreh ,?? r & a : - morf , tskcor - a - si ,, b , e & enigne - na - si , ggolb - a - si , h & caet - a - si , pargotohp - a - si ,? krow - drah - a - si , n & gised - a - si , ia & rtlanosrep - a - si , tretne - na - si ,?? p & acsdnal - a - si , eekkoob - a - si ,? retac - a - si , tn & iap - a - si , uh - a - si ,? vres - sndnyd , y & alp - a - si , wal - a - si ,?? g , k , o & - morf , sivdalaicnanif - a - si , tc & a - na - si , od - a - si ,?? p - morf , u & as - o - nyd , eugolb - nom - tse ,?? s & aila & nyd , snd ,? bbevres , cip - sndnyd , e & lahw - eht - sevas , mag - otni - si ,? ipaelgoog , k - morf , m - morf , n & d & golb , mood , tog ,? ootrac - otni - si ,? r & ac - otni - si , etsohmaerd ,? se & l - rof - slles , rtca - na - si ,? u , wanozama . & 1 - & etupmoc : . & 1 - z , 2 - z ,?, ts & ae & - & as - & 3s , etisbew - 3s ,? su : - etisbew - 3s ,,? ht & ron - pa - & 3s , etisbew - 3s ,? uos - pa - & 3s , etisbew - 3s ,??? ew - & su - & 3s , etisbew - 3s ,? ue - & 3s , etisbew - 3s ,? vog - su - & 3s , etisbew - 3s , spif - 3s ,???? 2 - ts & aehtuos - pa - & 3s , etisbew - 3s ,? ew - su - & 3s , etisbew - 3s ,?? 3s , ble , etupmoc : . & 1 - ts & ae & - as , ht & ron - pa , uos - pa ,?? ew - & su , ue , vog - su ,?? 2 - ts & aehtuos - pa , ew - su ,??,?? t & arcomed - a - si , c - morf , eel & - si , rebu - si ,? m - morf , n & atnuocca - na - si , e & duts - a - si , r - ot - ecaps ,?? ops & edoc , golb , ppa ,? si & hcrana - & a - si , na - si ,? laicos - a - si , pareht - a - si , tra - na - si , xetn & od , seod ,?? u & - morf , nyekcoh - asi ,? v - morf ,? u & - rof - slles , e , h , oynahtretramssi , r : ug - a - si ,,? v & n - morf , w - morf ,? x & inuemoh , obaniateb , t - morf , unilemoh ,? y & dnacsekil , k - morf , u , w - morf ,???? p ? raf ? s ? t ! . & gro ? lim ? mo & c ? n ?? oc ? ten ? ude ? vog ??? uesum ! . & a & 92chg - seacinumocelet - e - soierroc - - nx ? atnav ? c & i & aduj ? rfatsae ?? rollam ?? d & anac ? enomaledasac ? irolf ?? e & raaihpledalihp ? srednu ?? g & hannavas ? oonattahc ?? hamo ? i & auhsu ? bmuloc ! hsitirb ?? dem ? groeg ? hpledalihp ? l & artsua ? etalif ?? n & igriv ? rofilac ?? ssur ? tsonod ?? ksa & la ? rben ?? l & lojal ? q - snl - - nx ? uossim ! trof ??? m & a & bala ? nap ?? enic ? o & m ? r ??? n & a & cirema ? idni ?? edasap ? ilorachtuos ? olecrab ?? r & abrabatnas ? ezzivs ?? su ? t & nalta ? osennim ?? zalp ?? c & dnotgnihsaw ? ebeuq ? i & depolcycne ? ficap ? hpargonaeco ? lbup ? sum ? t & carporihc ? lec ? naltadim ?? vu ?? yn ?? d & a & dhgab ? etsmraf ? m ? orliar ?? i & rdam ? ulegnedleeb ?? leif ? n & a ! l & gne ? nif ? ragyduj ? t & ocs ? rop ?? yram ??? u & brofsdgybmeh ? osdnaegami ??? r & augria ? ofxo ??? e & c & a & l & ap ? phtrib ?? ps ?? n & a & lubma ? tsiser ?? e & fedlatsaoc ? gilletni ? ics ! foyrotsih ???? pein ? rof ?? d & nukneklov ? revasem ?? e & rt ? tsurt ?? f & atnas ? ildliw ?? g & a & lliv ? tireh ! lanoitan ??? dirbmac ? rog ?? i & cnum ? nollaw ?? koorbrehs ? l & ab ? bib ? cycrotom ? i & ssim ? txet ?? oks ? tsac ?? m & affollah ? it ! iram ?? utsoc ?? n & golos ? ilno ? recul ?? r & a & uqs ? waled ! foetats ??? i & hs & acnal ? kroy ? pmahwen ?? otsih ?? omitlab ? ut & an ? cetihcra ? inruf ? luc ! irga ? su ??? vuol ?? s & abatad ? iacnarf ? sius ? uoh ! lum ??? t & a & locohc ? rak ? ts ! e ! yrtnuoc ! su ????? imesoy ? tevroc ?? u & qihpargonaeco ? velleb ?? vit & caretni ? omotua ??? f & iuj ? ohgrub ?? g & n & i & dliub ? ginerevmuesum ? kiv ? lahw ? nim ? peekemit ? vil ?? ulmmastsnuk ?? orf ? r & eb & merun ? nr & ats ? eun ??? u & b & ierf ? le ? m & ah ? uan ?? ram ? s & mailliw ! lainoloc ?? naitsirhc ? retepts ?? zlas ?? ob & irf ? mexul ????? h & atu ? c & raeser ? sirotsih ? uot ?? g & ea1h - - nx ? rubsttip ?? si & tirb ? wej ?? t & laeh ? ro & n ? wtrof ?? uo & mnom ? y ???? i & d6glbhbd9 - - nx ? iawah ? k & nisleh ? s ?? lad ! rodavlas ?? sissa ? tannicnic ?? k & c & nivleeg ? olc ! - dna - hctaw ? dnahctaw ??? fj ? inebis ? l & is ? ofron ?? na & rfenna ? t ?? oorbnarc ? r & am & ned ? reiets ?? oy ! wen ???? l & a & ci & dem ? golo & eahcra ? meg ? oz ?? natob ? rotsih ?? ertnom ? iromem ? noita & cude ? n ?? oc ? rutluc ? trop ? utriv ? van ?? e & nurb ? s & ab ? surb ?? utriv ?? i & artnogero ? sarb ?? l & a & besab ? hsnoegrus ?? e & hs ? rdnevle ?? i & b ? m ! dniw ???? o & bup ? ohcs ? tsirb ??? m & a & dretsma ? ets ? h & netlehc ? rud ??? ct ? elas ! urej ?? l & if ? ohkcots ? u ?? raf ? silanruoj ? u & esumyrotsihlarutan ? ira & tenalp ? uqa ?? terobra ??? n & a & c ! irema ! evitan ??? gihcim ? i & dni ? tpyge ?? mfoelsi ? wehctaksas ?? e & d & alokohcs ? ews ? rag ! cinatob ? lacinatob ? s & nerdlihc ? u ???? gahnepoc ? hcneum ? laftsew ? ppahcsnetewruutan ? r & dlihc ? ednaalv ? hu ! dnutamieh ??? sseig ?? gised ! dn & atra ? utsnuk ??? h & ab ! nesie ?? ojts ?? i & lreb ? tsua ?? l & eok ? ocnil ?? n & ob ? urbneohcs ?? o & dnol ? gero ? i & s & iv & dnadnuos ? elet ?? nam ?? t & a & c & inummoc ? ude ! tra ??? dnuof ? erc ? i & cossa ? va ?? kinummokelet ? nissassa ? r & belectsevrah ? oproc ? tsulli ?? silivic ? t & nalp ? s ?? vres & erp ? noclatnemnorivne ?? zilivic ?? c & elloc ? if - ecneics ?? ibihxe ??? ri ? s & dnah ? imaj ? reffej ? sral ?? t & erbepac ? nilc ? sob ??? r & e & b ? dom ? tsew ? uab ? zul ?? obredap ?? vahnebeok ? wot ?? o & 2a6v - seacinumoc - - nx ? ablib ? c & edtra ? ixemwen ? sicnarfnas ?? elap ? g & a & cihc ? to ?? eidnas ?? i & cadnuf ? diserp ? ratno ?? llecitnom ? mitiram ? nirot ? r & htna ? ienajedoir ??? pohskrow ? qari ? r & aw ! dloc ? livic ?? dd ? e & b & ma ? yc ?? irrac ? llimsiwel ? naksiznarf ? papswen ? t & aeht ? exe ? nec ! ecneics ? larutluc ? muesum ? tra ?? s & ehc & nam ? or ?? neum ?? upmoc ??? ia ! nepo ?? obal ? u & asonid ? obal ? takirak ??? s & a & l & g ? l & ad ? eh ??? xet ?? di & k ? pardnarg ?? e & cneics ! larutan ?? dnal ? hcsi & deuj ? rotsih ! nizidem ? rutan ?? selhcs ?? itinamuh ? l & aw ? egnasol ? l & e & rutansecneics ? xurb ?? iasrev ??? r & e & em ? ugif ?? tsac ?? suohcirotsih ? u & en ? q & adac ? itna ! nacirema ? su ????õç acinumoc ! elet - e - soierroc ??? gnirpsmlap ? htab ? i & lopanaidni ? rap ? uoltnias ? xa ?? l & essurb ? lod ?? mraeriflanoitan ? n & a & blats ? l ?? erdlihc ? oi & snam ? tacinummoc ! elet - dna - stsop ???ä l ?? re & dnalf ? lttes ? mraf ? nim ? tnececneics ?? s & alg ? erp ?? t & farc ! dnastra ?? nalp ? olip ? ra ! e & nif ? vitaroced ! su ??? su ? xuaeb ??? u & b ! muloc ?? cric ??? t & agilltrop ? cejorp ? dats ? e & esum ? kramnaidni ?? iorted ? ne & m & elttes ? norivne ? piuqemraf ?? vnoc ?? oped ? r & a ! drib ? enif ? gttuts ? hsiwej ? kcor ? n & acirema ? ootrac ?? tamsa ? yraropmetnoc ?? op & aes ? snart ? wen ?? ufknarf ?? s & a & cdaorb ? octsae ?? ewhtuos ? ilayol ? nuk ? r & ohnemled ? uhlyram ?? urt ??? u & a & bgreb ? etalpodaroloc ?? rmyc ?? w & ocsom ? rn ?? x & esse ? ineohp ? nam ? tas ?? y & a & bekaepasehc ? w & etag ? liar ??? camrahp ? doc ? e & hsub ? l & ekreb ? l & av ! eniwydnarb ?? ort ??? n & dys ? om ?? rrus ? s & nreug ? rejwen ??? golo & e & ahcra ? g ?? motne ? nh & cet ? te ?? oz ? po & rhtna ? t ?? roh ?? hpargotohp ? l & etalihp ? imaf ?? m & edaca ? onortsa ?? n & atob ? yn ?? ps ? r & a & ropmetnoc ? tilim ?? e & diorbme ? llag ! tra ?? vocsid ?? lewej ? nosameerf ? otsih ! dnaecneics ? ecneics ? gnivil ! su ?? la & col ? rutan ?? retupmoc ? su ?? tsudnidnaecneics ?? spelipe ? t & eicos ! lacirotsih ?? i & nummoc ? srevinu ?? nuoc ??? z & arg ? iewhcs ? nil ? ojadab ? urcatnas ??моки?םילשורי???? n & a ! . & gro ? moc ? ten ? ude ?? varac ?? c ! . & ah ? bh ? c & a ? s ?? d & 5xq55 - - nx ? g ? s ?? eh ? g & la0do - - nx ? ro ?? h & a ? q ? s ?? i & 7a0oi - - nx ? h ?? j & b ? f ? t ? x ? z ?? kh ? l & h ? im ? j ?? m & n ? oc ?? n & h ? l ? s ? y ?? om ? qc ? s & g ? j ?? ten ? ude ? vog ? wt ? x & g ? j ? n ? s ?? z & g ? x ?? 司 公 ? 絡 網 ? 络 网 ??? e & fuak ? hctik ? i & libommi ? w ?? r ?? g ! . & ca ? gro ? moc ? ten ? ude ? vog ??? h ! . & bog ? gro ? lim ? moc ? ten ? ude ??? i ! . & c & a ? in ?? dni ? gro ? lim ? mrif ? neg ? oc ? ser ? t & en ? opsgolb ,? ude ? vog ?? lreb ?? k ! . & gro ? ten ? ude ? vog ??? m ! . & cyn , gro ? ude ? vog ??? o & dnol ? i & siv ? t & a & cude ? dnuof ?? curtsnoc ??? mrom ? pq ? siam ?? p ! . & gro ? oc ? ten ? ude ? vog ??? s ! . & gro ? moc ? osrep ? tra ? ude ? v & inu ? uog ???? t ! . & dni ? esnefed ? gro ? ltni ? m & oc ! nim ?? siruot ?? n & erut ? if ?? o & fni ? srep ?? sn & e ? r ?? t & an ? en ! irga ? ude ?? rnr ?? unr ? vog ??? v ! . & ca ? eman ? gro ? htlaeh ? moc ? o & fni ? rp ?? t & en ? ni ?? ude ? vog ? zib ???? o & 76i4orfy - - nx ? a ! . & bp ? de ? go ? oc ? ti ? vg ??? b ! . & bog ? gro ? lim ? moc ? t & en ? ni ?? ude ? v & og ? t ??? olg ?? c ! . & bew ? cer ? gro ? lim ? m & o & c ? n ?? rif ?? ofni ? stra ? t & en ? ni ?? ude ? vog ??? d ! . & b & ew ? og ?? dls ? gro ? lim ? moc ? t & en ? ra ?? ude ? vog ??? e & c ? dor ?? f ! ni ! . & e & gdelwonk - fo - l & errab , lerrab ,? ht - skorg , rom - rof - ereh ,? llatiswonk , p & ifles , ohbew ,? ruo - rof , s & iht - skorg , ndnyd ,???? gnam ? i ! . & buhtig , moc ??? j ! . & eman ? gro ? hcs ? lim ? moc ? ten ? ude ? vog ??? m ! . & gro ? moc ? ten ? ude ? vog ?? il ?? n ! . & a & 0 & b - ekhgnark - - nx ? c - iehsrgev - - nx ? g - lksedlig - - nx ? k - negnanvk - - nx ?? 1 & p - nedragy - - nx ? q - & asierrs - - nx ? grebsnt - - nx ? lado - rs - - nx ? n & egnidl - - nx ? orf - rs - - nx ?? regnayh - - nx ? ssofenh - - nx ?? r - datsgrt - - nx ? s - ladrjts - - nx ? v - y & senner - - nx ? vrejks - - nx ??? 3g - datsobegh - - nx ? 4 & 5 - & dnaleprj - - nx ? goksnerl - - nx ? tednalyh - - nx ?? 6 - neladnjm - - nx ? s - & antouvachb - - nx ? impouvtalm - - nx ?? y - & agrjnevvad - - nx ? ikhvlaraeb - - nx ??? 7k - antouvacchb - - nx ? 8 & k - rekie - erv - - nx ? l - ladrua - rs - - nx ? m - darehsdrk - - nx ?? a ! . sg ?? bct - eimeuvejsemn - - nx ? d & do ? iisevvad ? lov ? narts ? uas ?? f & 1 - & l - - nx ? s - - nx ?? 2 - h - - nx ?? g & 10aq0 - ineve - - nx ? av ? ev ? lot ? r & ajn & evvad ? u ??á jn & evvad ? u ???? h ? iz - lf - - nx ? j & ddadab ? sel ?? k & el ? hoj & sarak ?šá r á k ?? iiv & ag & na & el ? g ??ŋ & ael ?á g ??? ran ??? l & f ? lahrevo ? o & ms ? s ?? sennev ? t - & ilm - - nx ? tom - - nx ?? u & - edr - - nx ? s ??ø ms ?? muar ? n & 0 - tsr - - nx ? 2 - dob - - nx ? 5 - & asir - - nx ? tals - - nx ?? a & r ! - i - om ? f ? t ?? t ?? douvsatvid ? kiv ? m & os ?ø s ?? n & od ?ø d ?? ra ? sen ? t & aouvatheig ? ouv & a & c & ch & ab ?á b ?? h & ab ?á b ??? n ?? i & ag ?á g ?? sa & mo ? ttvid ??á n ??? z - rey - - nx ?æ r & f ? t ??? o & p - & ladr - - nx ? sens - - nx ?? q - nagv - - nx ? r - asns - - nx ? s - kjks - - nx ? v - murb - - nx ? w - & anr & f - - nx ? t - - nx ?? ublk - - nx ??? ppol ? q & 0 - t & baol - - nx ? soum - - nx ? veib - - nx ?? x - & ipphl - - nx ? r & embh - - nx ? imph - - nx ??? y - tinks - - nx ?? r & f - atsr - - nx ? g - & an & ms - - nx ? nd - - nx ?? e & drf - - nx ? ngs - - nx ?? murs - - nx ? netl - - nx ? olmb - - nx ? sorr - - nx ?? h - & a & lms - - nx ? yrf - - nx ?? emjt - - nx ?? i & - & lboh - - nx ? rsir - - nx ? y & d & ar - - nx ? na - - nx ?? ksa - - nx ? lem - - nx ? r & ul - - nx ? yd - - nx ???? stu ?? j - & drav - - nx ? rolf - - nx ? sdav - - nx ?? kua ? l - & drojf - - nx ? lares - - nx ?? m - tlohr - - nx ? n - esans - - nx ? olf ? p - sdnil - - nx ? s - ladrl - - nx ? tih ? v - rvsyt - - nx ?? s & a & ns ? ons ?? i & ar ? er & dron ? r & os ?ø s ???á r ?? la & g ? h ?? mor ! t ?? sir ? uf ?å ns ?? t & koulo & nka ?ŋ k á?? la ? p - raddjb - - nx ? r - agrjnu - - nx ? s & aefr & ammah ?á mm á h ?? orf ? r & o ?ø??? u - vreiks - - nx ?? u & h - dnusel - - nx ? i - & drojfk - - nx ? vleslm - - nx ?? j - ekerom - - nx ? k - rekrem - - nx ? u - & dnalr - - nx ? goksr - - nx ? sensk - - nx ?? v - nekyr - - nx ? w - & k & abrd - - nx ? ivjg - - nx ?? oryso - - nx ?? y - y & dnas - - nx ? mrak - - nx ? n & art - - nx ? nif - - nx ?? reva - - nx ?? z - smort - - nx ?? v ! . sg ? ledatskork ? reiks ?? wh - antouvn - - nx ? x & 9 - dlofts - - nx . aoq - relv - - nx ? d - nmaherk - - nx ? f - dnalnks - - nx ? h - neltloh - - nx ? i - drgeppo - - nx ? j - gve & gnal - - nx ? lreb - - nx ?? m - negnilr - - nx ? n - drojfvk - - nx ?? y & 7 - ujdaehal - - nx ? 8 - antouvig - - nx ? b - & dlofrs - - nx ? goksmr - - nx ? kivryr - - nx ? retslj - - nx ?? e - nejsom - - nx ? f - y & krajb - - nx ? re & dni - - nx ? tso - - nx ?? stivk - - nx ?? g - regark - - nx ? orf ?ø rf ?? z9 - drojfstb - - nx ?? b & 25 - akiivagael - - nx ? 53ay7 - olousech - - nx ? a & iy - gv - - nx ? le - tl & b - - nx ? s - - nx ?? n0 - ydr - - nx ?? c & 0 - dnal - erdns - - nx ? z - netot - erts - - nx ?? g & g - regnarav - rs - - nx ? o - nejssendnas - - nx ?? ju - erdils - ertsy - - nx ? nj - dnalh - goksrua - - nx ? q & q - ladsmor - go - erm - - nx . & ari - yreh - - nx ? ednas ?? s - neslahsladrjts - - nx ??? ca & 4s - atsaefrmmh - - nx ? 8m - dnusynnrb - - nx ? il - tl - - nx ? le - slg - - nx ? n5 - rdib - - nx ? op - drgl - - nx ? uw - ynnrb - - nx ?? d & a & qx - tggrv - - nx ? reh ! nnivk ? sd & ork ?ø rk ?? uas ?? ts & e & bi ? kkar ? llyh ? nnan ?? g & ort ?ø rt ?? k & alf ? irderf ?? levev ? mirg ? obeg & ah ?æ h ?? r & ah ? ejg ???? barm - jdddb - - nx ? ie ! rah ? s & etivk ? ladman ??? lof & r & os ?ø s ?? ts & ev . ednas ? o . relav ?ø . rel å v ??? n & a & l & - erd & n & os ?ø s ?? ron ?? adroh . so ? dron . & a & g5 - b - - nx ? ri - yreh - - nx ?? ob ? y & oreh ?ø reh ??ø b ?? e & m ! lejh ?? pr & oj ?ø j ?? vi ?? gyb ? n & aks ?å ks ?? o & h - goksrua ? rf ?? r & o ? ua ?ø?? tros ?ø h - goksrua ?? rts ! e & devt ? lab ? mloh ??? s & ellil ? naitsirk ? rof ??? u & l ! os ?? s ! d & im ? lejt ?? e & guah ? l & a ?å??? kkoh ? lavk ? naitsirk ? r & af ? eg & e ? ie ??? tef ? y & onnorb ?ø nn ø rb ????? r & a & blavs ! . sg ?? g & eppo ? la ??? o & j & f & a ! dniv ? k ? vk ?? die ? e & dnas ? kkelf ?? llins ? r & iel ? ots ?? s & lab ? t & ab ?å b ?? yt ??å! k ??æ vk ?? les ?? ts ??å g & eppo ? l å??? ureksub . sen ?? e & ayb - yrettn - - nx ? d & ar ? lom ? r & of ?ø f ??å r ?? g & gyr ? nats ?? i & meuv & ejsem & aan ?åå n ?? sekaal ?? rjea ?? j & d & ef ? oks ?? les ?? k & er & aom ?å om ?? hgna & ark ?å rk ?? iregnir ? kot ! s ?? s & ig ? uaf ??? l & bmab ? kyb ? l & av ? ehtats ?? oh ?? m & it ? ojt ?ø jt ?? n & arg ? g & os ?ø s ?? meh ? reil ? te ? ummok ? yrb ?? r & dils - erts & ev ? y & o ?ø??? ua ? vod ?? sa & ans ?å ns ?? t & robraa ? spaav ?? urg ?? f & 62ats - ugsrop - - nx ? a & 10 - ujvrekkhr - - nx ? 7k - tajjrv - attm - - nx ?? o ! . sg ? h ?? s ! . sg ?? v ! . sg ??? g & 5aly - yr & n - - nx ? v - - nx ?? a & llor ? ve & gnal ? lreb ??? n & av ! snellu ?? org ?? oks & die ? m & or ?ø r ?? ner & ol ?ø l ?? r & o ?ø??? r & eb ! adnar ? edyps ? s & die ? elf ? gnok ? n & ot ?ø t ???? obspras ?? uahatsla ?å ve & gnal ? lreb ??? h & 0alu - ysm - - nx ? 7 & 4ay8 - akiivagg - - nx ? 5ay7 - atkoulok - - nx ?? a ! . sg ??? i & e & hsr & agev ?å gev ?? rf ?? k & h & avlaraeb ?á vlaraeb ?? s ?? lm & a ?å?? mpouvtal & am ?á m ?? pph & al ?á l ?? rrounaddleid ? ssaneve ?ššá neve ?? j & 0aoq - ysgv - - nx ? 94bawh - akhojrk - - nx ?? k & a & b & ord ?ø rd ?? jks ? lleis ?? iv ! aklejps ? l & am ? evs ? u ?? mag ? nel ? ojg ? r & a & l ? n ?? epok ? iel ? y & or ?ø r ??? s & ah ? kel ? om ??ø jg ?? kabene ? ojsarak ? ram & deh . & aoq - relv - - nx ? rel & av ?å v ?? so ?? e & let . & ag5 - b - - nx ? ob ?ø b ?? ra ???å jks ?? l & a ! d & anrus ? d & numurb ? ron ?? e & gnard ? nte ? s & meh ? sin ?? ttin ?? g & is ? nyl ?? kro ? l & em ? l & ejfttah ? of ?? u & ag - ertdim ? s ??? n & am ? era ? gos ? i & b ? nroh ? r ?? kos ? nus ? oj ?? o - & dron ? r & os ?ø s ??? ppo ? r & a ! l ? nram ?? e & gne ? l ? v ?? is ? o & jts ? ts ?? u & a - & dron ? r & os ?ø s ??? h ??å?æ l ?ø jts ?? s & e & jg ? nivk ? ryf ?? kav ? mor - go - er & om . & ednas ? yoreh ??ø m . & ednas ? y ø reh ??? uag ?? t & las ? rajh ? suan ?? v & l & a ? e - rots ?? u - go - eron ?? yt ?? ksedlig ? res & a ?å??? bib & eklof ? seklyf ?? es ! dah ?? h ! . sg ?? i & m ? syrt ?? l & ejf ? ov & etsua ? gnit ? ksa ? sdie ??? n ! . sg ?? o ! . sg ? boh ? g ? h ?? r ! . sg ??å! ksedlig ??ø boh ?? m & a & rah ? vk ?? f ! . sg ?? h ! . sg ?? i & e & h & dnort ? rtsua ? ssej ?? rkrejb ?? ksa ?? ol ? t ! . sg ?? u & dom ? esum ? r & ab ? drejg ? evle ? os ? uh ?æ b ?ø s ?? ttals ??? n & a & g & av ? okssman ?å v ?? jlis ? or ? r & g ? rev ??? e & d & do & sen ? ton ?? lah ? r & agy & o ?ø?? ojfsam ??? g & iets ? n & a & l & as ? lab ?? n & avk ?æ vk ?? t & arg ? ddosen ?? v & al ? essov ??? i & d & ol ?ø l ?? l & ar ?æ r ??? yl ?? reb ?? iks ? k & srot ? y & or ?ø r ??? l & a & d & gnos ? n & er ? ojm ?ø jm ?? om ?? tloh ?? ug ?å tloh ?? mmard ? ojs & om ? sendnas ?? ppolg ? s & lahsladr & ojts ?ø jts ?? o ?? t & o & l ? t - erts & ev ? o ?ø??? roh ?ø l ?? vly & kkys ? nav ?? yam - naj ! . sg ??ø js & om ? sendnas ??? g & orf ? ujb ?? i & dnaort ? vnarg ?? kob ? ladendua ? maherk & a ?å?? n & it ? urgsrop ?? orf - & dron ? r & os ?ø s ??? r & aieb ? evats ?? sfev ? uaks ? yrts ?? o & 6axi - ygvtsev - - nx ? c , d & ob ? rav ?? ievs ? kssouf ? l & m & ob ?ø b ?? ous & adna ? ech & ac ?áč??? so ! . sg ??? msdeks ? niekotuak ? r & egark ? olf ? y & oso ?ø so ??? s & dav ? mort ??? p & ed ? p & akdron ? elk ??? r & a & d & dj & ab ?á b ?? iab ?? jtif ? luag ? mah ? vsyt ?? e & gn & a & k & iel ? ro ?? merb ? n & at ? mas ?? rav - r & os ?ø s ?? srop ? talf ? v & ats ? el ?? y & oh ?ø h ??? ivsgnok ?? il ? jkniets ? k & a & nvej ? rem ? s & gnir ? nellu ??? ie - er & den ? v & o ?ø??? ram ? sa ?å rem ?? la & jf ? vh ?? m & b & ah ?á h ?? mahellil ?? nnul ? ts & l & oj ?ø j ?? ul ?? y & o ?ø??? imp & ah ?á h ?? m ! . sg ?? osir ? t ! . sg ??á di á b ?æ vsyt ?ø sir ?? s & adnil ? en & dnas ? e & dga ? k & ri & b ? k ?? som ?? ve ?? me & h ? jg ?? nroh - go - ejve ? s & a ? ednil ? k & o ?ø?? of ? yt ?å?? tsev ?? gv ? hf ? igaval ? o & r & or ?ø r ?? sman ?? so & fen & oh ?ø h ?? m ? v ?? uh & lem ? sreka . sen ??å! dnil ??? t & a & baol ? g & aov ? grav ?? jjr & av - attam ?á v - att á m ?? l & a & b ? s ??á s ?? soum ? ts ? v & eib ? our ??? e & dnaly & oh ?ø h ?? f ? s & nyt ? rokomsdeks ? sen ?? vtpiks ?? in & aks ?á ks ?? loh & ar ?å r ?? n ! . sg ?? o & m & a ?å?? psgolb ,? s ! . sg ? efremmah ? or ?ø r ?? terdi ?á & baol ? ggr á v ? l á & b ? s ?? soum ? veib ??? u & b ! . sg ? alk ? e & dna ? gnir ? nner ?? les ?æ lk ?? dra & b ? eb ?? g & nasrop ? vi ?ŋá srop ?? j & daehal & a ?á?? jedub ? v & arekkhar ?á rekkh á r ??? ksiouf ? n & diaegadvoug ? taed ??? v & irp ? lesl & am ?å m ??? y & b & essen ? nart ? sebel ? tsev ?? o & d & ar ? na ! s ?? or ?? gavtsev ? k & rajb ? sa ?? lem ? mrak ? n & art ? n & if ? orb ??? r & a & mah ? n ? v ?? e & dni ? t & so ? ton ?? va ?? ul ? yd ?? s & am ? enner ? gav ? lrak ? tivk ?? vrejks ??ø & d & ar ? na ! s ??ø r ?? g å vtsev ? k & rajb ? sa ?? lem ? mrak ? n & art ? n & if ?ø rb ??? r & e & dni ? t & so ? t ø n ?? va ?? ul ? yd ?æ & n ? v ??? s & enner ? g å v ? tivk ?å m ?? vrejks ???á & sl á g ? tl á? vreiks ??å & g å v ? h ? jdd å d å b ? lf ??ø & d & ob ? rav ?? r & egark ? olf ?? s & dav ? mort ???? u ?? ottat ? r ! . & cer ? erots ? gro ? m & o & c ? n ?? rif ? t ?? ofni ? stra ? t & n ? opsgolb ,? www ?? ea ! . & a & ac ? cgd ? idem ?? bulc ! orea ?? ci & ffartria ? taborea ?? e & c & alptekram ? n & a & l & lievrus - ria ? ubma ?? netniam ? rusni ?? erefnoc ??? gnahcxe ? mordorea ? ni & gne ? lria ? zagam ?? rawtfos ?? gni & d & art ? ilg ! arap ? gnah ??? l & dnahdnuorg ? ledom ?? noollab ? retac ? sael ? t & lusnoc ? uhcarap ?? vidyks ?? hcraeser ? ixat ? l & anruoj ? euf ? icnuoc ? ortnoc ! - ciffart - ria ??? n & gised ? oi & nu ? t & a & cifitrec ? ercer ? gi & tsevni - tnedicca ? van ?? i & cossa ! - regnessap ?? valivic ?? redef ?? cudorp ? neverp - tnedicca ???? ograc ? p & ihsnoipmahc ? uorg ! gnikrow ??? r & e & dart ? enigne ? korb ? niart ? trahc ?? o & htua ? tacude ??? s & citsigol ? e & civres ? r ?? krow ? serp ! xe ?? tnega ?? t & farcr & ia ? otor ?? hgi & erf ? l & f ? orcim ??? liubemoh ? n & atlusnoc ? e & duts ? m & esuma ? n & iatretne ? revog ?? piuqe ???? olip ? ropria ? si & lanruoj ? tneics ??? w & erc ? ohs ?? y & cnegreme ? dobper ? tefas ???? p ! . & a & ca ? pc ?? dem ? gne ? r & ab ? uj ?? wal ???? s ! . & gro ? moc ? ten ??? t ! . & gro ? lim ? moc ? ten ? ude ? vog ?? o & hp ? v ???? p & aehc ? g ! . & gro ? ibom ? moc ? ossa ? ten ? ude ??? j ! . & a & bihc ! . & a & bihciakoy ? don ? ma & him ? ye & ragan ? tat ??? r & a & bom ? gan ? hihci ?? u & agedos ? kas ? ustak ??? s & os ? ufomihs ?? t & amihcay ? iran ?? w & a & g & im & anah ? o ?? omak ?? kihci ? zustum ?? ihsak ?? y & agamak ? imonihci ??? e & akas ? nagot ?? i & azni ? esohc ? h & asa ? s & abanuf ? ohc ??? ka & to ? zok ?? musi ? orihs ? r & akihabihsokoy ? o & dim ? tak ?? ukujuk ?? usihs ?? nano & hc ? yk ?? o & d & iakustoy ? ustam ?? hsonhot ? k & a & rihs ? t ?? iba ?? nihsaran ? sobimanim ? tas & arihsimao ? imot ?? uhc ? yihcay ?? u & kujno ? s & ayaru ? t & imik ? tuf ??? zarasik ???? g & as ! . & a & gas ? m & a & tamah ? yik ?? ihsak ?? rat ? t & a & gatik ? hatik ?? ira ! ihsin ???? e & kaira ? nimimak ?? i & akneg ? g & aruyk ? o ?? h & c & amo ? uo ?? siorihs ?? kaznak ? modukuf ? ra & gonihsoy ? mi ??? nezih ? u & k & at ? ohuok ?? s & ot ? tarak ????? ihs ! . & a & kok ? m & a & hagan ? yirom ?? ihsakat ?? rabiam ? wagoton ?? e & miharot ? nokih ?? houyr ? i & azaihsin ? esok ? kustakat ? moihsagih ?? na & mihcahimo ? nok ?? o & hsia ? mag ? t & asoyot ? ok ? tir ??? us & ay ? t & asuk ? o ?????? k & aso ! . & a & d & awihsik ? eki ?? k & a & noyot ? s & akaayahihc ? oihsagih ??? oadat ? uziak ?? m & ayas ! akaso ?? odak ?? r & a & bustam ? wihsak ?? ediijuf ?? t & akarih ? i & k ? us ??? wag & ayen ? odoyihsagih ??? e & son ? tawanojihs ?? honim ? i & akas ? h & cugirom ? s & ayabadnot ? i & a & kat ? t ?? n ?? oyimusihsagih ??? k & a & rabi ? sim ?? ustakat ?? muzi ? r & ijat ? otamuk ??? nan & ak ? n & ah ? es ??? o & ay ? n & a & ganihcawak ? simuzi ? tak ?? eba ? ikibah ? oyot ?? t & anim ? iad ? omamihs ?? uhc ?? ust & oimuzi ? tes ???? ou & kuf ! . & a & d & amay ? eos ?? g & no ? ok ? usak ?? hiku ? k & awayim ? uzii ?? ma & kan ? y & asih ? im ??? rawak ? t & a & gon ? ka & h ? num ? t ??? umo ?? wa & g & a & kan ? nay ? t ?? ias ?? ko ! rih ??? y & ihsa ? usak ??? e & m & ay ? uruk ?? taruk ? us ?? i & a & nohs ? raihcat ?? goruk ? h & cukuf ? s & a & gih ? hukuy ?? in ??? k & a & gako ? muzim ?? iust ? o ? ustani ?? m & anim ? otihsoynihs ? u ?? r & ogo ? ugasas ?? usu ?? ne & siek ? zu & b ? kihc ??? o & gukihc ? h & ak ? ot ? ukihc ?? j & ono ? ukihc ?? kayim ? nihsukihc ? to ? uhc ?? u & fiazad ? gnihs ? stoyot ???? zihs ! . & a & bmetog ? d & amihs ? eijuf ? ihsoy ? omihs ?? kouzihs ? mihsim ? ra & biah ? honikam ?? tawi ? wa & g & ekak ? ukik ?? kijuf ?? yimonijuf ?? i & a & ra ? sok ?? hcamirom ? juf ? kaz & eamo ? ustam ?? ma & nnak ? ta ?? nukonuzi ? orukuf ?? nohenawak ? o & nosus ? ti ?? u & stamamah ? z & a & mun ? wak ?? i ! ay ? i & hs & agih ? in ?? manim ?? mihs ???????? m & a & tias ! . & a & d & ihsoy ? ot ? usah ?? k & a & dih ? sa ?? o & arihs ? s ??? m & a & tias ? y & as ? o & rom ? tah ?? ustamihsagih ??? i & hsagurust ? jawak ?? uri ?? ni ? wa & g & e & ko ? man ?? ikot ? o ?? k & ara ? i & hsoy ? mak ??? ru ? zorokot ?? y & a & g & amuk ? ihsok ? otah ?? kuf ?? imo ?? ziin ?? e & bakusak ? ogawak ? sogo ? ttas ? zokoy ?? i & baraw ? h & cugawak ? s & oyim ? ubustam ??? iroy ? k & ato ? ihs ? u & k ? stawi ??? m & akoyr ? i & hsoy ? juf ?? uziimak ??? naznar ? o & dakas ? ihsay ? jnoh ? n & a & go ? nim ?? imijuf ? nah ? oy ?? r & ihsayim ? otagan ?? t & asim ! ak ?? igus ? omatik ?? zak ?? u & bihcihc ! ihsagih ?? sonuok ? ynah ???? y & ak & aw ! . & a & d & ira ? notimak ?? kadih ? ma & h & arihs ? im ?? y & a & kaw ? tik ?? oduk ??? ru & ustakihcan ? y ?? sauy ? wa & g & a & dira ? zok ?? orih ?? konik ?? yok ? zok ?? e & banat ? dawi ?? i & garustak ? jiat ? mani ?? naniak ? o & bog ? nimik ? t & asim ? omihs & ah ? uk ???? ugnihs ??? o ! . & a & jos ? koasak ? m & ay & ako ? ust ?? ihsayah ?? r & abi ? ukawaihsin ?? wi & aka ? nam ??? e & gakay ? kaw ?? i & gan ? h & cu & kasa ? otes ?? sahakat ?? k & asim ? ihsaruk ?? miin ?? n & anemuk ? ezib ?? o & hsotas ? jnihs ? n & amat ? imagak ?? ohs ? uhcibik ????? ot ! . & a & damay ? got ? koakat ? may & etat ? ot ?? nahoj ? riat ? waki & inakan ? reman ??? eb & ayo ? oruk ?? i & h & asa ? ciimak ? sahanuf ?? kuzanu ? m & an & i ? ot ?? ih ??? nezuyn ? otnan ? u & hcuf ? stimukuf ? z & imi ? ou ??????? ihs & o & gak ! . & a & m & ayuok ? ihsogak ?? si ? yonak ?? e & banawak ? n & at & akan ? imanim ?? uka ?? tomoonihsin ?? i & adnesamustas ? k & azarukam ? oih ?? m & ama ? uzi ?? usuy ?? nesi ? o & knik ? os ? tomustam ?? uzimurat ??? rih ! . & a & ka & n ? s ?? m & ayukuf ? i & hsorihihsagih ? j & ate ? imakikaso ???? r & a & bohs ? h & ekat ? im ??? es ?? tiak ? wiad ?? e & kato ? ruk ?? i & h & ci & akustah ? mono ? nihs ?? s & inares ? oyim ??? manimasa ? uk ?? negokikesnij ? o & gnoh ? namuk ?? uhcuf ???? uk & ot ! . & a & bihci ? mi & hsu & kot ? stamok ?? m ?? wagakan ?? egihsustam ? i & gum ? h & coganas ? soyim ?? kijaw ? m & anim ? uzia ?? ukihsihs ?? nan & a ? iak ?? o & nati ? turan ???? uf ! . & a & batuf ? m & a & to ? y & enak ? irok ??? ihs & im ? ukuf ?? os ? uko ?? r & aboihsatik ? uganat ?? ta & katik ? mawak ? rih ?? w & a & g & akus ? emas ? uy ?? k & a & mat ? rihs ? sa ?? ihsi ?? nah ?? ohs ??? e & gnabuzia ? iman ? ta & d ? tii ??? i & adnab ? enet ? hs & agih ? iimagak ?? k & a & wi ? zimuzi ?? ubay ?? minuk ? r & ook ? ustamay ??? nihsiat ? o & g & etomo ? ihsin ? nan ? omihs ?? no ! duruf ? rih ?? rihsawani ? ta & may ? simuzia ??? u & rahim ? stamakawuzia ? zia & ihsin ? nay ??????? nug ! . & a & bawak ? doyihc ? k & anna ? oi & hsoy ? juf ? mot ??? m & ayakat ? ustagaihsagih ?? n & ihsatak ? nak ?? r & ahonagan ? nak ? o ? u & kati ? mamat ??? t & amun ? inomihs ? o ?? w & akubihs ? iem ? ohs ??? i & hsa & beam ? yabetat ?? kas & akat ? esi ?? m & akanim ? uzio ?? ogamust ? rodim ?? o & jonakan ? n & eu ? oyikust ?? tnihs ?? u & komnan ? stasuk ? yrik ????? ran ! . & a & bihsak ? d & akatotamay ? u ! o ??? guraki ? m & ay & atik & imak ? omihs ?? irokotamay ?? oki ?? ra & hihsak ? n ?? wa & geson ? knet ??? e & kayim ? ozamay ? sog ? ustim ?? i & a & rukas ? wak ?? garustak ? h & ciomihs ? sinawak ?? jo ? ka & mnak ? toruk ?? makawak ? nos ? r & net ? otakat ? ugeh ??? o & d & na ? oyo ?? gnas ? jnihs ? nihsoy ! ihsagih ?? tomarawat ? yrok ???? t & ag & amay ! . & a & dihsio ? k & atarihs ? ourust ?? may & a & kan ? rum ?? enak ? onimak ?? rukho ? ta & ga & may ? nuf ?? hakat ? kas ?? wa & g & ekas ? orumam ?? ki & hsin ? m ?? z & anabo ? enoy ? ot ??? zuy ?? e & agas ? bonamay ? dii ? nihsagih ? o ?? i & a & gan ? nohs ?? h & asa ? sinawak ?? nugo ?? o & dnet ? jnihs ? ynan ?? ukohak ??? iin ! . & a & ga ? k & ium ? oagan ?? munou ! imanim ?? t & a & bihs ? giin ?? ioy ?? w & a & gioti ? kikes ? zuy ?? irak ?? yijo ?? e & kustim ? mabust ?? i & aniat ? hcamakot ? kaz & awihsak ? omuzi ?? m & a & gat ? karum ?? o ??? n & anust ? esog ?? o & das ? ihcot ? jnas ? k & ihay ? oym ?? mak ? naga ? ries ?? u & ories ? steoj ????? i & ka ! . & a & go ? k & asok ? oimak ?? t & ago ! rihcah ?? ika ! atik ??? w & aki ? oyk ??? e & mojog ? natim ? suranihsagih ? t & ado ? okoy ??? i & hsoyirom ? magatak ? naokimak ?? nesiad ? o & hakin ? jnoh ! iruy ?? nuzak ? rihson ? tasi & juf ? m ?? yjnoh ?? u & kobmes ? oppah ???? o ! . & a & dakatognub ? m & asah ? ihsemih ?? su ? t & ekat ? i & h ? o ???? e & onokok ? ustimak ?? i & jih ? k & asinuk ? ias ? usu ?? mukust ?? onoognub ? u & fuy ? juk ? ppeb ? suk ?????? wa & ga & k ! . & a & mihsoan ? rihotok ? waga & kihsagih ? ya ??? emaguram ? i & j & nonak ? ustnez ?? kunas ? monihcu ?? o & hsonot ? nnam ? yotim ?? u & st & amakat ? odat ?? zatu ???? nak ! . & a & dustam ? kus & okoy ? tarih ?? maz ? nibe ? r & a & gihsaimanim ? h & esi ? imagas ?? wa & do ? guy ??? u & im ? kamak ??? tikamay ? wa & k & ia ? oyik ? umas ?? sijuf ?? yimonin ?? e & nokah ? saya ?? i & akan ? esiak ? gusta ? hsuz ? kasagihc ? o ? ukust ?? o & nadah ? sio ? tamay ????? kihsi ! . & a & danihcu ? gak ? kihs ? mijaw ? t & abust ? ikawak ?? wazanak ?? i & gurust ? hcionon ? mon ? ukah ?? nasukah ? o & anan ? ton ! akan ??? u & kohak ? stamok ? z & imana ? us ????? niko ! . & a & han ? m & arat ? ijemuk ? uru ?? n & e & dak ? zi ?? no ?? ra & hihsin ? rih ?? wa & kihsi ? niko ?? yehi ? zonig ?? e & osaru ? seay ?? i & hsagih ? jomihs ? k & a & gihsi ? not ?? ihsakot ?? m & a & ginuk ? kihsug ? maz ?? igo ? otekat ?? nuga ! noy ??? n & a & moti ? timoy ? wonig ?? i & jikan ? k ??? o & gan ? jnan ? tiad & atik ? imanim ??? u & botom ? kusug & akan ! atik ?? imot ?? rab & anoy ? eah ??????? ca ? d & a ? e ?? e & im ! . & a & bot ? k & asustam ? uzus ?? m & a & him ? y & emak ? im ??? ihs ?? nawuk ? wi & em ? k ??? e & bani ? ogawak ? si ! imanim ??? i & arataw ? gusim ? h & asa ? ciakkoy ?? k & a & mat ? sosik ? t ?? iat ?? raban ?? o & dat ? hik ? n & amuk ? ihseru ? o & du ? mok ???? ust ??? mihe ! . & a & m & a & h & ataway ? iin ?? yustam ?? ij & awu ? imak ??? taki ! man ??? ebot ? i & anoh ? kasam ? rabami ?? n & ania ? egokamuk ? oot ?? o & jias ? kihcu ? nustam ? uhcukokihs ? yi ! es ??? u & kohik ? zo ???? n ! amihs ! . & a & d & amah ? ho ? usam ?? kustay ? m & a ? ihsoni & hsin ? ko ??? wakih ?? e & namihs ? ustam ?? i & g & aka ? usay ?? konikak ? mikih ?? nannu ? o & mu & kay ? zi ! ihsagih ? uko ??? nawust ? tasim ?? u & stog ? yamat ????? tawi ! . & a & bahay ? d & amay ? on ?? koirom ? t & a & honat ? katnezukir ?? imus ?? w & a & s & ijuf ? uzim ?? zikat ?? ihs ??? e & hon & i & hci ? n ?? uk ?? tawi ?? i & a & duf ? murak ? wak ?? h & custo ? si & amak ? ukuzihs ??? j & oboj ? uk ?? k & a & m & anah ? uzuk ?? sagenak ?? esonihci ?? m & akatik ? uzia & rih ? wi ???? o & kayim ? no & rih ? t ?? tanufo ?? uhso ???? gl ? i & g & ayim ! . & a & dukak ? m & a & goihs ? kihs ?? ihsustam ! ihsagih ?? un & awi ? nesek ??? r & awago ? iho ?? ta & bihs ? rum ?? w & a & gano ? kuruf ?? iat ?? y & imot ? ukaw ??? e & mot ? nimes ?? i & hsiorihs ? ka & monihsi ? s & awak ? o ??? mak ? r & ataw ? o & muram ? tan ???? o & az ? jagat ? t & asim ? omamay ??? u & fir ? k & irnasimanim ? uhsakihcihs ????? ihcot ! . & a & g & a & h ? kihsa ?? ust ?? kom ? m & ay & o ? usarak ?? unak ?? r & a & boihsusan ? watho ?? iho ? ukas ?? t & akihsin ? iay ?? wa & konimak ? zenakat ?? y & imonustu ? oihs ??? e & iiju ? kustomihs ? nufawi ?? i & akihci ? g & etom ? ihcot ? on ??? o & k & ihsam ? kin ?? nas ? sioruk ? tab ?? u & bim ? san ????? h & c & ia ! . & a & dnah ? m & a ! h & akat ? im ?? yuni ?? ihs & ibot ? ust ??? r & a & hat ? tihs ?? ik ? u & ihsagih ? kawi ??? t & ihc ? o & k ? yot ??? wa & koyot ? zani ?? yi & monihci ? rak ??? e & inak ? k & aoyot ? usa ?? manokot ? noyot ? tukagan ?? i & a & gusak ? kot ? sia ?? eot ? h & asairawo ? cugo ? s & ahoyot ? oyim ??? k & a & mok ? zako ?? ihssi ?? motay ? rogamag ?? n & an & ikeh ? ok ?? ihssin ?? o & got ? ihsin ? jna ? rihsnihs ? suf ? tes ?? u & bo ? raho ? s & oyik ? takihs ?? yrihc ? zah ???? ok ! . & a & dusay ? kadih ? mayotom ? r & ah & im ? usuy ?? umakan ?? sot ! ihsin ?? wa & g & atik ? odoyin ?? k & as ? o ???? i & esieg ? hco ! k ?? jamu ? k & a ! sus ?? usto ?? ma & gak ? k ?? rahan ?? o & mukus ? n & i ? ust ! ihsagih ??? torum ? yot ! o ??? u & koknan ? zimihsasot ???? ugamay ! . & a & m & ayukot ? ihso ?? toyot ?? e & bu ? subat ?? i & gah ? kesonomihs ? nukawi ? rakih ?? nanuhs ? otagan ? u & ba ? foh ? otim ? stamaduk ? uy ????? sanamay ! . & a & dihsoyijuf ? mayabat ? r & ahoneu ? ustakihsin ?? w & a & k & ayah ? ijuf ?? suran ?? ohs ??? egusok ? i & ak ? h & cimakan ? s & anamay ? od ??? k & asarin ? u & feuf ? sto ???? o & k & akanamay ? ihcugawakijuf ?? nihso ? t & asimawakihci ? ukoh ?? uhc ?? spla - imanim ? u & b & nan ? onim ?? fok ? hsok ? rust ????? ka & rabi ! . & a & bukust ? gok ? kan ! ihcatih ?? m & a & sak ? timo ? wi ?? ihsak ? ustomihs ?? ni ? r & a & hihcu ? way ?? u & agimusak ? ihcust ??? t & ag & amay ? eman ?? oihcatih ?? w & ag & arukas ? o ?? os ?? yi & moihcatih ? rom ??? e & bomot ? dirot ? not ? tadomihs ?? i & a & k & as ? ot ?? rao ?? esukihc ? gahakat ? h & asa ? catih ?? k & a & rabi ? saguyr ?? ihsani ? uy ?? ma ? rukustamat ?? o & dnab ? giad ? him ? kati ? rihsijuf ? soj ? t & asorihs ? im ?? yihcay ?? u & fius ? kihsu ? simak ???? sagan ! . & a & m & abo ? ihsust ?? natawak ? r & abamihs ? u & mo ? ustam ??? wijihc ? yahasi ?? i & akias ? hies ? k & asagan ? i ?? masah ?? neznu ? o & besas ? darih ? t & eso ? og ! imaknihs ???? ust & igot ? onihcuk ? uf ???? zayim ! . & a & biihs ? guyh ? k & oebon ? ustorom ?? mihsuk ? r & emihsin ? uatik ?? ta & katik ? mim ?? wag & atik ? odak ?? ya ?? e & banakat ? sakog ?? i & hsayabok ? kaza & kat ? yim ?? m & animawak ? ot & inuk ? nihs ???? nanihcin ? o & j & ik ? onokayim ?? n & ibe ? ust ?? tias ?? urahakat ???? ro & moa ! . & a & dawot ? turust ? wasim ?? e & hon & ihc & ah ? ihs ?? nas ? og ? ukor ?? sario ?? i & anarih ? ganayati ? hsioruk ? jehon ? kasorih ? makihsah ? nawo ? r & amodakan ? omoa ??? o & gnihs ? kkat ?? u & ragust ? stum ???? ttot ! . & a & r & ahawak ? uotok ?? sa & kaw ? sim ??? egok ? irottot ? nanihcin ? o & ganoy ? nih ? tanimiakas ?? u & bnan ? z & ay ? ihc ?????? ukuf ! . & a & deki ? gurust ? ma & bo ? h & akat ? im ?? yustak ?? sakaw ?? eabas ? i & akas ? ho ? jiehie ? ukuf ?? nezihce ! imanim ?? ono ???? o & c ? diakkoh ! . & a & deki ? gakihset ? hcebihs ? k & adih ? u & fib ? narihs ??? m & ayiruk ? hot ? ihs & orihatik ? ukuf ?? oras ? usta ?? r & ib & a ! ka ?? o ? uruf ?? ozo ? u & gakihsagih ? oyot ??? sakim ? ta & gikust ? mun ?? w & a & ga & k & an ? uf ?? nus ! imak ??? k & aru ? i & h & asa ? sagih ?? kat ? mak ?? omihs ? um ?? zimawi ?? ine ? oyk ?? yot ?? e & a & mustam ? nan ?? b & a & kihs ? yak ?? o & noroh ? to ??? ian ? k & ihsam ? ufoto ?? nakami ? ppoko ! ihsin ?? sotihc ? tad ! okah ?? uonikat ?? i & a & bib ? mokamot ? n & a & k & kaw ? oroh ?? wi ?? eomak ? ihsatu ? okik ? usta & moruk ? sakan ???? eib ? h & c & ioy ? u & bmek ? irihs ??? s & ase ? ekka ? oknar ? uesom ??? jufirihsir ? k & amamihs ? i & at ? n ??? m & atik ? otoyot ?? oa & kihs ? rihs ?? r & a & hs ? kihsi ? mot ?? ihs & aba ? ir ?? otarib ??? n & a & hctuk ? rorum ? se ? tokahs ?? uber ?? o & kayot ? m & ire ? ukay ?? naruf ! ima & k ? nim ??? orih ? r & ih & ibo ? suk ?? o & bah ? h & i & b ? hsimak ?? sa ?? pnan ? yan ?? umen ?? t & asoyik ? eko ? ukoh ??? u & bassa ? kotnihs ? m & assaw ? uo ?? pp & akiin ? en & ioto ? nuk ?? ip ?? rato ? s & akat ? t & eb & e ? i & a ? hs ! a ?? robon ?? m & e ? o & m ? takan ??? no & h ? tamah ?? o & mik ? s ? t ?? u & kir ? ppihc ? st ??? onihsnihs ? ufuras ?? uaru ?? yru ! koh ?? zimihs ! ok ????? g ! oyh ! . & a & bmat ? dnas ? gusak ? k & at ? o & oyot ? y ?? uzarakat ?? m & ayasas ? irah ?? wa & g & ani ? okak ?? k & i & hci ? mak ?? oy ??? yi & hsa ? monihsin ??? i & asak ? hs & aka ? i & at ? nawak ??? j & awa ! imanim ?? emih ?? k & a & goa ? s & agama ? ukuf ?? wihsin ?? i & hsog ? m ??? mati ? oia ? rogimak ?? n & annas ? esnonihs ?? o & gasa ! kat ?? ka ? n & ikat ? o ? ustat ?? rihsay ? sihs ? tomus ? yas ?? u & bay ? gnihs ????? nagan ! . & a & bukah ? d & a & w ? yim ?? e & ki ? u ?? ii ?? k & a & s & ay ? uki ?? zus ?? ihsoo ? ousay ?? m & ay & akat ? ii ?? i & hsukufosik ? jii ?? ukihc ?? n & i ! hsetat ?? uzii ?? r & ah ? ugot ?? saim ? t & agamay ? oyim ?? w & a & g & a & kan ? n ?? o ?? kustam ? ziurak ?? onim ! imanim ?? u & koo ? s ! omihs ???? ya & ko ? rih ??? e & akas ? nagamok ? subo ?? i & gakat ? h & asa ? c & a ! mo ! nanihs ??? uonamay ?? sukagot ?? k & a & kas ? mimanim ? to ?? ia & atik ? imanim ?? oa ? uzihcom ?? m & akawak ? ijuf ? o ! t ??? r & ato ? ijoihs ? omakat ??? n & ana ? esnoawazon ?? o & hukas ? n & a & gan ? kan ?? i & hc ? muza ?? ustat ?? romok ? si & gan ? k ?? tomustam ?? u & k & as ? ohukihc ?? stamega ???? to & mamuk ! . & a & gamay ? mihsak ? rahihsin ? s & ok ? ukama ! imak ??? tamanim ?? enufim ? i & h & cukik ? soyotih ?? k & ihsam ? u ?? nugo ! imanim ?? romakat ?? o & ara ? rihsustay ? sa ? t & amay ? om & amuk ? us ?? u ! koyg ??? yohc ?? u & sagan ? zo ???? yk ! . & a & bmatoyk ? k & ies ? oemak ? uzaw ?? mayi & h & cukuf ? sagih ?? muk ?? nihsamay ? rawatiju ? t & away ? ik ??? e & ba & nat ! oyk ?? ya ?? di ? ni ?? i & ju ? kazamayo ? manim ?? natnan ? o & gnatoyk ? kum ? mak ? rihsamayimanim ? y & gakan ? ka & koagan ? s ?? oj ??? u & ruziam ? z & ayim ? ik ?????? ykot ! . & a & d & i & hcam ? mus ?? oyihc ?? k & atim ? ihsustak ?? m & a & t ! uko ?? yarumihsa & gih ? sum ??? i & hs & agoa ? ika ? o ! t ?? uzuok ?? ren ??? r & a & honih ? wasago ?? iadok ? umah ?? ssuf ? t & ik ? o ?? wa & g & anihs ? ode ?? k & ara ? ihcat ??? y & agates ? ubihs ??? e & amok ? donih ? m & o ? urukihsagih ?? soyik ?? i & enagok ? gani ? h & ca & da ? tinuk ?? sabati ?? j & nubukok ? oihcah ?? manigus ?? o & huzim ? jihcah ? n & akan ? ih ! sasum ?? urika ?? rugem ? t & a & mayihsagih ? nim ?? iat ? ok ?? uhc ? yknub ?? u & fohc ? hcuf ? kujnihs ????? r & g ? o ?? topsgolb , ufig ! . & a & d & eki ? ih ?? kimot ? m & ayakat ? ihsah ?? ne ? raha & gi & kes ? makak ?? sak ?? taga & may ? tik ?? wa & g & ibi ? ustakan ?? karihs ! ihsagih ???? e & katim ? uawak ?? i & gohakas ? hc & apna ? uonaw ?? k & ago ? es ? ot ?? m & anuzim ? ijat ?? nak ? urat ?? nanig ? o & dog ? jug ? makonim ? nim ? roy ? sihcih ?? u & fig ? s & otom ? t & amasak ? oay ???????? k ! . & art ? gro ? moc ? per ? ude ? vog ??? m ! ac ?? nd ? o & g ? oc ?? t ?? q & a ? g ? i ! . & gro ? lim ? moc ? ten ? ude ? vog ??? m ?? r & a ! . & bog ? gro ? lim ? moc ! . topsgolb ,? rut ? t & en ? ni ?? ude ?? 4d5a4prebgm - - nx ? b ? los ? tsuen ?? b ! . & 21g ? b ! mi ?? c & er ? sp ? te ?? d & em ? mb ? n & f ? i ?? rt ?? f & gg ? ni ?? g & el ? l & s ? z ?? n & c ? e ?? ol & b ? f ? v ?? pp ? ro ?? i & kiw ? sp ? te ? xat ?? l & el ? im ? sq ?? m & a ? da ? f ? ic ? o & c ! . topsgolb ,? n ??? nce ? o & ce ? do ? et ? i & b ? dar ?? rp ? ta ?? p & m & e ? t ?? ooc ? se ?? qra ? r & af ? ga ? oj ? tn ? ut ?? su & j ? m ?? t & am ? e & n ? v ?? nc ? o & f ? n ?? ra ? sf ?? ude ? v & da ? og ? rs ? t ???? c ! . & as ? ca ? de ? if ? o & c ? g ?? ro ??? e & e & b ? rac ?? t & nec ? upmoc ??? f ! . & aterg ? cidessa ? drp ? e & citsuj - reissiuh ? rianiretev ? sserp ?? i & cc ? rgabmahc ?? m & o & c ? n ?? t ?? n & eicamrahp ? icedem ?? ossa ? se & lbatpmoc - strepxe ? riaton ? tsitned - sneigrurihc ? uova ?? t & acova ? opsgolb , r & epxe - ertemoeg ? op ! orea ???? vuog ?? avc7ylqbgm - - nx ?? g ! . & gro ? moc ? t & en ? opsgolb ,? ude ? vog ??? h ! . & eman ? mo & c ? rf ?? zi ?? ur ?? i ! . & a & 61f4a3abgm - - nx ? rf4a3abgm - - nx ?? ca ? di ? gro ? hcs ? oc ? ten ? vog ?نار & يا?یا??? aper ?? k ! . & c & a ? s ?? e & n ? p ? r ?? gk ? iggnoeyg ? kub & gn & oeyg ? uhc ?? noej ?? l & im ? uoes ?? man & gn & oeyg ? uhc ?? noej ?? n & as & lu ? ub ?? o & e & hcni ? jead ?? wgnag ??? o & c ? g ?? ro ? s & e ? h ? m ?? topsgolb , u & gead ? j & ej ? gnawg ????? l ! . & gro ? moc ? ten ? ude ? vog ??? m ! . & topsgolb , vog ??? n ! . & gro ? moc ? ofni ? ten ? ude ? vog ? zib ??? otca ? p ! . & alsi ? ca ? eman ? forp ? gro ? moc ? o & fni ? rp ?? t & en ? se ?? ude ? vog ? zib ??? s ? t . cn . vog ?? s & 8sqif - - nx ? 9zqif - - nx ? a ! . vog ? gev ? lliv ? mtsirhc ?? b ! . & gro ? moc ? ten ? ude ? vog ?? oj ?? ci & hparg ? p ?? d & nomaid ? rac ?? e ! . & bog ? gro ? mo & c ! . topsgolb ,? n ?? ude ?? d & d2bgm - - nx ? oc ?? i & lppus ? rtsudni ? treporp ?? jaiv ? l & cycrotom ? gnis ?? moh ? ohs ? picer ? rutnev ? si & rpretne ? urc ??? g ! nidloh ?? h5c822qif - - nx ? i ! . & ekacpuc , gro ? moc ? t & en ? ni ?? ude ? vog ??? k & cor ? hxda08 - - nx ? row ?? l ! . & gro ? oc ?? atner ? oot ?? m ! etsys ?? n & agorf ? ia & grab ? mod ?? oit & acav ? cudorp ? ulos ??? o & dnoc ? t & ohp ? ua ??? p ! . & ces ? gro ? moc ? olp ? ten ? ude ? vog ?? it ?? r ! . & ca ? gro ? ni ? oc ? ude ? vog ?? atiug ? e & dliub ? erac ? ntrap ?? otcartnoc ?? s & alg ? enisub ?? t & h & cay ? gilf ?? neve ? rap ?? u ! . & a & c ! . & 21k ? bil ? cc ??? g ! . & 21k ? bil ? cc ??? i ! . & 21k ? bil ? cc ??? l ! . & 21k ? bil ? cc ??? m ! . & 21k ! . & hcorap ? rthc ? tvp ??? bil ? cc ??? p ! . & 21k ? bil ? cc ??? si ? v ! . & 21k ? bil ? cc ??? w ! . & 21k ? bil ? cc ???? c & d ! . & 21k ? bil ? cc ??? n ! . & 21k ? bil ? cc ??? s ! . & 21k ? bil ? cc ???? d & ef ? i ! . & 21k ? bil ? cc ??? m ! . & 21k ? bil ? cc ??? n ! . & 21k ? bil ? cc ??? s ! . & bil ? cc ???? e & d ! . & 21k ? bil ? cc ??? las - 4 - & dnal , ffuts ,? m ! . & 21k ? bil ? cc ??? n ! . & 21k ? bil ? cc ???? h & n ! . & 21k ? bil ? cc ??? o ! . & 21k ? bil ? cc ???? i & h ! . & bil ? cc ??? m ! . & 21k ? bil ? cc ??? nd ? r ! . & 21k ? bil ? cc ??? v ! . & 21k ? bil ? cc ??? w ! . & 21k ? bil ? cc ???? jn ! . & 21k ? bil ? cc ??? k & a ! . & 21k ? bil ? cc ??? o ! . & 21k ? bil ? cc ???? l & a ! . & 21k ? bil ? cc ??? f ! . & 21k ? bil ? cc ??? i ! . & 21k ? bil ? cc ???? mn ! . & 21k ? bil ? cc ??? n & i ! . & 21k ? bil ? cc ??? m ! . & 21k ? bil ? cc ??? sn ? t ! . & 21k ? bil ? cc ???? o & c ! . & 21k ? bil ? cc ??? m ! . & 21k ? bil ? cc ???? r & a ! . & 21k ? bil ? cc ??? o ! . & 21k ? bil ? cc ??? p ! . & 21k ? bil ? cc ???? s & a ! . & 21k ? bil ? cc ??? dik ? k ! . & 21k ? bil ? cc ??? m ! . & 21k ? bil ? cc ???? t & c ! . & 21k ? bil ? cc ??? m ! . & 21k ? bil ? cc ??? u ! . & 21k ? bil ? cc ??? v ! . & 21k ? bil ? cc ???? ug ! . & 21k ? bil ? cc ??? v & n ! . & 21k ? bil ? cc ??? w ! . cc ??? xt ! . & 21k ? bil ? cc ??? y & b - si , k ! . & 21k ? bil ? cc ??? n ! . & 21k ? bil ? cc ??? w ! . & 21k ? bil ? cc ???? za ! . & 21k ? bil ? cc ???? ah ? e ?? w ! . & gro ? moc ? s & ndnyd , tepym ,? ten ? ude ? vog ?? eiver ??? t & 0srzc - - nx ? a ! . & ca ? o & c ! . topsgolb ,? fni ,? ro ? v & g ? irp ,? zib ,? c ? rcomed ?? b ! . & gro ? moc ? ten ? ude ? vog ??? e & em ? n ! . & a & l - morf , z ,? bg , dnab - eht - ni , e & ht - no - eciffo , libom - eruza , mohtanyd , nozdop , rehurht , s , tis - repparcs ,? fehc - a - si , k & eeg - a & - si , si ,? u ,? o & c - morf , jodsnd ,? p & i & emoh , fles ,? j , mac - dnab - ta , o & - oidar - mah , hbew ,? paduolc , tfe & moh , vres ,?? s & aila & nyd , snd ,? bbevres , e & suohsyub , tisbeweruza ,? ndgolb , sa - skcik ,? t & enretnifodne , i - & ekorb , s & eod , lles , teg ,?? norfduolc , sixetnod ,? uh , x & inuemoh , unilemoh ,? y & ltsaf . & dorp . & a , labolg ,? lss . & a , b , labolg ,?? n - morf ,? za - morf ,??? fig ? g ! . & bog ? dni ? gro ? lim ? moc ? ten ? ude ??? h ! . & dem ? gro ? l & er ? op ?? m & oc ? rif ?? o & fni ? rp ? s & rep ? sa ??? po & hs ? oc ?? t & en ? luda ? ra ?? ude ? vuog ??? i ! . & a & b ? c ! cul ?? i & blo & - oipmet ? oipmet ?? cserb ? g & gof ? urep ?? lime & - oigger ? oigger ?? n & a & brev ? tac ?? obrac & - saiselgi ? saiselgi ?? resi ?? otsip ? r & balac & - oigger ? oigger ?? dna & - & attelrab - inart ? inart - attelrab ?? attelrabinart ? inartattelrab ? ssela ?? epmi ?? tnelav & - obiv ? obiv ?? vap ? z & e & nev ? ps & - al ? al ??? irog ??? l & iuqa ! l ?? leib ?? m & or ? rap ?? n ! e & dom ? is ? sec & - ilrof ? ilrof ??? golob ? i & ssem ? tal ?? ne ! var ?? o & cna ? merc ? rev ? vas ??? oneg ? p ? r ! a & csep ? rr & ac & - assam ? assam ?? ef ?? von ?? etam ? tsailgo ! - lled ? lled ??? s ! ip ? sam & - ararrac ? ararrac ?? u & caris ? gar ??? t ! arecam ? resac ? soa ? te & lrab & - & airdna - inart ? inart - airdna ?? airdnainart ? inartairdna ?? ssinatlac ??? udap ? v ! o & dap ? neg ? tnam ??? zn & airb & - a & lled - e - aznom ? znom ?? a & lledeaznom ? znom ?? eaznom ?? e & c & aip ? iv ?? soc ? top ?? om ??? b & c ? m ? v ?? c & f ? l ? m ? p ? r ? v ?? d & p ? u ?? e & c ! cel ? inev ? nerolf ?? f ? g ! ida & - otla ? otla ??? l ? m ! or ?? n & idu ? o & n & edrop ? isorf ?? torc ??? p ? r ? serav ? t ! s & eirt ? oa ??? v ? znerif ?? g & a ? b ? f ? o ? p ? r ?? hc ? i & b ? c ? dol ? f ? l ! lecrev ? opan ? rof & - anesec ? anesec ??? m ? n & a & part ? rt & - attelrab - airdna ? attelrabairdna ??? imir ? ret ?? p ? r ! a & b ? ilgac ? ssas ??? s ! idnirb ?? t & ei & hc ? r ?? sa ?? v ?? l & a ? b ? c ? oritdeus ?? m & f ? i ? r ?? n & a ! lim ? slab ?? b ? c ? e ! zob ?? irut ? m ? p ? r ? t ?? o & a ? b ! retiv ?? c ! cel ?? enuc ? g ! ivor ?? i & dem & - onadipmac ? onadipmac ?? pmet & - aiblo ? aiblo ?? rdnos ?? l ? m ! a & greb ? ret ?? oc ? re & f ? lap ??? n ! a & dipmac & - oidem ? oidem ?? lim ? tsiro ? zlob ?? ecip & - ilocsa ? ilocsa ?? i & bru & - orasep ? orasep ?? lleva ? rot ? tnert ?? r & elas ? ovil ?? ulleb ?? p ? r ! a & sep & - onibru ? onibru ?? znatac ?? oun ?? s ! ivert ? sabopmac ?? t ! arp ? essorg ? n & arat ? e & girga ? rt ? veneb ???? zzera ?? p & a ? s ? t ?? qa ? r & a ? b ? c ? f ? g ? k ? o ? p ? s ? t ? v ?? s & aiselgi & - ainobrac ? ainobrac ?? b ? c ? elpan ? i ? m ? s ? t ? v ?? t & a ? b ? c ? l ? m ? o ! psgolb ,? p ? v ?? u & de ? l ? n ? p ?? v & a ? og ? p ? s ? t ? v ?? z & b ? c ? p ???? l ! . vog ?? m ! . & gro ? moc ? ten ? ude ??? n & em & eganam ? piuqe ?? i ! . ue ??? p ! . & emon ? gro ? lbup ? moc ? t & en ? ni ? opsgolb ,? ude ? vog ??? r & epxe ? op & er ? pus ??? s ! . & adaxiabme ? e & motoas ? picnirp ? rots ?? gro ? lim ? moc ? o & c ? dalusnoc ?? ten ? ude ? vog ?? e & b ? padub ? r ?? irolf ? op ?? t ! . & eman ? gro ? ibom ? levart ? m & oc ? uesum ?? o & c ? fni ? r & ea ? p ??? pooc ? sboj ? t & en ? ni ?? ude ? vog ? zib ??? y ? ztej ?? u & a ! . & a & s ? w ?? civ ? d & i ? lq ?? fnoc ? gro ? moc ! . topsgolb ,? nsa ? o & fni ? risc ?? sat ? t & ca ? en ? n ?? ude ! . & a & s ? w ?? civ ? dlq ? sat ? t & ca ? n ?? wsn ??? vog ! . & a & s ? w ?? civ ? dlq ? sat ? tca ??? wsn ? zo ??? c ! . & fni ? gro ? moc ? ten ? ude ? vog ??? de ? e ? h ! . & 0002 ? a & citore ? idem ? kitore ?? edszot ? gro ? ilus ? letoh ? m & alker ? lif ? t ? urof ?? naltagni ? o & c ? ediv ? fni ? levynok ? nisac ?? pohs ? rarga ? s & a & kal ? zatu ?? emag ? wen ?? t & lob ? opsgolb , rops ?? virp ? xe & s ? zs ?? ytic ? zsagoj ?? os ?? l ? m ! . & ca ? gro ? moc ? oc ? ro ? ten ? vog ??? n ! . & eni & esrem , m ,? tenkcahs ,? em ?? r ! . & a & dgolov ? gulak ? i & hsavuhc ? kymlak ? lerak ? rikhsab ? ssakahk ? t & ayrub ? rumdu ? ukay ?? vodrom ?? k & dohkan ? nidud ? t & a & hcmak ? yv ?? ingam ? okuhc ??? l & o - rakhsoj ? ut ?? mortsok ? nalap ? ramas ? tihc ? vut ? yegyda ? znep ?? bps ? ca ? d & arg & oglov ? z ?? nr ? orogleb ?? e & du - nalu ? niram ?? g & bc ? ersom ? ineok ? r & o ? ub & - e ? n & ero ? iretakey ????? hzenorov ? i & a & natsuk ? tla ?? mok ? ram ?? k & ihclan ? otsovidalv ? s & l & aru - k ? egnahkra ? iron ?? m ! o ! t ??? n ! a & mrum ? yrb ?? eloms ? i & baylehc ? lahkas - onhzuy ?? odv ?? r & ayonsark ? ib & isovon ? mis ?? ogitayp ? u & k ? ma ??? t ! epil ? ukri ?? v & ehzi ? o & rabahk ? stbur ????? l & a & kiab ? ma & j ? y ??? e & - iram ? hc ?? im ? o & kso ? porvats ? yro ?? valsoray ?? m & du ? o & c ? t ?? rep ?? n & a & buk ? dagam ? gruk ? hkartsa ? rzys ? ts & egad ? ratat ?? za & k ? yr ??? emuyt ? ilahkas ? rv ? ystirast ?? ovo & navi ? remek ?? pp ? r & aj ? evt ? hck ? i & b ? midalv ?? uma ?? s & itym ? mk ? sabzuk ?? t & en ? ni ? s & aeraf ? et ?? ugrus ?? ude ? v & hk ? o & bmat ? g ? ksp ? n ! n ?? rik ? taras ?? ts ?? wmc ? ynzorg ? z & akvakidalv ? kn ? ns ? tp ??? ug ?? s ? v ? ykuyr ?? v & b ? c ! . topsgolb ,? l ! . & di ? fnoc ? gro ? lim ? moc ? nsa ? ten ? ude ? vog ??? m ! . & eman ? gro ? lim ? m & oc ? uesum ?? o & fni ? r & ea ? p ??? pooc ? t & en ? ni ?? ude ? vog ? zib ??? og ? s ! . & bog ? der ? gro ? moc ? ude ??? t ! . & bew - eht - no , naht - & esrow , retteb ,? sndnyd ,?? uqhv - - nx ?? w & a ! . moc ?? b ! . & gro ? oc ??? c ! . & gro ? moc ? ten ? ude ??? g ? m ! . & ca ? gro ? m & oc ? uesum ?? oc ? pooc ? t & en ? ni ?? ude ? vog ? zib ??? ocsom ? p ! . & de ? en ? o & c ? g ?? ro ? ualeb ??? r ! . & ca ? lim ? moc ? oc ? t & en ? ni ?? ude ? v & og ? uog ??? n ?? t ! . & a46oa0fz - - nx ? b & 82wrzc - - nx ? ulc ?? emag ? gro ? lim ? moc ? t & en ? opsgolb ,? ude ? v & di ? og ? ta0cu - - nx ?? zibe ? 業 商 ? 織 組 ? 路 網 ???? x & a ? c ! . & hta , vog ??? m ! . & bog ? gro ? moc ? t & en ? opsgolb ,? ude ?? ma2ibgy - - nx ?? s ! . vog ?? xx ?? y & 4punu - - nx ? ad & i & loh ? rfkcalb ?? ot ?? b ! . & fo ? lim ? moc ? vog ??? cnega ? g ! . & moc ? oc ? ten ?? olonhcet ?? hpargotohp ? k ! . & gro ? moc ? ten ? ude ? vog ??? l ! . & clp ? d & em ? i ?? gro ? hcs ? moc ? ten ? ude ? vog ?? ppus ?? m ! . & eman ? gro ? lim ? moc ? ten ? ude ? vog ?? edaca ?? napmoc ? p ! . & gro ? lim ? moc ? pooc ? ten ? ude ? vog ??? r & ellag ? otcerid ? tnuoc ? uxul ?? s ! . & gro ? lim ? moc ? ten ? ude ? vog ??? tinummoc ? u ! . & bug ? gro ? lim ? moc ? ten ? ude ??? xes ?? z & a ! . & eman ? gro ? lim ? moc ? o & fni ? rp ?? pp ? t & en ? ni ?? ude ? vog ? zib ??? b ! . & gro ? moc ? ten ? ude ? vog ??? c ! . topsgolb ,? d ! . & gro ? lop ? moc ? ossa ? t & en ? ra ?? ude ? vog ??? ib ! . & e & ht - rof , mos - rof , rom - rof ,? p & ifles , ohbew ,? retteb - rof , sndnyd ,?? k ! . & gro ? lim ? moc ? ten ? ude ? vog ??? n . oc . topsgolb , s ! . & ca ? gro ? oc ??? t ! . & c & a ? s ?? e & m ? n ?? ibom ? l & etoh ? im ?? o & c ? fni ? g ?? ro ? vt ??? u ! . & gro ? moc ? oc ? ten ??? yx ? zub ??авксом?брс?гро?зақ?итед?н & йално?ом??рку?сур?тйас?фр?اي & روس?سيلم??برغملا?ة & كبش?ي & دوعسلا?روس??یدوعسلا??ت & اراما?راھب??ر & ئازجلا?ازاب?صم?طق??سنوت?عقوم?ن & ا & ر & يا?یا??مع??درالا?ميلا?يطسلف??هيدوعسلا?ۃیدوعسلا?तराभ?नठगंस?তরাভ?ালংাব?ਤਰਾਭ?તરાભ?ாயித்நஇ?ைக்ஙலஇ?்ரூப்பக்ஙிச?్తరాభ?ාකංල?ยทไ?ეგ?なんみ? 业 企 ? 东 广 ? 你 爱 我 ? 信 中 ? 务 政 ? 动 移 ? 卦 八 ? 司 公 ? 团 集 ? 国中 ? 國 中 ? 址 网 ? 坡 加 新 ? 城 商 ? 山 佛 ? 店 商 ? 戏 游 ? 构 机 ! 织 组 ?? 标商 ? 港 香 ? 湾 台 ? 灣 & 台 ? 臺 ?? 界 世 ? 益 公 ? 线 在 ? 络 网 ? 网文 文中 ?국한?성삼??"); <nl> 
mmm AtomicRefIsolatedServersTest . java <nl> ppp AtomicRefIsolatedServersTest . java <nl> - private void startServers ( int count , Config config ) { <nl> + private void startServers ( int count , Config config ) throws Exception { <nl> - }); <nl> + }) . get (); <nl> 
mmm ApplicationContextHolder . java <nl> ppp ApplicationContextHolder . java <nl> +  <nl> + private static class ApplicationContextReferenceUpdater { <nl> + void updateApplicationContextReference ( final ApplicationContext applicationContext ) { <nl> + ApplicationContextHolder . applicationContext = applicationContext ; <nl> 
new file <nl> ppp GuavaCountingOutputStreamTest . java <nl> + package org . baeldung . guava ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import java . io . ByteArrayOutputStream ; <nl> + import org . junit . Test ; <nl> + import com . google . common . io . CountingOutputStream ; <nl> 
mmm DomainFilter . java <nl> ppp DomainFilter . java <nl> - return domain + SEPARATOR + value . substring ( index + 1 ); <nl> + return value . substring ( index + 1 ) + SEPARATOR + domain ; <nl> - return domain + SEPARATOR + value ; <nl> + return value + SEPARATOR + domain ; <nl> 
mmm AvoidGlobalModifierRule . java <nl> ppp AvoidGlobalModifierRule . java <nl> - import static apex . jorje . semantic . symbol . type . ModifierTypeInfos . GLOBAL ; <nl> + import java . util . List ; <nl> + import net . sourceforge . pmd . lang . apex . ast . ASTAnnotation ; <nl> + import net . sourceforge . pmd . lang . apex . ast . ASTMethod ; <nl> 
mmm GoConstants . java <nl> ppp GoConstants . java <nl> - public static final Set < String > KNOWN _ VERSIONS = ContainerUtil . immutableSet (" go1 . 1 ", " go1 . 2 ", " go1 . 3 ", " go1 . 4 ", " go1 . 5 ", " go1 . 6 "); <nl> + public static final Set < String > KNOWN _ VERSIONS = ContainerUtil . immutableSet (" go1 . 1 ", " go1 . 2 ", " go1 . 3 ", " go1 . 4 ", " go1 . 5 ", " go1 . 6 ", " go1 . 7 "); <nl> 
mmm AllCoreTests . java <nl> ppp AllCoreTests . java <nl> + import io . shardingsphere . core . keygen . AllKeygenTests ; <nl> - AllYamlTests . class <nl> + AllYamlTests . class , <nl> + AllKeygenTests . class <nl> 
mmm OkHttpUrlLoader . java <nl> ppp OkHttpUrlLoader . java <nl> + options . set ( ProgressGlideExtension . OPTION _ LISTENER , null ); <nl> 
mmm PlayerComposition . java <nl> ppp PlayerComposition . java <nl> 
mmm AbstractOrchestrationDataSource . java <nl> ppp AbstractOrchestrationDataSource . java <nl> - public abstract class AbstractOrchestrationDataSource extends AbstractUnsupportedOperationDataSource { <nl> + public abstract class AbstractOrchestrationDataSource extends AbstractUnsupportedOperationDataSource implements AutoCloseable { <nl> 
mmm T800xProtocolDecoderTest . java <nl> ppp T800xProtocolDecoderTest . java <nl> + verifyNothing ( decoder , binary ( <nl> + " 232301001500000880316890202968140197625020 ")); <nl> + verifyNothing ( decoder , binary ( <nl> + " 232303000f00000880316890202968 ")); <nl> + verifyPosition ( decoder , binary ( <nl> 
mmm HyphenateEnumConverter . java <nl> ppp HyphenateEnumConverter . java <nl> + value = value . trim (); <nl> 
mmm GraphiteReporterFactoryTest . java <nl> ppp GraphiteReporterFactoryTest . java <nl> - assertThat ( getField ( graphite , " port ")) . isEqualTo ( 8080 ); <nl> + assertThat ( getField ( graphite , " port ")) . isEqualTo ( 2003 ); <nl> - assertThat ( getField ( graphite , " port ")) . isEqualTo ( 8080 ); <nl> 
mmm YamlKeyGeneratorConfiguration . java <nl> ppp YamlKeyGeneratorConfiguration . java <nl> - import com . google . common . base . Optional ; <nl> - import io . shardingsphere . core . keygen . KeyGeneratorType ; <nl> - String keyGeneratorClassName = keyGeneratorConfiguration . getClass () . getName (); <nl> 
mmm MTEditorTabColor . java <nl> ppp MTEditorTabColor . java <nl> + public static final Color COLOR _ DARKER = new JBColor ( new Color ( 33 , 33 , 33 , 255 ), new Color ( 33 , 33 , 33 , 255 )); <nl> + public static final Color COLOR _ LIGHTER = new JBColor ( new Color ( 250 , 250 , 250 , 255 ), new Color ( 250 , 250 , 250 , 255 )); <nl> 
mmm EpollTestUtils . java <nl> ppp EpollTestUtils . java <nl> - import io . netty . channel . nio . NioEventLoopGroup ; <nl> - new NioEventLoopGroup ( BOSSES , new DefaultThreadFactory (" testsuite - epoll - boss ", true )); <nl> + new EpollEventLoopGroup ( BOSSES , new DefaultThreadFactory (" testsuite - epoll - boss ", true )); <nl> 
mmm Component . java <nl> ppp Component . java <nl> + import javax . annotation . CheckForNull ; <nl> + @ CheckForNull <nl> 
mmm SecureRandomSessionIdGenerator . java <nl> ppp SecureRandomSessionIdGenerator . java <nl> - out [ index + 3 ] = alphabet [( quad ? ( val & 0x3F ) : 64 )]; <nl> + out [ index + 3 ] = alphabet [( quad ? ( val & 0x3F ) : 63 )]; <nl> - out [ index + 2 ] = alphabet [( trip ? ( val & 0x3F ) : 64 )]; <nl> + out [ index + 2 ] = alphabet [( trip ? ( val & 0x3F ) : 63 )]; <nl> 
mmm AllTests . java <nl> ppp AllTests . java <nl> - LocalMessageBucketManagerTest . class , <nl> + LocalMessageBucketManagerTest . class <nl> 
mmm JarListInfoTest . java <nl> ppp JarListInfoTest . java <nl> - package org . apache . flink . runtime . webmonitor . handlers . ng ; <nl> + package org . apache . flink . runtime . webmonitor . handlers ; <nl> - import org . apache . flink . runtime . webmonitor . handlers . JarListInfo ; <nl> 
mmm Constants . java <nl> ppp Constants . java <nl> - public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 4 . 0 "); <nl> + public static final String SENTINEL _ VERSION = VersionUtil . getVersion (" 1 . 4 . 1 "); <nl> 
mmm CannonSpots . java <nl> ppp CannonSpots . java <nl> - BLOODVELDS ( new WorldPoint ( 2439 , 9821 , 0 ), new WorldPoint ( 2448 , 9821 , 0 ), new WorldPoint ( 2472 , 9832 , 0 ), new WorldPoint ( 2453 , 9817 , 0 )), <nl> + BLOODVELDS ( new WorldPoint ( 2439 , 9821 , 0 ), new WorldPoint ( 2448 , 9821 , 0 ), new WorldPoint ( 2472 , 9832 , 0 ), new WorldPoint ( 2453 , 9817 , 0 ), new WorldPoint ( 3597 , 9743 , 0 )), <nl> 
mmm OSQLMethodAsDate . java <nl> ppp OSQLMethodAsDate . java <nl> - return new Date ((( Number ) iThis ) . longValue ()); <nl> + Date val = new Date ((( Number ) iThis ) . longValue ()); <nl> + Calendar cal = new GregorianCalendar (); <nl> + cal . setTime ( val ); <nl> + cal . set ( Calendar . HOUR , 0 ); <nl> 
mmm Modules . java <nl> ppp Modules . java <nl> - boolean scanPackage () default false ; <nl> + boolean scanPackage () default true ; <nl> 
mmm ShardingEncryptorStrategyTest . java <nl> ppp ShardingEncryptorStrategyTest . java <nl> + import static org . junit . Assert . assertTrue ; <nl> - EncryptorRuleConfiguration encryptorRuleConfiguration = new EncryptorRuleConfiguration (" test ", " test . pwd1 , test . pwd2 ", " test . pwd1 _ index ", new Properties ()); <nl> 
new file <nl> ppp SyntaxHighlightingSensorTest . java <nl> + package org . sonar . xoo . lang ; <nl> + import org . apache . commons . io . FileUtils ; <nl> + import org . junit . Before ; <nl> + import org . junit . Rule ; <nl> + import org . junit . Test ; <nl> + import org . junit . rules . TemporaryFolder ; <nl> 
mmm DynamicClassLoader . java <nl> ppp DynamicClassLoader . java <nl> + void installPackage ( String className ) { <nl> + int offset = className . lastIndexOf (' . '); <nl> + if ( offset != - 1 ) <nl> + { <nl> + String pkgname = className . substring ( 0 , offset ); <nl> + if ( getPackage ( pkgname ) == null ) <nl> 
mmm JPAOrder . java <nl> ppp JPAOrder . java <nl> - public void setOrderId ( final long orderId ) { <nl> - super . setOrderId ( orderId ); <nl> - } <nl> - public void setUserId ( final int userId ) { <nl> - super . setUserId ( userId ); <nl> - } <nl> - public void setStatus ( final String status ) { <nl> - super . setStatus ( status ); <nl> 
new file <nl> ppp StreamTranscriptionBehaviorImpl . java <nl> + package com . amazonaws . transcribestreaming . retryclient ; <nl> + import com . amazonaws . transcribestreaming . retryclient . StreamTranscriptionBehavior ; <nl> + import software . amazon . awssdk . services . transcribestreaming . model . Result ; <nl> 
mmm DataStrippingSampleSender . java <nl> ppp DataStrippingSampleSender . java <nl> + @ Deprecated <nl> + public DataStrippingSampleSender (){ <nl> + listener = null ; <nl> + decoratedSender = null ; <nl> + } <nl> 
mmm ProcessEngine . java <nl> ppp ProcessEngine . java <nl> - public static String VERSION = " 5 . 10 - SNAPSHOT "; <nl> + public static String VERSION = " 5 . 11 - SNAPSHOT "; <nl> 
mmm TestPendingDataNodeMessages . java <nl> ppp TestPendingDataNodeMessages . java <nl> - " ReportedBlockInfo [ block = blk _ 1 _ 1 , dn = fake , reportedState = FINALIZED ]," + <nl> - " ReportedBlockInfo [ block = blk _ 1 _ 2 , dn = fake , reportedState = FINALIZED ]", <nl> + " ReportedBlockInfo [ block = blk _ 1 _ 1 , dn = fake : 100 , reportedState = FINALIZED ]," + <nl> 
mmm CatHomeModule . java <nl> ppp CatHomeModule . java <nl> - CachedReportTask cachedReportTask = ctx . lookup ( CachedReportTask . class ); <nl> - Threads . forGroup (" Cat ") . start ( cachedReportTask ); <nl> -  <nl> + CachedReportTask cachedReportTask = ctx . lookup ( CachedReportTask . class ); <nl> +  <nl> 
mmm PredictionHistoryManager . java <nl> ppp PredictionHistoryManager . java <nl> 
new file <nl> ppp _ 1570 . java <nl> + package com . fishercoder . solutions ; <nl> + public class _ 1570 { <nl> + public static class Solution1 { <nl> + class SparseVector { <nl> + int [] vector ; <nl> + SparseVector ( int [] nums ) { <nl> + this . vector = nums ; <nl> + } <nl> + public int dotProduct ( SparseVector vec ) { <nl> 
deleted file <nl> mmm PreProcessingInterface . java <nl> - package com . loopj . android . http ; <nl> - import org . apache . http . HttpRequest ; <nl> - import org . apache . http . HttpResponse ; <nl> - public interface PreProcessingInterface { <nl> - void onPreProcessRequest ( final HttpRequest request ); <nl> 
mmm ODatabaseScriptManager . java <nl> ppp ODatabaseScriptManager . java <nl> + if ( iKey . equals (" sql ")) { <nl> + if (! iKey . equals ( iValue . getFactory () . getLanguageName ())) <nl> + return false ; <nl> + } else { <nl> + if (( iValue . getFactory () . getLanguageName ()) . equals (" sql ")) <nl> 
mmm BasicStubbingTest . java <nl> ppp BasicStubbingTest . java <nl> + import org . junit . Ignore ; <nl> + @ Ignore (" prototyping new API ") <nl> + @ Test <nl> + public void shouldReturnMultipleValues () throws Exception { <nl> + } <nl> 
mmm Server . java <nl> ppp Server . java <nl> 
mmm ParserImpl . java <nl> ppp ParserImpl . java <nl> + import org . apache . jorphan . logging . LoggingManager ; <nl> + import org . apache . log . Logger ; <nl> - private SAXParserFactory PARSERFACTORY = null ; <nl> + private static final Logger log = LoggingManager . getLoggerForClass (); <nl> + private SAXParserFactory PARSERFACTORY = null ; <nl> 
new file <nl> ppp Groovy7365Support . java <nl> + package org . codehaus . groovy . classgen . asm . sc . bugs . support ; <nl> + import java . util . Set ; <nl> + public class Groovy7365Support < A , B > { <nl> + public Set < String > getStrings () { <nl> + return null ; <nl> + } <nl> + } <nl> 
mmm CallState . java <nl> ppp CallState . java <nl> - StringBuilder stringBuilder = new StringBuilder (" Expected : " + callState . name () + ", but found ["); <nl> + StringBuilder stringBuilder = new StringBuilder (" Found : " + callState . name () + ", but expected ["); <nl> 
mmm GeneratedExtensionRegistryProviderApi . java <nl> ppp GeneratedExtensionRegistryProviderApi . java <nl> - @ SkylarkConstructor ( objectType = GeneratedExtensionRegistryProviderApi . class ) <nl> + @ SkylarkConstructor ( <nl> + objectType = GeneratedExtensionRegistryProviderApi . class , <nl> + receiverNameForDoc = NAME ) <nl> 
mmm AdapterViewPager . java <nl> ppp AdapterViewPager . java <nl> - private List < BaseFragment > list ; <nl> - private String [] mLitles ; <nl> + private List < BaseFragment > list ; <nl> + private CharSequence [] mTitles ; <nl> - public AdapterViewPager ( FragmentManager fragmentManager ) { <nl> - super ( fragmentManager ); <nl> 
mmm DependencyCheckScanAgentIT . java <nl> ppp DependencyCheckScanAgentIT . java <nl> - import org . owasp . dependencycheck . BaseTest ; <nl> - import org . owasp . dependencycheck . dependency . Identifier ; <nl> + import org . owasp . dependencycheck . BaseDBTestCase ; <nl> - public class DependencyCheckScanAgentTest extends BaseTest { <nl> 
mmm AvailableCluster . java <nl> ppp AvailableCluster . java <nl> - import org . apache . dubbo . rpc . Invocation ; <nl> - import org . apache . dubbo . rpc . Result ; <nl> - import org . apache . dubbo . rpc . cluster . LoadBalance ; <nl> - import java . util . List ; <nl> 
mmm AbstractChart . java <nl> ppp AbstractChart . java <nl> - import java . awt . *; <nl> + import java . awt . Color ; <nl> - public static final Color [] COLORS = new Color []{ Color . decode (" # 4192D9 "), Color . decode (" # 800000 "), Color . decode (" # A7B307 "), Color . decode (" # 913C9F "), Color . decode (" # 329F4D ")}; <nl> 
new file <nl> ppp YamlProxyConfiguration . java <nl> + package io . shardingsphere . proxy . config ; <nl> + import io . shardingsphere . core . rule . DataSourceParameter ; <nl> + import io . shardingsphere . core . rule . ProxyAuthority ; <nl> + import io . shardingsphere . core . yaml . masterslave . YamlMasterSlaveRuleConfiguration ; <nl> 
mmm LithoSampleApplication . java <nl> ppp LithoSampleApplication . java <nl> - import com . facebook . flipper . plugins . litho . LithoSonarDescriptors ; <nl> - import com . facebook . soloader . SoLoader ; <nl> - import com . facebook . flipper . android . utils . SonarUtils ; <nl> + import com . facebook . flipper . android . utils . FlipperUtils ; <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 2 . 0 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 2 . 0 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 2 . 0 . 99 "); <nl> 
mmm HdfsBucket . java <nl> ppp HdfsBucket . java <nl> + import org . apache . commons . lang . StringUtils ; <nl> - String indexFilename = null ; <nl> - String dataFilename = null ; <nl> + String [] segs = StringUtils . split ( name , File . pathSeparatorChar ); <nl> + String filename = segs [ segs . length - 1 ]; <nl> 
mmm CognitiveComplexityVisitor . java <nl> ppp CognitiveComplexityVisitor . java <nl> - public Object visit ( ASTIfBlockStatement node , Object data ) { <nl> + public Object visit ( ASTIfElseBlockStatement node , Object data ) { <nl> - state . structureComplexity (); <nl> - state . nestingComplexity (); <nl> 
mmm IForgeWorldType . java <nl> ppp IForgeWorldType . java <nl> - else if ( this == WorldType . CUSTOMIZED ) <nl> + else if ( this == WorldType . BUFFET ) <nl> 
deleted file <nl> mmm Contest . java <nl> - package com . fishercoder . solutions ; <nl> - public class Contest { <nl> - public static void main ( String . . . args ) { <nl> - Contest contest = new Contest (); <nl> - System . out . println ( contest ); <nl> - System . out . println (" Finished . "); <nl> - } <nl> 
mmm TreeShapedStackTest . java <nl> ppp TreeShapedStackTest . java <nl> - public void testBasicOperations () { <nl> - TreeShapedStack < String > tss = new TreeShapedStack < String >(); <nl> - assertEquals ( tss . size , 0 ); <nl> - TreeShapedStack < String > tss1 = tss . push (" 1 "); <nl> - assertEquals ( tss1 . size , 1 ); <nl> 
mmm MigrationsRule . java <nl> ppp MigrationsRule . java <nl> - import io . dropwizard . configuration . ConfigurationException ; <nl> - import java . io . IOException ; <nl> - KeywhizConfig config ; <nl> - try { <nl> - config = new ConfigurationFactory <>( KeywhizConfig . class , validator , objectMapper , " dw ") <nl> 
mmm TextOutput . java <nl> ppp TextOutput . java <nl> 
mmm Es6NormalizeShorthandPropertiesTest . java <nl> ppp Es6NormalizeShorthandPropertiesTest . java <nl> - enableRunTypeCheckAfterProcessing (); <nl> - disableTypeCheck (); <nl> + enableTypeInfoValidation (); <nl> + enableTypeCheck (); <nl> 
mmm UpdatesServlet . java <nl> ppp UpdatesServlet . java <nl> - import java . util . *; <nl> + import java . util . ArrayList ; <nl> - private static final Comparator < World > ASC = ( l , r ) - > l . getId () - r . getId (); <nl> - Collections . sort ( changed , ASC ); <nl> 
mmm BaseFragment . java <nl> ppp BaseFragment . java <nl> + import android . content . Context ; <nl> + protected Context mContext ; <nl> + @ Override <nl> + public void onAttach ( Context context ) { <nl> + super . onAttach ( context ); <nl> + mContext = context ; <nl> + } <nl> + @ Override <nl> + public void onDetach () { <nl> 
mmm _ 9 . java <nl> ppp _ 9 . java <nl> - public class PalindromeNumber { <nl> + public class _ 9 { <nl> 
mmm EelinkProtocolEncoder . java <nl> ppp EelinkProtocolEncoder . java <nl> - import org . traccar . Context ; <nl> - import org . traccar . helper . Checksum ; <nl> - import org . traccar . model . Device ; <nl> 
mmm AdaDelta . java <nl> ppp AdaDelta . java <nl> 
mmm PatternsForEachTokenTest . java <nl> ppp PatternsForEachTokenTest . java <nl> 
mmm InMemoryPersistentKeyValueStore . java <nl> ppp InMemoryPersistentKeyValueStore . java <nl> - * <nl> - public Map < String , Object > atomicGet ( String key ) throws IOException { <nl> - return get ( key ); <nl> - } <nl> - @ Override <nl> - public void startTransaction () throws IOException { <nl> - } <nl> 
mmm HelloJSON . java <nl> ppp HelloJSON . java <nl> - data . put (" message ", " Hello , world "); <nl> + data . put (" message ", " Hello , World !"); <nl> 
mmm WidgetBehavior . java <nl> ppp WidgetBehavior . java <nl> + notificationTray . cancel ( habit ); <nl> - notificationTray . cancel ( habit ); <nl> + notificationTray . cancel ( habit ); <nl> 
mmm ImageUploadTest . java <nl> ppp ImageUploadTest . java <nl> - , p . getProperty (" browserConsumerKey ") <nl> - , p . getProperty (" browserConsumerSecret ") <nl> + , p . getProperty (" desktopConsumerKey ") <nl> + , p . getProperty (" desktopConsumerSecret ") <nl> 
mmm MountSpecMethodAnnotationsProvider . java <nl> ppp MountSpecMethodAnnotationsProvider . java <nl> + import com . facebook . litho . annotations . OnUnmount ; <nl> + ANNOTATION _ QUALIFIED _ NAMES . add ( OnUnmount . class . getTypeName ()); <nl> 
mmm DB2DateTimeValueHandler . java <nl> ppp DB2DateTimeValueHandler . java <nl> - private static final String FMT _ TIMESTAMP = "'' yyyy - MM - dd - HH . mm . ss . SSSSSS ''"; <nl> + private static final String FMT _ TIMESTAMP = "'' yyyy - MM - dd - HH . mm . ss . SSS000 ''"; <nl> 
mmm ImagePipelineConfigFactory . java <nl> ppp ImagePipelineConfigFactory . java <nl> - import com . facebook . stetho . okhttp . StethoInterceptor ; <nl> + import com . facebook . stetho . okhttp3 . StethoInterceptor ; <nl> - OkHttpClient okHttpClient = new OkHttpClient (); <nl> - okHttpClient . networkInterceptors () . add ( new StethoInterceptor ()); <nl> 
mmm ProtectedStorageEntry . java <nl> ppp ProtectedStorageEntry . java <nl> - ", ownerPubKey . hashCode ()=" + ownerPubKey . hashCode () + <nl> - ", signature . hashCode ()=" + Arrays . toString ( signature ) . hashCode () + <nl> + ", ownerPubKey . hashCode ()=" + ( ownerPubKey != null ? ownerPubKey . hashCode () : " null ") + <nl> 
mmm ThreadDumpFilter . java <nl> ppp ThreadDumpFilter . java <nl> - import java . io . InputStreamReader ; <nl> + import java . io . BufferedReader ; <nl> + import java . io . BufferedWriter ; <nl> + import java . io . FileReader ; <nl> + import java . io . FileWriter ; <nl> + import java . io . PrintWriter ; <nl> 
mmm TestTarget . java <nl> ppp TestTarget . java <nl> + import java . io . File ; <nl> - public static void main ( String [] args ) throws IOException { <nl> + public static void main ( String [] args ) throws Exception { <nl> + if ( args . length == 1 ) { <nl> + final File termFile = new File ( args [ 0 ]); <nl> 
new file <nl> ppp DModule . java <nl> + package com . facebook . buck . d ; <nl> + import com . facebook . buck . module . BuckModule ; <nl> + @ BuckModule ( id = " com . facebook . buck . d ") <nl> + public class DModule {} <nl> 
mmm DevModeBuildStep . java <nl> ppp DevModeBuildStep . java <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> - HotDeploymentConfigFileBuildItem config () { <nl> - return new HotDeploymentConfigFileBuildItem (" META - INF / microprofile - config . properties "); <nl> + List < HotDeploymentConfigFileBuildItem > config () { <nl> 
deleted file <nl> mmm Tag . java <nl> - package com . wordnik . swagger . annotations ; <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Retention ; <nl> - import java . lang . annotation . RetentionPolicy ; <nl> - import java . lang . annotation . Target ; <nl> 
new file <nl> ppp Uncrustify . java <nl> + package processing . app . tools ; <nl> + import java . io . File ; <nl> + import java . io . FileWriter ; <nl> + import java . io . IOException ; <nl> + import processing . app . Base ; <nl> + import processing . app . Editor ; <nl> + import processing . util . exec . ProcessHelper ; <nl> 
deleted file <nl> mmm MTIcons . java <nl> - package com . chrisrm . idea ; <nl> - import com . intellij . openapi . util . IconLoader ; <nl> - import javax . swing . *; <nl> - public class MTIcons { <nl> - public static final Icon PLUGIN _ BLADE = IconLoader . getIcon ("/ icons / plugins / blade / blade . png "); <nl> 
mmm HttpHeaderDateFormat . java <nl> ppp HttpHeaderDateFormat . java <nl> - private static final ThreadLocal < HttpHeaderDateFormat > dateFormatThreadLocal = new ThreadLocal < HttpHeaderDateFormat >() { <nl> - @ Override <nl> - protected HttpHeaderDateFormat initialValue () { <nl> - return new HttpHeaderDateFormat (); <nl> 
mmm HeadersMessage . java <nl> ppp HeadersMessage . java <nl> + int saveCursor = cursor ; <nl> + cursor = saveCursor ; <nl> 
mmm BitwiseOperatorUnitTest . java <nl> ppp BitwiseOperatorUnitTest . java <nl> - assertEquals ( result , 4 ); <nl> + assertEquals ( 4 , result ); <nl> - assertEquals ( result , 7 ); <nl> + assertEquals ( 7 , result ); <nl> - assertEquals ( result , 3 ); <nl> + assertEquals ( 3 , result ); <nl> - assertEquals ( rightShift , 3 ); <nl> 
mmm ExpectedInsertValuesToken . java <nl> ppp ExpectedInsertValuesToken . java <nl> - import javax . xml . bind . annotation . XmlElementWrapper ; <nl> - import java . util . LinkedList ; <nl> - import java . util . List ; <nl> - @ XmlElementWrapper ( name = " insert - columns ") <nl> - @ XmlElement ( name = " insert - column ") <nl> 
mmm MaxFreeAllocatorTest . java <nl> ppp MaxFreeAllocatorTest . java <nl> - public final class MaxFreeAllocatorTest extends AllocatorTestBase { <nl> + public class MaxFreeAllocatorTest extends AllocatorTestBase { <nl> 
mmm UrlDeviceJsonSerializer . java <nl> ppp UrlDeviceJsonSerializer . java <nl> - T deserialize ( JSONObject jsonObject ); <nl> + UrlDevice deserialize ( JSONObject jsonObject ); <nl> 
new file <nl> ppp PathSumIII . java <nl> + package com . stevesun . solutions ; <nl> + import com . stevesun . common . classes . TreeNode ; <nl> + public class PathSumIII { <nl> + public int pathSum ( TreeNode root , int sum ) { <nl> + if ( root == null ) return 0 ; <nl> + return pathSumFrom ( root , sum ) + pathSum ( root . left , sum ) + pathSum ( root . right , sum ); <nl> 
mmm FMLServerTweaker . java <nl> ppp FMLServerTweaker . java <nl> - classLoader . addClassLoaderExclusion (" com . mojang . util . "); <nl> + classLoader . addClassLoaderExclusion (" com . mojang . "); <nl> 
mmm OrchestrationFacadeTest . java <nl> ppp OrchestrationFacadeTest . java <nl> + import java . lang . reflect . Field ; <nl> - public void setUp () { <nl> + public void setUp () throws ReflectiveOperationException { <nl> + Field field = orchestrationFacade . getClass () . getDeclaredField (" regCenter "); <nl> 
mmm LivelockExample . java <nl> ppp LivelockExample . java <nl> - lock . tryLock ( 10 , TimeUnit . MILLISECONDS ); <nl> + lock . tryLock ( millis , TimeUnit . MILLISECONDS ); <nl> 
mmm StringRecordTest . java <nl> ppp StringRecordTest . java <nl> +  <nl> 
mmm DevModeBuildStep . java <nl> ppp DevModeBuildStep . java <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> - HotDeploymentConfigFileBuildItem config () { <nl> - return new HotDeploymentConfigFileBuildItem (" META - INF / microprofile - config . properties "); <nl> + List < HotDeploymentConfigFileBuildItem > config () { <nl> 
mmm JSONReader _ typeRef . java <nl> ppp JSONReader _ typeRef . java <nl> + public void test _ array _ 2 () throws Exception { <nl> + JSONReader reader = new JSONReader ( new StringReader ("[[{\" id \": 123 }]]")); <nl> + reader . startArray (); <nl> + List < VO > list = reader . readObject ( new TypeReference < List < VO >>() {}); <nl> 
mmm SpringBootConfiguration . java <nl> ppp SpringBootConfiguration . java <nl> + import java . util . Collections ; <nl> - String dataSources = standardEnv . getProperty ( prefix + " names "); <nl> - return new InlineExpressionParser ( dataSources ) . splitAndEvaluate (); <nl> - } <nl> - private String getDataSourceName ( final Environment environment , final String prefix ) { <nl> 
new file <nl> ppp RunnableVsThreadTest . java <nl> + package com . baeldung . concurrent . runnable ; <nl> + import java . util . concurrent . Callable ; <nl> + import java . util . concurrent . ExecutionException ; <nl> + import java . util . concurrent . ExecutorService ; <nl> + import java . util . concurrent . Executors ; <nl> 

mmm SearchesCleanUpJobWithDBServicesTest . java <nl> ppp SearchesCleanUpJobWithDBServicesTest . java <nl> - public class SearchesCleanUpJobTestWithDBServices { <nl> + public class SearchesCleanUpJobWithDBServicesTest { <nl> - class TestViewService extends ViewService { <nl> + static class TestViewService extends ViewService { <nl> 
mmm XteaTest . java <nl> ppp XteaTest . java <nl> - byte [] data = new byte [ 1024 ]; <nl> + byte [] data = new byte [ 1027 ]; <nl> 
mmm SizeEstimationTest . java <nl> ppp SizeEstimationTest . java <nl> - import org . apache . commons . lang3 . mutable . MutableLong ; <nl> - import java . nio . ByteBuffer ; <nl> - import static java . lang . Integer . max ; <nl> - import static java . lang . Integer . min ; <nl> + import static org . neo4j . index . internal . gbptree . TreeNodeDynamicSize . keyValueSizeCapFromPageSize ; <nl> 
mmm KubernetesMockServerTestResource . java <nl> ppp KubernetesMockServerTestResource . java <nl> - return ; <nl> - return Boolean . getBoolean (" quarkus . kubernetes - client . test . https "); <nl> + final String property = System . getProperty (" quarkus . kubernetes - client . test . https "); <nl> + if ( property == null || property . isEmpty ()) { <nl> 
mmm DwayProtocolDecoderTest . java <nl> ppp DwayProtocolDecoderTest . java <nl> + verifyNull ( decoder , text ( <nl> + " AA55 , 36 , 10024 , 1 , 171025 , 161055 , 36 . 0294 , - 79 . 7881 , 201 , 2 . 5 , 111 , 1000 , 0000 , 00000 , 3578 , 0 , 0 , 0 , D ")); <nl> + verifyNull ( decoder , text ( <nl> + " AA55 , 115 , 318 , 1 , 171024 , 195059 , 28 . 0153 , - 82 . 4761 , 3 , 1 . 0 , 319 , 1000 , 0000 , 00000 , 4244 , 0 , 0 , 0 , D ")); <nl> 
mmm JMeterVersion . java <nl> ppp JMeterVersion . java <nl> - static final String VERSION = " 1 . 9 . 20031219 "; <nl> + static final String VERSION = " 1 . 9 . 20040130 "; <nl> 
mmm AtmosphereService . java <nl> ppp AtmosphereService . java <nl> - * or {@ link org . atmosphere . websocket . WebSocketHandler } . The framework supporting the annotation must deploy itself an Atmosphere ' s Service . <nl> + * or {@ link org . atmosphere . websocket . WebSocketHandler } . The framework supporting the annotation must deploy itself an Atmosphere ' s Service or <nl> 
mmm LoggingListener . java <nl> ppp LoggingListener . java <nl> - package com . facebook . fresco . ui . common ; <nl> + package com . facebook . fresco . ui . common ; <nl> - class BaseLoggingListener implements LoggingListener { <nl> - @ Override <nl> - public void onFadeFinished ( String id ) {} <nl> - } <nl> 
mmm ClassResolverTest . java <nl> ppp ClassResolverTest . java <nl> 
mmm PackageCyclesDetectionTests . java <nl> ppp PackageCyclesDetectionTests . java <nl> - case " junit - jupiter - api ": <nl> - assertEquals ( 1 , result . getExitCode (), " result =" + result ); <nl> - assertLinesMatch ( List . of ( <nl> - " org . junit . jupiter . api . extension . ExtensionContext - > org . junit . jupiter . api . TestInstance ", <nl> 
mmm OS . java <nl> ppp OS . java <nl> - private static final OS CURRENT _ OS = determineCurrentfOs (); <nl> + private static final OS CURRENT _ OS = determineCurrentOs (); <nl> - private static OS determineCurrentfOs () { <nl> + private static OS determineCurrentOs () { <nl> 
new file <nl> ppp MD5UtilTest . java <nl> + package liquibase . util ; <nl> + import static org . junit . Assert . *; <nl> + import org . junit . Test ; <nl> + import hidden . org . codehaus . plexus . util . StringInputStream ; <nl> + public class MD5UtilTest { <nl> + @ Test <nl> + public void testComputeMD5InputStream () { <nl> 

mmm Point . java <nl> ppp Point . java <nl> +  <nl> + @ Override <nl> + public int hashCode () { <nl> + return this . toString () . hashCode (); <nl> + } <nl> +  <nl> + @ Override <nl> + public boolean equals ( Object o ) { <nl> + if (( o instanceof Point ) & & ((( Point ) o ) . row == this . row ) & & ((( Point ) o ) . column == this . column )) { <nl> 
mmm SpiderTextParser . java <nl> ppp SpiderTextParser . java <nl> - public static void main ( String [] args ) { <nl> - for ( char x = 00 ; x <= 0x1f ; x + + ) { <nl> - System . err . println ( x ); <nl> - } <nl> - } <nl> -  <nl> 
mmm SdkConfig . java <nl> ppp SdkConfig . java <nl> - import java . io . InputStream ; <nl> + import java . io . InputStream ; <nl> - try ( InputStream is = classLoader . getResourceAsStream (" version . properties ")) { <nl> + try ( InputStream is = classLoader . getResourceAsStream (" robolectric - version . properties ")) { <nl> 
mmm ShardingEncryptor . java <nl> ppp ShardingEncryptor . java <nl> - Object encode ( Object plaintext ); <nl> + Object encrypt ( Object plaintext ); <nl> - Object decode ( Object ciphertext ); <nl> + Object decrypt ( Object ciphertext ); <nl> 
mmm PopulateSubscriptionOnOrganizations . java <nl> ppp PopulateSubscriptionOnOrganizations . java <nl> - " LEFT OUTER JOIN projects p on p . organization _ uuid = o . uuid AND p . private =?" + <nl> - " WHERE o . subscription IS NULL " + <nl> + " LEFT OUTER JOIN projects p on p . organization _ uuid = o . uuid AND p . private =? " + <nl> 
mmm ArticleController . java <nl> ppp ArticleController . java <nl> - Map < String , Object > modelMap = new HashMap <>(); <nl> - modelMap . put (" articles ", articles ); <nl> + model . put (" articles ", articles ); <nl> - return new ModelAndView (" index ", modelMap ); <nl> + return new ModelAndView (" index ", model ); <nl> 
mmm JenkinsJSExtensionsTest . java <nl> ppp JenkinsJSExtensionsTest . java <nl> - Assert . assertEquals ( 2 , ext . size ()); <nl> + Assert . assertEquals ( 3 , ext . size ()); <nl> 
mmm AtrackProtocolDecoderTest . java <nl> ppp AtrackProtocolDecoderTest . java <nl> - assertNotNull ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertArray ( buf1 )))); <nl> + assertNull ( decoder . decode ( null , null , ChannelBuffers . wrappedBuffer ( ChannelBufferTools . convertArray ( buf1 )))); <nl> 
mmm CannonSpots . java <nl> ppp CannonSpots . java <nl> - FIRE _ GIANTS ( new WorldPoint ( 2393 , 9782 , 0 ), new WorldPoint ( 2412 , 9776 , 0 ), new WorldPoint ( 2401 , 9780 , 0 )), <nl> + FIRE _ GIANTS ( new WorldPoint ( 2393 , 9782 , 0 ), new WorldPoint ( 2412 , 9776 , 0 ), new WorldPoint ( 2401 , 9780 , 0 ), new WorldPoint ( 3047 , 10340 , 0 )), <nl> 
new file <nl> ppp OAuth2AuthorizationException . java <nl> + package org . springframework . security . oauth2 . core ; <nl> + public class OAuth2AuthorizationException extends RuntimeException { <nl> + private OAuth2Error error ; <nl> + public OAuth2AuthorizationException ( OAuth2Error error ) { <nl> + super ( error . toString ()); <nl> 
mmm ByteBufAllocatorBenchmark . java <nl> ppp ByteBufAllocatorBenchmark . java <nl> + private static final ByteBuf [] defaultPooledHeapBuffers = new ByteBuf [ MAX _ LIVE _ BUFFERS ]; <nl> + private static final ByteBuf [] defaultPooledDirectBuffers = new ByteBuf [ MAX _ LIVE _ BUFFERS ]; <nl> - ByteBuf buffer = PooledByteBufAllocator . DEFAULT . heapBuffer ( size ); <nl> 
mmm NewDashboardController . java <nl> ppp NewDashboardController . java <nl> + put (" testDrive ", Toggles . isToggleOn ( Toggles . TEST _ DRIVE )); <nl> 
mmm CrashHandler . java <nl> ppp CrashHandler . java <nl> - public static String CRASH _ DIR = Environment . getExternalStorageDirectory () . getPath () + "/ GigaCrash /"; <nl> - public static String CRASH _ LOG = CRASH _ DIR + " last _ crash . log "; <nl> - public static String CRASH _ TAG = CRASH _ DIR + " . crashed "; <nl> 
mmm TransactionTimeoutQueueSetupTask . java <nl> ppp TransactionTimeoutQueueSetupTask . java <nl> - ModelNode amqServerDefaultAdress = new ModelNode () . add ( ClientConstants . SUBSYSTEM , " messaging - activemq ") <nl> + private ModelNode amqServerDefaultAdress = new ModelNode () . add ( ClientConstants . SUBSYSTEM , " messaging - activemq ") <nl> 
mmm ChineseSegmenterAnnotatorITest . java <nl> ppp ChineseSegmenterAnnotatorITest . java <nl> - new int []{ 1 , 3 , 5 , 7 , 9 }); <nl> + new int []{ 1 , 3 , 5 , 7 , 8 , 9 }); <nl> - } <nl> + } <nl> 
new file <nl> ppp GetObjectTags . java <nl> + package com . example . s3 ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . s3 . S3Client ; <nl> + import software . amazon . awssdk . services . s3 . model . *; <nl> + import java . util . Iterator ; <nl> 
mmm RunningRepeatableConditionTest . java <nl> ppp RunningRepeatableConditionTest . java <nl> - public static class TrueRunCondition implements RunCondition { <nl> + protected static class TrueRunCondition implements RunCondition { <nl> - public static class FalseRunCondition implements RunCondition { <nl> 
mmm SwiftUnderFileSystemFactory . java <nl> ppp SwiftUnderFileSystemFactory . java <nl> - LOG . error (" Failed to create SwiftUnderFileSystem . ", e ); <nl> 
new file <nl> ppp LocalDebugTest . java <nl> + import com . taobao . arthas . core . Arthas ; <nl> + import sun . management . VMManagement ; <nl> + import java . lang . management . ManagementFactory ; <nl> + import java . lang . management . RuntimeMXBean ; <nl> + import java . lang . reflect . Field ; <nl> 
mmm ActionLookupData . java <nl> ppp ActionLookupData . java <nl> - import com . google . common . annotations . VisibleForTesting ; <nl> - import com . google . devtools . build . lib . skyframe . serialization . autocodec . AutoCodec ; <nl> - @ AutoCodec <nl> - @ VisibleForTesting <nl> - @ AutoCodec . Instantiator <nl> 

mmm Packetizer . java <nl> ppp Packetizer . java <nl> 
deleted file <nl> mmm DESCrypt . java <nl> - package org . cf . obfuscated ; <nl> - import javax . crypto . Cipher ; <nl> - import javax . crypto . SecretKey ; <nl> - import javax . crypto . SecretKeyFactory ; <nl> - import javax . crypto . spec . DESKeySpec ; <nl> - import java . security . spec . KeySpec ; <nl> 
mmm java _ io _ PrintStream _ println . java <nl> ppp java _ io _ PrintStream _ println . java <nl> - class java _ io _ PrintStream _ println extends MethodStateMethod implements UnknownValuesMethod { <nl> + public class java _ io _ PrintStream _ println extends MethodStateMethod implements UnknownValuesMethod { <nl> 
mmm MetadataUpdater . java <nl> ppp MetadataUpdater . java <nl> 
mmm CommandUtils . java <nl> ppp CommandUtils . java <nl> - import com . google . common . base . Throwables ; <nl> - throw Throwables . propagate ( e ); <nl> + throw new RuntimeException ( e ); <nl> 
mmm ImmutableNameNotFoundException . java <nl> ppp ImmutableNameNotFoundException . java <nl> - public void setResolverName ( Name name ) {} <nl> + @ Override <nl> + public void setResolvedName ( Name name ) {} <nl> 
mmm OutageAlert . java <nl> ppp OutageAlert . java <nl> - import com . zhisheng . alert . schema . OutageMetricWaterMark ; <nl> + import com . zhisheng . alert . watermark . OutageMetricWaterMark ; <nl> - . assignTimestampsAndWatermarks ( new OutageMetricWaterMark ()) <nl> 
mmm Http2Configuration . java <nl> ppp Http2Configuration . java <nl> - private SslContext configureSSLWithH2Disabled ( SslContextFactory sslContextFactory , String host ) { <nl> + public static SslContext configureSSLWithH2Disabled ( SslContextFactory sslContextFactory , String host ) { <nl> 
mmm _ 145 . java <nl> ppp _ 145 . java <nl> - Stack < TreeNode > stack = new Stack (); <nl> + Stack < TreeNode > stack = new Stack (); <nl> 
mmm RenameComponentRelatedParamsInIssueFilters . java <nl> ppp RenameComponentRelatedParamsInIssueFilters . java <nl> + private static final String LIKE _ PREFIX = " data like ' % "; <nl> + private static final String LIKE _ SUFFIX = " % ' or "; <nl> - " data like ' % " + COMPONENTS + " % ' or " + <nl> - " data like ' % " + PROJECTS + " % ' or " + <nl> 
mmm InlineXMLOutputter . java <nl> ppp InlineXMLOutputter . java <nl> - pw . printf ("< % s >", entities . get ( entityIdx ) . entityType ()); <nl> + pw . printf ("</ % s >", entities . get ( entityIdx ) . entityType ()); <nl> - pw . printf (" % s < % s >", token . word (), entities . get ( entityIdx ) . entityType ()); <nl> 
mmm TestPersistentCacheMoving01 . java <nl> ppp TestPersistentCacheMoving01 . java <nl> + String currentCacheDir = getCacheDir (); <nl> + if ( null == currentCacheDir & & isOpenJ9 () ) { <nl> + return ; <nl> + } <nl> - String currentCacheDir = getCacheDir (); <nl> 
mmm Example3BeanInfo . java <nl> ppp Example3BeanInfo . java <nl> - PropertyDescriptor p = property ( name ); <nl> - return p ; <nl> + return property ( name ); <nl> 
new file <nl> ppp _ 241 . java <nl> + package com . stevesun . solutions ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> + public class _ 241 { <nl> + public List < Integer > diffWaysToCompute ( String input ) { <nl> + List < Integer > answer = new LinkedList <>(); <nl> + int len = input . length (); <nl> 
mmm ParameterBuilder . java <nl> ppp ParameterBuilder . java <nl> + import lombok . Getter ; <nl> + import org . apache . shardingsphere . core . route . type . RoutingUnit ; <nl> + import org . apache . shardingsphere . core . rule . DataNode ; <nl> + import java . util . Map . Entry ; <nl> + @ Getter <nl> 
new file <nl> ppp NewLayoutSpecTemplateAction . java <nl> + package com . facebook . litho . intellij . actions ; <nl> + import com . intellij . ide . actions . CreateFileFromTemplateAction ; <nl> + import com . intellij . ide . actions . CreateFileFromTemplateDialog ; <nl> + import com . intellij . openapi . project . Project ; <nl> 
mmm OracleDatabaseTest . java <nl> ppp OracleDatabaseTest . java <nl> - import liquibase . database . AbstractJdbcDatabaseTest ; <nl> - import liquibase . database . Database ; <nl> - import liquibase . database . OfflineConnection ; <nl> - import liquibase . resource . ResourceAccessor ; <nl> - import liquibase . test . JUnitResourceAccessor ; <nl> 
mmm ExoPlayerLibraryInfo . java <nl> ppp ExoPlayerLibraryInfo . java <nl> - public static final String VERSION = " 1 . 5 . 4 "; <nl> + public static final String VERSION = " 2 . 0 . 0 "; <nl> - public static final int VERSION _ INT = 001005004 ; <nl> + public static final int VERSION _ INT = 2000000 ; <nl> 
mmm CollapseUnaryTransformer . java <nl> ppp CollapseUnaryTransformer . java <nl> - import edu . stanford . nlp . trees . Tree ;; <nl> + import edu . stanford . nlp . trees . Tree ; <nl> 
mmm RussianWordRepeatRule . java <nl> ppp RussianWordRepeatRule . java <nl> + tempSet . add ("минута"); <nl> + tempSet . add ("друг"); <nl> + tempSet . add ("час"); <nl> + tempSet . add ("секунда"); <nl> - private static final Pattern EXC _ POS = Pattern . compile (" INTERJECTION | PRDC | PNN : . *"); <nl> 
mmm AplicomProtocolDecoderTest . java <nl> ppp AplicomProtocolDecoderTest . java <nl> + verifyAttributes ( decoder , binary ( <nl> + " 44c30144f667ca8e6b003200b45f7700f05b6565e75b6565e6031f845100c6f0e70c00001483387c0fe60001000a263433233031303138373433303746230d0a ")); <nl> 
mmm HttpRequestEncoder . java <nl> ppp HttpRequestEncoder . java <nl> + import io . netty . util . CharsetUtil ; <nl> 
mmm SQLCasesLoaderTest . java <nl> ppp SQLCasesLoaderTest . java <nl> - @ Test <nl> - public void assertGetUnsupportedSQLForLiteral () { <nl> - assertThat ( SQLCasesLoader . getInstance () . getUnsupportedSQL (" assertSelectIntoSQL ", SQLCaseType . Literal , Collections . emptyList ()), is (" SELECT * INTO t _ order _ new FROM t _ order ")); <nl> 
mmm Issue2430 . java <nl> ppp Issue2430 . java <nl> - import com . alibaba . fastjson . serializer . SerializerFeature ; <nl> - JSON . toJSONString ( vo , SerializerFeature . MapSortField )); <nl> + JSON . toJSONString ( vo )); <nl> - assertEquals (" VO :{ name - > zhangsan , map - >{ a =[ 1 , 2 , 3 ], b =[ 1 ]}}", JSON . toJSONString ( vo , SerializerFeature . MapSortField )); <nl> 
mmm BackgroundExceptionEvent . java <nl> ppp BackgroundExceptionEvent . java <nl> 
new file <nl> ppp Gateway . java <nl> + package org . apache . hadoop . ozone . s3 ; <nl> + import org . apache . hadoop . hdds . cli . GenericCli ; <nl> + import org . apache . hadoop . hdds . cli . HddsVersionProvider ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> 
mmm _ 397 . java <nl> ppp _ 397 . java <nl> - public class IntegerReplacement { <nl> + public class _ 397 { <nl> 
mmm SpockReleaseInfo . java <nl> ppp SpockReleaseInfo . java <nl> - private static final VersionNumber spockVersion = VersionNumber . parse (" 0 . 7 - groovy - 1 . 8 "); <nl> - private static final VersionNumber minGroovyVersion = VersionNumber . parse (" 1 . 8 . 0 "); <nl> - private static final VersionNumber maxGroovyVersion = VersionNumber . parse (" 1 . 8 . 99 "); <nl> 
mmm SecurityUtilsTest . java <nl> ppp SecurityUtilsTest . java <nl> + String methodName = null ; <nl> + methodName = " getName "; <nl> + methodName = " getUsername "; <nl> + methodName = " getUsername "; <nl> - Method method = c . getDeclaredMethod ( " getUsername " ); <nl> + Method method = c . getDeclaredMethod ( methodName ); <nl> 
new file <nl> ppp StatementExecuteType . java <nl> + package com . alibaba . druid . proxy . jdbc ; <nl> + public enum StatementExecuteType { <nl> + Execute , <nl> + ExecuteBatch , <nl> + ExecuteQuery , <nl> + ExecuteUpdate <nl> + } <nl> 
mmm RmCommandIntegrationTest . java <nl> ppp RmCommandIntegrationTest . java <nl> - public final class RmCommandTest extends AbstractAlluxioShellTest { <nl> + public final class RmCommandIntegrationTest extends AbstractAlluxioShellTest { <nl> 
mmm GoRunningState . java <nl> ppp GoRunningState . java <nl> - public GoExecutor createCommonExecutor () throws ExecutionException { <nl> + public GoExecutor createCommonExecutor () { <nl> 
new file <nl> ppp PostgreSQLDataSourceMetaDataTest . java <nl> + package io . shardingsphere . core . metadata . datasource . dialect ; <nl> + import io . shardingsphere . core . exception . ShardingException ; <nl> + import org . junit . Test ; <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> 
mmm ConfigurationChangedListenerManager . java <nl> ppp ConfigurationChangedListenerManager . java <nl> - import java . util . LinkedList ; <nl> - private final Collection < RuleChangedListener > ruleChangedListeners = new LinkedList <>(); <nl> - private final Collection < DataSourceChangedListener > dataSourceChangedListeners = new LinkedList <>(); <nl> 
mmm OgnlCommand . java <nl> ppp OgnlCommand . java <nl> + " ognl '@ java . lang . System @ out . println (\" hello \")' \ n " <nl> - + " ognl - x 2 '@ Singleton @ getInstance () \ n " <nl> + + " ognl - x 2 '@ Singleton @ getInstance ()' \ n " <nl> + " ognl '@ Demo @ staticFiled ' \ n " <nl> + " ognl ' # value1 =@ System @ getProperty (\" java . home \"), # value2 =@ System @ getProperty (\" java . runtime . name \"), { # value1 , # value2 }'\ n " <nl> 
mmm WireMockRule . java <nl> ppp WireMockRule . java <nl> + import com . github . tomakehurst . wiremock . client . MappingBuilder ; <nl> - public class WireMockRule implements MethodRule , TestRule { <nl> + public class WireMockRule implements MethodRule , TestRule , Stubbing { <nl> + private final WireMock wireMock ; <nl> 
mmm PackageSanityTests . java <nl> ppp PackageSanityTests . java <nl> - public class PackageSanityTests extends AbstractPackageSanityTests {} <nl> + public class PackageSanityTests extends AbstractPackageSanityTests { <nl> + @ Override <nl> + protected void setUp () throws Exception { <nl> + publicApiOnly (); <nl> 
mmm User . java <nl> ppp User . java <nl> + public String firstName () { <nl> + return name () . split (" ")[ 0 ]; <nl> + } <nl> 
mmm SetAndRestoreConfiguration . java <nl> ppp SetAndRestoreConfiguration . java <nl> - public final class SetAndRestoreConfiguration implements AutoCloseable { <nl> + public final class SetAndRestoreConfiguration implements AutoCloseable { <nl> 
new file <nl> ppp StringUtilTest . java <nl> + package com . baeldung . kotlin ; <nl> + import kotlin . text . StringsKt ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Test ; <nl> + import static com . baeldung . kotlin . Strings . *; <nl> + public class StringUtilTest { <nl> + @ Test <nl> 
new file <nl> ppp AllExecuteTests . java <nl> + package org . apache . shardingsphere . core . executor . sql . execute ; <nl> + import org . apache . shardingsphere . core . executor . sql . execute . result . AggregationDistinctQueryMetaDataTest ; <nl> + import org . apache . shardingsphere . core . executor . sql . execute . result . AggregationDistinctQueryResultTest ; <nl> 
mmm BaseStubbing . java <nl> ppp BaseStubbing . java <nl> 
mmm MysqlIsolatedServer . java <nl> ppp MysqlIsolatedServer . java <nl> + import org . json . JSONException ; <nl> + import org . json . JSONObject ; <nl> - public void boot () throws IOException , SQLException { <nl> + public void boot () throws IOException , SQLException , InterruptedException { <nl> - ProcessBuilder pb = new ProcessBuilder ( dir + "/ src / test / mysql _ isolated _ server / bin / boot _ isolated _ mysql _ server ", <nl> 
mmm TypeConverterFactory . java <nl> ppp TypeConverterFactory . java <nl> 
mmm ErrorHelper . java <nl> ppp ErrorHelper . java <nl> + import java . io . BufferedReader ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStreamReader ; <nl> + errorMessage + = " compiled with " + getJavaCompilerVersion () + "\ n "; <nl> + private String getJavaCompilerVersion () { <nl> 
mmm GsonTool . java <nl> ppp GsonTool . java <nl> - import sun . reflect . generics . reflectiveObjects . ParameterizedTypeImpl ; <nl> 
deleted file <nl> mmm Throughput . java <nl> - package models ; <nl> - import lib . APIException ; <nl> - import lib . ApiClient ; <nl> - import lib . ServerNodes ; <nl> - import models . api . responses . system . ServerThroughputResponse ; <nl> - import java . io . IOException ; <nl> - public class Throughput { <nl> 
new file <nl> ppp ChownCommandIntegrationTest . java <nl> + package alluxio . shell . command ; <nl> + import alluxio . AlluxioURI ; <nl> + import alluxio . client . WriteType ; <nl> + import alluxio . client . file . FileSystemTestUtils ; <nl> + import alluxio . exception . AlluxioException ; <nl> + import alluxio . shell . AbstractAlluxioShellTest ; <nl> 
mmm DispatchHandlerWrapper . java <nl> ppp DispatchHandlerWrapper . java <nl> + return ; <nl> 
mmm ShardingAndMasterSlaveTogether . java <nl> ppp ShardingAndMasterSlaveTogether . java <nl> - import io . shardingsphere . example . spring . namespace . mybatis . fixtrue . service . DemoService ; <nl> + import io . shardingsphere . repository . mybatis . service . DemoService ; <nl> 
mmm DataSourceUtil . java <nl> ppp DataSourceUtil . java <nl> - return new OkHttpDataSourceFactory ( OkHttpClientProvider . getOkHttpClient (), getUserAgent ( context ), bandwidthMeter ); <nl> + return new OkHttpDataSourceFactory ( client , getUserAgent ( context ), bandwidthMeter ); <nl> 
deleted file <nl> mmm ValidationException . java <nl> - package org . sonar . server . rule ; <nl> - import com . google . common . collect . ImmutableList ; <nl> - import java . util . List ; <nl> - public class ValidationException extends Exception { <nl> - private final List < String > messages ; <nl> - public ValidationException ( List < String > validationMessages ) { <nl> 
mmm WebSocketProcessorFactory . java <nl> ppp WebSocketProcessorFactory . java <nl> + public Map < AtmosphereFramework , WebSocketProcessor > processors (){ <nl> + return processors ; <nl> + } <nl> 
mmm YamlEncryptRuleConfiguration . java <nl> ppp YamlEncryptRuleConfiguration . java <nl> + private YamlEncryptorConfiguration defaultEncryptor ; <nl> 
mmm ApplicationApiCloudTest . java <nl> ppp ApplicationApiCloudTest . java <nl> + @ Test <nl> + public void post _ partial _ tenant _ info () { <nl> + var infoRequest = <nl> + request ("/ application / v4 / tenant / scoober / info ", POST ) <nl> + . data ("{\" name \":\" newName \", \" billingContact \":{\" name \":\" billingName \"}}") <nl> 
mmm JdkService . java <nl> ppp JdkService . java <nl> - Class value (); <nl> + String value (); <nl> 
mmm CockroachDBConnection . java <nl> ppp CockroachDBConnection . java <nl> + if ( schema == null || schema . equals ("")){ <nl> + schema = " DEFAULT "; <nl> + } <nl> 
mmm BaseConfigurationDeclarer . java <nl> ppp BaseConfigurationDeclarer . java <nl> - private Map conf = Utils . readStormConfig (); <nl> 
mmm StringToBooleanUnitTest . java <nl> ppp StringToBooleanUnitTest . java <nl> - public class StringToBooleanUnitTest <nl> - { <nl> + public class StringToBooleanUnitTest { <nl> 
mmm CompositeDecoderFlyweight . java <nl> ppp CompositeDecoderFlyweight . java <nl> - public interface CompositeDecoderFlyweight < T extends CompositeStructure > extends Flyweight < T >, DecoderFlyweight < T > <nl> + public interface CompositeDecoderFlyweight < T extends CompositeStructure > extends DecoderFlyweight < T > <nl> 
mmm SearchResults . java <nl> ppp SearchResults . java <nl> - this . limit = mod . getLimit (); <nl> - this . offset = mod . getOffset (); <nl> - this . total = results . size (); <nl> - this . results = results ; <nl> + this ( results , mod . getLimit (), mod . getOffset (), total ); <nl> 
mmm UnixUtils . java <nl> ppp UnixUtils . java <nl> - FileSystems . getDefault () <nl> - . getPath (" buck - out ", " gen ", " programs ", " buck . pex ") <nl> - . toAbsolutePath () <nl> - . toString (); <nl> + FileSystems . getDefault () . getPath (" new _ buck . pex ") . toAbsolutePath () . toString (); <nl> 
mmm AnyOf . java <nl> ppp AnyOf . java <nl> - selection . toBitmap () . or ( filter . apply ( relation ) . toBitmap ()); <nl> + selection . or ( filter . apply ( relation )); <nl> 
mmm DruidUpdateParser . java <nl> ppp DruidUpdateParser . java <nl> - RouterUtil . routeToMultiNode ( false , rrs , tc . getDataNodes (), rrs . getStatement ()); <nl> + RouterUtil . routeToMultiNode ( false , rrs , tc . getDataNodes (), rrs . getStatement (), tc . isGlobalTable ()); <nl> 
mmm GlobalAuthenticationConfigurerAdapter . java <nl> ppp GlobalAuthenticationConfigurerAdapter . java <nl> - * @ since 3 . 2 . 1 <nl> + * @ since 5 . 0 <nl> 
mmm ApexParserTest . java <nl> ppp ApexParserTest . java <nl> + private String code1 = " public class HelloWorld { public void foo () {} private static int bar () { return 1 ; } }"; <nl> + private String code2 = " public class SimpleClass {\ n " + <nl> + " public void methodWithManyParams ( String a , String b , String c , String d , String e , String f , String g ) {\ n " + <nl> 
mmm CommandType . java <nl> ppp CommandType . java <nl> - * 2 recover tolerance fault work flow <nl> - * 3 start process from paused task nodes <nl> + * 2 recover tolerance fault process <nl> + * 3 recover suspended process <nl> - * 7 repeat running a work flow <nl> + * 7 repeat running a process <nl> - RECOVER _ TOLERANCE _ FAULT _ PROCESS ( 2 , " recover tolerance fault work flow "), <nl> 
mmm MyClient . java <nl> ppp MyClient . java <nl> - System . out . println (" Connected to endpoint : " + session . getBasicRemote ()); <nl> 
mmm GermanConfusionProbabilityRule . java <nl> ppp GermanConfusionProbabilityRule . java <nl> - " wie finden sie " <nl> + " wie finden sie ", <nl> 
mmm LambdaTest . java <nl> ppp LambdaTest . java <nl> - import com . github . javaparser . ast . stmt . SwitchStmt ; <nl> - import me . tomassetti . symbolsolver . model . declarations . ValueDeclaration ; <nl> - import me . tomassetti . symbolsolver . model . resolution . SymbolReference ; <nl> - import static org . junit . Assert . assertTrue ; <nl> 
mmm ProtoUtil . java <nl> ppp ProtoUtil . java <nl> + if ( name == null ) { <nl> + return null ; <nl> + } <nl> - public static < T extends Message > Iterable < T > collectionToProto ( Collection <? extends Proto > collection , Class < T > messageType ) { <nl> + public static < T extends Message > Iterable < T > collectionToProto ( Collection <? extends Proto > collection , <nl> 
mmm ThingsboardInstallApplication . java <nl> ppp ThingsboardInstallApplication . java <nl> - import lombok . extern . slf4j . Slf4j ; <nl> - @ Slf4j <nl> - try { <nl> - SpringApplication application = new SpringApplication ( ThingsboardInstallApplication . class ); <nl> - application . setAdditionalProfiles (" install "); <nl> 
mmm WelcomeFileTestCase . java <nl> ppp WelcomeFileTestCase . java <nl> - . addWelcomePages (" doesnotexist . html ", " index . html ", " default "); <nl> + . addWelcomePages (" doesnotexist . html ", " index . html ", " default ", " servletPath / servletFile . xhtml "); <nl> + builder . addServlet ( new ServletInfo (" ServletPath ", DefaultTestServlet . class ) <nl> 
deleted file <nl> mmm ComputeTest . java <nl> - package com . github . benmanes . caffeine . cache ; <nl> - import java . util . concurrent . Callable ; <nl> - import java . util . concurrent . ConcurrentHashMap ; <nl> - import java . util . concurrent . ConcurrentMap ; <nl> - import java . util . concurrent . ConcurrentSkipListMap ; <nl> 
mmm Application . java <nl> ppp Application . java <nl> - import java . util . Random ; <nl> + import java . util . concurrent . ThreadLocalRandom ; <nl> - private static Random random = new Random (); <nl> - int randomNumber = random . nextInt ( TEST _ DATABASE _ ROWS ) + 1 ; <nl> + int randomNumber = ThreadLocalRandom . current () . nextInt ( TEST _ DATABASE _ ROWS ) + 1 ; <nl> 
new file <nl> ppp Bug _ for _ Issue _ 603 . java <nl> + package com . alibaba . json . bvt . bug ; <nl> + import java . lang . reflect . Type ; <nl> + import org . junit . Assert ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . parser . DefaultJSONParser ; <nl> + import com . alibaba . fastjson . parser . JSONToken ; <nl> 
mmm PPAppIntro . java <nl> ppp PPAppIntro . java <nl> + setWizardMode ( true ); <nl> + setBackButtonVisibilityWithDone ( true ); <nl> 
new file <nl> ppp DatabaseDTO . java <nl> + package com . zzg . mybatis . generator . model ; <nl> + public class DatabaseDTO { <nl> + private String name ; <nl> + private int value ; <nl> + public String getName () { <nl> + return name ; <nl> + } <nl> + public void setName ( String name ) { <nl> + this . name = name ; <nl> 
mmm PinterestApi . java <nl> ppp PinterestApi . java <nl> + import com . github . scribejava . core . builder . api . ClientAuthenticationType ; <nl> + @ Override <nl> + public ClientAuthenticationType getClientAuthenticationType () { <nl> + return ClientAuthenticationType . REQUEST _ BODY ; <nl> + } <nl> 
mmm _ 357 . java <nl> ppp _ 357 . java <nl> 
mmm SynchronizedFuture . java <nl> ppp SynchronizedFuture . java <nl> - private boolean merged ; <nl> + private boolean isDone ; <nl> - return merged ; <nl> + return isDone ; <nl> + isDone = true ; <nl> 
mmm DatabaseServerCompatibility . java <nl> ppp DatabaseServerCompatibility . java <nl> - LoggerFactory . getLogger ( DatabaseServerCompatibility . class ) . info (" Database must be upgraded . Please browse / setup "); <nl> + LoggerFactory . getLogger ( DatabaseServerCompatibility . class ) . warn (" Database must be upgraded . Please browse / setup "); <nl> 
mmm EnglishWrongWordInContextRuleTest . java <nl> ppp EnglishWrongWordInContextRuleTest . java <nl> + assertBad (" What a bazaar behavior !"); <nl> + assertGood (" I bought these books at the church bazaar . "); <nl> + assertGood (" She has a bizarre haircut . "); <nl> + assertBad (" The Saturday morning bizarre is worth seeing even if you buy nothing . "); <nl> 
mmm RulesEngine . java <nl> ppp RulesEngine . java <nl> 
mmm Organization . java <nl> ppp Organization . java <nl> - import org . kohsuke . stapler . HttpResponse ; <nl> - import org . kohsuke . stapler . WebMethod ; <nl> 
mmm URLStreams . java <nl> ppp URLStreams . java <nl> 
mmm RadioProcessBufferProcessor . java <nl> ppp RadioProcessBufferProcessor . java <nl> - if ( radioTransportMaxErrors > 0 & & errors >= radioTransportMaxErrors ) <nl> + if ( radioTransportMaxErrors > 0 & & errors >= radioTransportMaxErrors ) { <nl> + LOG . error (" Number of Radio transport errors exceeded threshold ({}), switching to lb : dead . ", radioTransportMaxErrors ); <nl> 
mmm UIDef . java <nl> ppp UIDef . java <nl> - put ( MetricDef . NETWORK _ MSG _ DECODE _ TIME , " Network Msg Decode Time ( us )"); <nl> + put ( MetricDef . NETWORK _ MSG _ DECODE _ TIME , " NettyMsgDecodeTime ( us )"); <nl> 
mmm KafkaProcessor . java <nl> ppp KafkaProcessor . java <nl> + import java . util . Collection ; <nl> - Set < ClassInfo > toRegister = new HashSet <>(); <nl> + final Set < DotName > toRegister = new HashSet <>(); <nl> - toRegister . addAll ( indexBuildItem . getIndex () <nl> - . getAllKnownImplementors ( DotName . createSimple ( Serializer . class . getName ()))); <nl> 
mmm ContainerImageConfig . java <nl> ppp ContainerImageConfig . java <nl> - return Optional . of ( originalGroup . toLowerCase ()); <nl> + return Optional . of ( originalGroup . toLowerCase () . replace (' ', ' - ')); <nl> 
mmm ValidateRegisteredServiceCommand . java <nl> ppp ValidateRegisteredServiceCommand . java <nl> + import org . apereo . cas . services . util . RegisteredServiceYamlSerializer ; <nl> + import org . apache . commons . io . FilenameUtils ; <nl> - help = " Path to the JSON / YAML service definition file ") final String file , <nl> 
new file <nl> ppp Issue1079 . java <nl> + package com . alibaba . json . bvt . issue _ 1000 ; <nl> + import com . alibaba . fastjson . JSON ; <nl> + import com . alibaba . fastjson . annotation . JSONField ; <nl> + import com . fasterxml . jackson . annotation . JsonIgnore ; <nl> + import junit . framework . TestCase ; <nl> 
mmm InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest . java <nl> ppp InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest . java <nl> + @ InjectMocks private ServiceWithReversedOrder reversedOrderService = new ServiceWithReversedOrder (); <nl> + @ Test <nl> + public void should _ match _ be _ consistent _ regardless _ of _ order () { <nl> 
mmm ZKWorkerClientTest . java <nl> ppp ZKWorkerClientTest . java <nl> 

new file <nl> ppp DruidWebUtils . java <nl> + package com . alibaba . druid . util ; <nl> + import javax . servlet . http . HttpServletRequest ; <nl> + public class DruidWebUtils { <nl> + public static String getRemoteAddr ( HttpServletRequest request ) { <nl> + String ip = request . getHeader (" x - forwarded - for "); <nl> 
mmm ValidationException . java <nl> ppp ValidationException . java <nl> + import com . google . common . collect . ImmutableMap ; <nl> - import java . util . HashMap ; <nl> - this . errors = errors ; <nl> + this . errors = ImmutableMap . copyOf ( errors ); <nl> - this . errors = new HashMap <>(); <nl> - this . errors . put ( field , Collections . < ValidationResult > singletonList ( new ValidationResult . ValidationFailed ( message ))); <nl> 
mmm Library . java <nl> ppp Library . java <nl> + public T get ( final int pID ) { <nl> + return this . mItems . get ( pID ); <nl> + } <nl> - final T existingItem = this . mItems . get ( pID ); <nl> - if ( existingItem == null ) { <nl> + final T item = this . mItems . get ( pID ); <nl> + if ( item == null ) { <nl> 
deleted file <nl> mmm MultiAlgorithm . java <nl> - package io . shardingsphere . dbtest . fixture ; <nl> - import io . shardingsphere . core . api . algorithm . sharding . ShardingValue ; <nl> - import io . shardingsphere . core . api . algorithm . sharding . complex . ComplexKeysShardingAlgorithm ; <nl> 
new file <nl> ppp CommandLineArgs . java <nl> + package com . facebook . buck . core . rules . actions . lib . args ; <nl> + import com . facebook . buck . core . artifact . Artifact ; <nl> + import com . facebook . buck . core . artifact . ArtifactFilesystem ; <nl> + import com . facebook . buck . core . rulekey . AddsToRuleKey ; <nl> 
new file <nl> ppp BlendFunctionInitializer . java <nl> + package org . andengine . entity . particle . initializer ; <nl> + import org . andengine . entity . particle . Particle ; <nl> + import org . andengine . entity . shape . Shape ; <nl> + public class BlendFunctionInitializer < T extends Shape > implements IParticleInitializer < T > { <nl> 
mmm ThreadDbSessionProvider . java <nl> ppp ThreadDbSessionProvider . java <nl> - " No DbSession associated with current thread . " + <nl> + " No DbSession associated with current thread . " + <nl> 
mmm HaskellTestUtils . java <nl> ppp HaskellTestUtils . java <nl> - Pattern versionPattern = Pattern . compile (" . * version ([ 0 - 9 ] + )(?:[ . ][ 0 - 9 ] + (?:[ . ][ 0 - 9 ] + )?)?"); <nl> + Pattern versionPattern = Pattern . compile (" . * version ([ 0 - 9 ] + ) . *"); <nl> 
mmm ContentResource . java <nl> ppp ContentResource . java <nl> - import com . google . common . base . Optional ; <nl> - import static com . google . common . base . Optional . absent ; <nl> - import static com . google . common . base . Optional . of ; <nl> + import java . util . Optional ; <nl> + import static java . util . Optional . empty ; <nl> 
mmm DefaultRedisClusterClientFactory . java <nl> ppp DefaultRedisClusterClientFactory . java <nl> + import org . particleframework . context . exceptions . ConfigurationException ; <nl> + import org . particleframework . core . util . ArrayUtils ; <nl> + if ( ArrayUtils . isEmpty ( uris )) { <nl> + throw new ConfigurationException (" Redis URIs must be specified "); <nl> 
mmm ValidatorTests . java <nl> ppp ValidatorTests . java <nl> - @ ContextConfiguration ( locations = {" ValidatorTests - config . xml "}) <nl> + @ ContextConfiguration (" ValidatorTests - config . xml ") <nl> 
mmm ProjectDetailActivity . java <nl> ppp ProjectDetailActivity . java <nl> - protected @ InjectView ( R . id . collapsing _ toolbar ) CollapsingToolbarLayout collapsing _ toolbar _ layout ; <nl> + protected @ InjectView ( R . id . collapsing _ toolbar _ layout ) CollapsingToolbarLayout collapsing _ toolbar _ layout ; <nl> 
mmm RobolectricTest . java <nl> ppp RobolectricTest . java <nl> - import com . xtremelabs . robolectric . bytecode . ShadowWranglerTest ; <nl> - assertEquals ("", output ); <nl> + assertEquals (" No Shadow method found for View . < init >( android . content . Context )\ n ", output ); <nl> + buff . reset (); <nl> 
mmm BlobType . java <nl> ppp BlobType . java <nl> - @ DataTypeInfo ( name =" blob ", aliases = {" longblob ", " longvarbinary ", " java . sql . Types . BLOB ", " java . sql . Types . LONGBLOB ", " java . sql . Types . LONGVARBINARY ", " java . sql . Types . VARBINARY ", " varbinary "}, minParameters = 0 , maxParameters = 0 , priority = LiquibaseDataType . PRIORITY _ DEFAULT ) <nl> 
new file <nl> ppp BroadcastOnPostAtmosphereInterceptor . java <nl> + package org . atmosphere . interceptor ; <nl> + import org . atmosphere . cpr . Action ; <nl> + import org . atmosphere . cpr . AtmosphereConfig ; <nl> + import org . atmosphere . cpr . AtmosphereInterceptor ; <nl> + import org . atmosphere . cpr . AtmosphereResource ; <nl> 
mmm BazelServerLogModule . java <nl> ppp BazelServerLogModule . java <nl> 
new file <nl> ppp BootstrapAPIIntegrationTest . java <nl> + package com . baeldung . hibernate . bootstrap ; <nl> + import com . baeldung . hibernate . pojo . Movie ; <nl> + import org . hibernate . SessionFactory ; <nl> + import org . hibernate . boot . Metadata ; <nl> + import org . hibernate . boot . MetadataSources ; <nl> 
new file <nl> ppp Euler35Test . java <nl> + package javaslang . collection . euler ; <nl> + import javaslang . Function1 ; <nl> + import javaslang . collection . CharSeq ; <nl> + import javaslang . collection . List ; <nl> + import javaslang . collection . Stream ; <nl> + import org . junit . Test ; <nl> + import java . util . function . Predicate ; <nl> 
new file <nl> ppp DelegatingSessionTest . java <nl> + package org . apache . shiro . session . mgt ; <nl> + import org . junit . Before ; <nl> + import org . junit . After ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . *; <nl> + import org . apache . shiro . util . ThreadContext ; <nl> 
mmm Employee . java <nl> ppp Employee . java <nl> - @ Table ( name = " EMPLOYEE _ SCHEMA _ GEN ") <nl> + @ Table ( name = " EMPLOYEE _ SCHEMA _ GEN _ METADATA ") <nl> 
mmm GroundObject . java <nl> ppp GroundObject . java <nl> + import java . awt . Shape ; <nl> + Shape getConvexHull (); <nl> 
deleted file <nl> mmm HitbtcTest . java <nl> - package bisq . price . spot . providers ; <nl> - import bisq . price . AbstractExchangeRateProviderTest ; <nl> - import lombok . extern . slf4j . Slf4j ; <nl> - import org . junit . jupiter . api . Test ; <nl> - @ Slf4j <nl> - public class HitbtcTest extends AbstractExchangeRateProviderTest { <nl> 
new file <nl> ppp PoolBenchmark . java <nl> + package redis . clients . jedis . tests . benchmark ; <nl> + import java . io . IOException ; <nl> + import java . net . UnknownHostException ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . concurrent . TimeoutException ; <nl> 
mmm MorfologikRussianSpellerRule . java <nl> ppp MorfologikRussianSpellerRule . java <nl> + import org . languagetool . rules . Example ; <nl> + addExamplePair ( Example . wrong ("Все счастливые семьи похожи друг на друга, < marker >каждя</ marker > несчастливая семья несчастлива по - своему . "), <nl> + Example . fixed ("Все счастливые семьи похожи друг на друга, < marker >каждая</ marker > несчастливая семья несчастлива по - своему . ")); <nl> 
mmm ClassToInstanceMap . java <nl> ppp ClassToInstanceMap . java <nl> 
mmm SignalPinReminders . java <nl> ppp SignalPinReminders . java <nl> - private static final long ONE _ DAY = TimeUnit . DAYS . toMillis ( 1 ); <nl> - private static final long THREE _ DAYS = TimeUnit . DAYS . toMillis ( 3 ); <nl> - private static final long ONE _ WEEK = TimeUnit . DAYS . toMillis ( 7 ); <nl> 
mmm SimpleReplaceRule . java <nl> ppp SimpleReplaceRule . java <nl> - } <nl> + } <nl> + @ Override <nl> + public String getMessage ( String tokenStr , List < String > replacements ) { <nl> + return "'" + tokenStr + "' steht in der Liste der nicht erlaubten W ö rter . "; <nl> + } <nl> 
mmm DeleteTemplateConfigCommand . java <nl> ppp DeleteTemplateConfigCommand . java <nl> - result . unprocessableEntity ( LocalizedMessage . string (" CANNOT _ DELETE _ TEMPLATE ")); <nl> + result . unprocessableEntity ( LocalizedMessage . string (" CANNOT _ DELETE _ TEMPLATE ", templateConfig . name (), pipelinesAssociatedWithTemplate )); <nl> 
mmm ThriftOverHttp1Test . java <nl> ppp ThriftOverHttp1Test . java <nl> - import org . apache . http . conn . ssl . TrustSelfSignedStrategy ; <nl> + import org . apache . http . conn . ssl . TrustStrategy ; <nl> - SSLContextBuilder . create () . loadTrustMaterial ( TrustSelfSignedStrategy . INSTANCE ) . build (); <nl> 
new file <nl> ppp PermutationsTest . java <nl> + package com . jwetherell . algorithms . mathematics ; <nl> + import com . jwetherell . algorithms . mathematics . Permutations ; <nl> + import static org . junit . Assert . *; <nl> + import java . util . LinkedList ; <nl> + import org . junit . Test ; <nl> + public class PermutationsTest { <nl> 
mmm InjectProcessor . java <nl> ppp InjectProcessor . java <nl> - import org . particleframework . inject . asm . ConfigurationClassWriter ; <nl> + import org . particleframework . inject . asm . BeanConfigurationWriter ; <nl> - ConfigurationClassWriter writer = new ConfigurationClassWriter (); <nl> + BeanConfigurationWriter writer = new BeanConfigurationWriter (); <nl> 
mmm MySQLServerInfo . java <nl> ppp MySQLServerInfo . java <nl> - public static final String SERVER _ VERSION = " 5 . 6 . 0 - Sharding - Proxy 4 . 0 . 0 - RC1 "; <nl> + public static final String SERVER _ VERSION = " 5 . 6 . 0 - Sharding - Proxy 4 . 0 . 0 - RC2 "; <nl> 
mmm FieldDeclarationsShouldBeAtStartRule . java <nl> ppp FieldDeclarationsShouldBeAtStartRule . java <nl> 
mmm EventBusTags . java <nl> ppp EventBusTags . java <nl> - import org . simple . eventbus . EventBus ; <nl> 
mmm ConstraintDefinitionAssert . java <nl> ppp ConstraintDefinitionAssert . java <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + import static org . junit . Assert . assertThat ; <nl> 
mmm JsonPrinter . java <nl> ppp JsonPrinter . java <nl> + @ Deprecated <nl> 
new file <nl> ppp SwaggerAndOpenAPIWithCommonPrefixTest . java <nl> + package io . quarkus . smallrye . openapi . test ; <nl> + import static org . hamcrest . Matchers . containsString ; <nl> + import org . jboss . shrinkwrap . api . ShrinkWrap ; <nl> + import org . jboss . shrinkwrap . api . asset . StringAsset ; <nl> 
mmm TestClusterMRNotification . java <nl> ppp TestClusterMRNotification . java <nl> - import org . junit . Ignore ; <nl> - @ Ignore <nl> 
mmm AnalyticsData . java <nl> ppp AnalyticsData . java <nl> - package com . thoughtworks . go . plugin . access . analytics . models ; <nl> + package com . thoughtworks . go . plugin . domain . analytics ; <nl> - import com . google . gson . Gson ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> 
mmm GroovyScriptMultifactorAuthenticationProviderSelector . java <nl> ppp GroovyScriptMultifactorAuthenticationProviderSelector . java <nl> - LOGGER . debug (" Multifactor provider selection did not return a provider id "); <nl> + LOGGER . debug (" Multifactor provider selection script did not return a provider id "); <nl> 
new file <nl> ppp JmxServiceImpl . java <nl> + package org . hibernate . protean . substitutions ; <nl> + import java . util . Map ; <nl> + import javax . management . ObjectName ; <nl> + import org . hibernate . jmx . spi . JmxService ; <nl> + import org . hibernate . service . Service ; <nl> + import org . hibernate . service . spi . Manageable ; <nl> 
mmm Slf4jRequestLogger . java <nl> ppp Slf4jRequestLogger . java <nl> - import java . io . IOException ; <nl> - @ Override <nl> - protected boolean isEnabled () { <nl> - return LOG . isInfoEnabled (); <nl> + public Slf4jRequestLogger () { <nl> + super ( requestEntry - > LOG . info ( requestEntry )); <nl> - public void write ( String requestEntry ) { <nl> 
mmm ViolationPersister . java <nl> ppp ViolationPersister . java <nl> - session . save ( model ); <nl> + session . saveWithoutFlush ( model ); <nl> - session . save ( model ); <nl> + session . saveWithoutFlush ( model ); <nl> 
mmm GoIcons . java <nl> ppp GoIcons . java <nl> + Icon TYPE = IconLoader . findIcon ("/ icons / type . png "); <nl> 
mmm ReedSolomonDecoderQRCodeTestCase . java <nl> ppp ReedSolomonDecoderQRCodeTestCase . java <nl> - 0x11 , 0xEC , 0x11 , 0xEC , 0x11 , 0xEC , 0x11 , 0xA5 }; <nl> + 0x11 , 0xEC , 0x11 , 0xEC , 0x11 , 0xEC , 0x11 }; <nl> 
mmm QgateAppHandlerTest . java <nl> ppp QgateAppHandlerTest . java <nl> - import java . util . *; <nl> + import java . util . Collection ; <nl> + import java . util . Locale ; <nl> + import java . util . Map ; <nl> + import java . util . Set ; <nl> - import static org . mockito . Mockito . doAnswer ; <nl> - import static org . mockito . Mockito . mock ; <nl> 
mmm ApolloSpringApplicationRunListener . java <nl> ppp ApolloSpringApplicationRunListener . java <nl> - logger . debug (" Apollo bootstrap config is enabled for context {}", context , PropertySourcesConstants . APOLLO _ BOOTSTRAP _ ENABLED ); <nl> + logger . debug (" Apollo bootstrap config is enabled for context {}", context ); <nl> 
mmm PostgreSQLStatementExtractorRegistry . java <nl> ppp PostgreSQLStatementExtractorRegistry . java <nl> + import io . shardingsphere . core . parsing . antlr . extractor . statement . type . dialect . postgresql . PostgreSQLDropIndexExtractor ; <nl> 
mmm AlarmCallbackHistoryResource . java <nl> ppp AlarmCallbackHistoryResource . java <nl> - @ Api ( value = " AlarmCallbacks ", description = " Manage stream alarm callback histories ") <nl> + @ Api ( value = " AlarmCallbackHistories ", description = " Manage stream alarm callback histories ") <nl> 
new file <nl> ppp AbstractWatchmanQuery . java <nl> + package com . facebook . buck . io ; <nl> + import com . google . common . collect . ImmutableList ; <nl> + import com . google . common . collect . ImmutableMap ; <nl> + import com . facebook . buck . util . immutables . BuckStyleImmutable ; <nl> + import org . immutables . value . Value ; <nl> 
mmm RSProjectileMixin . java <nl> ppp RSProjectileMixin . java <nl> - import java . time . Duration ; <nl> 
new file <nl> ppp ApiClass . java <nl> + package com . wordnik . swagger . annotations ; <nl> + import java . lang . annotation . ElementType ; <nl> + import java . lang . annotation . Retention ; <nl> + import java . lang . annotation . RetentionPolicy ; <nl> + import java . lang . annotation . Target ; <nl> 
mmm BasicRulesTest . java <nl> ppp BasicRulesTest . java <nl> + addRule ( RULESET , " InvalidDependencyTypes "); <nl> 
mmm IWorldGenerator . java <nl> ppp IWorldGenerator . java <nl> - * @ param chunkX the block X coordinate of this chunk . <nl> - * @ param chunkZ the block Z coordinate of this chunk . <nl> + * @ param chunkX the chunk X coordinate of this chunk . <nl> + * @ param chunkZ the chunk Z coordinate of this chunk . <nl> 
new file <nl> ppp I121Test . java <nl> + package com . googlecode . dex2jar . test ; <nl> + import com . googlecode . dex2jar . DexLabel ; <nl> + import static com . googlecode . dex2jar . DexOpcodes . *; <nl> + import org . junit . Test ; <nl> + import org . objectweb . asm . ClassReader ; <nl> + import org . objectweb . asm . ClassWriter ; <nl> 
mmm ViewModel . java <nl> ppp ViewModel . java <nl> - public < T > Observable . Transformer < T , T > bindToLifecycle () { <nl> + public @ NonNull < T > Observable . Transformer < T , T > bindToLifecycle () { <nl> 
mmm DiscoveryParamsUtilsTest . java <nl> ppp DiscoveryParamsUtilsTest . java <nl> - import org . junit . Assert ; <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertTrue ; <nl> - Assert . assertEquals ( <nl> 
mmm ObjectDef . java <nl> ppp ObjectDef . java <nl> + } else { <nl> + newVal . add ( obj ); <nl> 
mmm WordListValidatorTest . java <nl> ppp WordListValidatorTest . java <nl> 
mmm Overview . java <nl> ppp Overview . java <nl> - System . out . println (" Rules in LanguageTool " + JLanguageTool . VERSION + "< br />"); <nl> + System . out . println ("< b > Rules in LanguageTool " + JLanguageTool . VERSION + "</ b >< br />"); <nl> + System . out . println ("< table >"); <nl> + System . out . println ("< tr >"); <nl> 
mmm AbstractNamingConventionRule . java <nl> ppp AbstractNamingConventionRule . java <nl> - RegexPBuilder defaultProp ( String name ) { <nl> - return defaultProp ( StringUtil . toCamelCase ( name , true ), name ); <nl> + RegexPBuilder defaultProp ( String displayName ) { <nl> + return defaultProp ( StringUtil . toCamelCase ( displayName , true ), displayName ); <nl> 
mmm GoogleSheetsLiveTest . java <nl> ppp GoogleSheetsLiveTest . java <nl> - public class GoogleSheetsIntegrationTest { <nl> + public class GoogleSheetsLiveTest { <nl> 
new file <nl> ppp ListMigrationTasks . java <nl> + package com . example . migrationhub ; <nl> + import software . amazon . awssdk . regions . Region ; <nl> + import software . amazon . awssdk . services . migrationhub . MigrationHubClient ; <nl> + import software . amazon . awssdk . services . migrationhub . model . ListMigrationTasksRequest ; <nl> 
new file <nl> ppp ModifyGroupsRequestV2Test . java <nl> + package keywhiz . api . automation . v2 ; <nl> + import org . junit . Test ; <nl> + import static keywhiz . testing . JsonHelpers . fromJson ; <nl> + import static keywhiz . testing . JsonHelpers . jsonFixture ; <nl> + import static org . assertj . core . api . Assertions . assertThat ; <nl> 
mmm Container . java <nl> ppp Container . java <nl> + import com . google . common . collect . Iterables ; <nl> + import io . jenkins . blueocean . commons . stapler . TreeResponse ; <nl> + import org . kohsuke . stapler . WebMethod ; <nl> + import org . kohsuke . stapler . verb . GET ; <nl> + @ WebMethod ( name ="") @ GET @ TreeResponse <nl> 
mmm StringTypeDescriptor . java <nl> ppp StringTypeDescriptor . java <nl> - if ( Clob . class . isInstance ( value ) || DataHelper . isNClob ( value . getClass () ) ) { <nl> + if ( Clob . class . isInstance ( value ) ) { <nl> 
mmm StringEncoder . java <nl> ppp StringEncoder . java <nl> 
